{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport { mat4, vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { s as subtract, l as normalize, d as dot, j as cross, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nvar vtkWarningMacro = macro.vtkWarningMacro;\nvar EPSILON = 1e-6; // ----------------------------------------------------------------------------\n// vtkPlaneSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlaneSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlaneSource');\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    var dataset = outData[0]; // Check input\n\n    var pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;\n    var pd = vtkPolyData.newInstance();\n    var v10 = [];\n    var v20 = [];\n    subtract(model.point1, model.origin, v10);\n    subtract(model.point2, model.origin, v20);\n    if (!publicAPI.updatePlane(v10, v20)) {\n      vtkWarningMacro('Bad plane definition');\n      return;\n    } // hand create a plane with special scalars\n\n    var xres = model.xResolution;\n    var yres = model.yResolution;\n    var numPts = (xres + 1) * (yres + 1);\n    var numPolys = xres * yres; // Points\n\n    var points = macro.newTypedArray(pointDataType, numPts * 3);\n    pd.getPoints().setData(points, 3); // Cells\n\n    var polys = new Uint32Array(5 * numPolys);\n    pd.getPolys().setData(polys, 1); // Normals\n\n    var normalsData = new Float32Array(numPts * 3);\n    var normals = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: normalsData,\n      name: 'Normals'\n    });\n    pd.getPointData().setNormals(normals); // Texture coords\n\n    var tcData = new Float32Array(numPts * 2);\n    var tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcData,\n      name: 'TextureCoordinates'\n    });\n    pd.getPointData().setTCoords(tcoords);\n    var tc = new Float32Array(2);\n    var idx = 0;\n    for (var j = 0; j < yres + 1; j++) {\n      tc[1] = j / yres;\n      for (var i = 0; i < xres + 1; i++) {\n        tc[0] = i / xres;\n        points[idx * 3] = model.origin[0] + tc[0] * v10[0] + tc[1] * v20[0];\n        points[idx * 3 + 1] = model.origin[1] + tc[0] * v10[1] + tc[1] * v20[1];\n        points[idx * 3 + 2] = model.origin[2] + tc[0] * v10[2] + tc[1] * v20[2];\n        tcData[idx * 2] = tc[0];\n        tcData[idx * 2 + 1] = tc[1];\n        normalsData[idx * 3] = model.normal[0];\n        normalsData[idx * 3 + 1] = model.normal[1];\n        normalsData[idx * 3 + 2] = model.normal[2];\n        idx++;\n      }\n    } // Generate polygon connectivity\n    //\n\n    idx = 0;\n    for (var _j = 0; _j < yres; _j++) {\n      for (var _i = 0; _i < xres; _i++) {\n        polys[idx * 5 + 0] = 4;\n        polys[idx * 5 + 1] = _i + _j * (xres + 1);\n        polys[idx * 5 + 2] = polys[idx * 5 + 1] + 1;\n        polys[idx * 5 + 3] = polys[idx * 5 + 1] + xres + 2;\n        polys[idx * 5 + 4] = polys[idx * 5 + 1] + xres + 1;\n        idx++;\n      }\n    } // Update output\n\n    outData[0] = pd;\n  };\n  publicAPI.setNormal = function () {\n    var n = [];\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      n = _toConsumableArray(arguments.length <= 0 ? undefined : arguments[0]);\n    } else if (arguments.length === 3) {\n      n = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n    if (normalize(n) !== 0) {\n      var dp = dot(model.normal, n);\n      var theta = 0;\n      var rotationVector = [];\n      if (dp < 1.0) {\n        if (dp <= -1.0) {\n          theta = radiansFromDegrees(180.0);\n          subtract(model.point1, model.origin, rotationVector);\n        } else {\n          cross(model.normal, n, rotationVector);\n          theta = Math.acos(dp);\n        }\n        publicAPI.rotate(theta, rotationVector);\n      }\n    }\n  };\n  /**\n   * Rotate plane around a given axis\n   * @param {float} theta Angle (radian) to rotate about\n   * @param {vec3} rotationAxis Axis to rotate around\n   */\n\n  publicAPI.rotate = function (angle, rotationAxis) {\n    if (Math.abs(angle) < EPSILON) {\n      return;\n    } // Create rotation matrix\n\n    var transform = mat4.identity(new Float64Array(16));\n    var negCenter = [];\n    vec3.negate(negCenter, model.center);\n    mat4.translate(transform, transform, model.center);\n    mat4.rotate(transform, transform, angle, rotationAxis);\n    mat4.translate(transform, transform, negCenter);\n    vec3.transformMat4(model.origin, model.origin, transform);\n    vec3.transformMat4(model.point1, model.point1, transform);\n    vec3.transformMat4(model.point2, model.point2, transform);\n    vtkMatrixBuilder.buildFromRadian().rotate(angle, rotationAxis).apply(model.normal);\n    publicAPI.modified();\n  };\n  publicAPI.setCenter = function () {\n    var c = [];\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      c = _toConsumableArray(arguments.length <= 0 ? undefined : arguments[0]);\n    } else if (arguments.length === 3) {\n      c = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n    if (!vec3.exactEquals(c, model.center)) {\n      var v1 = [];\n      subtract(model.point1, model.origin, v1);\n      var v2 = [];\n      subtract(model.point2, model.origin, v2);\n      for (var i = 0; i < 3; i++) {\n        model.center[i] = c[i];\n        model.origin[i] = model.center[i] - 0.5 * (v1[i] + v2[i]);\n        model.point1[i] = model.origin[i] + v1[i];\n        model.point2[i] = model.origin[i] + v2[i];\n      }\n      publicAPI.modified();\n    }\n  };\n  publicAPI.setPoint1 = function () {\n    var point1 = [];\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      point1 = _toConsumableArray(arguments.length <= 0 ? undefined : arguments[0]);\n    } else if (arguments.length === 3) {\n      point1 = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n    if (!vec3.exactEquals(point1, model.point1)) {\n      var v1 = [];\n      var v2 = [];\n      model.point1 = _toConsumableArray(point1);\n      subtract(model.point1, model.origin, v1);\n      subtract(model.point2, model.origin, v2); // set plane normal\n\n      publicAPI.updatePlane(v1, v2);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.setPoint2 = function () {\n    var point2 = [];\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      point2 = _toConsumableArray(arguments.length <= 0 ? undefined : arguments[0]);\n    } else if (arguments.length === 3) {\n      point2 = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n    if (!vec3.exactEquals(point2, model.point2)) {\n      var v1 = [];\n      var v2 = [];\n      model.point2 = _toConsumableArray(point2);\n      subtract(model.point1, model.origin, v1);\n      subtract(model.point2, model.origin, v2); // set plane normal\n\n      publicAPI.updatePlane(v1, v2);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.updatePlane = function (v1, v2) {\n    // set plane center\n    for (var i = 0; i < 3; i++) {\n      model.center[i] = model.origin[i] + 0.5 * (v1[i] + v2[i]);\n    } // set plane normal\n\n    cross(v1, v2, model.normal);\n    return normalize(model.normal) !== 0.0;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  xResolution: 10,\n  yResolution: 10,\n  origin: [0, 0, 0],\n  point1: [1, 0, 0],\n  point2: [0, 1, 0],\n  pointType: 'Float64Array'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.normal = [0, 0, 1];\n  model.center = [0, 0, 0]; // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['xResolution', 'yResolution']);\n  macro.setGetArray(publicAPI, model, ['origin'], 3);\n  macro.getArray(publicAPI, model, ['point1', 'point2', 'normal', 'center'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkPlaneSource(publicAPI, model);\n  publicAPI.setPoint1(model.point1);\n  publicAPI.setPoint2(model.point2);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPlaneSource'); // ----------------------------------------------------------------------------\n\nvar vtkPlaneSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkPlaneSource$1 as default, extend, newInstance };","map":{"version":3,"names":["_toConsumableArray","mat4","vec3","macro","vtkDataArray","s","subtract","l","normalize","d","dot","j","cross","r","radiansFromDegrees","vtkMatrixBuilder","vtkPolyData","vtkWarningMacro","EPSILON","vtkPlaneSource","publicAPI","model","classHierarchy","push","requestData","inData","outData","deleted","dataset","pointDataType","getPoints","getDataType","pointType","pd","newInstance","v10","v20","point1","origin","point2","updatePlane","xres","xResolution","yres","yResolution","numPts","numPolys","points","newTypedArray","setData","polys","Uint32Array","getPolys","normalsData","Float32Array","normals","numberOfComponents","values","name","getPointData","setNormals","tcData","tcoords","setTCoords","tc","idx","i","normal","_j","_i","setNormal","n","arguments","length","Array","isArray","undefined","dp","theta","rotationVector","Math","acos","rotate","angle","rotationAxis","abs","transform","identity","Float64Array","negCenter","negate","center","translate","transformMat4","buildFromRadian","apply","modified","setCenter","c","exactEquals","v1","v2","setPoint1","setPoint2","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","setGet","setGetArray","getArray","algo","vtkPlaneSource$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/Sources/PlaneSource.js"],"sourcesContent":["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport { mat4, vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { s as subtract, l as normalize, d as dot, j as cross, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nvar vtkWarningMacro = macro.vtkWarningMacro;\nvar EPSILON = 1e-6; // ----------------------------------------------------------------------------\n// vtkPlaneSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlaneSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlaneSource');\n\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n\n    var dataset = outData[0]; // Check input\n\n    var pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;\n    var pd = vtkPolyData.newInstance();\n    var v10 = [];\n    var v20 = [];\n    subtract(model.point1, model.origin, v10);\n    subtract(model.point2, model.origin, v20);\n\n    if (!publicAPI.updatePlane(v10, v20)) {\n      vtkWarningMacro('Bad plane definition');\n      return;\n    } // hand create a plane with special scalars\n\n\n    var xres = model.xResolution;\n    var yres = model.yResolution;\n    var numPts = (xres + 1) * (yres + 1);\n    var numPolys = xres * yres; // Points\n\n    var points = macro.newTypedArray(pointDataType, numPts * 3);\n    pd.getPoints().setData(points, 3); // Cells\n\n    var polys = new Uint32Array(5 * numPolys);\n    pd.getPolys().setData(polys, 1); // Normals\n\n    var normalsData = new Float32Array(numPts * 3);\n    var normals = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: normalsData,\n      name: 'Normals'\n    });\n    pd.getPointData().setNormals(normals); // Texture coords\n\n    var tcData = new Float32Array(numPts * 2);\n    var tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcData,\n      name: 'TextureCoordinates'\n    });\n    pd.getPointData().setTCoords(tcoords);\n    var tc = new Float32Array(2);\n    var idx = 0;\n\n    for (var j = 0; j < yres + 1; j++) {\n      tc[1] = j / yres;\n\n      for (var i = 0; i < xres + 1; i++) {\n        tc[0] = i / xres;\n        points[idx * 3] = model.origin[0] + tc[0] * v10[0] + tc[1] * v20[0];\n        points[idx * 3 + 1] = model.origin[1] + tc[0] * v10[1] + tc[1] * v20[1];\n        points[idx * 3 + 2] = model.origin[2] + tc[0] * v10[2] + tc[1] * v20[2];\n        tcData[idx * 2] = tc[0];\n        tcData[idx * 2 + 1] = tc[1];\n        normalsData[idx * 3] = model.normal[0];\n        normalsData[idx * 3 + 1] = model.normal[1];\n        normalsData[idx * 3 + 2] = model.normal[2];\n        idx++;\n      }\n    } // Generate polygon connectivity\n    //\n\n\n    idx = 0;\n\n    for (var _j = 0; _j < yres; _j++) {\n      for (var _i = 0; _i < xres; _i++) {\n        polys[idx * 5 + 0] = 4;\n        polys[idx * 5 + 1] = _i + _j * (xres + 1);\n        polys[idx * 5 + 2] = polys[idx * 5 + 1] + 1;\n        polys[idx * 5 + 3] = polys[idx * 5 + 1] + xres + 2;\n        polys[idx * 5 + 4] = polys[idx * 5 + 1] + xres + 1;\n        idx++;\n      }\n    } // Update output\n\n\n    outData[0] = pd;\n  };\n\n  publicAPI.setNormal = function () {\n    var n = [];\n\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      n = _toConsumableArray(arguments.length <= 0 ? undefined : arguments[0]);\n    } else if (arguments.length === 3) {\n      n = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n\n    if (normalize(n) !== 0) {\n      var dp = dot(model.normal, n);\n      var theta = 0;\n      var rotationVector = [];\n\n      if (dp < 1.0) {\n        if (dp <= -1.0) {\n          theta = radiansFromDegrees(180.0);\n          subtract(model.point1, model.origin, rotationVector);\n        } else {\n          cross(model.normal, n, rotationVector);\n          theta = Math.acos(dp);\n        }\n\n        publicAPI.rotate(theta, rotationVector);\n      }\n    }\n  };\n  /**\n   * Rotate plane around a given axis\n   * @param {float} theta Angle (radian) to rotate about\n   * @param {vec3} rotationAxis Axis to rotate around\n   */\n\n\n  publicAPI.rotate = function (angle, rotationAxis) {\n    if (Math.abs(angle) < EPSILON) {\n      return;\n    } // Create rotation matrix\n\n\n    var transform = mat4.identity(new Float64Array(16));\n    var negCenter = [];\n    vec3.negate(negCenter, model.center);\n    mat4.translate(transform, transform, model.center);\n    mat4.rotate(transform, transform, angle, rotationAxis);\n    mat4.translate(transform, transform, negCenter);\n    vec3.transformMat4(model.origin, model.origin, transform);\n    vec3.transformMat4(model.point1, model.point1, transform);\n    vec3.transformMat4(model.point2, model.point2, transform);\n    vtkMatrixBuilder.buildFromRadian().rotate(angle, rotationAxis).apply(model.normal);\n    publicAPI.modified();\n  };\n\n  publicAPI.setCenter = function () {\n    var c = [];\n\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      c = _toConsumableArray(arguments.length <= 0 ? undefined : arguments[0]);\n    } else if (arguments.length === 3) {\n      c = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n\n    if (!vec3.exactEquals(c, model.center)) {\n      var v1 = [];\n      subtract(model.point1, model.origin, v1);\n      var v2 = [];\n      subtract(model.point2, model.origin, v2);\n\n      for (var i = 0; i < 3; i++) {\n        model.center[i] = c[i];\n        model.origin[i] = model.center[i] - 0.5 * (v1[i] + v2[i]);\n        model.point1[i] = model.origin[i] + v1[i];\n        model.point2[i] = model.origin[i] + v2[i];\n      }\n\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setPoint1 = function () {\n    var point1 = [];\n\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      point1 = _toConsumableArray(arguments.length <= 0 ? undefined : arguments[0]);\n    } else if (arguments.length === 3) {\n      point1 = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n\n    if (!vec3.exactEquals(point1, model.point1)) {\n      var v1 = [];\n      var v2 = [];\n      model.point1 = _toConsumableArray(point1);\n      subtract(model.point1, model.origin, v1);\n      subtract(model.point2, model.origin, v2); // set plane normal\n\n      publicAPI.updatePlane(v1, v2);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setPoint2 = function () {\n    var point2 = [];\n\n    if (arguments.length === 1 || Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      point2 = _toConsumableArray(arguments.length <= 0 ? undefined : arguments[0]);\n    } else if (arguments.length === 3) {\n      point2 = [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]];\n    }\n\n    if (!vec3.exactEquals(point2, model.point2)) {\n      var v1 = [];\n      var v2 = [];\n      model.point2 = _toConsumableArray(point2);\n      subtract(model.point1, model.origin, v1);\n      subtract(model.point2, model.origin, v2); // set plane normal\n\n      publicAPI.updatePlane(v1, v2);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.updatePlane = function (v1, v2) {\n    // set plane center\n    for (var i = 0; i < 3; i++) {\n      model.center[i] = model.origin[i] + 0.5 * (v1[i] + v2[i]);\n    } // set plane normal\n\n\n    cross(v1, v2, model.normal);\n    return normalize(model.normal) !== 0.0;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  xResolution: 10,\n  yResolution: 10,\n  origin: [0, 0, 0],\n  point1: [1, 0, 0],\n  point2: [0, 1, 0],\n  pointType: 'Float64Array'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.normal = [0, 0, 1];\n  model.center = [0, 0, 0]; // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['xResolution', 'yResolution']);\n  macro.setGetArray(publicAPI, model, ['origin'], 3);\n  macro.getArray(publicAPI, model, ['point1', 'point2', 'normal', 'center'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkPlaneSource(publicAPI, model);\n  publicAPI.setPoint1(model.point1);\n  publicAPI.setPoint2(model.point2);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPlaneSource'); // ----------------------------------------------------------------------------\n\nvar vtkPlaneSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPlaneSource$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
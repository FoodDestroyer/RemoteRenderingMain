{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// vtkTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTexture');\n  publicAPI.imageLoaded = function () {\n    model.image.removeEventListener('load', publicAPI.imageLoaded);\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n  publicAPI.setJsImageData = function (imageData) {\n    if (model.jsImageData === imageData) {\n      return;\n    } // clear other entries\n\n    if (imageData !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.canvas = null;\n    }\n    model.jsImageData = imageData;\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n  publicAPI.setCanvas = function (canvas) {\n    if (model.canvas === canvas) {\n      return;\n    } // clear other entries\n\n    if (canvas !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.jsImageData = null;\n    }\n    model.canvas = canvas;\n    publicAPI.modified();\n  };\n  publicAPI.setImage = function (image) {\n    if (model.image === image) {\n      return;\n    } // clear other entries\n\n    if (image !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.canvas = null;\n      model.jsImageData = null;\n    }\n    model.image = image;\n    model.imageLoaded = false;\n    if (image.complete) {\n      publicAPI.imageLoaded();\n    } else {\n      image.addEventListener('load', publicAPI.imageLoaded);\n    }\n    publicAPI.modified();\n  };\n  publicAPI.getDimensionality = function () {\n    var width = 0;\n    var height = 0;\n    var depth = 1;\n    if (publicAPI.getInputData()) {\n      var data = publicAPI.getInputData();\n      width = data.getDimensions()[0];\n      height = data.getDimensions()[1];\n      depth = data.getDimensions()[2];\n    }\n    if (model.jsImageData) {\n      width = model.jsImageData.width;\n      height = model.jsImageData.height;\n    }\n    if (model.canvas) {\n      width = model.canvas.width;\n      height = model.canvas.height;\n    }\n    if (model.image) {\n      width = model.image.width;\n      height = model.image.height;\n    }\n    var dimensionality = (width > 1) + (height > 1) + (depth > 1);\n    return dimensionality;\n  };\n  publicAPI.getInputAsJsImageData = function () {\n    if (!model.imageLoaded || publicAPI.getInputData()) return null;\n    if (model.jsImageData) {\n      return model.jsImageData();\n    }\n    if (model.canvas) {\n      var context = model.canvas.getContext('2d');\n      var imageData = context.getImageData(0, 0, model.canvas.width, model.canvas.height);\n      return imageData;\n    }\n    if (model.image) {\n      var canvas = document.createElement('canvas');\n      canvas.width = model.image.width;\n      canvas.height = model.image.height;\n      var _context = canvas.getContext('2d');\n      _context.translate(0, canvas.height);\n      _context.scale(1, -1);\n      _context.drawImage(model.image, 0, 0, model.image.width, model.image.height);\n      var _imageData = _context.getImageData(0, 0, canvas.width, canvas.height);\n      return _imageData;\n    }\n    return null;\n  };\n} // Use nativeArray instead of self\n\nvar generateMipmaps = function generateMipmaps(nativeArray, width, height, level) {\n  // TODO: FIX UNEVEN TEXTURE MIP GENERATION:\n  // When textures don't have standard ratios, higher mip levels\n  // result in their color chanels getting messed up and shifting\n  // 3x3 gaussian kernel\n  var g3m = [1, 2, 1]; // eslint-disable-line\n\n  var g3w = 4; // eslint-disable-line\n\n  var kernel = g3m;\n  var kernelWeight = g3w;\n  var hs = nativeArray.length / (width * height); // TODO: support for textures with depth more than 1\n\n  var currentWidth = width;\n  var currentHeight = height;\n  var imageData = nativeArray;\n  var maps = [imageData];\n  for (var i = 0; i < level; i++) {\n    var oldData = _toConsumableArray(imageData);\n    currentWidth /= 2;\n    currentHeight /= 2;\n    imageData = new Uint8ClampedArray(currentWidth * currentHeight * hs);\n    var vs = hs * currentWidth; // Scale down\n\n    var shift = 0;\n    for (var p = 0; p < imageData.length; p += hs) {\n      if (p % vs === 0) {\n        shift += 2 * hs * currentWidth;\n      }\n      for (var c = 0; c < hs; c++) {\n        var sample = oldData[shift + c];\n        sample += oldData[shift + hs + c];\n        sample += oldData[shift - 2 * vs + c];\n        sample += oldData[shift - 2 * vs + hs + c];\n        sample /= 4;\n        imageData[p + c] = sample;\n      }\n      shift += 2 * hs;\n    } // Horizontal Pass\n\n    var dataCopy = _toConsumableArray(imageData);\n    for (var _p = 0; _p < imageData.length; _p += hs) {\n      for (var _c = 0; _c < hs; _c++) {\n        var x = -(kernel.length - 1) / 2;\n        var kw = kernelWeight;\n        var value = 0.0;\n        for (var k = 0; k < kernel.length; k++) {\n          var index = _p + _c + x * hs;\n          var lineShift = index % vs - (_p + _c) % vs;\n          if (lineShift > hs) index += vs;\n          if (lineShift < -hs) index -= vs;\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n          x += 1;\n        }\n        imageData[_p + _c] = value / kw;\n      }\n    } // Vertical Pass\n\n    dataCopy = _toConsumableArray(imageData);\n    for (var _p2 = 0; _p2 < imageData.length; _p2 += hs) {\n      for (var _c2 = 0; _c2 < hs; _c2++) {\n        var _x = -(kernel.length - 1) / 2;\n        var _kw = kernelWeight;\n        var _value = 0.0;\n        for (var _k = 0; _k < kernel.length; _k++) {\n          var _index = _p2 + _c2 + _x * vs;\n          if (dataCopy[_index]) {\n            _value += dataCopy[_index] * kernel[_k];\n          } else {\n            _kw -= kernel[_k];\n          }\n          _x += 1;\n        }\n        imageData[_p2 + _c2] = _value / _kw;\n      }\n    }\n    maps.push(imageData);\n  }\n  return maps;\n}; // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  image: null,\n  canvas: null,\n  jsImageData: null,\n  imageLoaded: false,\n  repeat: false,\n  interpolate: false,\n  edgeClamp: false,\n  mipLevel: 0,\n  resizable: false // must be set at construction time if the texture can be resizable\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 6, 0);\n  macro.get(publicAPI, model, ['canvas', 'image', 'jsImageData', 'imageLoaded', 'resizable']);\n  macro.setGet(publicAPI, model, ['repeat', 'edgeClamp', 'interpolate', 'mipLevel']);\n  vtkTexture(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkTexture');\nvar STATIC = {\n  generateMipmaps: generateMipmaps\n}; // ----------------------------------------------------------------------------\n\nvar vtkTexture$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\nexport { STATIC, vtkTexture$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","_toConsumableArray","macro","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkTexture","publicAPI","model","classHierarchy","imageLoaded","image","removeEventListener","modified","setJsImageData","imageData","jsImageData","setInputData","setInputConnection","canvas","setCanvas","setImage","complete","addEventListener","getDimensionality","width","height","depth","getInputData","data","getDimensions","dimensionality","getInputAsJsImageData","context","getContext","getImageData","document","createElement","_context","translate","scale","drawImage","_imageData","generateMipmaps","nativeArray","level","g3m","g3w","kernel","kernelWeight","hs","currentWidth","currentHeight","maps","oldData","Uint8ClampedArray","vs","shift","p","c","sample","dataCopy","_p","_c","x","kw","value","k","index","lineShift","_p2","_c2","_x","_kw","_value","_k","_index","DEFAULT_VALUES","repeat","interpolate","edgeClamp","mipLevel","resizable","extend","initialValues","undefined","assign","obj","algo","get","setGet","newInstance","STATIC","vtkTexture$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/Texture.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// vtkTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTexture');\n\n  publicAPI.imageLoaded = function () {\n    model.image.removeEventListener('load', publicAPI.imageLoaded);\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n\n  publicAPI.setJsImageData = function (imageData) {\n    if (model.jsImageData === imageData) {\n      return;\n    } // clear other entries\n\n\n    if (imageData !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.canvas = null;\n    }\n\n    model.jsImageData = imageData;\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n\n  publicAPI.setCanvas = function (canvas) {\n    if (model.canvas === canvas) {\n      return;\n    } // clear other entries\n\n\n    if (canvas !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.jsImageData = null;\n    }\n\n    model.canvas = canvas;\n    publicAPI.modified();\n  };\n\n  publicAPI.setImage = function (image) {\n    if (model.image === image) {\n      return;\n    } // clear other entries\n\n\n    if (image !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.canvas = null;\n      model.jsImageData = null;\n    }\n\n    model.image = image;\n    model.imageLoaded = false;\n\n    if (image.complete) {\n      publicAPI.imageLoaded();\n    } else {\n      image.addEventListener('load', publicAPI.imageLoaded);\n    }\n\n    publicAPI.modified();\n  };\n\n  publicAPI.getDimensionality = function () {\n    var width = 0;\n    var height = 0;\n    var depth = 1;\n\n    if (publicAPI.getInputData()) {\n      var data = publicAPI.getInputData();\n      width = data.getDimensions()[0];\n      height = data.getDimensions()[1];\n      depth = data.getDimensions()[2];\n    }\n\n    if (model.jsImageData) {\n      width = model.jsImageData.width;\n      height = model.jsImageData.height;\n    }\n\n    if (model.canvas) {\n      width = model.canvas.width;\n      height = model.canvas.height;\n    }\n\n    if (model.image) {\n      width = model.image.width;\n      height = model.image.height;\n    }\n\n    var dimensionality = (width > 1) + (height > 1) + (depth > 1);\n    return dimensionality;\n  };\n\n  publicAPI.getInputAsJsImageData = function () {\n    if (!model.imageLoaded || publicAPI.getInputData()) return null;\n\n    if (model.jsImageData) {\n      return model.jsImageData();\n    }\n\n    if (model.canvas) {\n      var context = model.canvas.getContext('2d');\n      var imageData = context.getImageData(0, 0, model.canvas.width, model.canvas.height);\n      return imageData;\n    }\n\n    if (model.image) {\n      var canvas = document.createElement('canvas');\n      canvas.width = model.image.width;\n      canvas.height = model.image.height;\n\n      var _context = canvas.getContext('2d');\n\n      _context.translate(0, canvas.height);\n\n      _context.scale(1, -1);\n\n      _context.drawImage(model.image, 0, 0, model.image.width, model.image.height);\n\n      var _imageData = _context.getImageData(0, 0, canvas.width, canvas.height);\n\n      return _imageData;\n    }\n\n    return null;\n  };\n} // Use nativeArray instead of self\n\n\nvar generateMipmaps = function generateMipmaps(nativeArray, width, height, level) {\n  // TODO: FIX UNEVEN TEXTURE MIP GENERATION:\n  // When textures don't have standard ratios, higher mip levels\n  // result in their color chanels getting messed up and shifting\n  // 3x3 gaussian kernel\n  var g3m = [1, 2, 1]; // eslint-disable-line\n\n  var g3w = 4; // eslint-disable-line\n\n  var kernel = g3m;\n  var kernelWeight = g3w;\n  var hs = nativeArray.length / (width * height); // TODO: support for textures with depth more than 1\n\n  var currentWidth = width;\n  var currentHeight = height;\n  var imageData = nativeArray;\n  var maps = [imageData];\n\n  for (var i = 0; i < level; i++) {\n    var oldData = _toConsumableArray(imageData);\n\n    currentWidth /= 2;\n    currentHeight /= 2;\n    imageData = new Uint8ClampedArray(currentWidth * currentHeight * hs);\n    var vs = hs * currentWidth; // Scale down\n\n    var shift = 0;\n\n    for (var p = 0; p < imageData.length; p += hs) {\n      if (p % vs === 0) {\n        shift += 2 * hs * currentWidth;\n      }\n\n      for (var c = 0; c < hs; c++) {\n        var sample = oldData[shift + c];\n        sample += oldData[shift + hs + c];\n        sample += oldData[shift - 2 * vs + c];\n        sample += oldData[shift - 2 * vs + hs + c];\n        sample /= 4;\n        imageData[p + c] = sample;\n      }\n\n      shift += 2 * hs;\n    } // Horizontal Pass\n\n\n    var dataCopy = _toConsumableArray(imageData);\n\n    for (var _p = 0; _p < imageData.length; _p += hs) {\n      for (var _c = 0; _c < hs; _c++) {\n        var x = -(kernel.length - 1) / 2;\n        var kw = kernelWeight;\n        var value = 0.0;\n\n        for (var k = 0; k < kernel.length; k++) {\n          var index = _p + _c + x * hs;\n          var lineShift = index % vs - (_p + _c) % vs;\n          if (lineShift > hs) index += vs;\n          if (lineShift < -hs) index -= vs;\n\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n\n          x += 1;\n        }\n\n        imageData[_p + _c] = value / kw;\n      }\n    } // Vertical Pass\n\n\n    dataCopy = _toConsumableArray(imageData);\n\n    for (var _p2 = 0; _p2 < imageData.length; _p2 += hs) {\n      for (var _c2 = 0; _c2 < hs; _c2++) {\n        var _x = -(kernel.length - 1) / 2;\n\n        var _kw = kernelWeight;\n        var _value = 0.0;\n\n        for (var _k = 0; _k < kernel.length; _k++) {\n          var _index = _p2 + _c2 + _x * vs;\n\n          if (dataCopy[_index]) {\n            _value += dataCopy[_index] * kernel[_k];\n          } else {\n            _kw -= kernel[_k];\n          }\n\n          _x += 1;\n        }\n\n        imageData[_p2 + _c2] = _value / _kw;\n      }\n    }\n\n    maps.push(imageData);\n  }\n\n  return maps;\n}; // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  image: null,\n  canvas: null,\n  jsImageData: null,\n  imageLoaded: false,\n  repeat: false,\n  interpolate: false,\n  edgeClamp: false,\n  mipLevel: 0,\n  resizable: false // must be set at construction time if the texture can be resizable\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 6, 0);\n  macro.get(publicAPI, model, ['canvas', 'image', 'jsImageData', 'imageLoaded', 'resizable']);\n  macro.setGet(publicAPI, model, ['repeat', 'edgeClamp', 'interpolate', 'mipLevel']);\n  vtkTexture(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkTexture');\nvar STATIC = {\n  generateMipmaps: generateMipmaps\n}; // ----------------------------------------------------------------------------\n\nvar vtkTexture$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkTexture$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
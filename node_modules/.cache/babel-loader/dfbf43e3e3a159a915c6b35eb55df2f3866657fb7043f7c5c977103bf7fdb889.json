{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkTriangle from '../../Common/DataModel/Triangle.js';\nimport { FormatTypes } from './STLWriter/Constants.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction writeFloatBinary(dataView, offset, float) {\n  dataView.setFloat32(offset, float.toPrecision(6), true);\n  return offset + 4;\n}\nfunction writeVectorBinary(dataView, offset, vector) {\n  var off = writeFloatBinary(dataView, offset, vector[0]);\n  off = writeFloatBinary(dataView, off, vector[1]);\n  return writeFloatBinary(dataView, off, vector[2]);\n} // ----------------------------------------------------------------------------\n// vtkSTLWriter methods\n// ----------------------------------------------------------------------------\n\nvar binaryWriter = function binaryWriter() {\n  var offset = 0;\n  var dataView = null;\n  return {\n    init: function init(polyData) {\n      var polys = polyData.getPolys().getData();\n      var buffer = new ArrayBuffer(80 + 4 + 50 * polys.length / 4); // buffer for the full file; size = header (80) + num cells (4) +  50 bytes per poly\n\n      dataView = new DataView(buffer);\n    },\n    writeHeader: function writeHeader(polyData) {\n      offset += 80; // Header is empty // TODO: could add date, version, package\n      // First need to write the number of cells\n\n      dataView.setUint32(offset, polyData.getNumberOfCells(), true);\n      offset += 4;\n    },\n    writeTriangle: function writeTriangle(v1, v2, v3, dn) {\n      offset = writeVectorBinary(dataView, offset, dn);\n      offset = writeVectorBinary(dataView, offset, v1);\n      offset = writeVectorBinary(dataView, offset, v2);\n      offset = writeVectorBinary(dataView, offset, v3);\n      offset += 2; // unused 'attribute byte count' is a Uint16\n    },\n\n    writeFooter: function writeFooter(polyData) {},\n    getOutputData: function getOutputData() {\n      return dataView;\n    }\n  };\n};\nvar asciiWriter = function asciiWriter() {\n  var file = '';\n  return {\n    init: function init(polyData) {},\n    writeHeader: function writeHeader(polyData) {\n      file += 'solid ascii\\n';\n    },\n    writeTriangle: function writeTriangle(v1, v2, v3, dn) {\n      file += \" facet normal \".concat(dn[0].toPrecision(6), \" \").concat(dn[1].toPrecision(6), \" \").concat(dn[2].toPrecision(6), \"\\n\");\n      file += '  outer loop\\n';\n      file += \"   vertex \".concat(v1[0].toPrecision(6), \" \").concat(v1[1].toPrecision(6), \" \").concat(v1[2].toPrecision(6), \"\\n\");\n      file += \"   vertex \".concat(v2[0].toPrecision(6), \" \").concat(v2[1].toPrecision(6), \" \").concat(v2[2].toPrecision(6), \"\\n\");\n      file += \"   vertex \".concat(v3[0].toPrecision(6), \" \").concat(v3[1].toPrecision(6), \" \").concat(v3[2].toPrecision(6), \"\\n\");\n      file += '  endloop\\n';\n      file += ' endfacet\\n';\n    },\n    writeFooter: function writeFooter(polyData) {\n      file += 'endsolid\\n';\n    },\n    getOutputData: function getOutputData() {\n      return file;\n    }\n  };\n};\nfunction writeSTL(polyData) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FormatTypes.BINARY;\n  var transform = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var writer = null;\n  if (format === FormatTypes.BINARY) {\n    writer = binaryWriter();\n  } else if (format === FormatTypes.ASCII) {\n    writer = asciiWriter();\n  } else {\n    vtkErrorMacro('Invalid format type');\n  }\n  writer.init(polyData);\n  writer.writeHeader(polyData);\n  var polys = polyData.getPolys().getData();\n  var points = polyData.getPoints().getData();\n  var strips = polyData.getStrips() ? polyData.getStrips().getData() : null;\n  var n = [];\n  var v1 = [];\n  var v2 = [];\n  var v3 = []; // Strips\n\n  if (strips && strips.length > 0) {\n    throw new Error('Unsupported strips');\n  } // Polys\n\n  for (var i = 0; i < polys.length;) {\n    var pointNumber = polys[i++];\n    if (pointNumber) {\n      v1 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n      v2 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n      v3 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n      if (transform) {\n        vec3.transformMat4(v1, v1, transform);\n        vec3.transformMat4(v2, v2, transform);\n        vec3.transformMat4(v3, v3, transform);\n      }\n      vtkTriangle.computeNormal(v1, v2, v3, n);\n      writer.writeTriangle(v1, v2, v3, n);\n    }\n  }\n  writer.writeFooter(polyData);\n  return writer.getOutputData();\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {\n  writeSTL: writeSTL\n}; // ----------------------------------------------------------------------------\n// vtkSTLWriter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSTLWriter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSTLWriter');\n  publicAPI.requestData = function (inData, outData) {\n    var input = inData[0];\n    if (!input || input.getClassName() !== 'vtkPolyData') {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    outData[0] = writeSTL(input, model.format, model.transform);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  format: FormatTypes.BINARY,\n  transform: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['format', 'transform']); // Object specific methods\n\n  vtkSTLWriter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSTLWriter'); // ----------------------------------------------------------------------------\n\nvar vtkSTLWriter$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\nexport { STATIC, vtkSTLWriter$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","vec3","macro","vtkTriangle","FormatTypes","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkErrorMacro","writeFloatBinary","dataView","offset","float","setFloat32","toPrecision","writeVectorBinary","vector","off","binaryWriter","init","polyData","polys","getPolys","getData","buffer","ArrayBuffer","DataView","writeHeader","setUint32","getNumberOfCells","writeTriangle","v1","v2","v3","dn","writeFooter","getOutputData","asciiWriter","file","concat","writeSTL","format","undefined","BINARY","transform","writer","ASCII","points","getPoints","strips","getStrips","n","Error","pointNumber","transformMat4","computeNormal","STATIC","vtkSTLWriter","publicAPI","model","classHierarchy","requestData","inData","outData","input","getClassName","DEFAULT_VALUES","extend","initialValues","assign","obj","algo","setGet","newInstance","vtkSTLWriter$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Geometry/STLWriter.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkTriangle from '../../Common/DataModel/Triangle.js';\nimport { FormatTypes } from './STLWriter/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction writeFloatBinary(dataView, offset, float) {\n  dataView.setFloat32(offset, float.toPrecision(6), true);\n  return offset + 4;\n}\n\nfunction writeVectorBinary(dataView, offset, vector) {\n  var off = writeFloatBinary(dataView, offset, vector[0]);\n  off = writeFloatBinary(dataView, off, vector[1]);\n  return writeFloatBinary(dataView, off, vector[2]);\n} // ----------------------------------------------------------------------------\n// vtkSTLWriter methods\n// ----------------------------------------------------------------------------\n\n\nvar binaryWriter = function binaryWriter() {\n  var offset = 0;\n  var dataView = null;\n  return {\n    init: function init(polyData) {\n      var polys = polyData.getPolys().getData();\n      var buffer = new ArrayBuffer(80 + 4 + 50 * polys.length / 4); // buffer for the full file; size = header (80) + num cells (4) +  50 bytes per poly\n\n      dataView = new DataView(buffer);\n    },\n    writeHeader: function writeHeader(polyData) {\n      offset += 80; // Header is empty // TODO: could add date, version, package\n      // First need to write the number of cells\n\n      dataView.setUint32(offset, polyData.getNumberOfCells(), true);\n      offset += 4;\n    },\n    writeTriangle: function writeTriangle(v1, v2, v3, dn) {\n      offset = writeVectorBinary(dataView, offset, dn);\n      offset = writeVectorBinary(dataView, offset, v1);\n      offset = writeVectorBinary(dataView, offset, v2);\n      offset = writeVectorBinary(dataView, offset, v3);\n      offset += 2; // unused 'attribute byte count' is a Uint16\n    },\n    writeFooter: function writeFooter(polyData) {},\n    getOutputData: function getOutputData() {\n      return dataView;\n    }\n  };\n};\n\nvar asciiWriter = function asciiWriter() {\n  var file = '';\n  return {\n    init: function init(polyData) {},\n    writeHeader: function writeHeader(polyData) {\n      file += 'solid ascii\\n';\n    },\n    writeTriangle: function writeTriangle(v1, v2, v3, dn) {\n      file += \" facet normal \".concat(dn[0].toPrecision(6), \" \").concat(dn[1].toPrecision(6), \" \").concat(dn[2].toPrecision(6), \"\\n\");\n      file += '  outer loop\\n';\n      file += \"   vertex \".concat(v1[0].toPrecision(6), \" \").concat(v1[1].toPrecision(6), \" \").concat(v1[2].toPrecision(6), \"\\n\");\n      file += \"   vertex \".concat(v2[0].toPrecision(6), \" \").concat(v2[1].toPrecision(6), \" \").concat(v2[2].toPrecision(6), \"\\n\");\n      file += \"   vertex \".concat(v3[0].toPrecision(6), \" \").concat(v3[1].toPrecision(6), \" \").concat(v3[2].toPrecision(6), \"\\n\");\n      file += '  endloop\\n';\n      file += ' endfacet\\n';\n    },\n    writeFooter: function writeFooter(polyData) {\n      file += 'endsolid\\n';\n    },\n    getOutputData: function getOutputData() {\n      return file;\n    }\n  };\n};\n\nfunction writeSTL(polyData) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FormatTypes.BINARY;\n  var transform = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var writer = null;\n\n  if (format === FormatTypes.BINARY) {\n    writer = binaryWriter();\n  } else if (format === FormatTypes.ASCII) {\n    writer = asciiWriter();\n  } else {\n    vtkErrorMacro('Invalid format type');\n  }\n\n  writer.init(polyData);\n  writer.writeHeader(polyData);\n  var polys = polyData.getPolys().getData();\n  var points = polyData.getPoints().getData();\n  var strips = polyData.getStrips() ? polyData.getStrips().getData() : null;\n  var n = [];\n  var v1 = [];\n  var v2 = [];\n  var v3 = []; // Strips\n\n  if (strips && strips.length > 0) {\n    throw new Error('Unsupported strips');\n  } // Polys\n\n\n  for (var i = 0; i < polys.length;) {\n    var pointNumber = polys[i++];\n\n    if (pointNumber) {\n      v1 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n      v2 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n      v3 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n\n      if (transform) {\n        vec3.transformMat4(v1, v1, transform);\n        vec3.transformMat4(v2, v2, transform);\n        vec3.transformMat4(v3, v3, transform);\n      }\n\n      vtkTriangle.computeNormal(v1, v2, v3, n);\n      writer.writeTriangle(v1, v2, v3, n);\n    }\n  }\n\n  writer.writeFooter(polyData);\n  return writer.getOutputData();\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  writeSTL: writeSTL\n}; // ----------------------------------------------------------------------------\n// vtkSTLWriter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSTLWriter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSTLWriter');\n\n  publicAPI.requestData = function (inData, outData) {\n    var input = inData[0];\n\n    if (!input || input.getClassName() !== 'vtkPolyData') {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n\n    outData[0] = writeSTL(input, model.format, model.transform);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  format: FormatTypes.BINARY,\n  transform: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['format', 'transform']); // Object specific methods\n\n  vtkSTLWriter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSTLWriter'); // ----------------------------------------------------------------------------\n\nvar vtkSTLWriter$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkSTLWriter$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
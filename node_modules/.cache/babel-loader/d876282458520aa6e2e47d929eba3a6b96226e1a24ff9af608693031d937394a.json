{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../../macros.js';\nimport { vec3 } from 'gl-matrix';\nfunction widgetBehavior(publicAPI, model) {\n  var state = model.widgetState;\n  var moveHandle = state.getMoveHandle();\n  var centerHandle = state.getCenterHandle();\n  var borderHandle = state.getBorderHandle();\n  var shapeHandle = state.getSphereHandle(); // Set while moving the center or border handle.\n\n  model._isDragging = false; // The last world coordinate of the mouse cursor during dragging.\n\n  model.previousPosition = null;\n  model.classHierarchy.push('vtkSphereWidgetProp');\n  moveHandle.setVisible(true);\n  centerHandle.setVisible(false);\n  borderHandle.setVisible(false);\n  shapeHandle.setVisible(true);\n  function isValidHandle(handle) {\n    return handle === centerHandle || handle === borderHandle || handle === moveHandle;\n  }\n  function isPlaced() {\n    return !!centerHandle.getOrigin() && !!borderHandle.getOrigin();\n  } // Update the sphereHandle parameters from {center,border}Handle.\n\n  function updateSphere() {\n    var center = centerHandle.getOrigin();\n    if (!center) return;\n    centerHandle.setVisible(true);\n    var border = borderHandle.getOrigin();\n    if (border) {\n      borderHandle.setVisible(true);\n    } else {\n      border = moveHandle.getOrigin();\n      if (!border) return;\n    }\n    if (isPlaced()) {\n      moveHandle.setVisible(false);\n    }\n    var radius = vec3.distance(center, border);\n    shapeHandle.setVisible(true);\n    shapeHandle.setOrigin(center);\n    shapeHandle.setScale1(radius * 2);\n    model._interactor.render();\n  }\n  function currentWorldCoords(e) {\n    var _model$activeState$ge, _model$activeState, _model$activeState$ge2;\n    var manipulator = (_model$activeState$ge = (_model$activeState = model.activeState) === null || _model$activeState === void 0 ? void 0 : (_model$activeState$ge2 = _model$activeState.getManipulator) === null || _model$activeState$ge2 === void 0 ? void 0 : _model$activeState$ge2.call(_model$activeState)) !== null && _model$activeState$ge !== void 0 ? _model$activeState$ge : model.manipulator;\n    return manipulator.handleEvent(e, model._apiSpecificRenderWindow).worldCoords;\n  } // Update the sphere's center and radius.  Example:\n  // handle.setCenterAndRadius([1,2,3], 10);\n\n  publicAPI.setCenterAndRadius = function (newCenter, newRadius) {\n    var oldCenter = centerHandle.getOrigin();\n    var oldBorder = borderHandle.getOrigin();\n    var newBorder = [newCenter[0] + newRadius, newCenter[1], newCenter[2]];\n    if (oldBorder) {\n      // Move the boundary handle to reflect the new radius, while preserving\n      // its direction relative to the center.\n      var direction = vec3.sub(vec3.create(), oldBorder, oldCenter);\n      var oldRadius = vec3.length(direction);\n      if (oldRadius > 1e-10) {\n        newBorder = vec3.add(vec3.create(), newCenter, vec3.scale(vec3.create(), direction, newRadius / oldRadius));\n      }\n    }\n    centerHandle.setOrigin(newCenter);\n    borderHandle.setOrigin(newBorder);\n    updateSphere();\n    model._widgetManager.enablePicking();\n  };\n  publicAPI.handleLeftButtonPress = function (e) {\n    if (!isValidHandle(model.activeState)) {\n      model.activeState = null;\n      return macro.VOID;\n    }\n    var worldCoords = currentWorldCoords(e);\n    if (model.activeState === moveHandle) {\n      // Initial sphere placement.\n      if (!centerHandle.getOrigin()) {\n        centerHandle.setOrigin(worldCoords);\n      } else if (!borderHandle.getOrigin()) {\n        borderHandle.setOrigin(worldCoords);\n      }\n      updateSphere();\n    }\n    model._isDragging = true;\n    model._apiSpecificRenderWindow.setCursor('grabbing');\n    model.previousPosition = _toConsumableArray(currentWorldCoords(e));\n    publicAPI.invokeStartInteractionEvent();\n    return macro.EVENT_ABORT;\n  };\n  publicAPI.handleLeftButtonRelease = function (e) {\n    if (!model._isDragging) {\n      model.activeState = null;\n      return macro.VOID;\n    }\n    if (isPlaced()) {\n      model.previousPosition = null;\n      model._widgetManager.enablePicking();\n      model._apiSpecificRenderWindow.setCursor('pointer');\n      model._isDragging = false;\n      model.activeState = null;\n      state.deactivate();\n    }\n    publicAPI.invokeEndInteractionEvent();\n    return macro.EVENT_ABORT;\n  };\n  publicAPI.handleMouseMove = function (e) {\n    if (!model._isDragging) {\n      model.activeState = null;\n      return macro.VOID;\n    }\n    if (!model.activeState) throw Error('no activestate');\n    var worldCoords = currentWorldCoords(e);\n    model.activeState.setOrigin(worldCoords);\n    if (model.activeState === centerHandle) {\n      // When the sphere is fully placed, and the user is moving the\n      // center, we move the whole sphere.\n      if (borderHandle.getOrigin()) {\n        if (!model.previousPosition) {\n          // !previousPosition here happens only immediately\n          // after grabFocus, but grabFocus resets\n          // borderHandle.origin.\n          throw Error(\"no pos \".concat(model.activeState, \" \").concat(model.previousPosition));\n        }\n        var translation = vec3.sub(vec3.create(), worldCoords, model.previousPosition);\n        borderHandle.setOrigin(vec3.add(vec3.create(), borderHandle.getOrigin(), translation));\n      }\n    }\n    model.previousPosition = worldCoords;\n    updateSphere();\n    return macro.VOID;\n  };\n  publicAPI.grabFocus = function () {\n    moveHandle.setVisible(true);\n    centerHandle.setVisible(false);\n    borderHandle.setVisible(false);\n    centerHandle.setOrigin(null);\n    borderHandle.setOrigin(null);\n    model._isDragging = true;\n    model.activeState = moveHandle;\n    model._interactor.render();\n  };\n  publicAPI.loseFocus = function () {\n    model._isDragging = false;\n    model.activeState = null;\n  };\n}\nexport { widgetBehavior as default };","map":{"version":3,"names":["_toConsumableArray","macro","vec3","widgetBehavior","publicAPI","model","state","widgetState","moveHandle","getMoveHandle","centerHandle","getCenterHandle","borderHandle","getBorderHandle","shapeHandle","getSphereHandle","_isDragging","previousPosition","classHierarchy","push","setVisible","isValidHandle","handle","isPlaced","getOrigin","updateSphere","center","border","radius","distance","setOrigin","setScale1","_interactor","render","currentWorldCoords","e","_model$activeState$ge","_model$activeState","_model$activeState$ge2","manipulator","activeState","getManipulator","call","handleEvent","_apiSpecificRenderWindow","worldCoords","setCenterAndRadius","newCenter","newRadius","oldCenter","oldBorder","newBorder","direction","sub","create","oldRadius","length","add","scale","_widgetManager","enablePicking","handleLeftButtonPress","VOID","setCursor","invokeStartInteractionEvent","EVENT_ABORT","handleLeftButtonRelease","deactivate","invokeEndInteractionEvent","handleMouseMove","Error","concat","translation","grabFocus","loseFocus","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Widgets/Widgets3D/SphereWidget/behavior.js"],"sourcesContent":["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../../macros.js';\nimport { vec3 } from 'gl-matrix';\n\nfunction widgetBehavior(publicAPI, model) {\n  var state = model.widgetState;\n  var moveHandle = state.getMoveHandle();\n  var centerHandle = state.getCenterHandle();\n  var borderHandle = state.getBorderHandle();\n  var shapeHandle = state.getSphereHandle(); // Set while moving the center or border handle.\n\n  model._isDragging = false; // The last world coordinate of the mouse cursor during dragging.\n\n  model.previousPosition = null;\n  model.classHierarchy.push('vtkSphereWidgetProp');\n  moveHandle.setVisible(true);\n  centerHandle.setVisible(false);\n  borderHandle.setVisible(false);\n  shapeHandle.setVisible(true);\n\n  function isValidHandle(handle) {\n    return handle === centerHandle || handle === borderHandle || handle === moveHandle;\n  }\n\n  function isPlaced() {\n    return !!centerHandle.getOrigin() && !!borderHandle.getOrigin();\n  } // Update the sphereHandle parameters from {center,border}Handle.\n\n\n  function updateSphere() {\n    var center = centerHandle.getOrigin();\n    if (!center) return;\n    centerHandle.setVisible(true);\n    var border = borderHandle.getOrigin();\n\n    if (border) {\n      borderHandle.setVisible(true);\n    } else {\n      border = moveHandle.getOrigin();\n      if (!border) return;\n    }\n\n    if (isPlaced()) {\n      moveHandle.setVisible(false);\n    }\n\n    var radius = vec3.distance(center, border);\n    shapeHandle.setVisible(true);\n    shapeHandle.setOrigin(center);\n    shapeHandle.setScale1(radius * 2);\n\n    model._interactor.render();\n  }\n\n  function currentWorldCoords(e) {\n    var _model$activeState$ge, _model$activeState, _model$activeState$ge2;\n\n    var manipulator = (_model$activeState$ge = (_model$activeState = model.activeState) === null || _model$activeState === void 0 ? void 0 : (_model$activeState$ge2 = _model$activeState.getManipulator) === null || _model$activeState$ge2 === void 0 ? void 0 : _model$activeState$ge2.call(_model$activeState)) !== null && _model$activeState$ge !== void 0 ? _model$activeState$ge : model.manipulator;\n    return manipulator.handleEvent(e, model._apiSpecificRenderWindow).worldCoords;\n  } // Update the sphere's center and radius.  Example:\n  // handle.setCenterAndRadius([1,2,3], 10);\n\n\n  publicAPI.setCenterAndRadius = function (newCenter, newRadius) {\n    var oldCenter = centerHandle.getOrigin();\n    var oldBorder = borderHandle.getOrigin();\n    var newBorder = [newCenter[0] + newRadius, newCenter[1], newCenter[2]];\n\n    if (oldBorder) {\n      // Move the boundary handle to reflect the new radius, while preserving\n      // its direction relative to the center.\n      var direction = vec3.sub(vec3.create(), oldBorder, oldCenter);\n      var oldRadius = vec3.length(direction);\n\n      if (oldRadius > 1e-10) {\n        newBorder = vec3.add(vec3.create(), newCenter, vec3.scale(vec3.create(), direction, newRadius / oldRadius));\n      }\n    }\n\n    centerHandle.setOrigin(newCenter);\n    borderHandle.setOrigin(newBorder);\n    updateSphere();\n\n    model._widgetManager.enablePicking();\n  };\n\n  publicAPI.handleLeftButtonPress = function (e) {\n    if (!isValidHandle(model.activeState)) {\n      model.activeState = null;\n      return macro.VOID;\n    }\n\n    var worldCoords = currentWorldCoords(e);\n\n    if (model.activeState === moveHandle) {\n      // Initial sphere placement.\n      if (!centerHandle.getOrigin()) {\n        centerHandle.setOrigin(worldCoords);\n      } else if (!borderHandle.getOrigin()) {\n        borderHandle.setOrigin(worldCoords);\n      }\n\n      updateSphere();\n    }\n\n    model._isDragging = true;\n\n    model._apiSpecificRenderWindow.setCursor('grabbing');\n\n    model.previousPosition = _toConsumableArray(currentWorldCoords(e));\n    publicAPI.invokeStartInteractionEvent();\n    return macro.EVENT_ABORT;\n  };\n\n  publicAPI.handleLeftButtonRelease = function (e) {\n    if (!model._isDragging) {\n      model.activeState = null;\n      return macro.VOID;\n    }\n\n    if (isPlaced()) {\n      model.previousPosition = null;\n\n      model._widgetManager.enablePicking();\n\n      model._apiSpecificRenderWindow.setCursor('pointer');\n\n      model._isDragging = false;\n      model.activeState = null;\n      state.deactivate();\n    }\n\n    publicAPI.invokeEndInteractionEvent();\n    return macro.EVENT_ABORT;\n  };\n\n  publicAPI.handleMouseMove = function (e) {\n    if (!model._isDragging) {\n      model.activeState = null;\n      return macro.VOID;\n    }\n\n    if (!model.activeState) throw Error('no activestate');\n    var worldCoords = currentWorldCoords(e);\n    model.activeState.setOrigin(worldCoords);\n\n    if (model.activeState === centerHandle) {\n      // When the sphere is fully placed, and the user is moving the\n      // center, we move the whole sphere.\n      if (borderHandle.getOrigin()) {\n        if (!model.previousPosition) {\n          // !previousPosition here happens only immediately\n          // after grabFocus, but grabFocus resets\n          // borderHandle.origin.\n          throw Error(\"no pos \".concat(model.activeState, \" \").concat(model.previousPosition));\n        }\n\n        var translation = vec3.sub(vec3.create(), worldCoords, model.previousPosition);\n        borderHandle.setOrigin(vec3.add(vec3.create(), borderHandle.getOrigin(), translation));\n      }\n    }\n\n    model.previousPosition = worldCoords;\n    updateSphere();\n    return macro.VOID;\n  };\n\n  publicAPI.grabFocus = function () {\n    moveHandle.setVisible(true);\n    centerHandle.setVisible(false);\n    borderHandle.setVisible(false);\n    centerHandle.setOrigin(null);\n    borderHandle.setOrigin(null);\n    model._isDragging = true;\n    model.activeState = moveHandle;\n\n    model._interactor.render();\n  };\n\n  publicAPI.loseFocus = function () {\n    model._isDragging = false;\n    model.activeState = null;\n  };\n}\n\nexport { widgetBehavior as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
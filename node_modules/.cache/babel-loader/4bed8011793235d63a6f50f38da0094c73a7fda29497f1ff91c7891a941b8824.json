{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkClosedPolyLineToSurfaceFilter from '../../Filters/General/ClosedPolyLineToSurfaceFilter.js';\nimport vtkCubeSource from '../../Filters/Sources/CubeSource.js';\nimport vtkCutter from '../../Filters/Core/Cutter.js';\nimport vtkCylinderSource from '../../Filters/Sources/CylinderSource.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkPixelSpaceCallbackMapper from '../../Rendering/Core/PixelSpaceCallbackMapper.js';\nimport vtkPlane from '../../Common/DataModel/Plane.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkSphereSource from '../../Filters/Sources/SphereSource.js';\nimport vtkStateBuilder from '../Core/StateBuilder.js';\nimport { getPixelWorldHeightAtCoord } from '../Core/WidgetManager.js';\nimport vtkWidgetRepresentation from './WidgetRepresentation.js';\nimport WidgetManagerConst from '../Core/WidgetManager/Constants.js';\nimport PropertyConst from '../../Rendering/Core/Property/Constants.js';\nvar RenderingTypes = WidgetManagerConst.RenderingTypes;\nvar Interpolation = PropertyConst.Interpolation,\n  Representation = PropertyConst.Representation; // ----------------------------------------------------------------------------\n// Static methods to build state\n// ----------------------------------------------------------------------------\n\nfunction generateState() {\n  return vtkStateBuilder.createBuilder().addField({\n    name: 'origin',\n    initialValue: [0, 0, 0]\n  }).addField({\n    name: 'normal',\n    initialValue: [0, 0, 1]\n  }).addField({\n    name: 'activeHandle',\n    initialValue: null\n  }).addField({\n    name: 'updateMethodName'\n  }).build();\n} // ----------------------------------------------------------------------------\n// Representation style\n// ----------------------------------------------------------------------------\n\nvar STYLE_PIPELINE_NAMES = ['plane', 'outline', 'normal', 'origin', 'display2D'];\nvar STYLE_DEFAULT = {\n  active: {\n    plane: {\n      opacity: 1,\n      color: [0, 0.9, 0]\n    },\n    normal: {\n      opacity: 1,\n      color: [0, 0.9, 0]\n    },\n    origin: {\n      opacity: 1,\n      color: [0, 0.9, 0]\n    }\n  },\n  inactive: {\n    plane: {\n      opacity: 0.6,\n      color: [1, 1, 1]\n    },\n    normal: {\n      opacity: 1,\n      color: [0.9, 0, 0]\n    },\n    origin: {\n      opacity: 1,\n      color: [1, 0, 0]\n    }\n  },\n  static: {\n    display2D: {\n      representation: Representation.POINT\n    },\n    outline: {\n      color: [1, 1, 1],\n      opacity: 1,\n      representation: Representation.WIREFRAME,\n      interpolation: Interpolation.FLAT\n    }\n  }\n}; // ----------------------------------------------------------------------------\n// vtkImplicitPlaneRepresentation methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImplicitPlaneRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImplicitPlaneRepresentation'); // --------------------------------------------------------------------------\n  // Internal polydata dataset\n  // --------------------------------------------------------------------------\n\n  model.plane = vtkPlane.newInstance();\n  model.matrix = vtkMatrixBuilder.buildFromDegree();\n  model._pipelines = {};\n  model._pipelines.outline = {\n    source: vtkCubeSource.newInstance(),\n    mapper: vtkMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: false,\n      _parentProp: publicAPI\n    })\n  };\n  model._pipelines.plane = {\n    source: vtkCutter.newInstance({\n      cutFunction: model.plane\n    }),\n    filter: vtkClosedPolyLineToSurfaceFilter.newInstance(),\n    mapper: vtkMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: true,\n      _parentProp: publicAPI\n    })\n  };\n  model._pipelines.origin = {\n    source: vtkSphereSource.newInstance(),\n    mapper: vtkMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: true,\n      _parentProp: publicAPI\n    })\n  };\n  model._pipelines.normal = {\n    source: vtkCylinderSource.newInstance(),\n    mapper: vtkMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: true,\n      _parentProp: publicAPI\n    })\n  };\n  model._pipelines.display2D = {\n    source: publicAPI,\n    mapper: vtkPixelSpaceCallbackMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: false,\n      _parentProp: publicAPI\n    })\n  }; // Plane generation pipeline\n\n  model._pipelines.plane.source.setInputConnection(model._pipelines.outline.source.getOutputPort());\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.outline);\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.plane);\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.origin);\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.normal);\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.display2D);\n  publicAPI.addActor(model._pipelines.outline.actor);\n  publicAPI.addActor(model._pipelines.plane.actor);\n  publicAPI.addActor(model._pipelines.origin.actor);\n  publicAPI.addActor(model._pipelines.normal.actor);\n  publicAPI.addActor(model._pipelines.display2D.actor); // --------------------------------------------------------------------------\n\n  publicAPI.requestData = function (inData, outData) {\n    var state = inData[0];\n    var origin = state.getOrigin();\n    if (!origin) {\n      return;\n    }\n    var normal = state.getNormal();\n    var bounds = state.getBounds();\n    model.plane.setOrigin(origin);\n    model.plane.setNormal(normal); // --------------------------------\n    // Update cube parameters\n    // --------------------------------\n\n    model._pipelines.outline.source.setCenter((bounds[0] + bounds[1]) * 0.5, (bounds[2] + bounds[3]) * 0.5, (bounds[4] + bounds[5]) * 0.5);\n    var xRange = bounds[1] - bounds[0];\n    var yRange = bounds[3] - bounds[2];\n    var zRange = bounds[5] - bounds[4];\n    model._pipelines.outline.source.setXLength(xRange);\n    model._pipelines.outline.source.setYLength(yRange);\n    model._pipelines.outline.source.setZLength(zRange); // --------------------------------\n    // Update normal parameters\n    // --------------------------------\n\n    var pixelScale = 1;\n    if (model.scaleInPixels) {\n      pixelScale = getPixelWorldHeightAtCoord(origin, model.displayScaleParams);\n    }\n    model._pipelines.normal.source.set({\n      height: Math.max(xRange, yRange, zRange),\n      radius: model.handleSizeRatio * Math.min(xRange, yRange, zRange) * model.axisScale * pixelScale,\n      resolution: model.sphereResolution\n    });\n    var yAxis = model._pipelines.normal.source.getOutputData();\n    var newAxis = vtkPolyData.newInstance();\n    newAxis.shallowCopy(yAxis);\n    newAxis.getPoints().setData(Float32Array.from(yAxis.getPoints().getData()), 3);\n    newAxis.getPointData().removeAllArrays();\n    model.matrix.identity().translate(origin[0], origin[1], origin[2]).rotateFromDirections([0, 1, 0], normal).apply(newAxis.getPoints().getData());\n    model._pipelines.normal.mapper.setInputData(newAxis); // --------------------------------\n    // Update origin parameters\n    // --------------------------------\n\n    model._pipelines.origin.actor.setPosition(origin);\n    var handleScale = model.handleSizeRatio * Math.min(xRange, yRange, zRange) * pixelScale;\n    model._pipelines.origin.actor.setScale(handleScale, handleScale, handleScale); // --------------------------------\n    // Update style since state changed\n    // --------------------------------\n\n    vtkWidgetRepresentation.applyStyles(model._pipelines, model.representationStyle, state.getActive() && state.getActiveHandle());\n    var output = vtkPolyData.newInstance();\n    output.shallowCopy(model._pipelines.plane.filter.getOutputData());\n    outData[0] = output;\n  }; // --------------------------------------------------------------------------\n  // Set/Get Forwarding\n  // --------------------------------------------------------------------------\n\n  publicAPI.setSphereResolution = function (res) {\n    model.sphereResolution = res;\n    return model._pipelines.origin.source.setPhiResolution(res) && model._pipelines.origin.source.setThetaResolution(res);\n  };\n  publicAPI.setRepresentationStyle = function (style) {\n    model.representationStyle = vtkWidgetRepresentation.mergeStyles(STYLE_PIPELINE_NAMES, model.representationStyle, style); // Apply static and inactive\n\n    vtkWidgetRepresentation.applyStyles(model._pipelines, model.representationStyle); // Force requestData to execute\n\n    publicAPI.modified();\n  }; // --------------------------------------------------------------------------\n  // WidgetRepresentation API\n  // --------------------------------------------------------------------------\n\n  publicAPI.updateActorVisibility = function (renderingType, ctxVisible, hVisible) {\n    var planeVisible = model.planeVisible,\n      originVisible = model.originVisible,\n      normalVisible = model.normalVisible,\n      outlineVisible = model.outlineVisible;\n    if (renderingType === RenderingTypes.PICKING_BUFFER) {\n      model._pipelines.plane.actor.setVisibility(planeVisible);\n      model._pipelines.origin.actor.setVisibility(originVisible);\n      model._pipelines.normal.actor.setVisibility(normalVisible); //\n\n      model._pipelines.plane.actor.getProperty().setOpacity(1);\n    } else {\n      model._pipelines.outline.actor.setVisibility(outlineVisible && ctxVisible);\n      model._pipelines.plane.actor.setVisibility(planeVisible && hVisible);\n      model._pipelines.origin.actor.setVisibility(originVisible && hVisible);\n      model._pipelines.normal.actor.setVisibility(normalVisible && hVisible); //\n\n      var state = model.inputData[0];\n      if (state) {\n        vtkWidgetRepresentation.applyStyles(model._pipelines, model.representationStyle, state.getActive() && state.getActiveHandle());\n      }\n    }\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.getSelectedState = function (prop, compositeID) {\n    // We only have one state to control us\n    // we may want to update some field on the state to highlight the\n    // selected handle later on...\n    var state = model.inputData[0];\n    state.setActiveHandle(prop);\n    switch (prop) {\n      case model._pipelines.plane.actor:\n        state.setUpdateMethodName('updateFromPlane');\n        break;\n      case model._pipelines.origin.actor:\n        state.setUpdateMethodName('updateFromOrigin');\n        break;\n      case model._pipelines.normal.actor:\n        state.setUpdateMethodName('updateFromNormal');\n        break;\n      default:\n        state.setUpdateMethodName('updateFromPlane');\n        break;\n    }\n    return state;\n  }; // --------------------------------------------------------------------------\n  // Initialization\n  // --------------------------------------------------------------------------\n\n  publicAPI.setRepresentationStyle(STYLE_DEFAULT);\n  publicAPI.setSphereResolution(model.sphereResolution);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  sphereResolution: 24,\n  handleSizeRatio: 0.05,\n  axisScale: 0.1,\n  normalVisible: true,\n  originVisible: true,\n  planeVisible: true,\n  outlineVisible: true\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkWidgetRepresentation.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['sphereResolution', 'representationStyle']);\n  macro.setGet(publicAPI, model, ['handleSizeRatio', 'axisScale', 'normalVisible', 'originVisible', 'planeVisible', 'outlineVisible']); // Object specific methods\n\n  vtkImplicitPlaneRepresentation(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImplicitPlaneRepresentation'); // ----------------------------------------------------------------------------\n\nvar vtkImplicitPlaneRepresentation$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  generateState: generateState\n};\nexport { vtkImplicitPlaneRepresentation$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkActor","vtkClosedPolyLineToSurfaceFilter","vtkCubeSource","vtkCutter","vtkCylinderSource","vtkMapper","vtkMatrixBuilder","vtkPixelSpaceCallbackMapper","vtkPlane","vtkPolyData","vtkSphereSource","vtkStateBuilder","getPixelWorldHeightAtCoord","vtkWidgetRepresentation","WidgetManagerConst","PropertyConst","RenderingTypes","Interpolation","Representation","generateState","createBuilder","addField","name","initialValue","build","STYLE_PIPELINE_NAMES","STYLE_DEFAULT","active","plane","opacity","color","normal","origin","inactive","static","display2D","representation","POINT","outline","WIREFRAME","interpolation","FLAT","vtkImplicitPlaneRepresentation","publicAPI","model","classHierarchy","push","newInstance","matrix","buildFromDegree","_pipelines","source","mapper","actor","pickable","_parentProp","cutFunction","filter","setInputConnection","getOutputPort","connectPipeline","addActor","requestData","inData","outData","state","getOrigin","getNormal","bounds","getBounds","setOrigin","setNormal","setCenter","xRange","yRange","zRange","setXLength","setYLength","setZLength","pixelScale","scaleInPixels","displayScaleParams","set","height","Math","max","radius","handleSizeRatio","min","axisScale","resolution","sphereResolution","yAxis","getOutputData","newAxis","shallowCopy","getPoints","setData","Float32Array","from","getData","getPointData","removeAllArrays","identity","translate","rotateFromDirections","apply","setInputData","setPosition","handleScale","setScale","applyStyles","representationStyle","getActive","getActiveHandle","output","setSphereResolution","res","setPhiResolution","setThetaResolution","setRepresentationStyle","style","mergeStyles","modified","updateActorVisibility","renderingType","ctxVisible","hVisible","planeVisible","originVisible","normalVisible","outlineVisible","PICKING_BUFFER","setVisibility","getProperty","setOpacity","inputData","getSelectedState","prop","compositeID","setActiveHandle","setUpdateMethodName","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","get","setGet","vtkImplicitPlaneRepresentation$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Widgets/Representations/ImplicitPlaneRepresentation.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkClosedPolyLineToSurfaceFilter from '../../Filters/General/ClosedPolyLineToSurfaceFilter.js';\nimport vtkCubeSource from '../../Filters/Sources/CubeSource.js';\nimport vtkCutter from '../../Filters/Core/Cutter.js';\nimport vtkCylinderSource from '../../Filters/Sources/CylinderSource.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkPixelSpaceCallbackMapper from '../../Rendering/Core/PixelSpaceCallbackMapper.js';\nimport vtkPlane from '../../Common/DataModel/Plane.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkSphereSource from '../../Filters/Sources/SphereSource.js';\nimport vtkStateBuilder from '../Core/StateBuilder.js';\nimport { getPixelWorldHeightAtCoord } from '../Core/WidgetManager.js';\nimport vtkWidgetRepresentation from './WidgetRepresentation.js';\nimport WidgetManagerConst from '../Core/WidgetManager/Constants.js';\nimport PropertyConst from '../../Rendering/Core/Property/Constants.js';\n\nvar RenderingTypes = WidgetManagerConst.RenderingTypes;\nvar Interpolation = PropertyConst.Interpolation,\n    Representation = PropertyConst.Representation; // ----------------------------------------------------------------------------\n// Static methods to build state\n// ----------------------------------------------------------------------------\n\nfunction generateState() {\n  return vtkStateBuilder.createBuilder().addField({\n    name: 'origin',\n    initialValue: [0, 0, 0]\n  }).addField({\n    name: 'normal',\n    initialValue: [0, 0, 1]\n  }).addField({\n    name: 'activeHandle',\n    initialValue: null\n  }).addField({\n    name: 'updateMethodName'\n  }).build();\n} // ----------------------------------------------------------------------------\n// Representation style\n// ----------------------------------------------------------------------------\n\n\nvar STYLE_PIPELINE_NAMES = ['plane', 'outline', 'normal', 'origin', 'display2D'];\nvar STYLE_DEFAULT = {\n  active: {\n    plane: {\n      opacity: 1,\n      color: [0, 0.9, 0]\n    },\n    normal: {\n      opacity: 1,\n      color: [0, 0.9, 0]\n    },\n    origin: {\n      opacity: 1,\n      color: [0, 0.9, 0]\n    }\n  },\n  inactive: {\n    plane: {\n      opacity: 0.6,\n      color: [1, 1, 1]\n    },\n    normal: {\n      opacity: 1,\n      color: [0.9, 0, 0]\n    },\n    origin: {\n      opacity: 1,\n      color: [1, 0, 0]\n    }\n  },\n  static: {\n    display2D: {\n      representation: Representation.POINT\n    },\n    outline: {\n      color: [1, 1, 1],\n      opacity: 1,\n      representation: Representation.WIREFRAME,\n      interpolation: Interpolation.FLAT\n    }\n  }\n}; // ----------------------------------------------------------------------------\n// vtkImplicitPlaneRepresentation methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImplicitPlaneRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImplicitPlaneRepresentation'); // --------------------------------------------------------------------------\n  // Internal polydata dataset\n  // --------------------------------------------------------------------------\n\n  model.plane = vtkPlane.newInstance();\n  model.matrix = vtkMatrixBuilder.buildFromDegree();\n  model._pipelines = {};\n  model._pipelines.outline = {\n    source: vtkCubeSource.newInstance(),\n    mapper: vtkMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: false,\n      _parentProp: publicAPI\n    })\n  };\n  model._pipelines.plane = {\n    source: vtkCutter.newInstance({\n      cutFunction: model.plane\n    }),\n    filter: vtkClosedPolyLineToSurfaceFilter.newInstance(),\n    mapper: vtkMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: true,\n      _parentProp: publicAPI\n    })\n  };\n  model._pipelines.origin = {\n    source: vtkSphereSource.newInstance(),\n    mapper: vtkMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: true,\n      _parentProp: publicAPI\n    })\n  };\n  model._pipelines.normal = {\n    source: vtkCylinderSource.newInstance(),\n    mapper: vtkMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: true,\n      _parentProp: publicAPI\n    })\n  };\n  model._pipelines.display2D = {\n    source: publicAPI,\n    mapper: vtkPixelSpaceCallbackMapper.newInstance(),\n    actor: vtkActor.newInstance({\n      pickable: false,\n      _parentProp: publicAPI\n    })\n  }; // Plane generation pipeline\n\n  model._pipelines.plane.source.setInputConnection(model._pipelines.outline.source.getOutputPort());\n\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.outline);\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.plane);\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.origin);\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.normal);\n  vtkWidgetRepresentation.connectPipeline(model._pipelines.display2D);\n  publicAPI.addActor(model._pipelines.outline.actor);\n  publicAPI.addActor(model._pipelines.plane.actor);\n  publicAPI.addActor(model._pipelines.origin.actor);\n  publicAPI.addActor(model._pipelines.normal.actor);\n  publicAPI.addActor(model._pipelines.display2D.actor); // --------------------------------------------------------------------------\n\n  publicAPI.requestData = function (inData, outData) {\n    var state = inData[0];\n    var origin = state.getOrigin();\n\n    if (!origin) {\n      return;\n    }\n\n    var normal = state.getNormal();\n    var bounds = state.getBounds();\n    model.plane.setOrigin(origin);\n    model.plane.setNormal(normal); // --------------------------------\n    // Update cube parameters\n    // --------------------------------\n\n    model._pipelines.outline.source.setCenter((bounds[0] + bounds[1]) * 0.5, (bounds[2] + bounds[3]) * 0.5, (bounds[4] + bounds[5]) * 0.5);\n\n    var xRange = bounds[1] - bounds[0];\n    var yRange = bounds[3] - bounds[2];\n    var zRange = bounds[5] - bounds[4];\n\n    model._pipelines.outline.source.setXLength(xRange);\n\n    model._pipelines.outline.source.setYLength(yRange);\n\n    model._pipelines.outline.source.setZLength(zRange); // --------------------------------\n    // Update normal parameters\n    // --------------------------------\n\n\n    var pixelScale = 1;\n\n    if (model.scaleInPixels) {\n      pixelScale = getPixelWorldHeightAtCoord(origin, model.displayScaleParams);\n    }\n\n    model._pipelines.normal.source.set({\n      height: Math.max(xRange, yRange, zRange),\n      radius: model.handleSizeRatio * Math.min(xRange, yRange, zRange) * model.axisScale * pixelScale,\n      resolution: model.sphereResolution\n    });\n\n    var yAxis = model._pipelines.normal.source.getOutputData();\n\n    var newAxis = vtkPolyData.newInstance();\n    newAxis.shallowCopy(yAxis);\n    newAxis.getPoints().setData(Float32Array.from(yAxis.getPoints().getData()), 3);\n    newAxis.getPointData().removeAllArrays();\n    model.matrix.identity().translate(origin[0], origin[1], origin[2]).rotateFromDirections([0, 1, 0], normal).apply(newAxis.getPoints().getData());\n\n    model._pipelines.normal.mapper.setInputData(newAxis); // --------------------------------\n    // Update origin parameters\n    // --------------------------------\n\n\n    model._pipelines.origin.actor.setPosition(origin);\n\n    var handleScale = model.handleSizeRatio * Math.min(xRange, yRange, zRange) * pixelScale;\n\n    model._pipelines.origin.actor.setScale(handleScale, handleScale, handleScale); // --------------------------------\n    // Update style since state changed\n    // --------------------------------\n\n\n    vtkWidgetRepresentation.applyStyles(model._pipelines, model.representationStyle, state.getActive() && state.getActiveHandle());\n    var output = vtkPolyData.newInstance();\n    output.shallowCopy(model._pipelines.plane.filter.getOutputData());\n    outData[0] = output;\n  }; // --------------------------------------------------------------------------\n  // Set/Get Forwarding\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.setSphereResolution = function (res) {\n    model.sphereResolution = res;\n    return model._pipelines.origin.source.setPhiResolution(res) && model._pipelines.origin.source.setThetaResolution(res);\n  };\n\n  publicAPI.setRepresentationStyle = function (style) {\n    model.representationStyle = vtkWidgetRepresentation.mergeStyles(STYLE_PIPELINE_NAMES, model.representationStyle, style); // Apply static and inactive\n\n    vtkWidgetRepresentation.applyStyles(model._pipelines, model.representationStyle); // Force requestData to execute\n\n    publicAPI.modified();\n  }; // --------------------------------------------------------------------------\n  // WidgetRepresentation API\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.updateActorVisibility = function (renderingType, ctxVisible, hVisible) {\n    var planeVisible = model.planeVisible,\n        originVisible = model.originVisible,\n        normalVisible = model.normalVisible,\n        outlineVisible = model.outlineVisible;\n\n    if (renderingType === RenderingTypes.PICKING_BUFFER) {\n      model._pipelines.plane.actor.setVisibility(planeVisible);\n\n      model._pipelines.origin.actor.setVisibility(originVisible);\n\n      model._pipelines.normal.actor.setVisibility(normalVisible); //\n\n\n      model._pipelines.plane.actor.getProperty().setOpacity(1);\n    } else {\n      model._pipelines.outline.actor.setVisibility(outlineVisible && ctxVisible);\n\n      model._pipelines.plane.actor.setVisibility(planeVisible && hVisible);\n\n      model._pipelines.origin.actor.setVisibility(originVisible && hVisible);\n\n      model._pipelines.normal.actor.setVisibility(normalVisible && hVisible); //\n\n\n      var state = model.inputData[0];\n\n      if (state) {\n        vtkWidgetRepresentation.applyStyles(model._pipelines, model.representationStyle, state.getActive() && state.getActiveHandle());\n      }\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.getSelectedState = function (prop, compositeID) {\n    // We only have one state to control us\n    // we may want to update some field on the state to highlight the\n    // selected handle later on...\n    var state = model.inputData[0];\n    state.setActiveHandle(prop);\n\n    switch (prop) {\n      case model._pipelines.plane.actor:\n        state.setUpdateMethodName('updateFromPlane');\n        break;\n\n      case model._pipelines.origin.actor:\n        state.setUpdateMethodName('updateFromOrigin');\n        break;\n\n      case model._pipelines.normal.actor:\n        state.setUpdateMethodName('updateFromNormal');\n        break;\n\n      default:\n        state.setUpdateMethodName('updateFromPlane');\n        break;\n    }\n\n    return state;\n  }; // --------------------------------------------------------------------------\n  // Initialization\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.setRepresentationStyle(STYLE_DEFAULT);\n  publicAPI.setSphereResolution(model.sphereResolution);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  sphereResolution: 24,\n  handleSizeRatio: 0.05,\n  axisScale: 0.1,\n  normalVisible: true,\n  originVisible: true,\n  planeVisible: true,\n  outlineVisible: true\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkWidgetRepresentation.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['sphereResolution', 'representationStyle']);\n  macro.setGet(publicAPI, model, ['handleSizeRatio', 'axisScale', 'normalVisible', 'originVisible', 'planeVisible', 'outlineVisible']); // Object specific methods\n\n  vtkImplicitPlaneRepresentation(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImplicitPlaneRepresentation'); // ----------------------------------------------------------------------------\n\nvar vtkImplicitPlaneRepresentation$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  generateState: generateState\n};\n\nexport { vtkImplicitPlaneRepresentation$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
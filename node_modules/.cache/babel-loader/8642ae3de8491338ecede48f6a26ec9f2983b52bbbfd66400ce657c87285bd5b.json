{"ast":null,"code":"import macro from '../../macros.js';\nimport Constants from './ImageProperty/Constants.js';\nvar InterpolationType = Constants.InterpolationType;\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar VTK_MAX_VRCOMP = 4; // ----------------------------------------------------------------------------\n// vtkImageProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageProperty');\n  publicAPI.getMTime = function () {\n    var mTime = model.mtime;\n    var time;\n    for (var index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].rGBTransferFunction) {\n        // time that RGB transfer function was last modified\n        time = model.componentData[index].rGBTransferFunction.getMTime();\n        mTime = mTime > time ? mTime : time;\n      } // Piecewise function MTimes\n\n      if (model.componentData[index].piecewiseFunction) {\n        // time that weighting function was last modified\n        time = model.componentData[index].piecewiseFunction.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n    }\n    return mTime;\n  }; // Set the color of a volume to an RGB transfer function\n\n  publicAPI.setRGBTransferFunction = function (index, func) {\n    // backwards compatible call without the component index\n    var idx = index;\n    var transferFunc = func;\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n    if (model.componentData[idx].rGBTransferFunction !== transferFunc) {\n      model.componentData[idx].rGBTransferFunction = transferFunc;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  }; // Get the currently set RGB transfer function.\n\n  publicAPI.getRGBTransferFunction = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.componentData[idx].rGBTransferFunction;\n  }; // Set the piecewise function\n\n  publicAPI.setPiecewiseFunction = function (index, func) {\n    var idx = index;\n    var transferFunc = func;\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n    if (model.componentData[idx].piecewiseFunction !== transferFunc) {\n      model.componentData[idx].piecewiseFunction = transferFunc;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  }; // Get the component weighting function.\n\n  publicAPI.getPiecewiseFunction = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.componentData[idx].piecewiseFunction;\n  }; // Alias to set the piecewise function\n\n  publicAPI.setScalarOpacity = function (index, func) {\n    // backwards compatible call without the component index\n    var idx = index;\n    var transferFunc = func;\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n    return publicAPI.setPiecewiseFunction(idx, transferFunc);\n  }; // Alias to get the piecewise function (backwards compatibility)\n\n  publicAPI.getScalarOpacity = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return publicAPI.getPiecewiseFunction(idx);\n  };\n  publicAPI.setComponentWeight = function (index, value) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n    var val = Math.min(1, Math.max(0, value));\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getComponentWeight = function (index) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n    return model.componentData[index].componentWeight;\n  };\n  publicAPI.setInterpolationTypeToNearest = function () {\n    return publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n  publicAPI.setInterpolationTypeToLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n  publicAPI.getInterpolationTypeAsString = function () {\n    return macro.enumToString(InterpolationType, model.interpolationType);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  independentComponents: false,\n  interpolationType: InterpolationType.LINEAR,\n  colorWindow: 255,\n  colorLevel: 127.5,\n  ambient: 1.0,\n  diffuse: 0.0,\n  opacity: 1.0,\n  useLookupTableScalarRange: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  if (!model.componentData) {\n    model.componentData = [];\n    for (var i = 0; i < VTK_MAX_VRCOMP; i++) {\n      model.componentData.push({\n        rGBTransferFunction: null,\n        piecewiseFunction: null,\n        componentWeight: 1.0\n      });\n    }\n  }\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'colorWindow', 'colorLevel', 'ambient', 'diffuse', 'opacity', 'useLookupTableScalarRange']); // Object methods\n\n  vtkImageProperty(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageProperty'); // ----------------------------------------------------------------------------\n\nvar vtkImageProperty$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkImageProperty$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","Constants","InterpolationType","vtkErrorMacro","VTK_MAX_VRCOMP","vtkImageProperty","publicAPI","model","classHierarchy","push","getMTime","mTime","mtime","time","index","componentData","rGBTransferFunction","piecewiseFunction","setRGBTransferFunction","func","idx","transferFunc","Number","isInteger","modified","getRGBTransferFunction","arguments","length","undefined","setPiecewiseFunction","getPiecewiseFunction","setScalarOpacity","getScalarOpacity","setComponentWeight","value","val","Math","min","max","componentWeight","getComponentWeight","setInterpolationTypeToNearest","setInterpolationType","NEAREST","setInterpolationTypeToLinear","LINEAR","getInterpolationTypeAsString","enumToString","interpolationType","DEFAULT_VALUES","independentComponents","colorWindow","colorLevel","ambient","diffuse","opacity","useLookupTableScalarRange","extend","initialValues","Object","assign","obj","i","setGet","newInstance","vtkImageProperty$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty.js"],"sourcesContent":["import macro from '../../macros.js';\nimport Constants from './ImageProperty/Constants.js';\n\nvar InterpolationType = Constants.InterpolationType;\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar VTK_MAX_VRCOMP = 4; // ----------------------------------------------------------------------------\n// vtkImageProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageProperty');\n\n  publicAPI.getMTime = function () {\n    var mTime = model.mtime;\n    var time;\n\n    for (var index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].rGBTransferFunction) {\n        // time that RGB transfer function was last modified\n        time = model.componentData[index].rGBTransferFunction.getMTime();\n        mTime = mTime > time ? mTime : time;\n      } // Piecewise function MTimes\n\n\n      if (model.componentData[index].piecewiseFunction) {\n        // time that weighting function was last modified\n        time = model.componentData[index].piecewiseFunction.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n    }\n\n    return mTime;\n  }; // Set the color of a volume to an RGB transfer function\n\n\n  publicAPI.setRGBTransferFunction = function (index, func) {\n    // backwards compatible call without the component index\n    var idx = index;\n    var transferFunc = func;\n\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n\n    if (model.componentData[idx].rGBTransferFunction !== transferFunc) {\n      model.componentData[idx].rGBTransferFunction = transferFunc;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  }; // Get the currently set RGB transfer function.\n\n\n  publicAPI.getRGBTransferFunction = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.componentData[idx].rGBTransferFunction;\n  }; // Set the piecewise function\n\n\n  publicAPI.setPiecewiseFunction = function (index, func) {\n    var idx = index;\n    var transferFunc = func;\n\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n\n    if (model.componentData[idx].piecewiseFunction !== transferFunc) {\n      model.componentData[idx].piecewiseFunction = transferFunc;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  }; // Get the component weighting function.\n\n\n  publicAPI.getPiecewiseFunction = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.componentData[idx].piecewiseFunction;\n  }; // Alias to set the piecewise function\n\n\n  publicAPI.setScalarOpacity = function (index, func) {\n    // backwards compatible call without the component index\n    var idx = index;\n    var transferFunc = func;\n\n    if (!Number.isInteger(index)) {\n      transferFunc = index;\n      idx = 0;\n    }\n\n    return publicAPI.setPiecewiseFunction(idx, transferFunc);\n  }; // Alias to get the piecewise function (backwards compatibility)\n\n\n  publicAPI.getScalarOpacity = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return publicAPI.getPiecewiseFunction(idx);\n  };\n\n  publicAPI.setComponentWeight = function (index, value) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n\n    var val = Math.min(1, Math.max(0, value));\n\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getComponentWeight = function (index) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n\n    return model.componentData[index].componentWeight;\n  };\n\n  publicAPI.setInterpolationTypeToNearest = function () {\n    return publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n\n  publicAPI.setInterpolationTypeToLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n\n  publicAPI.getInterpolationTypeAsString = function () {\n    return macro.enumToString(InterpolationType, model.interpolationType);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  independentComponents: false,\n  interpolationType: InterpolationType.LINEAR,\n  colorWindow: 255,\n  colorLevel: 127.5,\n  ambient: 1.0,\n  diffuse: 0.0,\n  opacity: 1.0,\n  useLookupTableScalarRange: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n\n  if (!model.componentData) {\n    model.componentData = [];\n\n    for (var i = 0; i < VTK_MAX_VRCOMP; i++) {\n      model.componentData.push({\n        rGBTransferFunction: null,\n        piecewiseFunction: null,\n        componentWeight: 1.0\n      });\n    }\n  }\n\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'colorWindow', 'colorLevel', 'ambient', 'diffuse', 'opacity', 'useLookupTableScalarRange']); // Object methods\n\n  vtkImageProperty(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageProperty'); // ----------------------------------------------------------------------------\n\nvar vtkImageProperty$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkImageProperty$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
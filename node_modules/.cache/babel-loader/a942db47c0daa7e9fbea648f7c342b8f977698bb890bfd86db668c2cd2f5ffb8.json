{"ast":null,"code":"import macro from '../../macros.js';\nimport addRegistrationAPI from './ProxyManager/core.js';\nimport addStateAPI from './ProxyManager/state.js';\nimport addViewHandlingAPI from './ProxyManager/view.js';\nimport addVPropertyHandlingAPI from './ProxyManager/properties.js';\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, {\n    proxyIdMapping: {},\n    proxyByGroup: {},\n    proxyConfiguration: {},\n    // { definitions: {}, representations: { viewName: { sourceType: representationName } } }\n    sv2rMapping: {},\n    // sv2rMapping[sourceId][viewId] = rep\n    r2svMapping: {},\n    // r2svMapping[representationId] = { sourceId, viewId }\n    collapseState: {},\n    lookupTables: {},\n    piecewiseFunctions: {},\n    animating: false\n  }, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['proxyConfiguration', 'activeSource', 'activeView']);\n  macro.event(publicAPI, model, 'ActiveSourceChange');\n  macro.event(publicAPI, model, 'ActiveViewChange');\n  macro.event(publicAPI, model, 'ProxyRegistrationChange');\n  addRegistrationAPI(publicAPI, model);\n  addStateAPI(publicAPI);\n  addViewHandlingAPI(publicAPI, model);\n  addVPropertyHandlingAPI(publicAPI, model); // Add proxy API\n\n  macro.proxy(publicAPI, model);\n  model.classHierarchy.push('vtkProxyManager');\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkProxyManager'); // ----------------------------------------------------------------------------\n\nvar vtkProxyManager = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkProxyManager as default, extend, newInstance };","map":{"version":3,"names":["macro","addRegistrationAPI","addStateAPI","addViewHandlingAPI","addVPropertyHandlingAPI","extend","publicAPI","model","initialValues","arguments","length","undefined","Object","assign","proxyIdMapping","proxyByGroup","proxyConfiguration","sv2rMapping","r2svMapping","collapseState","lookupTables","piecewiseFunctions","animating","obj","setGet","event","proxy","classHierarchy","push","newInstance","vtkProxyManager","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Proxy/Core/ProxyManager.js"],"sourcesContent":["import macro from '../../macros.js';\nimport addRegistrationAPI from './ProxyManager/core.js';\nimport addStateAPI from './ProxyManager/state.js';\nimport addViewHandlingAPI from './ProxyManager/view.js';\nimport addVPropertyHandlingAPI from './ProxyManager/properties.js';\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, {\n    proxyIdMapping: {},\n    proxyByGroup: {},\n    proxyConfiguration: {},\n    // { definitions: {}, representations: { viewName: { sourceType: representationName } } }\n    sv2rMapping: {},\n    // sv2rMapping[sourceId][viewId] = rep\n    r2svMapping: {},\n    // r2svMapping[representationId] = { sourceId, viewId }\n    collapseState: {},\n    lookupTables: {},\n    piecewiseFunctions: {},\n    animating: false\n  }, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['proxyConfiguration', 'activeSource', 'activeView']);\n  macro.event(publicAPI, model, 'ActiveSourceChange');\n  macro.event(publicAPI, model, 'ActiveViewChange');\n  macro.event(publicAPI, model, 'ProxyRegistrationChange');\n  addRegistrationAPI(publicAPI, model);\n  addStateAPI(publicAPI);\n  addViewHandlingAPI(publicAPI, model);\n  addVPropertyHandlingAPI(publicAPI, model); // Add proxy API\n\n  macro.proxy(publicAPI, model);\n  model.classHierarchy.push('vtkProxyManager');\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkProxyManager'); // ----------------------------------------------------------------------------\n\nvar vtkProxyManager = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkProxyManager as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAOC,kBAAkB,MAAM,wBAAwB;AACvD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,kBAAkB,MAAM,wBAAwB;AACvD,OAAOC,uBAAuB,MAAM,8BAA8B;AAElE,SAASC,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIC,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAACN,KAAK,EAAE;IACnBO,cAAc,EAAE,CAAC,CAAC;IAClBC,YAAY,EAAE,CAAC,CAAC;IAChBC,kBAAkB,EAAE,CAAC,CAAC;IACtB;IACAC,WAAW,EAAE,CAAC,CAAC;IACf;IACAC,WAAW,EAAE,CAAC,CAAC;IACf;IACAC,aAAa,EAAE,CAAC,CAAC;IACjBC,YAAY,EAAE,CAAC,CAAC;IAChBC,kBAAkB,EAAE,CAAC,CAAC;IACtBC,SAAS,EAAE;EACb,CAAC,EAAEd,aAAa,CAAC,CAAC,CAAC;;EAEnBR,KAAK,CAACuB,GAAG,CAACjB,SAAS,EAAEC,KAAK,CAAC;EAC3BP,KAAK,CAACwB,MAAM,CAAClB,SAAS,EAAEC,KAAK,EAAE,CAAC,oBAAoB,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;EACpFP,KAAK,CAACyB,KAAK,CAACnB,SAAS,EAAEC,KAAK,EAAE,oBAAoB,CAAC;EACnDP,KAAK,CAACyB,KAAK,CAACnB,SAAS,EAAEC,KAAK,EAAE,kBAAkB,CAAC;EACjDP,KAAK,CAACyB,KAAK,CAACnB,SAAS,EAAEC,KAAK,EAAE,yBAAyB,CAAC;EACxDN,kBAAkB,CAACK,SAAS,EAAEC,KAAK,CAAC;EACpCL,WAAW,CAACI,SAAS,CAAC;EACtBH,kBAAkB,CAACG,SAAS,EAAEC,KAAK,CAAC;EACpCH,uBAAuB,CAACE,SAAS,EAAEC,KAAK,CAAC,CAAC,CAAC;;EAE3CP,KAAK,CAAC0B,KAAK,CAACpB,SAAS,EAAEC,KAAK,CAAC;EAC7BA,KAAK,CAACoB,cAAc,CAACC,IAAI,CAAC,iBAAiB,CAAC;AAC9C,CAAC,CAAC;;AAEF,IAAIC,WAAW,GAAG7B,KAAK,CAAC6B,WAAW,CAACxB,MAAM,EAAE,iBAAiB,CAAC,CAAC,CAAC;;AAEhE,IAAIyB,eAAe,GAAG;EACpBD,WAAW,EAAEA,WAAW;EACxBxB,MAAM,EAAEA;AACV,CAAC;AAED,SAASyB,eAAe,IAAIC,OAAO,EAAE1B,MAAM,EAAEwB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
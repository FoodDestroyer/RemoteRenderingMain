{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkImageCropFilter from '../../Filters/General/ImageCropFilter.js';\nimport vtkImageMapper from '../../Rendering/Core/ImageMapper.js';\nimport vtkImageSlice from '../../Rendering/Core/ImageSlice.js';\nimport vtkVolume from '../../Rendering/Core/Volume.js';\nimport vtkVolumeMapper from '../../Rendering/Core/VolumeMapper.js';\nimport vtkAbstractRepresentationProxy from '../Core/AbstractRepresentationProxy.js';\nfunction sum(a, b) {\n  return a + b;\n} // ----------------------------------------------------------------------------\n\nfunction mean() {\n  for (var _len = arguments.length, array = new Array(_len), _key = 0; _key < _len; _key++) {\n    array[_key] = arguments[_key];\n  }\n  return array.reduce(sum, 0) / array.length;\n} // ----------------------------------------------------------------------------\n\nfunction updateDomains(dataset, dataArray, model, updateProp) {\n  var dataRange = dataArray.getRange();\n  var spacing = dataset.getSpacing();\n  var bounds = dataset.getBounds();\n  var _model$mapperX$getClo = model.mapperX.getClosestIJKAxis(),\n    xIJKAxis = _model$mapperX$getClo.ijkMode;\n  var _model$mapperY$getClo = model.mapperY.getClosestIJKAxis(),\n    yIJKAxis = _model$mapperY$getClo.ijkMode;\n  var _model$mapperZ$getClo = model.mapperZ.getClosestIJKAxis(),\n    zIJKAxis = _model$mapperZ$getClo.ijkMode;\n  var propToUpdate = {\n    xSlice: {\n      domain: {\n        min: bounds[0],\n        max: bounds[1],\n        step: spacing[xIJKAxis]\n      }\n    },\n    ySlice: {\n      domain: {\n        min: bounds[2],\n        max: bounds[3],\n        step: spacing[yIJKAxis]\n      }\n    },\n    zSlice: {\n      domain: {\n        min: bounds[4],\n        max: bounds[5],\n        step: spacing[zIJKAxis]\n      }\n    },\n    windowWidth: {\n      domain: {\n        min: 0,\n        max: dataRange[1] - dataRange[0],\n        step: 'any'\n      }\n    },\n    windowLevel: {\n      domain: {\n        min: dataRange[0],\n        max: dataRange[1],\n        step: 'any'\n      }\n    }\n  };\n  updateProp('xSlice', propToUpdate.xSlice);\n  updateProp('ySlice', propToUpdate.ySlice);\n  updateProp('zSlice', propToUpdate.zSlice);\n  updateProp('windowWidth', propToUpdate.windowWidth);\n  updateProp('windowLevel', propToUpdate.windowLevel);\n  return {\n    xSlice: mean(propToUpdate.xSlice.domain.min, propToUpdate.xSlice.domain.max),\n    ySlice: mean(propToUpdate.ySlice.domain.min, propToUpdate.ySlice.domain.max),\n    zSlice: mean(propToUpdate.zSlice.domain.min, propToUpdate.zSlice.domain.max),\n    windowWidth: propToUpdate.windowWidth.domain.max,\n    windowLevel: Math.floor(mean(propToUpdate.windowLevel.domain.min, propToUpdate.windowLevel.domain.max))\n  };\n} // ----------------------------------------------------------------------------\n\nfunction updateConfiguration(dataset, dataArray, _ref) {\n  _ref.mapper;\n  var property = _ref.property;\n  // Configuration\n  // actor.getProperty().setInterpolationTypeToFastLinear();\n  property.setInterpolationTypeToLinear();\n  var numberOfComponents = dataArray.getNumberOfComponents();\n  var scalarOpacityUnitDistance = vtkBoundingBox.getDiagonalLength(dataset.getBounds()) / Math.max.apply(Math, _toConsumableArray(dataset.getDimensions()));\n  for (var component = 0; component < numberOfComponents; component++) {\n    // For better looking volume rendering\n    // - distance in world coordinates a scalar opacity of 1.0\n    property.setScalarOpacityUnitDistance(component, scalarOpacityUnitDistance);\n    var dataRange = dataArray.getRange(component); // - control how we emphasize surface boundaries\n    //  => max should be around the average gradient magnitude for the\n    //     volume or maybe average plus one std dev of the gradient magnitude\n    //     (adjusted for spacing, this is a world coordinate gradient, not a\n    //     pixel gradient)\n    //  => max hack: (dataRange[1] - dataRange[0]) * 0.05\n\n    property.setGradientOpacityMinimumValue(component, 0);\n    property.setGradientOpacityMaximumValue(component, (dataRange[1] - dataRange[0]) * 0.05); // - Use shading based on gradient\n\n    property.setShade(true);\n    property.setUseGradientOpacity(component, true); // - generic good default\n\n    property.setGradientOpacityMinimumOpacity(component, 0.0);\n    property.setGradientOpacityMaximumOpacity(component, 1.0);\n  }\n  property.setAmbient(0.2);\n  property.setDiffuse(0.7);\n  property.setSpecular(0.3);\n  property.setSpecularPower(8.0);\n} // ----------------------------------------------------------------------------\n// vtkVolumeRepresentationProxy methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeRepresentationProxy(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeRepresentationProxy'); // Volume\n\n  model.mapper = vtkVolumeMapper.newInstance();\n  model.volume = vtkVolume.newInstance();\n  model.property = model.volume.getProperty();\n  model.cropFilter = vtkImageCropFilter.newInstance();\n  model.mapper.setInputConnection(model.cropFilter.getOutputPort());\n  model.sourceDependencies.push(model.cropFilter); // Slices\n\n  model.mapperX = vtkImageMapper.newInstance({\n    slicingMode: vtkImageMapper.SlicingMode.X\n  });\n  model.actorX = vtkImageSlice.newInstance({\n    visibility: false\n  });\n  model.propertySlices = model.actorX.getProperty();\n  model.mapperY = vtkImageMapper.newInstance({\n    slicingMode: vtkImageMapper.SlicingMode.Y\n  });\n  model.actorY = vtkImageSlice.newInstance({\n    visibility: false,\n    property: model.propertySlices\n  });\n  model.mapperZ = vtkImageMapper.newInstance({\n    slicingMode: vtkImageMapper.SlicingMode.Z\n  });\n  model.actorZ = vtkImageSlice.newInstance({\n    visibility: false,\n    property: model.propertySlices\n  });\n  model.mapperX.setInputConnection(model.cropFilter.getOutputPort());\n  model.mapperY.setInputConnection(model.cropFilter.getOutputPort());\n  model.mapperZ.setInputConnection(model.cropFilter.getOutputPort()); // model.sourceDependencies.push(model.mapperX);\n  // model.sourceDependencies.push(model.mapperY);\n  // model.sourceDependencies.push(model.mapperZ);\n  // connect rendering pipeline\n\n  model.volume.setMapper(model.mapper);\n  model.volumes.push(model.volume); // Connect slice pipeline\n\n  model.actorX.setMapper(model.mapperX);\n  model.actors.push(model.actorX);\n  model.actorY.setMapper(model.mapperY);\n  model.actors.push(model.actorY);\n  model.actorZ.setMapper(model.mapperZ);\n  model.actors.push(model.actorZ);\n  function setInputData(inputDataset) {\n    var _publicAPI$getColorBy = publicAPI.getColorBy(),\n      _publicAPI$getColorBy2 = _slicedToArray(_publicAPI$getColorBy, 2),\n      name = _publicAPI$getColorBy2[0],\n      location = _publicAPI$getColorBy2[1];\n    publicAPI.rescaleTransferFunctionToDataRange(name, location);\n    var lutProxy = publicAPI.getLookupTableProxy(name);\n    var pwfProxy = publicAPI.getPiecewiseFunctionProxy(name);\n    model.property.setRGBTransferFunction(0, lutProxy.getLookupTable());\n    model.property.setScalarOpacity(0, pwfProxy.getPiecewiseFunction());\n    updateConfiguration(inputDataset, publicAPI.getDataArray(), model);\n    if (model.sampleDistance < 0 || model.sampleDistance > 1) {\n      publicAPI.setSampleDistance();\n    }\n    if (model.edgeGradient < 0 || model.edgeGradient > 1) {\n      publicAPI.setEdgeGradient();\n    } // Update domains\n\n    var state = updateDomains(inputDataset, publicAPI.getDataArray(), model, publicAPI.updateProxyProperty);\n    publicAPI.set(state); // Check for 2D volumes\n\n    var numberOfDimensions = inputDataset.getDimensions().reduce(function (number, dimension) {\n      return number + (dimension > 1 ? 1 : 0);\n    }, 0);\n    if (numberOfDimensions === 2) {\n      publicAPI.setIs2DVolume(true);\n    }\n  }\n  model.sourceDependencies.push({\n    setInputData: setInputData\n  }); // API ----------------------------------------------------------------------\n\n  /**\n   *  Choose whether the input volume should be treated as a 2D volume\n   *  (no volume rendering).\n   */\n\n  publicAPI.setIs2DVolume = function (is2D) {\n    model.is2DVolume = is2D;\n    if (is2D) {\n      if (publicAPI.getVisibility()) {\n        publicAPI.setSliceVisibility(true);\n      }\n      model.volume.setVisibility(false);\n    }\n  };\n  publicAPI.isVisible = function () {\n    return model.volume.getVisibility();\n  };\n  publicAPI.setVisibility = function (isVisible) {\n    if (isVisible) {\n      if (model.is2DVolume) {\n        publicAPI.setSliceVisibility(true);\n      } else {\n        model.volume.setVisibility(true);\n      }\n    } else {\n      // Turn off everything\n      model.volume.setVisibility(false);\n      publicAPI.setSliceVisibility(false);\n    }\n  };\n  publicAPI.getVisibility = function () {\n    return model.volume.getVisibility() || publicAPI.getSliceVisibility();\n  };\n  publicAPI.isVisible = publicAPI.getVisibility;\n  publicAPI.setSliceVisibility = function (isVisible) {\n    if (isVisible && model.is2DVolume) {\n      var normalAxis = publicAPI.getInputDataSet().getDimensions().indexOf(1);\n      if (model.actors[normalAxis]) {\n        model.actors[normalAxis].setVisibility(true);\n      }\n    } else {\n      model.actors.forEach(function (actor) {\n        return actor.setVisibility(isVisible);\n      });\n    }\n  };\n  publicAPI.getSliceVisibility = function () {\n    return model.actorX.getVisibility() || model.actorY.getVisibility() || model.actorZ.getVisibility();\n  };\n  publicAPI.setSampleDistance = function () {\n    var distance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.4;\n    if (model.sampleDistance !== distance) {\n      model.sampleDistance = distance;\n      var sourceDS = publicAPI.getInputDataSet();\n      var sampleDistance = 0.7 * Math.sqrt(sourceDS.getSpacing().map(function (v) {\n        return v * v;\n      }).reduce(function (a, b) {\n        return a + b;\n      }, 0));\n      model.mapper.setSampleDistance(sampleDistance * Math.pow(2, distance * 3.0 - 1.5));\n      publicAPI.modified();\n    }\n  };\n  publicAPI.setEdgeGradient = function () {\n    var edgeGradient = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.2;\n    if (model.edgeGradient !== edgeGradient) {\n      model.edgeGradient = edgeGradient;\n      var dataArray = publicAPI.getDataArray();\n      var numberOfComponents = dataArray.getNumberOfComponents();\n      if (edgeGradient === 0) {\n        for (var component = 0; component < numberOfComponents; component++) {\n          model.volume.getProperty().setUseGradientOpacity(component, false);\n        }\n      } else {\n        for (var _component = 0; _component < numberOfComponents; _component++) {\n          var dataRange = dataArray.getRange(_component);\n          model.volume.getProperty().setUseGradientOpacity(_component, true);\n          var minV = Math.max(0.0, edgeGradient - 0.3) / 0.7;\n          if (minV > 0.0) {\n            model.volume.getProperty().setGradientOpacityMinimumValue(_component, Math.exp(Math.log((dataRange[1] - dataRange[0]) * 0.2) * minV * minV));\n          } else {\n            model.volume.getProperty().setGradientOpacityMinimumValue(_component, 0.0);\n          }\n          model.volume.getProperty().setGradientOpacityMaximumValue(_component, Math.exp(Math.log((dataRange[1] - dataRange[0]) * 1.0) * edgeGradient * edgeGradient));\n        }\n      }\n      publicAPI.modified();\n    }\n  };\n  var parentSetColorBy = publicAPI.setColorBy;\n  publicAPI.setColorBy = function (arrayName, arrayLocation) {\n    var componentIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    parentSetColorBy(arrayName, arrayLocation, componentIndex);\n    var lutProxy = publicAPI.getLookupTableProxy(arrayName);\n    var pwfProxy = publicAPI.getPiecewiseFunctionProxy(arrayName);\n    model.property.setRGBTransferFunction(0, lutProxy.getLookupTable());\n    model.property.setScalarOpacity(0, pwfProxy.getPiecewiseFunction());\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  sampleDistance: -1,\n  edgeGradient: -1,\n  disableSolidColor: true,\n  is2DVolume: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkAbstractRepresentationProxy.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['sampleDistance', 'edgeGradient', 'cropFilter', 'is2DVolume']); // Object specific methods\n\n  vtkVolumeRepresentationProxy(publicAPI, model);\n  macro.proxyPropertyMapping(publicAPI, model, {\n    xSlice: {\n      modelKey: 'mapperX',\n      property: 'slice'\n    },\n    ySlice: {\n      modelKey: 'mapperY',\n      property: 'slice'\n    },\n    zSlice: {\n      modelKey: 'mapperZ',\n      property: 'slice'\n    },\n    volumeVisibility: {\n      modelKey: 'volume',\n      property: 'visibility'\n    },\n    xSliceVisibility: {\n      modelKey: 'actorX',\n      property: 'visibility'\n    },\n    ySliceVisibility: {\n      modelKey: 'actorY',\n      property: 'visibility'\n    },\n    zSliceVisibility: {\n      modelKey: 'actorZ',\n      property: 'visibility'\n    },\n    windowWidth: {\n      modelKey: 'propertySlices',\n      property: 'colorWindow'\n    },\n    windowLevel: {\n      modelKey: 'propertySlices',\n      property: 'colorLevel'\n    },\n    useShadow: {\n      modelKey: 'property',\n      property: 'shade'\n    },\n    croppingPlanes: {\n      modelKey: 'cropFilter',\n      property: 'croppingPlanes'\n    }\n  });\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeRepresentationProxy'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeRepresentationProxy$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  updateConfiguration: updateConfiguration\n};\nexport { vtkVolumeRepresentationProxy$1 as default, extend, newInstance };","map":{"version":3,"names":["_slicedToArray","_toConsumableArray","macro","vtkBoundingBox","vtkImageCropFilter","vtkImageMapper","vtkImageSlice","vtkVolume","vtkVolumeMapper","vtkAbstractRepresentationProxy","sum","a","b","mean","_len","arguments","length","array","Array","_key","reduce","updateDomains","dataset","dataArray","model","updateProp","dataRange","getRange","spacing","getSpacing","bounds","getBounds","_model$mapperX$getClo","mapperX","getClosestIJKAxis","xIJKAxis","ijkMode","_model$mapperY$getClo","mapperY","yIJKAxis","_model$mapperZ$getClo","mapperZ","zIJKAxis","propToUpdate","xSlice","domain","min","max","step","ySlice","zSlice","windowWidth","windowLevel","Math","floor","updateConfiguration","_ref","mapper","property","setInterpolationTypeToLinear","numberOfComponents","getNumberOfComponents","scalarOpacityUnitDistance","getDiagonalLength","apply","getDimensions","component","setScalarOpacityUnitDistance","setGradientOpacityMinimumValue","setGradientOpacityMaximumValue","setShade","setUseGradientOpacity","setGradientOpacityMinimumOpacity","setGradientOpacityMaximumOpacity","setAmbient","setDiffuse","setSpecular","setSpecularPower","vtkVolumeRepresentationProxy","publicAPI","classHierarchy","push","newInstance","volume","getProperty","cropFilter","setInputConnection","getOutputPort","sourceDependencies","slicingMode","SlicingMode","X","actorX","visibility","propertySlices","Y","actorY","Z","actorZ","setMapper","volumes","actors","setInputData","inputDataset","_publicAPI$getColorBy","getColorBy","_publicAPI$getColorBy2","name","location","rescaleTransferFunctionToDataRange","lutProxy","getLookupTableProxy","pwfProxy","getPiecewiseFunctionProxy","setRGBTransferFunction","getLookupTable","setScalarOpacity","getPiecewiseFunction","getDataArray","sampleDistance","setSampleDistance","edgeGradient","setEdgeGradient","state","updateProxyProperty","set","numberOfDimensions","number","dimension","setIs2DVolume","is2D","is2DVolume","getVisibility","setSliceVisibility","setVisibility","isVisible","getSliceVisibility","normalAxis","getInputDataSet","indexOf","forEach","actor","distance","undefined","sourceDS","sqrt","map","v","pow","modified","_component","minV","exp","log","parentSetColorBy","setColorBy","arrayName","arrayLocation","componentIndex","DEFAULT_VALUES","disableSolidColor","extend","initialValues","Object","assign","get","proxyPropertyMapping","modelKey","volumeVisibility","xSliceVisibility","ySliceVisibility","zSliceVisibility","useShadow","croppingPlanes","vtkVolumeRepresentationProxy$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Proxy/Representations/VolumeRepresentationProxy.js"],"sourcesContent":["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkImageCropFilter from '../../Filters/General/ImageCropFilter.js';\nimport vtkImageMapper from '../../Rendering/Core/ImageMapper.js';\nimport vtkImageSlice from '../../Rendering/Core/ImageSlice.js';\nimport vtkVolume from '../../Rendering/Core/Volume.js';\nimport vtkVolumeMapper from '../../Rendering/Core/VolumeMapper.js';\nimport vtkAbstractRepresentationProxy from '../Core/AbstractRepresentationProxy.js';\n\nfunction sum(a, b) {\n  return a + b;\n} // ----------------------------------------------------------------------------\n\n\nfunction mean() {\n  for (var _len = arguments.length, array = new Array(_len), _key = 0; _key < _len; _key++) {\n    array[_key] = arguments[_key];\n  }\n\n  return array.reduce(sum, 0) / array.length;\n} // ----------------------------------------------------------------------------\n\n\nfunction updateDomains(dataset, dataArray, model, updateProp) {\n  var dataRange = dataArray.getRange();\n  var spacing = dataset.getSpacing();\n  var bounds = dataset.getBounds();\n\n  var _model$mapperX$getClo = model.mapperX.getClosestIJKAxis(),\n      xIJKAxis = _model$mapperX$getClo.ijkMode;\n\n  var _model$mapperY$getClo = model.mapperY.getClosestIJKAxis(),\n      yIJKAxis = _model$mapperY$getClo.ijkMode;\n\n  var _model$mapperZ$getClo = model.mapperZ.getClosestIJKAxis(),\n      zIJKAxis = _model$mapperZ$getClo.ijkMode;\n\n  var propToUpdate = {\n    xSlice: {\n      domain: {\n        min: bounds[0],\n        max: bounds[1],\n        step: spacing[xIJKAxis]\n      }\n    },\n    ySlice: {\n      domain: {\n        min: bounds[2],\n        max: bounds[3],\n        step: spacing[yIJKAxis]\n      }\n    },\n    zSlice: {\n      domain: {\n        min: bounds[4],\n        max: bounds[5],\n        step: spacing[zIJKAxis]\n      }\n    },\n    windowWidth: {\n      domain: {\n        min: 0,\n        max: dataRange[1] - dataRange[0],\n        step: 'any'\n      }\n    },\n    windowLevel: {\n      domain: {\n        min: dataRange[0],\n        max: dataRange[1],\n        step: 'any'\n      }\n    }\n  };\n  updateProp('xSlice', propToUpdate.xSlice);\n  updateProp('ySlice', propToUpdate.ySlice);\n  updateProp('zSlice', propToUpdate.zSlice);\n  updateProp('windowWidth', propToUpdate.windowWidth);\n  updateProp('windowLevel', propToUpdate.windowLevel);\n  return {\n    xSlice: mean(propToUpdate.xSlice.domain.min, propToUpdate.xSlice.domain.max),\n    ySlice: mean(propToUpdate.ySlice.domain.min, propToUpdate.ySlice.domain.max),\n    zSlice: mean(propToUpdate.zSlice.domain.min, propToUpdate.zSlice.domain.max),\n    windowWidth: propToUpdate.windowWidth.domain.max,\n    windowLevel: Math.floor(mean(propToUpdate.windowLevel.domain.min, propToUpdate.windowLevel.domain.max))\n  };\n} // ----------------------------------------------------------------------------\n\n\nfunction updateConfiguration(dataset, dataArray, _ref) {\n  _ref.mapper;\n      var property = _ref.property;\n  // Configuration\n  // actor.getProperty().setInterpolationTypeToFastLinear();\n  property.setInterpolationTypeToLinear();\n  var numberOfComponents = dataArray.getNumberOfComponents();\n  var scalarOpacityUnitDistance = vtkBoundingBox.getDiagonalLength(dataset.getBounds()) / Math.max.apply(Math, _toConsumableArray(dataset.getDimensions()));\n\n  for (var component = 0; component < numberOfComponents; component++) {\n    // For better looking volume rendering\n    // - distance in world coordinates a scalar opacity of 1.0\n    property.setScalarOpacityUnitDistance(component, scalarOpacityUnitDistance);\n    var dataRange = dataArray.getRange(component); // - control how we emphasize surface boundaries\n    //  => max should be around the average gradient magnitude for the\n    //     volume or maybe average plus one std dev of the gradient magnitude\n    //     (adjusted for spacing, this is a world coordinate gradient, not a\n    //     pixel gradient)\n    //  => max hack: (dataRange[1] - dataRange[0]) * 0.05\n\n    property.setGradientOpacityMinimumValue(component, 0);\n    property.setGradientOpacityMaximumValue(component, (dataRange[1] - dataRange[0]) * 0.05); // - Use shading based on gradient\n\n    property.setShade(true);\n    property.setUseGradientOpacity(component, true); // - generic good default\n\n    property.setGradientOpacityMinimumOpacity(component, 0.0);\n    property.setGradientOpacityMaximumOpacity(component, 1.0);\n  }\n\n  property.setAmbient(0.2);\n  property.setDiffuse(0.7);\n  property.setSpecular(0.3);\n  property.setSpecularPower(8.0);\n} // ----------------------------------------------------------------------------\n// vtkVolumeRepresentationProxy methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkVolumeRepresentationProxy(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeRepresentationProxy'); // Volume\n\n  model.mapper = vtkVolumeMapper.newInstance();\n  model.volume = vtkVolume.newInstance();\n  model.property = model.volume.getProperty();\n  model.cropFilter = vtkImageCropFilter.newInstance();\n  model.mapper.setInputConnection(model.cropFilter.getOutputPort());\n  model.sourceDependencies.push(model.cropFilter); // Slices\n\n  model.mapperX = vtkImageMapper.newInstance({\n    slicingMode: vtkImageMapper.SlicingMode.X\n  });\n  model.actorX = vtkImageSlice.newInstance({\n    visibility: false\n  });\n  model.propertySlices = model.actorX.getProperty();\n  model.mapperY = vtkImageMapper.newInstance({\n    slicingMode: vtkImageMapper.SlicingMode.Y\n  });\n  model.actorY = vtkImageSlice.newInstance({\n    visibility: false,\n    property: model.propertySlices\n  });\n  model.mapperZ = vtkImageMapper.newInstance({\n    slicingMode: vtkImageMapper.SlicingMode.Z\n  });\n  model.actorZ = vtkImageSlice.newInstance({\n    visibility: false,\n    property: model.propertySlices\n  });\n  model.mapperX.setInputConnection(model.cropFilter.getOutputPort());\n  model.mapperY.setInputConnection(model.cropFilter.getOutputPort());\n  model.mapperZ.setInputConnection(model.cropFilter.getOutputPort()); // model.sourceDependencies.push(model.mapperX);\n  // model.sourceDependencies.push(model.mapperY);\n  // model.sourceDependencies.push(model.mapperZ);\n  // connect rendering pipeline\n\n  model.volume.setMapper(model.mapper);\n  model.volumes.push(model.volume); // Connect slice pipeline\n\n  model.actorX.setMapper(model.mapperX);\n  model.actors.push(model.actorX);\n  model.actorY.setMapper(model.mapperY);\n  model.actors.push(model.actorY);\n  model.actorZ.setMapper(model.mapperZ);\n  model.actors.push(model.actorZ);\n\n  function setInputData(inputDataset) {\n    var _publicAPI$getColorBy = publicAPI.getColorBy(),\n        _publicAPI$getColorBy2 = _slicedToArray(_publicAPI$getColorBy, 2),\n        name = _publicAPI$getColorBy2[0],\n        location = _publicAPI$getColorBy2[1];\n\n    publicAPI.rescaleTransferFunctionToDataRange(name, location);\n    var lutProxy = publicAPI.getLookupTableProxy(name);\n    var pwfProxy = publicAPI.getPiecewiseFunctionProxy(name);\n    model.property.setRGBTransferFunction(0, lutProxy.getLookupTable());\n    model.property.setScalarOpacity(0, pwfProxy.getPiecewiseFunction());\n    updateConfiguration(inputDataset, publicAPI.getDataArray(), model);\n\n    if (model.sampleDistance < 0 || model.sampleDistance > 1) {\n      publicAPI.setSampleDistance();\n    }\n\n    if (model.edgeGradient < 0 || model.edgeGradient > 1) {\n      publicAPI.setEdgeGradient();\n    } // Update domains\n\n\n    var state = updateDomains(inputDataset, publicAPI.getDataArray(), model, publicAPI.updateProxyProperty);\n    publicAPI.set(state); // Check for 2D volumes\n\n    var numberOfDimensions = inputDataset.getDimensions().reduce(function (number, dimension) {\n      return number + (dimension > 1 ? 1 : 0);\n    }, 0);\n\n    if (numberOfDimensions === 2) {\n      publicAPI.setIs2DVolume(true);\n    }\n  }\n\n  model.sourceDependencies.push({\n    setInputData: setInputData\n  }); // API ----------------------------------------------------------------------\n\n  /**\n   *  Choose whether the input volume should be treated as a 2D volume\n   *  (no volume rendering).\n   */\n\n  publicAPI.setIs2DVolume = function (is2D) {\n    model.is2DVolume = is2D;\n\n    if (is2D) {\n      if (publicAPI.getVisibility()) {\n        publicAPI.setSliceVisibility(true);\n      }\n\n      model.volume.setVisibility(false);\n    }\n  };\n\n  publicAPI.isVisible = function () {\n    return model.volume.getVisibility();\n  };\n\n  publicAPI.setVisibility = function (isVisible) {\n    if (isVisible) {\n      if (model.is2DVolume) {\n        publicAPI.setSliceVisibility(true);\n      } else {\n        model.volume.setVisibility(true);\n      }\n    } else {\n      // Turn off everything\n      model.volume.setVisibility(false);\n      publicAPI.setSliceVisibility(false);\n    }\n  };\n\n  publicAPI.getVisibility = function () {\n    return model.volume.getVisibility() || publicAPI.getSliceVisibility();\n  };\n\n  publicAPI.isVisible = publicAPI.getVisibility;\n\n  publicAPI.setSliceVisibility = function (isVisible) {\n    if (isVisible && model.is2DVolume) {\n      var normalAxis = publicAPI.getInputDataSet().getDimensions().indexOf(1);\n\n      if (model.actors[normalAxis]) {\n        model.actors[normalAxis].setVisibility(true);\n      }\n    } else {\n      model.actors.forEach(function (actor) {\n        return actor.setVisibility(isVisible);\n      });\n    }\n  };\n\n  publicAPI.getSliceVisibility = function () {\n    return model.actorX.getVisibility() || model.actorY.getVisibility() || model.actorZ.getVisibility();\n  };\n\n  publicAPI.setSampleDistance = function () {\n    var distance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.4;\n\n    if (model.sampleDistance !== distance) {\n      model.sampleDistance = distance;\n      var sourceDS = publicAPI.getInputDataSet();\n      var sampleDistance = 0.7 * Math.sqrt(sourceDS.getSpacing().map(function (v) {\n        return v * v;\n      }).reduce(function (a, b) {\n        return a + b;\n      }, 0));\n      model.mapper.setSampleDistance(sampleDistance * Math.pow(2, distance * 3.0 - 1.5));\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setEdgeGradient = function () {\n    var edgeGradient = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.2;\n\n    if (model.edgeGradient !== edgeGradient) {\n      model.edgeGradient = edgeGradient;\n      var dataArray = publicAPI.getDataArray();\n      var numberOfComponents = dataArray.getNumberOfComponents();\n\n      if (edgeGradient === 0) {\n        for (var component = 0; component < numberOfComponents; component++) {\n          model.volume.getProperty().setUseGradientOpacity(component, false);\n        }\n      } else {\n        for (var _component = 0; _component < numberOfComponents; _component++) {\n          var dataRange = dataArray.getRange(_component);\n          model.volume.getProperty().setUseGradientOpacity(_component, true);\n          var minV = Math.max(0.0, edgeGradient - 0.3) / 0.7;\n\n          if (minV > 0.0) {\n            model.volume.getProperty().setGradientOpacityMinimumValue(_component, Math.exp(Math.log((dataRange[1] - dataRange[0]) * 0.2) * minV * minV));\n          } else {\n            model.volume.getProperty().setGradientOpacityMinimumValue(_component, 0.0);\n          }\n\n          model.volume.getProperty().setGradientOpacityMaximumValue(_component, Math.exp(Math.log((dataRange[1] - dataRange[0]) * 1.0) * edgeGradient * edgeGradient));\n        }\n      }\n\n      publicAPI.modified();\n    }\n  };\n\n  var parentSetColorBy = publicAPI.setColorBy;\n\n  publicAPI.setColorBy = function (arrayName, arrayLocation) {\n    var componentIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    parentSetColorBy(arrayName, arrayLocation, componentIndex);\n    var lutProxy = publicAPI.getLookupTableProxy(arrayName);\n    var pwfProxy = publicAPI.getPiecewiseFunctionProxy(arrayName);\n    model.property.setRGBTransferFunction(0, lutProxy.getLookupTable());\n    model.property.setScalarOpacity(0, pwfProxy.getPiecewiseFunction());\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  sampleDistance: -1,\n  edgeGradient: -1,\n  disableSolidColor: true,\n  is2DVolume: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkAbstractRepresentationProxy.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['sampleDistance', 'edgeGradient', 'cropFilter', 'is2DVolume']); // Object specific methods\n\n  vtkVolumeRepresentationProxy(publicAPI, model);\n  macro.proxyPropertyMapping(publicAPI, model, {\n    xSlice: {\n      modelKey: 'mapperX',\n      property: 'slice'\n    },\n    ySlice: {\n      modelKey: 'mapperY',\n      property: 'slice'\n    },\n    zSlice: {\n      modelKey: 'mapperZ',\n      property: 'slice'\n    },\n    volumeVisibility: {\n      modelKey: 'volume',\n      property: 'visibility'\n    },\n    xSliceVisibility: {\n      modelKey: 'actorX',\n      property: 'visibility'\n    },\n    ySliceVisibility: {\n      modelKey: 'actorY',\n      property: 'visibility'\n    },\n    zSliceVisibility: {\n      modelKey: 'actorZ',\n      property: 'visibility'\n    },\n    windowWidth: {\n      modelKey: 'propertySlices',\n      property: 'colorWindow'\n    },\n    windowLevel: {\n      modelKey: 'propertySlices',\n      property: 'colorLevel'\n    },\n    useShadow: {\n      modelKey: 'property',\n      property: 'shade'\n    },\n    croppingPlanes: {\n      modelKey: 'cropFilter',\n      property: 'croppingPlanes'\n    }\n  });\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeRepresentationProxy'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeRepresentationProxy$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  updateConfiguration: updateConfiguration\n};\n\nexport { vtkVolumeRepresentationProxy$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUDevice from './Device.js';\nimport vtkWebGPUHardwareSelector from './HardwareSelector.js';\nimport vtkWebGPUViewNodeFactory from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\nimport HalfFloat from '../../Common/Core/HalfFloat.js';\nvar vtkErrorMacro = macro.vtkErrorMacro; // const IS_CHROME = navigator.userAgent.indexOf('Chrome') !== -1;\n\nvar SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n}; // ----------------------------------------------------------------------------\n// vtkWebGPURenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPURenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPURenderWindow');\n  publicAPI.getViewNodeFactory = function () {\n    return model.myFactory;\n  }; // Auto update style\n\n  var previousSize = [0, 0];\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n        publicAPI.recreateSwapChain();\n      }\n    } // ImageStream size\n\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    } // Offscreen ?\n\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block'; // Cursor type\n\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    } // Invalidate cached DOM container size\n\n    model.containerSize = null;\n  }\n  publicAPI.onModified(updateWindow);\n  publicAPI.recreateSwapChain = function () {\n    if (model.context) {\n      model.context.unconfigure();\n      model.presentationFormat = navigator.gpu.getPreferredCanvasFormat(model.adapter);\n      /* eslint-disable no-undef */\n\n      /* eslint-disable no-bitwise */\n\n      model.context.configure({\n        device: model.device.getHandle(),\n        format: model.presentationFormat,\n        alphaMode: 'premultiplied',\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,\n        width: model.size[0],\n        height: model.size[1]\n      });\n      model._configured = true;\n    }\n  };\n  publicAPI.getCurrentTexture = function () {\n    return model.context.getCurrentTexture();\n  }; // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n    } else if (model.initialized) {\n      if (!model._configured) {\n        publicAPI.recreateSwapChain();\n      }\n      model.commandEncoder = model.device.createCommandEncoder();\n    }\n  }; // publicAPI.traverseRenderers = (renPass) => {\n  //   // iterate over renderers\n  //   const numlayers = publicAPI.getRenderable().getNumberOfLayers();\n  //   const renderers = publicAPI.getChildren();\n  //   for (let i = 0; i < numlayers; i++) {\n  //     for (let index = 0; index < renderers.length; index++) {\n  //       const renNode = renderers[index];\n  //       const ren = publicAPI.getRenderable().getRenderers()[index];\n  //       if (ren.getDraw() && ren.getLayer() === i) {\n  //         renNode.traverse(renPass);\n  //       }\n  //     }\n  //   }\n  // };\n\n  publicAPI.initialize = function () {\n    if (!model.initializing) {\n      model.initializing = true;\n      if (!navigator.gpu) {\n        vtkErrorMacro('WebGPU is not enabled.');\n        return;\n      }\n      publicAPI.create3DContextAsync().then(function () {\n        model.initialized = true;\n        if (model.deleted) {\n          return;\n        }\n        publicAPI.invokeInitialized();\n      });\n    }\n  };\n  publicAPI.setContainer = function (el) {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      } // Remove canvas from previous container\n\n      model.el.removeChild(model.canvas); // If the renderer has previously added\n      // a background image, remove it from the DOM.\n\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n    if (model.el !== el) {\n      model.el = el;\n      if (model.el) {\n        model.el.appendChild(model.canvas); // If the renderer is set to use a background\n        // image, attach it to the DOM.\n\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      } // Trigger modified()\n\n      publicAPI.modified();\n    }\n  };\n  publicAPI.getContainer = function () {\n    return model.el;\n  };\n  publicAPI.getContainerSize = function () {\n    if (!model.containerSize && model.el) {\n      var _model$el$getBounding = model.el.getBoundingClientRect(),\n        width = _model$el$getBounding.width,\n        height = _model$el$getBounding.height;\n      model.containerSize = [width, height];\n    }\n    return model.containerSize || model.size;\n  };\n  publicAPI.getFramebufferSize = function () {\n    return model.size;\n  };\n  publicAPI.create3DContextAsync = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return navigator.gpu.requestAdapter({\n              powerPreference: 'high-performance'\n            });\n          case 2:\n            model.adapter = _context.sent;\n            if (!model.deleted) {\n              _context.next = 5;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 5:\n            // console.log([...model.adapter.features]);\n            model.device = vtkWebGPUDevice.newInstance();\n            _context.t0 = model.device;\n            _context.next = 9;\n            return model.adapter.requestDevice();\n          case 9:\n            _context.t1 = _context.sent;\n            _context.t0.initialize.call(_context.t0, _context.t1);\n            if (!model.deleted) {\n              _context.next = 14;\n              break;\n            }\n            model.device = null;\n            return _context.abrupt(\"return\");\n          case 14:\n            // model.device.getHandle().lost.then((info) => {\n            //   console.log(`${info.message}`);\n            //   publicAPI.releaseGraphicsResources();\n            // });\n            model.context = model.canvas.getContext('webgpu');\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  publicAPI.releaseGraphicsResources = function () {\n    var rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n    model.adapter = null;\n    model.device = null;\n    model.context = null;\n    model.initialized = false;\n    model.initializing = false;\n  };\n  publicAPI.setBackgroundImage = function (img) {\n    model.bgImage.src = img.src;\n  };\n  publicAPI.setUseBackgroundImage = function (value) {\n    model.useBackgroundImage = value; // Add or remove the background image from the\n    // DOM as specified.\n\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n  function getCanvasDataURL() {\n    return _getCanvasDataURL.apply(this, arguments);\n  }\n  function _getCanvasDataURL() {\n    _getCanvasDataURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var format,\n        temporaryCanvas,\n        temporaryContext,\n        result,\n        imageData,\n        mainBoundingClientRect,\n        renderWindow,\n        renderers,\n        screenshot,\n        _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              format = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : model.imageFormat;\n              // Copy current canvas to not modify the original\n              temporaryCanvas = document.createElement('canvas');\n              temporaryContext = temporaryCanvas.getContext('2d');\n              temporaryCanvas.width = model.canvas.width;\n              temporaryCanvas.height = model.canvas.height;\n              _context3.next = 7;\n              return publicAPI.getPixelsAsync();\n            case 7:\n              result = _context3.sent;\n              imageData = new ImageData(result.colorValues, result.width, result.height); // temporaryCanvas.putImageData(imageData, 0, 0);\n\n              temporaryContext.putImageData(imageData, 0, 0); // Get current client rect to place canvas\n\n              mainBoundingClientRect = model.canvas.getBoundingClientRect();\n              renderWindow = model.renderable;\n              renderers = renderWindow.getRenderers();\n              renderers.forEach(function (renderer) {\n                var viewProps = renderer.getViewProps();\n                viewProps.forEach(function (viewProp) {\n                  // Check if the prop has a container that should have canvas\n                  if (viewProp.getContainer) {\n                    var container = viewProp.getContainer();\n                    var canvasList = container.getElementsByTagName('canvas'); // Go throughout all canvas and copy it into temporary main canvas\n\n                    for (var i = 0; i < canvasList.length; i++) {\n                      var currentCanvas = canvasList[i];\n                      var boundingClientRect = currentCanvas.getBoundingClientRect();\n                      var newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n                      var newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n                      temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n                    }\n                  }\n                });\n              });\n              screenshot = temporaryCanvas.toDataURL(format);\n              temporaryCanvas.remove();\n              publicAPI.invokeImageReady(screenshot);\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getCanvasDataURL.apply(this, arguments);\n  }\n  publicAPI.captureNextImage = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$resetCamera = _ref2.resetCamera,\n      resetCamera = _ref2$resetCamera === void 0 ? false : _ref2$resetCamera,\n      _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? null : _ref2$size,\n      _ref2$scale = _ref2.scale,\n      scale = _ref2$scale === void 0 ? 1 : _ref2$scale;\n    if (model.deleted) {\n      return null;\n    }\n    model.imageFormat = format;\n    var previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(function (val) {\n        return val * scale;\n      }) : null\n    };\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onImageReady(function (imageURL) {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize; // process the resize\n\n            publicAPI.modified(); // restore the saved camera parameters, if applicable\n\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(function (_ref3) {\n                var restoreParamsFn = _ref3.restoreParamsFn,\n                  arg = _ref3.arg;\n                return restoreParamsFn(arg);\n              });\n            } // Trigger a render at the original size\n\n            publicAPI.traverseAllPasses(); // Remove and clean up the placeholder, revealing the original\n\n            model.el.removeChild(model._screenshot.placeHolder);\n            model._screenshot.placeHolder.remove();\n            model._screenshot = null;\n          }\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          var tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg); // hide the main canvas\n\n          model.canvas.style.display = 'none'; // remember the main canvas original size, then resize it\n\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model._screenshot.size = null; // process the resize\n\n          publicAPI.modified();\n          if (resetCamera) {\n            var isUserResetCamera = resetCamera !== true; // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n\n            model._screenshot.cameras = model.renderable.getRenderers().map(function (renderer) {\n              var camera = renderer.getActiveCamera();\n              var params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer: renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            }); // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n\n            model._screenshot.cameras.forEach(function (_ref4) {\n              var resetCameraFn = _ref4.resetCameraFn,\n                resetCameraArgs = _ref4.resetCameraArgs;\n              return resetCameraFn(resetCameraArgs);\n            });\n          } // Trigger a render at the custom size\n\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n  publicAPI.traverseAllPasses = function () {\n    if (model.deleted) {\n      return;\n    } // if we are not initialized then we call initialize\n    // which is async so we will not actually get a render\n    // so we queue up another traverse for when we are initialized\n\n    if (!model.initialized) {\n      publicAPI.initialize();\n      var subscription = publicAPI.onInitialized(function () {\n        subscription.unsubscribe();\n        publicAPI.traverseAllPasses();\n      });\n    } else {\n      if (model.renderPasses) {\n        for (var index = 0; index < model.renderPasses.length; ++index) {\n          model.renderPasses[index].traverse(publicAPI, null);\n        }\n      }\n      if (model.commandEncoder) {\n        model.device.submitCommandEncoder(model.commandEncoder);\n        model.commandEncoder = null;\n        if (model.notifyStartCaptureImage) {\n          model.device.onSubmittedWorkDone().then(function () {\n            getCanvasDataURL();\n          });\n        }\n      }\n    }\n  };\n  publicAPI.setViewStream = function (stream) {\n    if (model.viewStream === stream) {\n      return false;\n    }\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n    model.viewStream = stream;\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      var mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0; // Enable display of the background image\n\n      publicAPI.setUseBackgroundImage(true); // Bind to remote stream\n\n      model.subscription = model.viewStream.onImageReady(function (e) {\n        return publicAPI.setBackgroundImage(e.image);\n      });\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n    return true;\n  };\n  publicAPI.getUniquePropID = function () {\n    return model.nextPropID++;\n  };\n  publicAPI.getPropFromID = function (id) {\n    for (var i = 0; i < model.children.length; i++) {\n      var res = model.children[i].getPropFromID(id);\n      if (res !== null) {\n        return res;\n      }\n    }\n    return null;\n  };\n  publicAPI.getPixelsAsync = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var device, texture, result, colorBuffer, cmdEnc, cLoad, tmparray, y, x, doffset, soffset;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            device = model.device;\n            texture = model.renderPasses[0].getOpaquePass().getColorTexture(); // as this is async we really don't want to store things in\n            // the class as multiple calls may start before resolving\n            // so anything specific to this request gets put into the\n            // result object (by value in most cases)\n\n            result = {\n              width: texture.getWidth(),\n              height: texture.getHeight()\n            }; // must be a multiple of 256 bytes, so 32 texels with rgba16\n\n            result.colorBufferWidth = 32 * Math.floor((result.width + 31) / 32);\n            result.colorBufferSizeInBytes = result.colorBufferWidth * result.height * 8;\n            colorBuffer = vtkWebGPUBuffer.newInstance();\n            colorBuffer.setDevice(device);\n            /* eslint-disable no-bitwise */\n\n            /* eslint-disable no-undef */\n\n            colorBuffer.create(result.colorBufferSizeInBytes, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n            /* eslint-enable no-bitwise */\n\n            /* eslint-enable no-undef */\n\n            cmdEnc = model.device.createCommandEncoder();\n            cmdEnc.copyTextureToBuffer({\n              texture: texture.getHandle()\n            }, {\n              buffer: colorBuffer.getHandle(),\n              bytesPerRow: 8 * result.colorBufferWidth,\n              rowsPerImage: result.height\n            }, {\n              width: result.width,\n              height: result.height,\n              depthOrArrayLayers: 1\n            });\n            device.submitCommandEncoder(cmdEnc);\n            /* eslint-disable no-undef */\n\n            cLoad = colorBuffer.mapAsync(GPUMapMode.READ);\n            _context2.next = 14;\n            return cLoad;\n          case 14:\n            /* eslint-enable no-undef */\n            result.colorValues = new Uint16Array(colorBuffer.getMappedRange().slice());\n            colorBuffer.unmap(); // repack the array\n\n            tmparray = new Uint8ClampedArray(result.height * result.width * 4);\n            for (y = 0; y < result.height; y++) {\n              for (x = 0; x < result.width; x++) {\n                doffset = (y * result.width + x) * 4;\n                soffset = (y * result.colorBufferWidth + x) * 4;\n                tmparray[doffset] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset]);\n                tmparray[doffset + 1] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 1]);\n                tmparray[doffset + 2] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 2]);\n                tmparray[doffset + 3] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 3]);\n              }\n            }\n            result.colorValues = tmparray;\n            return _context2.abrupt(\"return\", result);\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  publicAPI.createSelector = function () {\n    var ret = vtkWebGPUHardwareSelector.newInstance();\n    ret.setWebGPURenderWindow(publicAPI);\n    return ret;\n  };\n  publicAPI.delete = macro.chain(publicAPI.delete, publicAPI.setViewStream);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  initialized: false,\n  context: null,\n  adapter: null,\n  device: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false,\n  nextPropID: 1,\n  xrSupported: false,\n  presentationFormat: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Create internal instances\n\n  model.canvas = document.createElement('canvas');\n  model.canvas.style.width = '100%'; // Create internal bgImage\n\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1'; // Inheritance\n\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues);\n  model.myFactory = vtkWebGPUViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n  // setup default forward pass rendering\n\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n  if (!model.selector) {\n    model.selector = vtkWebGPUHardwareSelector.newInstance();\n    model.selector.setWebGPURenderWindow(publicAPI);\n  }\n  macro.event(publicAPI, model, 'imageReady');\n  macro.event(publicAPI, model, 'initialized'); // Build VTK API\n\n  macro.get(publicAPI, model, ['commandEncoder', 'device', 'presentationFormat', 'useBackgroundImage', 'xrSupported']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'device', 'renderPasses', 'notifyStartCaptureImage', 'cursor', 'useOffScreen']);\n  macro.setGetArray(publicAPI, model, ['size'], 2); // Object methods\n\n  vtkWebGPURenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPURenderWindow'); // ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGPU', newInstance); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkRenderWindow as default, extend, newInstance };","map":{"version":3,"names":["_asyncToGenerator","_regeneratorRuntime","macro","registerViewConstructor","vtkForwardPass","vtkWebGPUBuffer","vtkWebGPUDevice","vtkWebGPUHardwareSelector","vtkWebGPUViewNodeFactory","vtkRenderPass","vtkRenderWindowViewNode","HalfFloat","vtkErrorMacro","SCREENSHOT_PLACEHOLDER","position","top","left","width","height","vtkWebGPURenderWindow","publicAPI","model","classHierarchy","push","getViewNodeFactory","myFactory","previousSize","updateWindow","renderable","size","canvas","setAttribute","recreateSwapChain","viewStream","setSize","style","display","useOffScreen","el","cursor","cursorVisibility","containerSize","onModified","context","unconfigure","presentationFormat","navigator","gpu","getPreferredCanvasFormat","adapter","configure","device","getHandle","format","alphaMode","usage","GPUTextureUsage","RENDER_ATTACHMENT","COPY_DST","_configured","getCurrentTexture","buildPass","prepass","prepareNodes","addMissingNodes","getRenderersByReference","removeUnusedNodes","initialize","initialized","commandEncoder","createCommandEncoder","initializing","create3DContextAsync","then","deleted","invokeInitialized","setContainer","parentNode","removeChild","contains","bgImage","appendChild","useBackgroundImage","modified","getContainer","getContainerSize","_model$el$getBounding","getBoundingClientRect","getFramebufferSize","mark","_callee","wrap","_callee$","_context","prev","next","requestAdapter","powerPreference","sent","abrupt","newInstance","t0","requestDevice","t1","call","getContext","stop","releaseGraphicsResources","rp","setCurrentOperation","traverse","setBackgroundImage","img","src","setUseBackgroundImage","value","getCanvasDataURL","_getCanvasDataURL","apply","arguments","_callee3","temporaryCanvas","temporaryContext","result","imageData","mainBoundingClientRect","renderWindow","renderers","screenshot","_args3","_callee3$","_context3","length","undefined","imageFormat","document","createElement","getPixelsAsync","ImageData","colorValues","putImageData","getRenderers","forEach","renderer","viewProps","getViewProps","viewProp","container","canvasList","getElementsByTagName","i","currentCanvas","boundingClientRect","newXPosition","x","newYPosition","y","drawImage","toDataURL","remove","invokeImageReady","captureNextImage","_ref2","_ref2$resetCamera","resetCamera","_ref2$size","_ref2$scale","scale","previous","notifyStartCaptureImage","_screenshot","map","val","Promise","resolve","reject","subscription","onImageReady","imageURL","unsubscribe","placeHolder","originalSize","cameras","_ref3","restoreParamsFn","arg","traverseAllPasses","tmpImg","isUserResetCamera","camera","getActiveCamera","params","get","resetCameraArgs","resetCameraFn","set","JSON","parse","stringify","_ref4","onInitialized","renderPasses","index","submitCommandEncoder","onSubmittedWorkDone","setViewStream","stream","mainRenderer","getBackgroundByReference","e","image","invalidateCache","render","getUniquePropID","nextPropID","getPropFromID","id","children","res","_callee2","texture","colorBuffer","cmdEnc","cLoad","tmparray","doffset","soffset","_callee2$","_context2","getOpaquePass","getColorTexture","getWidth","getHeight","colorBufferWidth","Math","floor","colorBufferSizeInBytes","setDevice","create","GPUBufferUsage","MAP_READ","copyTextureToBuffer","buffer","bytesPerRow","rowsPerImage","depthOrArrayLayers","mapAsync","GPUMapMode","READ","Uint16Array","getMappedRange","slice","unmap","Uint8ClampedArray","fromHalf","createSelector","ret","setWebGPURenderWindow","delete","chain","DEFAULT_VALUES","xrSupported","extend","initialValues","Object","assign","Image","zIndex","registerOverride","selector","event","setGet","setGetArray","vtkRenderWindow","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderWindow.js"],"sourcesContent":["import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUDevice from './Device.js';\nimport vtkWebGPUHardwareSelector from './HardwareSelector.js';\nimport vtkWebGPUViewNodeFactory from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\nimport HalfFloat from '../../Common/Core/HalfFloat.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // const IS_CHROME = navigator.userAgent.indexOf('Chrome') !== -1;\n\nvar SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n}; // ----------------------------------------------------------------------------\n// vtkWebGPURenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPURenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPURenderWindow');\n\n  publicAPI.getViewNodeFactory = function () {\n    return model.myFactory;\n  }; // Auto update style\n\n\n  var previousSize = [0, 0];\n\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n        publicAPI.recreateSwapChain();\n      }\n    } // ImageStream size\n\n\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    } // Offscreen ?\n\n\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block'; // Cursor type\n\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    } // Invalidate cached DOM container size\n\n\n    model.containerSize = null;\n  }\n\n  publicAPI.onModified(updateWindow);\n\n  publicAPI.recreateSwapChain = function () {\n    if (model.context) {\n      model.context.unconfigure();\n      model.presentationFormat = navigator.gpu.getPreferredCanvasFormat(model.adapter);\n      /* eslint-disable no-undef */\n\n      /* eslint-disable no-bitwise */\n\n      model.context.configure({\n        device: model.device.getHandle(),\n        format: model.presentationFormat,\n        alphaMode: 'premultiplied',\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,\n        width: model.size[0],\n        height: model.size[1]\n      });\n      model._configured = true;\n    }\n  };\n\n  publicAPI.getCurrentTexture = function () {\n    return model.context.getCurrentTexture();\n  }; // Builds myself.\n\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n    } else if (model.initialized) {\n      if (!model._configured) {\n        publicAPI.recreateSwapChain();\n      }\n\n      model.commandEncoder = model.device.createCommandEncoder();\n    }\n  }; // publicAPI.traverseRenderers = (renPass) => {\n  //   // iterate over renderers\n  //   const numlayers = publicAPI.getRenderable().getNumberOfLayers();\n  //   const renderers = publicAPI.getChildren();\n  //   for (let i = 0; i < numlayers; i++) {\n  //     for (let index = 0; index < renderers.length; index++) {\n  //       const renNode = renderers[index];\n  //       const ren = publicAPI.getRenderable().getRenderers()[index];\n  //       if (ren.getDraw() && ren.getLayer() === i) {\n  //         renNode.traverse(renPass);\n  //       }\n  //     }\n  //   }\n  // };\n\n\n  publicAPI.initialize = function () {\n    if (!model.initializing) {\n      model.initializing = true;\n\n      if (!navigator.gpu) {\n        vtkErrorMacro('WebGPU is not enabled.');\n        return;\n      }\n\n      publicAPI.create3DContextAsync().then(function () {\n        model.initialized = true;\n\n        if (model.deleted) {\n          return;\n        }\n\n        publicAPI.invokeInitialized();\n      });\n    }\n  };\n\n  publicAPI.setContainer = function (el) {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      } // Remove canvas from previous container\n\n\n      model.el.removeChild(model.canvas); // If the renderer has previously added\n      // a background image, remove it from the DOM.\n\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n\n    if (model.el !== el) {\n      model.el = el;\n\n      if (model.el) {\n        model.el.appendChild(model.canvas); // If the renderer is set to use a background\n        // image, attach it to the DOM.\n\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      } // Trigger modified()\n\n\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getContainer = function () {\n    return model.el;\n  };\n\n  publicAPI.getContainerSize = function () {\n    if (!model.containerSize && model.el) {\n      var _model$el$getBounding = model.el.getBoundingClientRect(),\n          width = _model$el$getBounding.width,\n          height = _model$el$getBounding.height;\n\n      model.containerSize = [width, height];\n    }\n\n    return model.containerSize || model.size;\n  };\n\n  publicAPI.getFramebufferSize = function () {\n    return model.size;\n  };\n\n  publicAPI.create3DContextAsync = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return navigator.gpu.requestAdapter({\n              powerPreference: 'high-performance'\n            });\n\n          case 2:\n            model.adapter = _context.sent;\n\n            if (!model.deleted) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            // console.log([...model.adapter.features]);\n            model.device = vtkWebGPUDevice.newInstance();\n            _context.t0 = model.device;\n            _context.next = 9;\n            return model.adapter.requestDevice();\n\n          case 9:\n            _context.t1 = _context.sent;\n\n            _context.t0.initialize.call(_context.t0, _context.t1);\n\n            if (!model.deleted) {\n              _context.next = 14;\n              break;\n            }\n\n            model.device = null;\n            return _context.abrupt(\"return\");\n\n          case 14:\n            // model.device.getHandle().lost.then((info) => {\n            //   console.log(`${info.message}`);\n            //   publicAPI.releaseGraphicsResources();\n            // });\n            model.context = model.canvas.getContext('webgpu');\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  publicAPI.releaseGraphicsResources = function () {\n    var rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n    model.adapter = null;\n    model.device = null;\n    model.context = null;\n    model.initialized = false;\n    model.initializing = false;\n  };\n\n  publicAPI.setBackgroundImage = function (img) {\n    model.bgImage.src = img.src;\n  };\n\n  publicAPI.setUseBackgroundImage = function (value) {\n    model.useBackgroundImage = value; // Add or remove the background image from the\n    // DOM as specified.\n\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n\n  function getCanvasDataURL() {\n    return _getCanvasDataURL.apply(this, arguments);\n  }\n\n  function _getCanvasDataURL() {\n    _getCanvasDataURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var format,\n          temporaryCanvas,\n          temporaryContext,\n          result,\n          imageData,\n          mainBoundingClientRect,\n          renderWindow,\n          renderers,\n          screenshot,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              format = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : model.imageFormat;\n              // Copy current canvas to not modify the original\n              temporaryCanvas = document.createElement('canvas');\n              temporaryContext = temporaryCanvas.getContext('2d');\n              temporaryCanvas.width = model.canvas.width;\n              temporaryCanvas.height = model.canvas.height;\n              _context3.next = 7;\n              return publicAPI.getPixelsAsync();\n\n            case 7:\n              result = _context3.sent;\n              imageData = new ImageData(result.colorValues, result.width, result.height); // temporaryCanvas.putImageData(imageData, 0, 0);\n\n              temporaryContext.putImageData(imageData, 0, 0); // Get current client rect to place canvas\n\n              mainBoundingClientRect = model.canvas.getBoundingClientRect();\n              renderWindow = model.renderable;\n              renderers = renderWindow.getRenderers();\n              renderers.forEach(function (renderer) {\n                var viewProps = renderer.getViewProps();\n                viewProps.forEach(function (viewProp) {\n                  // Check if the prop has a container that should have canvas\n                  if (viewProp.getContainer) {\n                    var container = viewProp.getContainer();\n                    var canvasList = container.getElementsByTagName('canvas'); // Go throughout all canvas and copy it into temporary main canvas\n\n                    for (var i = 0; i < canvasList.length; i++) {\n                      var currentCanvas = canvasList[i];\n                      var boundingClientRect = currentCanvas.getBoundingClientRect();\n                      var newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n                      var newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n                      temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n                    }\n                  }\n                });\n              });\n              screenshot = temporaryCanvas.toDataURL(format);\n              temporaryCanvas.remove();\n              publicAPI.invokeImageReady(screenshot);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getCanvasDataURL.apply(this, arguments);\n  }\n\n  publicAPI.captureNextImage = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$resetCamera = _ref2.resetCamera,\n        resetCamera = _ref2$resetCamera === void 0 ? false : _ref2$resetCamera,\n        _ref2$size = _ref2.size,\n        size = _ref2$size === void 0 ? null : _ref2$size,\n        _ref2$scale = _ref2.scale,\n        scale = _ref2$scale === void 0 ? 1 : _ref2$scale;\n\n    if (model.deleted) {\n      return null;\n    }\n\n    model.imageFormat = format;\n    var previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(function (val) {\n        return val * scale;\n      }) : null\n    };\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onImageReady(function (imageURL) {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize; // process the resize\n\n            publicAPI.modified(); // restore the saved camera parameters, if applicable\n\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(function (_ref3) {\n                var restoreParamsFn = _ref3.restoreParamsFn,\n                    arg = _ref3.arg;\n                return restoreParamsFn(arg);\n              });\n            } // Trigger a render at the original size\n\n\n            publicAPI.traverseAllPasses(); // Remove and clean up the placeholder, revealing the original\n\n            model.el.removeChild(model._screenshot.placeHolder);\n\n            model._screenshot.placeHolder.remove();\n\n            model._screenshot = null;\n          }\n\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          var tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg); // hide the main canvas\n\n          model.canvas.style.display = 'none'; // remember the main canvas original size, then resize it\n\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model._screenshot.size = null; // process the resize\n\n          publicAPI.modified();\n\n          if (resetCamera) {\n            var isUserResetCamera = resetCamera !== true; // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n\n            model._screenshot.cameras = model.renderable.getRenderers().map(function (renderer) {\n              var camera = renderer.getActiveCamera();\n              var params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer: renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            }); // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n\n            model._screenshot.cameras.forEach(function (_ref4) {\n              var resetCameraFn = _ref4.resetCameraFn,\n                  resetCameraArgs = _ref4.resetCameraArgs;\n              return resetCameraFn(resetCameraArgs);\n            });\n          } // Trigger a render at the custom size\n\n\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n\n  publicAPI.traverseAllPasses = function () {\n    if (model.deleted) {\n      return;\n    } // if we are not initialized then we call initialize\n    // which is async so we will not actually get a render\n    // so we queue up another traverse for when we are initialized\n\n\n    if (!model.initialized) {\n      publicAPI.initialize();\n      var subscription = publicAPI.onInitialized(function () {\n        subscription.unsubscribe();\n        publicAPI.traverseAllPasses();\n      });\n    } else {\n      if (model.renderPasses) {\n        for (var index = 0; index < model.renderPasses.length; ++index) {\n          model.renderPasses[index].traverse(publicAPI, null);\n        }\n      }\n\n      if (model.commandEncoder) {\n        model.device.submitCommandEncoder(model.commandEncoder);\n        model.commandEncoder = null;\n\n        if (model.notifyStartCaptureImage) {\n          model.device.onSubmittedWorkDone().then(function () {\n            getCanvasDataURL();\n          });\n        }\n      }\n    }\n  };\n\n  publicAPI.setViewStream = function (stream) {\n    if (model.viewStream === stream) {\n      return false;\n    }\n\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n\n    model.viewStream = stream;\n\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      var mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0; // Enable display of the background image\n\n      publicAPI.setUseBackgroundImage(true); // Bind to remote stream\n\n      model.subscription = model.viewStream.onImageReady(function (e) {\n        return publicAPI.setBackgroundImage(e.image);\n      });\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n\n    return true;\n  };\n\n  publicAPI.getUniquePropID = function () {\n    return model.nextPropID++;\n  };\n\n  publicAPI.getPropFromID = function (id) {\n    for (var i = 0; i < model.children.length; i++) {\n      var res = model.children[i].getPropFromID(id);\n\n      if (res !== null) {\n        return res;\n      }\n    }\n\n    return null;\n  };\n\n  publicAPI.getPixelsAsync = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var device, texture, result, colorBuffer, cmdEnc, cLoad, tmparray, y, x, doffset, soffset;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            device = model.device;\n            texture = model.renderPasses[0].getOpaquePass().getColorTexture(); // as this is async we really don't want to store things in\n            // the class as multiple calls may start before resolving\n            // so anything specific to this request gets put into the\n            // result object (by value in most cases)\n\n            result = {\n              width: texture.getWidth(),\n              height: texture.getHeight()\n            }; // must be a multiple of 256 bytes, so 32 texels with rgba16\n\n            result.colorBufferWidth = 32 * Math.floor((result.width + 31) / 32);\n            result.colorBufferSizeInBytes = result.colorBufferWidth * result.height * 8;\n            colorBuffer = vtkWebGPUBuffer.newInstance();\n            colorBuffer.setDevice(device);\n            /* eslint-disable no-bitwise */\n\n            /* eslint-disable no-undef */\n\n            colorBuffer.create(result.colorBufferSizeInBytes, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n            /* eslint-enable no-bitwise */\n\n            /* eslint-enable no-undef */\n\n            cmdEnc = model.device.createCommandEncoder();\n            cmdEnc.copyTextureToBuffer({\n              texture: texture.getHandle()\n            }, {\n              buffer: colorBuffer.getHandle(),\n              bytesPerRow: 8 * result.colorBufferWidth,\n              rowsPerImage: result.height\n            }, {\n              width: result.width,\n              height: result.height,\n              depthOrArrayLayers: 1\n            });\n            device.submitCommandEncoder(cmdEnc);\n            /* eslint-disable no-undef */\n\n            cLoad = colorBuffer.mapAsync(GPUMapMode.READ);\n            _context2.next = 14;\n            return cLoad;\n\n          case 14:\n            /* eslint-enable no-undef */\n            result.colorValues = new Uint16Array(colorBuffer.getMappedRange().slice());\n            colorBuffer.unmap(); // repack the array\n\n            tmparray = new Uint8ClampedArray(result.height * result.width * 4);\n\n            for (y = 0; y < result.height; y++) {\n              for (x = 0; x < result.width; x++) {\n                doffset = (y * result.width + x) * 4;\n                soffset = (y * result.colorBufferWidth + x) * 4;\n                tmparray[doffset] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset]);\n                tmparray[doffset + 1] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 1]);\n                tmparray[doffset + 2] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 2]);\n                tmparray[doffset + 3] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 3]);\n              }\n            }\n\n            result.colorValues = tmparray;\n            return _context2.abrupt(\"return\", result);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  publicAPI.createSelector = function () {\n    var ret = vtkWebGPUHardwareSelector.newInstance();\n    ret.setWebGPURenderWindow(publicAPI);\n    return ret;\n  };\n\n  publicAPI.delete = macro.chain(publicAPI.delete, publicAPI.setViewStream);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  initialized: false,\n  context: null,\n  adapter: null,\n  device: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false,\n  nextPropID: 1,\n  xrSupported: false,\n  presentationFormat: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Create internal instances\n\n  model.canvas = document.createElement('canvas');\n  model.canvas.style.width = '100%'; // Create internal bgImage\n\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1'; // Inheritance\n\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues);\n  model.myFactory = vtkWebGPUViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n  // setup default forward pass rendering\n\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n\n  if (!model.selector) {\n    model.selector = vtkWebGPUHardwareSelector.newInstance();\n    model.selector.setWebGPURenderWindow(publicAPI);\n  }\n\n  macro.event(publicAPI, model, 'imageReady');\n  macro.event(publicAPI, model, 'initialized'); // Build VTK API\n\n  macro.get(publicAPI, model, ['commandEncoder', 'device', 'presentationFormat', 'useBackgroundImage', 'xrSupported']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'device', 'renderPasses', 'notifyStartCaptureImage', 'cursor', 'useOffScreen']);\n  macro.setGetArray(publicAPI, model, ['size'], 2); // Object methods\n\n  vtkWebGPURenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPURenderWindow'); // ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGPU', newInstance); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkRenderWindow as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,yCAAyC;AACvE,OAAOC,mBAAmB,MAAM,4BAA4B;AAC5D,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,uBAAuB,QAAQ,yBAAyB;AACjE,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,aAAa;AACzC,OAAOC,eAAe,MAAM,aAAa;AACzC,OAAOC,yBAAyB,MAAM,uBAAuB;AAC7D,OAAOC,wBAAwB,MAAM,sBAAsB;AAC3D,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,uBAAuB,MAAM,uCAAuC;AAC3E,OAAOC,SAAS,MAAM,gCAAgC;AAEtD,IAAIC,aAAa,GAAGV,KAAK,CAACU,aAAa,CAAC,CAAC;;AAEzC,IAAIC,sBAAsB,GAAG;EAC3BC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC,CAAC,CAAC;AACH;AACA;;AAEA,SAASC,qBAAqBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC/C;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,uBAAuB,CAAC;EAElDH,SAAS,CAACI,kBAAkB,GAAG,YAAY;IACzC,OAAOH,KAAK,CAACI,SAAS;EACxB,CAAC,CAAC,CAAC;;EAGH,IAAIC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAEzB,SAASC,YAAYA,CAAA,EAAG;IACtB;IACA,IAAIN,KAAK,CAACO,UAAU,EAAE;MACpB,IAAIP,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,KAAKH,YAAY,CAAC,CAAC,CAAC,IAAIL,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,KAAKH,YAAY,CAAC,CAAC,CAAC,EAAE;QAC1EA,YAAY,CAAC,CAAC,CAAC,GAAGL,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC;QAC/BH,YAAY,CAAC,CAAC,CAAC,GAAGL,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC;QAC/BR,KAAK,CAACS,MAAM,CAACC,YAAY,CAAC,OAAO,EAAEV,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;QACjDR,KAAK,CAACS,MAAM,CAACC,YAAY,CAAC,QAAQ,EAAEV,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;QAClDT,SAAS,CAACY,iBAAiB,CAAC,CAAC;MAC/B;IACF,CAAC,CAAC;;IAGF,IAAIX,KAAK,CAACY,UAAU,EAAE;MACpB;MACAZ,KAAK,CAACY,UAAU,CAACC,OAAO,CAACb,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,EAAER,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC;;IAGFR,KAAK,CAACS,MAAM,CAACK,KAAK,CAACC,OAAO,GAAGf,KAAK,CAACgB,YAAY,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;;IAEpE,IAAIhB,KAAK,CAACiB,EAAE,EAAE;MACZjB,KAAK,CAACiB,EAAE,CAACH,KAAK,CAACI,MAAM,GAAGlB,KAAK,CAACmB,gBAAgB,GAAGnB,KAAK,CAACkB,MAAM,GAAG,MAAM;IACxE,CAAC,CAAC;;IAGFlB,KAAK,CAACoB,aAAa,GAAG,IAAI;EAC5B;EAEArB,SAAS,CAACsB,UAAU,CAACf,YAAY,CAAC;EAElCP,SAAS,CAACY,iBAAiB,GAAG,YAAY;IACxC,IAAIX,KAAK,CAACsB,OAAO,EAAE;MACjBtB,KAAK,CAACsB,OAAO,CAACC,WAAW,CAAC,CAAC;MAC3BvB,KAAK,CAACwB,kBAAkB,GAAGC,SAAS,CAACC,GAAG,CAACC,wBAAwB,CAAC3B,KAAK,CAAC4B,OAAO,CAAC;MAChF;;MAEA;;MAEA5B,KAAK,CAACsB,OAAO,CAACO,SAAS,CAAC;QACtBC,MAAM,EAAE9B,KAAK,CAAC8B,MAAM,CAACC,SAAS,CAAC,CAAC;QAChCC,MAAM,EAAEhC,KAAK,CAACwB,kBAAkB;QAChCS,SAAS,EAAE,eAAe;QAC1BC,KAAK,EAAEC,eAAe,CAACC,iBAAiB,GAAGD,eAAe,CAACE,QAAQ;QACnEzC,KAAK,EAAEI,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC;QACpBX,MAAM,EAAEG,KAAK,CAACQ,IAAI,CAAC,CAAC;MACtB,CAAC,CAAC;MACFR,KAAK,CAACsC,WAAW,GAAG,IAAI;IAC1B;EACF,CAAC;EAEDvC,SAAS,CAACwC,iBAAiB,GAAG,YAAY;IACxC,OAAOvC,KAAK,CAACsB,OAAO,CAACiB,iBAAiB,CAAC,CAAC;EAC1C,CAAC,CAAC,CAAC;;EAGHxC,SAAS,CAACyC,SAAS,GAAG,UAAUC,OAAO,EAAE;IACvC,IAAIA,OAAO,EAAE;MACX,IAAI,CAACzC,KAAK,CAACO,UAAU,EAAE;QACrB;MACF;MAEAR,SAAS,CAAC2C,YAAY,CAAC,CAAC;MACxB3C,SAAS,CAAC4C,eAAe,CAAC3C,KAAK,CAACO,UAAU,CAACqC,uBAAuB,CAAC,CAAC,CAAC;MACrE7C,SAAS,CAAC8C,iBAAiB,CAAC,CAAC;MAC7B9C,SAAS,CAAC+C,UAAU,CAAC,CAAC;IACxB,CAAC,MAAM,IAAI9C,KAAK,CAAC+C,WAAW,EAAE;MAC5B,IAAI,CAAC/C,KAAK,CAACsC,WAAW,EAAE;QACtBvC,SAAS,CAACY,iBAAiB,CAAC,CAAC;MAC/B;MAEAX,KAAK,CAACgD,cAAc,GAAGhD,KAAK,CAAC8B,MAAM,CAACmB,oBAAoB,CAAC,CAAC;IAC5D;EACF,CAAC,CAAC,CAAC;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAlD,SAAS,CAAC+C,UAAU,GAAG,YAAY;IACjC,IAAI,CAAC9C,KAAK,CAACkD,YAAY,EAAE;MACvBlD,KAAK,CAACkD,YAAY,GAAG,IAAI;MAEzB,IAAI,CAACzB,SAAS,CAACC,GAAG,EAAE;QAClBnC,aAAa,CAAC,wBAAwB,CAAC;QACvC;MACF;MAEAQ,SAAS,CAACoD,oBAAoB,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY;QAChDpD,KAAK,CAAC+C,WAAW,GAAG,IAAI;QAExB,IAAI/C,KAAK,CAACqD,OAAO,EAAE;UACjB;QACF;QAEAtD,SAAS,CAACuD,iBAAiB,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ;EACF,CAAC;EAEDvD,SAAS,CAACwD,YAAY,GAAG,UAAUtC,EAAE,EAAE;IACrC,IAAIjB,KAAK,CAACiB,EAAE,IAAIjB,KAAK,CAACiB,EAAE,KAAKA,EAAE,EAAE;MAC/B,IAAIjB,KAAK,CAACS,MAAM,CAAC+C,UAAU,KAAKxD,KAAK,CAACiB,EAAE,EAAE;QACxC1B,aAAa,CAAC,oDAAoD,CAAC;MACrE,CAAC,CAAC;;MAGFS,KAAK,CAACiB,EAAE,CAACwC,WAAW,CAACzD,KAAK,CAACS,MAAM,CAAC,CAAC,CAAC;MACpC;;MAEA,IAAIT,KAAK,CAACiB,EAAE,CAACyC,QAAQ,CAAC1D,KAAK,CAAC2D,OAAO,CAAC,EAAE;QACpC3D,KAAK,CAACiB,EAAE,CAACwC,WAAW,CAACzD,KAAK,CAAC2D,OAAO,CAAC;MACrC;IACF;IAEA,IAAI3D,KAAK,CAACiB,EAAE,KAAKA,EAAE,EAAE;MACnBjB,KAAK,CAACiB,EAAE,GAAGA,EAAE;MAEb,IAAIjB,KAAK,CAACiB,EAAE,EAAE;QACZjB,KAAK,CAACiB,EAAE,CAAC2C,WAAW,CAAC5D,KAAK,CAACS,MAAM,CAAC,CAAC,CAAC;QACpC;;QAEA,IAAIT,KAAK,CAAC6D,kBAAkB,EAAE;UAC5B7D,KAAK,CAACiB,EAAE,CAAC2C,WAAW,CAAC5D,KAAK,CAAC2D,OAAO,CAAC;QACrC;MACF,CAAC,CAAC;;MAGF5D,SAAS,CAAC+D,QAAQ,CAAC,CAAC;IACtB;EACF,CAAC;EAED/D,SAAS,CAACgE,YAAY,GAAG,YAAY;IACnC,OAAO/D,KAAK,CAACiB,EAAE;EACjB,CAAC;EAEDlB,SAAS,CAACiE,gBAAgB,GAAG,YAAY;IACvC,IAAI,CAAChE,KAAK,CAACoB,aAAa,IAAIpB,KAAK,CAACiB,EAAE,EAAE;MACpC,IAAIgD,qBAAqB,GAAGjE,KAAK,CAACiB,EAAE,CAACiD,qBAAqB,CAAC,CAAC;QACxDtE,KAAK,GAAGqE,qBAAqB,CAACrE,KAAK;QACnCC,MAAM,GAAGoE,qBAAqB,CAACpE,MAAM;MAEzCG,KAAK,CAACoB,aAAa,GAAG,CAACxB,KAAK,EAAEC,MAAM,CAAC;IACvC;IAEA,OAAOG,KAAK,CAACoB,aAAa,IAAIpB,KAAK,CAACQ,IAAI;EAC1C,CAAC;EAEDT,SAAS,CAACoE,kBAAkB,GAAG,YAAY;IACzC,OAAOnE,KAAK,CAACQ,IAAI;EACnB,CAAC;EAEDT,SAAS,CAACoD,oBAAoB,GAAG,aAAaxE,iBAAiB,EAAE,aAAaC,mBAAmB,CAACwF,IAAI,CAAC,SAASC,OAAOA,CAAA,EAAG;IACxH,OAAOzF,mBAAmB,CAAC0F,IAAI,CAAC,SAASC,QAAQA,CAACC,QAAQ,EAAE;MAC1D,OAAO,CAAC,EAAE;QACR,QAAQA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAACE,IAAI;UACnC,KAAK,CAAC;YACJF,QAAQ,CAACE,IAAI,GAAG,CAAC;YACjB,OAAOjD,SAAS,CAACC,GAAG,CAACiD,cAAc,CAAC;cAClCC,eAAe,EAAE;YACnB,CAAC,CAAC;UAEJ,KAAK,CAAC;YACJ5E,KAAK,CAAC4B,OAAO,GAAG4C,QAAQ,CAACK,IAAI;YAE7B,IAAI,CAAC7E,KAAK,CAACqD,OAAO,EAAE;cAClBmB,QAAQ,CAACE,IAAI,GAAG,CAAC;cACjB;YACF;YAEA,OAAOF,QAAQ,CAACM,MAAM,CAAC,QAAQ,CAAC;UAElC,KAAK,CAAC;YACJ;YACA9E,KAAK,CAAC8B,MAAM,GAAG7C,eAAe,CAAC8F,WAAW,CAAC,CAAC;YAC5CP,QAAQ,CAACQ,EAAE,GAAGhF,KAAK,CAAC8B,MAAM;YAC1B0C,QAAQ,CAACE,IAAI,GAAG,CAAC;YACjB,OAAO1E,KAAK,CAAC4B,OAAO,CAACqD,aAAa,CAAC,CAAC;UAEtC,KAAK,CAAC;YACJT,QAAQ,CAACU,EAAE,GAAGV,QAAQ,CAACK,IAAI;YAE3BL,QAAQ,CAACQ,EAAE,CAAClC,UAAU,CAACqC,IAAI,CAACX,QAAQ,CAACQ,EAAE,EAAER,QAAQ,CAACU,EAAE,CAAC;YAErD,IAAI,CAAClF,KAAK,CAACqD,OAAO,EAAE;cAClBmB,QAAQ,CAACE,IAAI,GAAG,EAAE;cAClB;YACF;YAEA1E,KAAK,CAAC8B,MAAM,GAAG,IAAI;YACnB,OAAO0C,QAAQ,CAACM,MAAM,CAAC,QAAQ,CAAC;UAElC,KAAK,EAAE;YACL;YACA;YACA;YACA;YACA9E,KAAK,CAACsB,OAAO,GAAGtB,KAAK,CAACS,MAAM,CAAC2E,UAAU,CAAC,QAAQ,CAAC;UAEnD,KAAK,EAAE;UACP,KAAK,KAAK;YACR,OAAOZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QAC1B;MACF;IACF,CAAC,EAAEhB,OAAO,CAAC;EACb,CAAC,CAAC,CAAC;EAEHtE,SAAS,CAACuF,wBAAwB,GAAG,YAAY;IAC/C,IAAIC,EAAE,GAAGnG,aAAa,CAAC2F,WAAW,CAAC,CAAC;IACpCQ,EAAE,CAACC,mBAAmB,CAAC,SAAS,CAAC;IACjCD,EAAE,CAACE,QAAQ,CAAC1F,SAAS,EAAE,IAAI,CAAC;IAC5BC,KAAK,CAAC4B,OAAO,GAAG,IAAI;IACpB5B,KAAK,CAAC8B,MAAM,GAAG,IAAI;IACnB9B,KAAK,CAACsB,OAAO,GAAG,IAAI;IACpBtB,KAAK,CAAC+C,WAAW,GAAG,KAAK;IACzB/C,KAAK,CAACkD,YAAY,GAAG,KAAK;EAC5B,CAAC;EAEDnD,SAAS,CAAC2F,kBAAkB,GAAG,UAAUC,GAAG,EAAE;IAC5C3F,KAAK,CAAC2D,OAAO,CAACiC,GAAG,GAAGD,GAAG,CAACC,GAAG;EAC7B,CAAC;EAED7F,SAAS,CAAC8F,qBAAqB,GAAG,UAAUC,KAAK,EAAE;IACjD9F,KAAK,CAAC6D,kBAAkB,GAAGiC,KAAK,CAAC,CAAC;IAClC;;IAEA,IAAI9F,KAAK,CAAC6D,kBAAkB,IAAI,CAAC7D,KAAK,CAACiB,EAAE,CAACyC,QAAQ,CAAC1D,KAAK,CAAC2D,OAAO,CAAC,EAAE;MACjE3D,KAAK,CAACiB,EAAE,CAAC2C,WAAW,CAAC5D,KAAK,CAAC2D,OAAO,CAAC;IACrC,CAAC,MAAM,IAAI,CAAC3D,KAAK,CAAC6D,kBAAkB,IAAI7D,KAAK,CAACiB,EAAE,CAACyC,QAAQ,CAAC1D,KAAK,CAAC2D,OAAO,CAAC,EAAE;MACxE3D,KAAK,CAACiB,EAAE,CAACwC,WAAW,CAACzD,KAAK,CAAC2D,OAAO,CAAC;IACrC;EACF,CAAC;EAED,SAASoC,gBAAgBA,CAAA,EAAG;IAC1B,OAAOC,iBAAiB,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EACjD;EAEA,SAASF,iBAAiBA,CAAA,EAAG;IAC3BA,iBAAiB,GAAGrH,iBAAiB,EAAE,aAAaC,mBAAmB,CAACwF,IAAI,CAAC,SAAS+B,QAAQA,CAAA,EAAG;MAC/F,IAAInE,MAAM;QACNoE,eAAe;QACfC,gBAAgB;QAChBC,MAAM;QACNC,SAAS;QACTC,sBAAsB;QACtBC,YAAY;QACZC,SAAS;QACTC,UAAU;QACVC,MAAM,GAAGV,SAAS;MACtB,OAAOtH,mBAAmB,CAAC0F,IAAI,CAAC,SAASuC,SAASA,CAACC,SAAS,EAAE;QAC5D,OAAO,CAAC,EAAE;UACR,QAAQA,SAAS,CAACrC,IAAI,GAAGqC,SAAS,CAACpC,IAAI;YACrC,KAAK,CAAC;cACJ1C,MAAM,GAAG4E,MAAM,CAACG,MAAM,GAAG,CAAC,IAAIH,MAAM,CAAC,CAAC,CAAC,KAAKI,SAAS,GAAGJ,MAAM,CAAC,CAAC,CAAC,GAAG5G,KAAK,CAACiH,WAAW;cACrF;cACAb,eAAe,GAAGc,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;cAClDd,gBAAgB,GAAGD,eAAe,CAAChB,UAAU,CAAC,IAAI,CAAC;cACnDgB,eAAe,CAACxG,KAAK,GAAGI,KAAK,CAACS,MAAM,CAACb,KAAK;cAC1CwG,eAAe,CAACvG,MAAM,GAAGG,KAAK,CAACS,MAAM,CAACZ,MAAM;cAC5CiH,SAAS,CAACpC,IAAI,GAAG,CAAC;cAClB,OAAO3E,SAAS,CAACqH,cAAc,CAAC,CAAC;YAEnC,KAAK,CAAC;cACJd,MAAM,GAAGQ,SAAS,CAACjC,IAAI;cACvB0B,SAAS,GAAG,IAAIc,SAAS,CAACf,MAAM,CAACgB,WAAW,EAAEhB,MAAM,CAAC1G,KAAK,EAAE0G,MAAM,CAACzG,MAAM,CAAC,CAAC,CAAC;;cAE5EwG,gBAAgB,CAACkB,YAAY,CAAChB,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;cAEhDC,sBAAsB,GAAGxG,KAAK,CAACS,MAAM,CAACyD,qBAAqB,CAAC,CAAC;cAC7DuC,YAAY,GAAGzG,KAAK,CAACO,UAAU;cAC/BmG,SAAS,GAAGD,YAAY,CAACe,YAAY,CAAC,CAAC;cACvCd,SAAS,CAACe,OAAO,CAAC,UAAUC,QAAQ,EAAE;gBACpC,IAAIC,SAAS,GAAGD,QAAQ,CAACE,YAAY,CAAC,CAAC;gBACvCD,SAAS,CAACF,OAAO,CAAC,UAAUI,QAAQ,EAAE;kBACpC;kBACA,IAAIA,QAAQ,CAAC9D,YAAY,EAAE;oBACzB,IAAI+D,SAAS,GAAGD,QAAQ,CAAC9D,YAAY,CAAC,CAAC;oBACvC,IAAIgE,UAAU,GAAGD,SAAS,CAACE,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;;oBAE3D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAAChB,MAAM,EAAEkB,CAAC,EAAE,EAAE;sBAC1C,IAAIC,aAAa,GAAGH,UAAU,CAACE,CAAC,CAAC;sBACjC,IAAIE,kBAAkB,GAAGD,aAAa,CAAChE,qBAAqB,CAAC,CAAC;sBAC9D,IAAIkE,YAAY,GAAGD,kBAAkB,CAACE,CAAC,GAAG7B,sBAAsB,CAAC6B,CAAC;sBAClE,IAAIC,YAAY,GAAGH,kBAAkB,CAACI,CAAC,GAAG/B,sBAAsB,CAAC+B,CAAC;sBAClElC,gBAAgB,CAACmC,SAAS,CAACN,aAAa,EAAEE,YAAY,EAAEE,YAAY,CAAC;oBACvE;kBACF;gBACF,CAAC,CAAC;cACJ,CAAC,CAAC;cACF3B,UAAU,GAAGP,eAAe,CAACqC,SAAS,CAACzG,MAAM,CAAC;cAC9CoE,eAAe,CAACsC,MAAM,CAAC,CAAC;cACxB3I,SAAS,CAAC4I,gBAAgB,CAAChC,UAAU,CAAC;YAExC,KAAK,EAAE;YACP,KAAK,KAAK;cACR,OAAOG,SAAS,CAACzB,IAAI,CAAC,CAAC;UAC3B;QACF;MACF,CAAC,EAAEc,QAAQ,CAAC;IACd,CAAC,CAAC,CAAC;IACH,OAAOH,iBAAiB,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EACjD;EAEAnG,SAAS,CAAC6I,gBAAgB,GAAG,YAAY;IACvC,IAAI5G,MAAM,GAAGkE,SAAS,CAACa,MAAM,GAAG,CAAC,IAAIb,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW;IAE5F,IAAI2C,KAAK,GAAG3C,SAAS,CAACa,MAAM,GAAG,CAAC,IAAIb,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9E4C,iBAAiB,GAAGD,KAAK,CAACE,WAAW;MACrCA,WAAW,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,iBAAiB;MACtEE,UAAU,GAAGH,KAAK,CAACrI,IAAI;MACvBA,IAAI,GAAGwI,UAAU,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,UAAU;MAChDC,WAAW,GAAGJ,KAAK,CAACK,KAAK;MACzBA,KAAK,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,WAAW;IAEpD,IAAIjJ,KAAK,CAACqD,OAAO,EAAE;MACjB,OAAO,IAAI;IACb;IAEArD,KAAK,CAACiH,WAAW,GAAGjF,MAAM;IAC1B,IAAImH,QAAQ,GAAGnJ,KAAK,CAACoJ,uBAAuB;IAC5CpJ,KAAK,CAACoJ,uBAAuB,GAAG,IAAI;IACpCpJ,KAAK,CAACqJ,WAAW,GAAG;MAClB7I,IAAI,EAAE,CAAC,CAACA,IAAI,IAAI0I,KAAK,KAAK,CAAC,GAAG1I,IAAI,IAAIR,KAAK,CAACQ,IAAI,CAAC8I,GAAG,CAAC,UAAUC,GAAG,EAAE;QAClE,OAAOA,GAAG,GAAGL,KAAK;MACpB,CAAC,CAAC,GAAG;IACP,CAAC;IACD,OAAO,IAAIM,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;MAC5C,IAAIC,YAAY,GAAG5J,SAAS,CAAC6J,YAAY,CAAC,UAAUC,QAAQ,EAAE;QAC5D,IAAI7J,KAAK,CAACqJ,WAAW,CAAC7I,IAAI,KAAK,IAAI,EAAE;UACnCR,KAAK,CAACoJ,uBAAuB,GAAGD,QAAQ;UACxCQ,YAAY,CAACG,WAAW,CAAC,CAAC;UAE1B,IAAI9J,KAAK,CAACqJ,WAAW,CAACU,WAAW,EAAE;YACjC;YACA/J,KAAK,CAACQ,IAAI,GAAGR,KAAK,CAACqJ,WAAW,CAACW,YAAY,CAAC,CAAC;;YAE7CjK,SAAS,CAAC+D,QAAQ,CAAC,CAAC,CAAC,CAAC;;YAEtB,IAAI9D,KAAK,CAACqJ,WAAW,CAACY,OAAO,EAAE;cAC7BjK,KAAK,CAACqJ,WAAW,CAACY,OAAO,CAACxC,OAAO,CAAC,UAAUyC,KAAK,EAAE;gBACjD,IAAIC,eAAe,GAAGD,KAAK,CAACC,eAAe;kBACvCC,GAAG,GAAGF,KAAK,CAACE,GAAG;gBACnB,OAAOD,eAAe,CAACC,GAAG,CAAC;cAC7B,CAAC,CAAC;YACJ,CAAC,CAAC;;YAGFrK,SAAS,CAACsK,iBAAiB,CAAC,CAAC,CAAC,CAAC;;YAE/BrK,KAAK,CAACiB,EAAE,CAACwC,WAAW,CAACzD,KAAK,CAACqJ,WAAW,CAACU,WAAW,CAAC;YAEnD/J,KAAK,CAACqJ,WAAW,CAACU,WAAW,CAACrB,MAAM,CAAC,CAAC;YAEtC1I,KAAK,CAACqJ,WAAW,GAAG,IAAI;UAC1B;UAEAI,OAAO,CAACI,QAAQ,CAAC;QACnB,CAAC,MAAM;UACL;UACA,IAAIS,MAAM,GAAGpD,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC1CmD,MAAM,CAACxJ,KAAK,GAAGtB,sBAAsB;UACrC8K,MAAM,CAAC1E,GAAG,GAAGiE,QAAQ;UACrB7J,KAAK,CAACqJ,WAAW,CAACU,WAAW,GAAG/J,KAAK,CAACiB,EAAE,CAAC2C,WAAW,CAAC0G,MAAM,CAAC,CAAC,CAAC;;UAE9DtK,KAAK,CAACS,MAAM,CAACK,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;;UAErCf,KAAK,CAACqJ,WAAW,CAACW,YAAY,GAAGhK,KAAK,CAACQ,IAAI;UAC3CR,KAAK,CAACQ,IAAI,GAAGR,KAAK,CAACqJ,WAAW,CAAC7I,IAAI;UACnCR,KAAK,CAACqJ,WAAW,CAAC7I,IAAI,GAAG,IAAI,CAAC,CAAC;;UAE/BT,SAAS,CAAC+D,QAAQ,CAAC,CAAC;UAEpB,IAAIiF,WAAW,EAAE;YACf,IAAIwB,iBAAiB,GAAGxB,WAAW,KAAK,IAAI,CAAC,CAAC;YAC9C;;YAEA/I,KAAK,CAACqJ,WAAW,CAACY,OAAO,GAAGjK,KAAK,CAACO,UAAU,CAACiH,YAAY,CAAC,CAAC,CAAC8B,GAAG,CAAC,UAAU5B,QAAQ,EAAE;cAClF,IAAI8C,MAAM,GAAG9C,QAAQ,CAAC+C,eAAe,CAAC,CAAC;cACvC,IAAIC,MAAM,GAAGF,MAAM,CAACG,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,eAAe,CAAC;cAClE,OAAO;gBACLC,eAAe,EAAEL,iBAAiB,GAAG;kBACnC7C,QAAQ,EAAEA;gBACZ,CAAC,GAAGV,SAAS;gBACb6D,aAAa,EAAEN,iBAAiB,GAAGxB,WAAW,GAAGrB,QAAQ,CAACqB,WAAW;gBACrEoB,eAAe,EAAEK,MAAM,CAACM,GAAG;gBAC3B;gBACAV,GAAG,EAAEW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACP,MAAM,CAAC;cACxC,CAAC;YACH,CAAC,CAAC,CAAC,CAAC;YACJ;YACA;;YAEA1K,KAAK,CAACqJ,WAAW,CAACY,OAAO,CAACxC,OAAO,CAAC,UAAUyD,KAAK,EAAE;cACjD,IAAIL,aAAa,GAAGK,KAAK,CAACL,aAAa;gBACnCD,eAAe,GAAGM,KAAK,CAACN,eAAe;cAC3C,OAAOC,aAAa,CAACD,eAAe,CAAC;YACvC,CAAC,CAAC;UACJ,CAAC,CAAC;;UAGF7K,SAAS,CAACsK,iBAAiB,CAAC,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAEDtK,SAAS,CAACsK,iBAAiB,GAAG,YAAY;IACxC,IAAIrK,KAAK,CAACqD,OAAO,EAAE;MACjB;IACF,CAAC,CAAC;IACF;IACA;;IAGA,IAAI,CAACrD,KAAK,CAAC+C,WAAW,EAAE;MACtBhD,SAAS,CAAC+C,UAAU,CAAC,CAAC;MACtB,IAAI6G,YAAY,GAAG5J,SAAS,CAACoL,aAAa,CAAC,YAAY;QACrDxB,YAAY,CAACG,WAAW,CAAC,CAAC;QAC1B/J,SAAS,CAACsK,iBAAiB,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAIrK,KAAK,CAACoL,YAAY,EAAE;QACtB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGrL,KAAK,CAACoL,YAAY,CAACrE,MAAM,EAAE,EAAEsE,KAAK,EAAE;UAC9DrL,KAAK,CAACoL,YAAY,CAACC,KAAK,CAAC,CAAC5F,QAAQ,CAAC1F,SAAS,EAAE,IAAI,CAAC;QACrD;MACF;MAEA,IAAIC,KAAK,CAACgD,cAAc,EAAE;QACxBhD,KAAK,CAAC8B,MAAM,CAACwJ,oBAAoB,CAACtL,KAAK,CAACgD,cAAc,CAAC;QACvDhD,KAAK,CAACgD,cAAc,GAAG,IAAI;QAE3B,IAAIhD,KAAK,CAACoJ,uBAAuB,EAAE;UACjCpJ,KAAK,CAAC8B,MAAM,CAACyJ,mBAAmB,CAAC,CAAC,CAACnI,IAAI,CAAC,YAAY;YAClD2C,gBAAgB,CAAC,CAAC;UACpB,CAAC,CAAC;QACJ;MACF;IACF;EACF,CAAC;EAEDhG,SAAS,CAACyL,aAAa,GAAG,UAAUC,MAAM,EAAE;IAC1C,IAAIzL,KAAK,CAACY,UAAU,KAAK6K,MAAM,EAAE;MAC/B,OAAO,KAAK;IACd;IAEA,IAAIzL,KAAK,CAAC2J,YAAY,EAAE;MACtB3J,KAAK,CAAC2J,YAAY,CAACG,WAAW,CAAC,CAAC;MAChC9J,KAAK,CAAC2J,YAAY,GAAG,IAAI;IAC3B;IAEA3J,KAAK,CAACY,UAAU,GAAG6K,MAAM;IAEzB,IAAIzL,KAAK,CAACY,UAAU,EAAE;MACpB;MACA,IAAI8K,YAAY,GAAG1L,KAAK,CAACO,UAAU,CAACiH,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;MACrDkE,YAAY,CAACC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;MAEhD5L,SAAS,CAAC8F,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEvC7F,KAAK,CAAC2J,YAAY,GAAG3J,KAAK,CAACY,UAAU,CAACgJ,YAAY,CAAC,UAAUgC,CAAC,EAAE;QAC9D,OAAO7L,SAAS,CAAC2F,kBAAkB,CAACkG,CAAC,CAACC,KAAK,CAAC;MAC9C,CAAC,CAAC;MACF7L,KAAK,CAACY,UAAU,CAACC,OAAO,CAACb,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,EAAER,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;MACtDR,KAAK,CAACY,UAAU,CAACkL,eAAe,CAAC,CAAC;MAClC9L,KAAK,CAACY,UAAU,CAACmL,MAAM,CAAC,CAAC;MACzBhM,SAAS,CAAC+D,QAAQ,CAAC,CAAC;IACtB;IAEA,OAAO,IAAI;EACb,CAAC;EAED/D,SAAS,CAACiM,eAAe,GAAG,YAAY;IACtC,OAAOhM,KAAK,CAACiM,UAAU,EAAE;EAC3B,CAAC;EAEDlM,SAAS,CAACmM,aAAa,GAAG,UAAUC,EAAE,EAAE;IACtC,KAAK,IAAIlE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjI,KAAK,CAACoM,QAAQ,CAACrF,MAAM,EAAEkB,CAAC,EAAE,EAAE;MAC9C,IAAIoE,GAAG,GAAGrM,KAAK,CAACoM,QAAQ,CAACnE,CAAC,CAAC,CAACiE,aAAa,CAACC,EAAE,CAAC;MAE7C,IAAIE,GAAG,KAAK,IAAI,EAAE;QAChB,OAAOA,GAAG;MACZ;IACF;IAEA,OAAO,IAAI;EACb,CAAC;EAEDtM,SAAS,CAACqH,cAAc,GAAG,aAAazI,iBAAiB,EAAE,aAAaC,mBAAmB,CAACwF,IAAI,CAAC,SAASkI,QAAQA,CAAA,EAAG;IACnH,IAAIxK,MAAM,EAAEyK,OAAO,EAAEjG,MAAM,EAAEkG,WAAW,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEpE,CAAC,EAAEF,CAAC,EAAEuE,OAAO,EAAEC,OAAO;IACzF,OAAOjO,mBAAmB,CAAC0F,IAAI,CAAC,SAASwI,SAASA,CAACC,SAAS,EAAE;MAC5D,OAAO,CAAC,EAAE;QACR,QAAQA,SAAS,CAACtI,IAAI,GAAGsI,SAAS,CAACrI,IAAI;UACrC,KAAK,CAAC;YACJ5C,MAAM,GAAG9B,KAAK,CAAC8B,MAAM;YACrByK,OAAO,GAAGvM,KAAK,CAACoL,YAAY,CAAC,CAAC,CAAC,CAAC4B,aAAa,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;YACnE;YACA;YACA;;YAEA3G,MAAM,GAAG;cACP1G,KAAK,EAAE2M,OAAO,CAACW,QAAQ,CAAC,CAAC;cACzBrN,MAAM,EAAE0M,OAAO,CAACY,SAAS,CAAC;YAC5B,CAAC,CAAC,CAAC;;YAEH7G,MAAM,CAAC8G,gBAAgB,GAAG,EAAE,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAChH,MAAM,CAAC1G,KAAK,GAAG,EAAE,IAAI,EAAE,CAAC;YACnE0G,MAAM,CAACiH,sBAAsB,GAAGjH,MAAM,CAAC8G,gBAAgB,GAAG9G,MAAM,CAACzG,MAAM,GAAG,CAAC;YAC3E2M,WAAW,GAAGxN,eAAe,CAAC+F,WAAW,CAAC,CAAC;YAC3CyH,WAAW,CAACgB,SAAS,CAAC1L,MAAM,CAAC;YAC7B;;YAEA;;YAEA0K,WAAW,CAACiB,MAAM,CAACnH,MAAM,CAACiH,sBAAsB,EAAEG,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACrL,QAAQ,CAAC;YACpG;;YAEA;;YAEAoK,MAAM,GAAGzM,KAAK,CAAC8B,MAAM,CAACmB,oBAAoB,CAAC,CAAC;YAC5CwJ,MAAM,CAACmB,mBAAmB,CAAC;cACzBrB,OAAO,EAAEA,OAAO,CAACxK,SAAS,CAAC;YAC7B,CAAC,EAAE;cACD8L,MAAM,EAAErB,WAAW,CAACzK,SAAS,CAAC,CAAC;cAC/B+L,WAAW,EAAE,CAAC,GAAGxH,MAAM,CAAC8G,gBAAgB;cACxCW,YAAY,EAAEzH,MAAM,CAACzG;YACvB,CAAC,EAAE;cACDD,KAAK,EAAE0G,MAAM,CAAC1G,KAAK;cACnBC,MAAM,EAAEyG,MAAM,CAACzG,MAAM;cACrBmO,kBAAkB,EAAE;YACtB,CAAC,CAAC;YACFlM,MAAM,CAACwJ,oBAAoB,CAACmB,MAAM,CAAC;YACnC;;YAEAC,KAAK,GAAGF,WAAW,CAACyB,QAAQ,CAACC,UAAU,CAACC,IAAI,CAAC;YAC7CpB,SAAS,CAACrI,IAAI,GAAG,EAAE;YACnB,OAAOgI,KAAK;UAEd,KAAK,EAAE;YACL;YACApG,MAAM,CAACgB,WAAW,GAAG,IAAI8G,WAAW,CAAC5B,WAAW,CAAC6B,cAAc,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;YAC1E9B,WAAW,CAAC+B,KAAK,CAAC,CAAC,CAAC,CAAC;;YAErB5B,QAAQ,GAAG,IAAI6B,iBAAiB,CAAClI,MAAM,CAACzG,MAAM,GAAGyG,MAAM,CAAC1G,KAAK,GAAG,CAAC,CAAC;YAElE,KAAK2I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjC,MAAM,CAACzG,MAAM,EAAE0I,CAAC,EAAE,EAAE;cAClC,KAAKF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/B,MAAM,CAAC1G,KAAK,EAAEyI,CAAC,EAAE,EAAE;gBACjCuE,OAAO,GAAG,CAACrE,CAAC,GAAGjC,MAAM,CAAC1G,KAAK,GAAGyI,CAAC,IAAI,CAAC;gBACpCwE,OAAO,GAAG,CAACtE,CAAC,GAAGjC,MAAM,CAAC8G,gBAAgB,GAAG/E,CAAC,IAAI,CAAC;gBAC/CsE,QAAQ,CAACC,OAAO,CAAC,GAAG,KAAK,GAAGtN,SAAS,CAACmP,QAAQ,CAACnI,MAAM,CAACgB,WAAW,CAACuF,OAAO,CAAC,CAAC;gBAC3EF,QAAQ,CAACC,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK,GAAGtN,SAAS,CAACmP,QAAQ,CAACnI,MAAM,CAACgB,WAAW,CAACuF,OAAO,GAAG,CAAC,CAAC,CAAC;gBACnFF,QAAQ,CAACC,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK,GAAGtN,SAAS,CAACmP,QAAQ,CAACnI,MAAM,CAACgB,WAAW,CAACuF,OAAO,GAAG,CAAC,CAAC,CAAC;gBACnFF,QAAQ,CAACC,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK,GAAGtN,SAAS,CAACmP,QAAQ,CAACnI,MAAM,CAACgB,WAAW,CAACuF,OAAO,GAAG,CAAC,CAAC,CAAC;cACrF;YACF;YAEAvG,MAAM,CAACgB,WAAW,GAAGqF,QAAQ;YAC7B,OAAOI,SAAS,CAACjI,MAAM,CAAC,QAAQ,EAAEwB,MAAM,CAAC;UAE3C,KAAK,EAAE;UACP,KAAK,KAAK;YACR,OAAOyG,SAAS,CAAC1H,IAAI,CAAC,CAAC;QAC3B;MACF;IACF,CAAC,EAAEiH,QAAQ,CAAC;EACd,CAAC,CAAC,CAAC;EAEHvM,SAAS,CAAC2O,cAAc,GAAG,YAAY;IACrC,IAAIC,GAAG,GAAGzP,yBAAyB,CAAC6F,WAAW,CAAC,CAAC;IACjD4J,GAAG,CAACC,qBAAqB,CAAC7O,SAAS,CAAC;IACpC,OAAO4O,GAAG;EACZ,CAAC;EAED5O,SAAS,CAAC8O,MAAM,GAAGhQ,KAAK,CAACiQ,KAAK,CAAC/O,SAAS,CAAC8O,MAAM,EAAE9O,SAAS,CAACyL,aAAa,CAAC;AAC3E,CAAC,CAAC;AACF;AACA;;AAGA,IAAIuD,cAAc,GAAG;EACnBhM,WAAW,EAAE,KAAK;EAClBzB,OAAO,EAAE,IAAI;EACbM,OAAO,EAAE,IAAI;EACbE,MAAM,EAAE,IAAI;EACZrB,MAAM,EAAE,IAAI;EACZU,gBAAgB,EAAE,IAAI;EACtBD,MAAM,EAAE,SAAS;EACjBE,aAAa,EAAE,IAAI;EACnBgK,YAAY,EAAE,EAAE;EAChBhC,uBAAuB,EAAE,KAAK;EAC9BnC,WAAW,EAAE,WAAW;EACxBjG,YAAY,EAAE,KAAK;EACnB6C,kBAAkB,EAAE,KAAK;EACzBoI,UAAU,EAAE,CAAC;EACb+C,WAAW,EAAE,KAAK;EAClBxN,kBAAkB,EAAE;AACtB,CAAC,CAAC,CAAC;;AAEH,SAASyN,MAAMA,CAAClP,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIkP,aAAa,GAAGhJ,SAAS,CAACa,MAAM,GAAG,CAAC,IAAIb,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FiJ,MAAM,CAACC,MAAM,CAACpP,KAAK,EAAE+O,cAAc,EAAEG,aAAa,CAAC,CAAC,CAAC;;EAErDlP,KAAK,CAACS,MAAM,GAAGyG,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CnH,KAAK,CAACS,MAAM,CAACK,KAAK,CAAClB,KAAK,GAAG,MAAM,CAAC,CAAC;;EAEnCI,KAAK,CAAC2D,OAAO,GAAG,IAAI0L,KAAK,CAAC,CAAC;EAC3BrP,KAAK,CAAC2D,OAAO,CAAC7C,KAAK,CAACrB,QAAQ,GAAG,UAAU;EACzCO,KAAK,CAAC2D,OAAO,CAAC7C,KAAK,CAACnB,IAAI,GAAG,GAAG;EAC9BK,KAAK,CAAC2D,OAAO,CAAC7C,KAAK,CAACpB,GAAG,GAAG,GAAG;EAC7BM,KAAK,CAAC2D,OAAO,CAAC7C,KAAK,CAAClB,KAAK,GAAG,MAAM;EAClCI,KAAK,CAAC2D,OAAO,CAAC7C,KAAK,CAACjB,MAAM,GAAG,MAAM;EACnCG,KAAK,CAAC2D,OAAO,CAAC7C,KAAK,CAACwO,MAAM,GAAG,IAAI,CAAC,CAAC;;EAEnCjQ,uBAAuB,CAAC4P,MAAM,CAAClP,SAAS,EAAEC,KAAK,EAAEkP,aAAa,CAAC;EAC/DlP,KAAK,CAACI,SAAS,GAAGjB,wBAAwB,CAAC4F,WAAW,CAAC,CAAC;EACxD;;EAEA/E,KAAK,CAACI,SAAS,CAACmP,gBAAgB,CAAC,iBAAiB,EAAExK,WAAW,CAAC;EAChE;EACA;;EAEA/E,KAAK,CAACoL,YAAY,CAAC,CAAC,CAAC,GAAGrM,cAAc,CAACgG,WAAW,CAAC,CAAC;EAEpD,IAAI,CAAC/E,KAAK,CAACwP,QAAQ,EAAE;IACnBxP,KAAK,CAACwP,QAAQ,GAAGtQ,yBAAyB,CAAC6F,WAAW,CAAC,CAAC;IACxD/E,KAAK,CAACwP,QAAQ,CAACZ,qBAAqB,CAAC7O,SAAS,CAAC;EACjD;EAEAlB,KAAK,CAAC4Q,KAAK,CAAC1P,SAAS,EAAEC,KAAK,EAAE,YAAY,CAAC;EAC3CnB,KAAK,CAAC4Q,KAAK,CAAC1P,SAAS,EAAEC,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC;;EAE9CnB,KAAK,CAAC8L,GAAG,CAAC5K,SAAS,EAAEC,KAAK,EAAE,CAAC,gBAAgB,EAAE,QAAQ,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,aAAa,CAAC,CAAC;EACpHnB,KAAK,CAAC6Q,MAAM,CAAC3P,SAAS,EAAEC,KAAK,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,yBAAyB,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;EACnJnB,KAAK,CAAC8Q,WAAW,CAAC5P,SAAS,EAAEC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAElDF,qBAAqB,CAACC,SAAS,EAAEC,KAAK,CAAC;AACzC,CAAC,CAAC;;AAEF,IAAI+E,WAAW,GAAGlG,KAAK,CAACkG,WAAW,CAACkK,MAAM,EAAE,uBAAuB,CAAC,CAAC,CAAC;AACtE;AACA;;AAEAnQ,uBAAuB,CAAC,QAAQ,EAAEiG,WAAW,CAAC,CAAC,CAAC;;AAEhD,IAAI6K,eAAe,GAAG;EACpB7K,WAAW,EAAEA,WAAW;EACxBkK,MAAM,EAAEA;AACV,CAAC;AAED,SAASW,eAAe,IAAIC,OAAO,EAAEZ,MAAM,EAAElK,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
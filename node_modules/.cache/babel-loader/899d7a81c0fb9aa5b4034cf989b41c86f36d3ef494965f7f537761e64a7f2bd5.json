{"ast":null,"code":"// Helper borrowed from paraviewweb/src/Common/Core\nimport CompositeClosureHelper from '../CompositeClosureHelper';\nimport Session from './session';\nconst DEFAULT_SECRET = 'wslink-secret';\nfunction getTransportObject(url) {\n  var idx = url.indexOf(':'),\n    protocol = url.substring(0, idx);\n  if (protocol === 'ws' || protocol === 'wss') {\n    return {\n      type: 'websocket',\n      url\n    };\n  }\n  throw new Error(`Unknown protocol (${protocol}) for url (${url}).  Unable to create transport object.`);\n}\nfunction WebsocketConnection(publicAPI, model) {\n  // TODO Should we try to reconnect on error?\n\n  publicAPI.connect = () => {\n    // without a URL we can't do anything.\n    if (!model.urls) return null;\n    // concat allows a single url or a list.\n    var uriList = [].concat(model.urls),\n      transports = [];\n    for (let i = 0; i < uriList.length; i += 1) {\n      const url = uriList[i];\n      try {\n        const transport = getTransportObject(url);\n        transports.push(transport);\n      } catch (transportCreateError) {\n        console.error(transportCreateError);\n        publicAPI.fireConnectionError(publicAPI, transportCreateError);\n        return null;\n      }\n    }\n    if (model.connection) {\n      if (model.connection.url !== transports[0].url) {\n        model.connection.close();\n      } else if (model.connection.readyState === 0 || model.connection.readyState === 1) {\n        // already connected.\n        return model.session;\n      }\n    }\n    try {\n      if (model.wsProxy) {\n        model.connection = new WSLINK.WebSocket(transports[0].url);\n      } else {\n        model.connection = new WebSocket(transports[0].url);\n      }\n    } catch (err) {\n      // If the server isn't running, we still don't enter here on Chrome -\n      // console shows a net::ERR_CONNECTION_REFUSED error inside WebSocket\n      console.error(err);\n      publicAPI.fireConnectionError(publicAPI, err);\n      return null;\n    }\n    model.connection.binaryType = 'blob';\n    if (!model.secret) model.secret = DEFAULT_SECRET;\n    model.session = Session.newInstance({\n      ws: model.connection,\n      secret: model.secret\n    });\n    model.connection.onopen = event => {\n      if (model.session) {\n        // sends handshake message - wait for reply before issuing ready()\n        model.session.onconnect(event).then(() => {\n          publicAPI.fireConnectionReady(publicAPI);\n        }, err => {\n          console.error('Connection error', err);\n          publicAPI.fireConnectionError(publicAPI, err);\n        });\n      }\n    };\n    model.connection.onclose = event => {\n      publicAPI.fireConnectionClose(publicAPI, event);\n      model.connection = null;\n      // return !model.retry; // true => Stop retry\n    };\n\n    model.connection.onerror = event => {\n      publicAPI.fireConnectionError(publicAPI, event);\n    };\n    // handle messages in the session.\n    model.connection.onmessage = event => {\n      model.session.onmessage(event);\n    };\n    return model.session;\n  };\n  publicAPI.getSession = () => model.session;\n  publicAPI.getUrl = () => model.connection ? model.connection.url : undefined;\n  function cleanUp(timeout = 10) {\n    if (model.connection && model.connection.readyState === 1 && model.session && timeout > 0) {\n      model.session.call('application.exit.later', [timeout]);\n    }\n    if (model.connection) {\n      model.connection.close();\n    }\n    model.connection = null;\n  }\n  publicAPI.destroy = CompositeClosureHelper.chain(cleanUp, publicAPI.destroy);\n}\nconst DEFAULT_VALUES = {\n  secret: DEFAULT_SECRET,\n  connection: null,\n  session: null,\n  retry: false,\n  wsProxy: false // Use WSLINK.WebSocket if true else native WebSocket\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  CompositeClosureHelper.destroy(publicAPI, model);\n  CompositeClosureHelper.event(publicAPI, model, 'ConnectionReady');\n  CompositeClosureHelper.event(publicAPI, model, 'ConnectionClose');\n  CompositeClosureHelper.event(publicAPI, model, 'ConnectionError');\n  CompositeClosureHelper.isA(publicAPI, model, 'WebsocketConnection');\n  WebsocketConnection(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = CompositeClosureHelper.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["CompositeClosureHelper","Session","DEFAULT_SECRET","getTransportObject","url","idx","indexOf","protocol","substring","type","Error","WebsocketConnection","publicAPI","model","connect","urls","uriList","concat","transports","i","length","transport","push","transportCreateError","console","error","fireConnectionError","connection","close","readyState","session","wsProxy","WSLINK","WebSocket","err","binaryType","secret","newInstance","ws","onopen","event","onconnect","then","fireConnectionReady","onclose","fireConnectionClose","onerror","onmessage","getSession","getUrl","undefined","cleanUp","timeout","call","destroy","chain","DEFAULT_VALUES","retry","extend","initialValues","Object","assign","isA"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/wslink/src/WebsocketConnection/index.js"],"sourcesContent":["// Helper borrowed from paraviewweb/src/Common/Core\nimport CompositeClosureHelper from '../CompositeClosureHelper';\nimport Session from './session';\n\nconst DEFAULT_SECRET = 'wslink-secret';\n\nfunction getTransportObject(url) {\n  var idx = url.indexOf(':'),\n    protocol = url.substring(0, idx);\n  if (protocol === 'ws' || protocol === 'wss') {\n    return {\n      type: 'websocket',\n      url,\n    };\n  }\n\n  throw new Error(\n    `Unknown protocol (${protocol}) for url (${url}).  Unable to create transport object.`\n  );\n}\n\nfunction WebsocketConnection(publicAPI, model) {\n  // TODO Should we try to reconnect on error?\n\n  publicAPI.connect = () => {\n    // without a URL we can't do anything.\n    if (!model.urls) return null;\n    // concat allows a single url or a list.\n    var uriList = [].concat(model.urls),\n      transports = [];\n\n    for (let i = 0; i < uriList.length; i += 1) {\n      const url = uriList[i];\n      try {\n        const transport = getTransportObject(url);\n        transports.push(transport);\n      } catch (transportCreateError) {\n        console.error(transportCreateError);\n        publicAPI.fireConnectionError(publicAPI, transportCreateError);\n        return null;\n      }\n    }\n\n    if (model.connection) {\n      if (model.connection.url !== transports[0].url) {\n        model.connection.close();\n      } else if (\n        model.connection.readyState === 0 ||\n        model.connection.readyState === 1\n      ) {\n        // already connected.\n        return model.session;\n      }\n    }\n    try {\n      if (model.wsProxy) {\n        model.connection = new WSLINK.WebSocket(transports[0].url);\n      } else {\n        model.connection = new WebSocket(transports[0].url);\n      }\n    } catch (err) {\n      // If the server isn't running, we still don't enter here on Chrome -\n      // console shows a net::ERR_CONNECTION_REFUSED error inside WebSocket\n      console.error(err);\n      publicAPI.fireConnectionError(publicAPI, err);\n      return null;\n    }\n\n    model.connection.binaryType = 'blob';\n    if (!model.secret) model.secret = DEFAULT_SECRET;\n    model.session = Session.newInstance({\n      ws: model.connection,\n      secret: model.secret,\n    });\n\n    model.connection.onopen = (event) => {\n      if (model.session) {\n        // sends handshake message - wait for reply before issuing ready()\n        model.session.onconnect(event).then(\n          () => {\n            publicAPI.fireConnectionReady(publicAPI);\n          },\n          (err) => {\n            console.error('Connection error', err);\n            publicAPI.fireConnectionError(publicAPI, err);\n          }\n        );\n      }\n    };\n\n    model.connection.onclose = (event) => {\n      publicAPI.fireConnectionClose(publicAPI, event);\n      model.connection = null;\n      // return !model.retry; // true => Stop retry\n    };\n    model.connection.onerror = (event) => {\n      publicAPI.fireConnectionError(publicAPI, event);\n    };\n    // handle messages in the session.\n    model.connection.onmessage = (event) => {\n      model.session.onmessage(event);\n    };\n    return model.session;\n  };\n\n  publicAPI.getSession = () => model.session;\n\n  publicAPI.getUrl = () =>\n    model.connection ? model.connection.url : undefined;\n\n  function cleanUp(timeout = 10) {\n    if (\n      model.connection &&\n      model.connection.readyState === 1 &&\n      model.session &&\n      timeout > 0\n    ) {\n      model.session.call('application.exit.later', [timeout]);\n    }\n    if (model.connection) {\n      model.connection.close();\n    }\n    model.connection = null;\n  }\n\n  publicAPI.destroy = CompositeClosureHelper.chain(cleanUp, publicAPI.destroy);\n}\n\nconst DEFAULT_VALUES = {\n  secret: DEFAULT_SECRET,\n  connection: null,\n  session: null,\n  retry: false,\n  wsProxy: false, // Use WSLINK.WebSocket if true else native WebSocket\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  CompositeClosureHelper.destroy(publicAPI, model);\n  CompositeClosureHelper.event(publicAPI, model, 'ConnectionReady');\n  CompositeClosureHelper.event(publicAPI, model, 'ConnectionClose');\n  CompositeClosureHelper.event(publicAPI, model, 'ConnectionError');\n  CompositeClosureHelper.isA(publicAPI, model, 'WebsocketConnection');\n\n  WebsocketConnection(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = CompositeClosureHelper.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
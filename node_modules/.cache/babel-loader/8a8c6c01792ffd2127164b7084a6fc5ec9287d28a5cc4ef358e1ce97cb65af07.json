{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkColorTransferFunction from './ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport Constants from './VolumeProperty/Constants.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar InterpolationType = Constants.InterpolationType,\n  OpacityMode = Constants.OpacityMode;\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar VTK_MAX_VRCOMP = 4; // ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n  publicAPI.getMTime = function () {\n    var mTime = model.mtime;\n    var time;\n    for (var index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } // Opacity MTimes\n\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n    return mTime;\n  };\n  publicAPI.getColorChannels = function (index) {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n    return model.componentData[index].colorChannels;\n  }; // Set the color of a volume to a gray transfer function\n\n  publicAPI.setGrayTransferFunction = function (index, func) {\n    var modified = false;\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      modified = true;\n    }\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.modified();\n    }\n    return modified;\n  }; // Get the currently set gray transfer function. Create one if none set.\n\n  publicAPI.getGrayTransferFunction = function (index) {\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[index].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n      publicAPI.modified();\n    }\n    return model.componentData[index].grayTransferFunction;\n  }; // Set the color of a volume to an RGB transfer function\n\n  publicAPI.setRGBTransferFunction = function (index, func) {\n    var modified = false;\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      modified = true;\n    }\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.modified();\n    }\n    return modified;\n  }; // Get the currently set RGB transfer function. Create one if none set.\n\n  publicAPI.getRGBTransferFunction = function (index) {\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[index].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(0, 0.0, 0.0, 0.0);\n      model.componentData[index].rGBTransferFunction.addRGBPoint(1024, 1.0, 1.0, 1.0);\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n      publicAPI.modified();\n    }\n    return model.componentData[index].rGBTransferFunction;\n  }; // Set the scalar opacity of a volume to a transfer function\n\n  publicAPI.setScalarOpacity = function (index, func) {\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  }; // Get the scalar opacity transfer function. Create one if none set.\n\n  publicAPI.getScalarOpacity = function (index) {\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[index].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n    return model.componentData[index].scalarOpacity;\n  };\n  publicAPI.setComponentWeight = function (index, value) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n    var val = Math.min(1, Math.max(0, value));\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getComponentWeight = function (index) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n    return model.componentData[index].componentWeight;\n  };\n  publicAPI.setInterpolationTypeToNearest = function () {\n    return publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n  publicAPI.setInterpolationTypeToLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n  publicAPI.setInterpolationTypeToFastLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  };\n  publicAPI.getInterpolationTypeAsString = function () {\n    return macro.enumToString(InterpolationType, model.interpolationType);\n  };\n  var sets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  sets.forEach(function (val) {\n    var cap = macro.capitalize(val);\n    publicAPI[\"set\".concat(cap)] = function (index, value) {\n      if (model.componentData[index][\"\".concat(val)] !== value) {\n        model.componentData[index][\"\".concat(val)] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  });\n  var gets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  gets.forEach(function (val) {\n    var cap = macro.capitalize(val);\n    publicAPI[\"get\".concat(cap)] = function (index) {\n      return model.componentData[index][\"\".concat(val)];\n    };\n  });\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  independentComponents: true,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: false,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: 1,\n  labelOutlineOpacity: 1.0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  if (!model.componentData) {\n    model.componentData = [];\n    for (var i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n        opacityMode: OpacityMode.FRACTIONAL,\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n        componentWeight: 1.0\n      });\n    }\n  }\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'shade', 'ambient', 'diffuse', 'specular', 'specularPower', 'useLabelOutline', 'labelOutlineThickness', 'labelOutlineOpacity']); // Object methods\n\n  vtkVolumeProperty(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeProperty'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeProperty$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\nexport { vtkVolumeProperty$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","vtkColorTransferFunction","vtkPiecewiseFunction","Constants","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","InterpolationType","OpacityMode","vtkErrorMacro","VTK_MAX_VRCOMP","vtkVolumeProperty","publicAPI","model","classHierarchy","getMTime","mTime","mtime","time","index","componentData","colorChannels","grayTransferFunction","rGBTransferFunction","scalarOpacity","gradientOpacity","disableGradientOpacity","getColorChannels","setGrayTransferFunction","func","modified","getGrayTransferFunction","newInstance","addPoint","setRGBTransferFunction","getRGBTransferFunction","addRGBPoint","setScalarOpacity","getScalarOpacity","setComponentWeight","value","val","Math","min","max","componentWeight","getComponentWeight","setInterpolationTypeToNearest","setInterpolationType","NEAREST","setInterpolationTypeToLinear","LINEAR","setInterpolationTypeToFastLinear","FAST_LINEAR","getInterpolationTypeAsString","enumToString","interpolationType","sets","cap","capitalize","concat","gets","DEFAULT_VALUES","independentComponents","shade","ambient","diffuse","specular","specularPower","useLabelOutline","labelOutlineThickness","labelOutlineOpacity","extend","initialValues","undefined","assign","obj","scalarOpacityUnitDistance","opacityMode","FRACTIONAL","gradientOpacityMinimumValue","gradientOpacityMinimumOpacity","gradientOpacityMaximumValue","gradientOpacityMaximumOpacity","useGradientOpacity","setGet","vtkVolumeProperty$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkColorTransferFunction from './ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport Constants from './VolumeProperty/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar InterpolationType = Constants.InterpolationType,\n    OpacityMode = Constants.OpacityMode;\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar VTK_MAX_VRCOMP = 4; // ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n\n  publicAPI.getMTime = function () {\n    var mTime = model.mtime;\n    var time;\n\n    for (var index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } // Opacity MTimes\n\n\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n\n    return mTime;\n  };\n\n  publicAPI.getColorChannels = function (index) {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n\n    return model.componentData[index].colorChannels;\n  }; // Set the color of a volume to a gray transfer function\n\n\n  publicAPI.setGrayTransferFunction = function (index, func) {\n    var modified = false;\n\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      modified = true;\n    }\n\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      modified = true;\n    }\n\n    if (modified) {\n      publicAPI.modified();\n    }\n\n    return modified;\n  }; // Get the currently set gray transfer function. Create one if none set.\n\n\n  publicAPI.getGrayTransferFunction = function (index) {\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[index].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].grayTransferFunction;\n  }; // Set the color of a volume to an RGB transfer function\n\n\n  publicAPI.setRGBTransferFunction = function (index, func) {\n    var modified = false;\n\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      modified = true;\n    }\n\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      modified = true;\n    }\n\n    if (modified) {\n      publicAPI.modified();\n    }\n\n    return modified;\n  }; // Get the currently set RGB transfer function. Create one if none set.\n\n\n  publicAPI.getRGBTransferFunction = function (index) {\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[index].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(0, 0.0, 0.0, 0.0);\n      model.componentData[index].rGBTransferFunction.addRGBPoint(1024, 1.0, 1.0, 1.0);\n\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].rGBTransferFunction;\n  }; // Set the scalar opacity of a volume to a transfer function\n\n\n  publicAPI.setScalarOpacity = function (index, func) {\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  }; // Get the scalar opacity transfer function. Create one if none set.\n\n\n  publicAPI.getScalarOpacity = function (index) {\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[index].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].scalarOpacity;\n  };\n\n  publicAPI.setComponentWeight = function (index, value) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n\n    var val = Math.min(1, Math.max(0, value));\n\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getComponentWeight = function (index) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n\n    return model.componentData[index].componentWeight;\n  };\n\n  publicAPI.setInterpolationTypeToNearest = function () {\n    return publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n\n  publicAPI.setInterpolationTypeToLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n\n  publicAPI.setInterpolationTypeToFastLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  };\n\n  publicAPI.getInterpolationTypeAsString = function () {\n    return macro.enumToString(InterpolationType, model.interpolationType);\n  };\n\n  var sets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  sets.forEach(function (val) {\n    var cap = macro.capitalize(val);\n\n    publicAPI[\"set\".concat(cap)] = function (index, value) {\n      if (model.componentData[index][\"\".concat(val)] !== value) {\n        model.componentData[index][\"\".concat(val)] = value;\n        publicAPI.modified();\n        return true;\n      }\n\n      return false;\n    };\n  });\n  var gets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  gets.forEach(function (val) {\n    var cap = macro.capitalize(val);\n\n    publicAPI[\"get\".concat(cap)] = function (index) {\n      return model.componentData[index][\"\".concat(val)];\n    };\n  });\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  independentComponents: true,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: false,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: 1,\n  labelOutlineOpacity: 1.0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n\n  if (!model.componentData) {\n    model.componentData = [];\n\n    for (var i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n        opacityMode: OpacityMode.FRACTIONAL,\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n        componentWeight: 1.0\n      });\n    }\n  }\n\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'shade', 'ambient', 'diffuse', 'specular', 'specularPower', 'useLabelOutline', 'labelOutlineThickness', 'labelOutlineOpacity']); // Object methods\n\n  vtkVolumeProperty(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeProperty'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeProperty$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkVolumeProperty$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
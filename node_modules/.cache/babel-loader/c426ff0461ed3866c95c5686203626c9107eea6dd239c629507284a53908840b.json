{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction extractCellSizes(cellArray) {\n  var currentIdx = 0;\n  return cellArray.filter(function (value, index) {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return true;\n    }\n    return false;\n  });\n}\nfunction getNumberOfCells(cellArray) {\n  var cellId = 0;\n  for (var cellArrayIndex = 0; cellArrayIndex < cellArray.length;) {\n    cellArrayIndex += cellArray[cellArrayIndex] + 1;\n    cellId++;\n  }\n  return cellId;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {\n  extractCellSizes: extractCellSizes,\n  getNumberOfCells: getNumberOfCells\n}; // ----------------------------------------------------------------------------\n// vtkCellArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellArray');\n  var superClass = _objectSpread({}, publicAPI);\n  publicAPI.getNumberOfCells = function (recompute) {\n    if (model.numberOfCells !== undefined && !recompute) {\n      return model.numberOfCells;\n    }\n    if (model.cellSizes) {\n      model.numberOfCells = model.cellSizes.length;\n    } else {\n      model.numberOfCells = getNumberOfCells(publicAPI.getData());\n    }\n    return model.numberOfCells;\n  };\n  publicAPI.getCellSizes = function (recompute) {\n    if (model.cellSizes !== undefined && !recompute) {\n      return model.cellSizes;\n    }\n    model.cellSizes = extractCellSizes(publicAPI.getData());\n    return model.cellSizes;\n  };\n  /**\n   * When `resize()` is being used, you then MUST use `insertNextCell()`.\n   */\n\n  publicAPI.resize = function (requestedNumTuples) {\n    var oldNumTuples = publicAPI.getNumberOfTuples();\n    superClass.resize(requestedNumTuples);\n    var newNumTuples = publicAPI.getNumberOfTuples();\n    if (newNumTuples < oldNumTuples) {\n      if (newNumTuples === 0) {\n        model.numberOfCells = 0;\n        model.cellSizes = [];\n      } else {\n        // We do not know how many cells are left.\n        // Set to undefined to ensure insertNextCell works correctly.\n        model.numberOfCells = undefined;\n        model.cellSizes = undefined;\n      }\n    }\n  };\n  publicAPI.setData = function (typedArray) {\n    superClass.setData(typedArray, 1);\n    model.numberOfCells = undefined;\n    model.cellSizes = undefined;\n  };\n  publicAPI.getCell = function (loc) {\n    var cellLoc = loc;\n    var numberOfPoints = model.values[cellLoc++];\n    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);\n  };\n  publicAPI.insertNextCell = function (cellPointIds) {\n    var cellId = publicAPI.getNumberOfCells();\n    publicAPI.insertNextTuples([cellPointIds.length].concat(_toConsumableArray(cellPointIds))); // By computing the number of cells earlier, we made sure that numberOfCells is defined\n\n    ++model.numberOfCells;\n    if (model.cellSizes != null) {\n      model.cellSizes.push(cellPointIds.length);\n    }\n    return cellId;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return _objectSpread({\n    empty: true,\n    numberOfComponents: 1,\n    dataType: VtkDataTypes.UNSIGNED_INT\n  }, initialValues);\n} // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkDataArray.extend(publicAPI, model, defaultValues(initialValues));\n  vtkCellArray(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCellArray'); // ----------------------------------------------------------------------------\n\nvar vtkCellArray$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\nexport { STATIC, vtkCellArray$1 as default, extend, newInstance };","map":{"version":3,"names":["_toConsumableArray","_defineProperty","macro","vtkDataArray","VtkDataTypes","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","extractCellSizes","cellArray","currentIdx","value","index","getNumberOfCells","cellId","cellArrayIndex","STATIC","vtkCellArray","publicAPI","model","classHierarchy","superClass","recompute","numberOfCells","undefined","cellSizes","getData","getCellSizes","resize","requestedNumTuples","oldNumTuples","getNumberOfTuples","newNumTuples","setData","typedArray","getCell","loc","cellLoc","numberOfPoints","values","subarray","insertNextCell","cellPointIds","insertNextTuples","concat","defaultValues","initialValues","empty","numberOfComponents","dataType","UNSIGNED_INT","extend","newInstance","vtkCellArray$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/Core/CellArray.js"],"sourcesContent":["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction extractCellSizes(cellArray) {\n  var currentIdx = 0;\n  return cellArray.filter(function (value, index) {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction getNumberOfCells(cellArray) {\n  var cellId = 0;\n\n  for (var cellArrayIndex = 0; cellArrayIndex < cellArray.length;) {\n    cellArrayIndex += cellArray[cellArrayIndex] + 1;\n    cellId++;\n  }\n\n  return cellId;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  extractCellSizes: extractCellSizes,\n  getNumberOfCells: getNumberOfCells\n}; // ----------------------------------------------------------------------------\n// vtkCellArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellArray');\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.getNumberOfCells = function (recompute) {\n    if (model.numberOfCells !== undefined && !recompute) {\n      return model.numberOfCells;\n    }\n\n    if (model.cellSizes) {\n      model.numberOfCells = model.cellSizes.length;\n    } else {\n      model.numberOfCells = getNumberOfCells(publicAPI.getData());\n    }\n\n    return model.numberOfCells;\n  };\n\n  publicAPI.getCellSizes = function (recompute) {\n    if (model.cellSizes !== undefined && !recompute) {\n      return model.cellSizes;\n    }\n\n    model.cellSizes = extractCellSizes(publicAPI.getData());\n    return model.cellSizes;\n  };\n  /**\n   * When `resize()` is being used, you then MUST use `insertNextCell()`.\n   */\n\n\n  publicAPI.resize = function (requestedNumTuples) {\n    var oldNumTuples = publicAPI.getNumberOfTuples();\n    superClass.resize(requestedNumTuples);\n    var newNumTuples = publicAPI.getNumberOfTuples();\n\n    if (newNumTuples < oldNumTuples) {\n      if (newNumTuples === 0) {\n        model.numberOfCells = 0;\n        model.cellSizes = [];\n      } else {\n        // We do not know how many cells are left.\n        // Set to undefined to ensure insertNextCell works correctly.\n        model.numberOfCells = undefined;\n        model.cellSizes = undefined;\n      }\n    }\n  };\n\n  publicAPI.setData = function (typedArray) {\n    superClass.setData(typedArray, 1);\n    model.numberOfCells = undefined;\n    model.cellSizes = undefined;\n  };\n\n  publicAPI.getCell = function (loc) {\n    var cellLoc = loc;\n    var numberOfPoints = model.values[cellLoc++];\n    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);\n  };\n\n  publicAPI.insertNextCell = function (cellPointIds) {\n    var cellId = publicAPI.getNumberOfCells();\n    publicAPI.insertNextTuples([cellPointIds.length].concat(_toConsumableArray(cellPointIds))); // By computing the number of cells earlier, we made sure that numberOfCells is defined\n\n    ++model.numberOfCells;\n\n    if (model.cellSizes != null) {\n      model.cellSizes.push(cellPointIds.length);\n    }\n\n    return cellId;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nfunction defaultValues(initialValues) {\n  return _objectSpread({\n    empty: true,\n    numberOfComponents: 1,\n    dataType: VtkDataTypes.UNSIGNED_INT\n  }, initialValues);\n} // ----------------------------------------------------------------------------\n\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkDataArray.extend(publicAPI, model, defaultValues(initialValues));\n  vtkCellArray(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCellArray'); // ----------------------------------------------------------------------------\n\nvar vtkCellArray$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkCellArray$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
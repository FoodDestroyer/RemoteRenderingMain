{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { newInstance as newInstance$1, obj } from '../../macros.js';\nimport vtkWebGPUCellArrayMapper from './CellArrayMapper.js';\nimport vtkWebGPUPolyDataMapper from './PolyDataMapper.js';\nimport vtkWebGPUStorageBuffer from './StorageBuffer.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction vtkWebGPUGlyph3DCellArrayMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUGlyph3DCellArrayMapper');\n  var superClass = _objectSpread({}, publicAPI);\n  publicAPI.setGlyphInstances = function (val) {\n    model.glyphInstances = val;\n  };\n  publicAPI.updateBuffers = function () {\n    superClass.updateBuffers();\n    publicAPI.setNumberOfInstances(model.glyphInstances);\n  };\n  publicAPI.replaceShaderPosition = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinInput('u32', '@builtin(instance_index) instanceIndex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    if (!vDesc.hasOutput('vertexVC')) vDesc.addOutput('vec3<f32>', 'vertexVC');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    var vertexSC: vec4<f32> = mapperUBO.BCSCMatrix*glyphSSBO.values[input.instanceIndex].matrix*vertexBC;', '    output.vertexVC = (rendererUBO.SCVCMatrix*vertexSC).xyz;', '    output.Position = rendererUBO.SCPCMatrix*vertexSC;']).result;\n    vDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n  publicAPI.replaceShaderNormal = function (hash, pipeline, vertexInput) {\n    if (vertexInput.hasAttribute('normalMC')) {\n      var vDesc = pipeline.getShaderDescription('vertex');\n      var code = vDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Normal::Impl', ['  output.normalVC = normalize((rendererUBO.WCVCNormals', ' * mapperUBO.MCWCNormals', ' * glyphSSBO.values[input.instanceIndex].normal*normalMC).xyz);']).result;\n      vDesc.setCode(code);\n    }\n    superClass.replaceShaderNormal(hash, pipeline, vertexInput);\n  };\n  model.shaderReplacements.set('replaceShaderNormal', publicAPI.replaceShaderNormal);\n  publicAPI.replaceShaderColor = function (hash, pipeline, vertexInput) {\n    if (!model.renderable.getColorArray()) {\n      superClass.replaceShaderColor(hash, pipeline, vertexInput);\n      return;\n    }\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addOutput('vec4<f32>', 'color');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Color::Impl', ['  output.color = glyphSSBO.values[input.instanceIndex].color;']).result;\n    vDesc.setCode(code);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Color::Impl', ['ambientColor = input.color;', 'diffuseColor = input.color;', 'opacity = mapperUBO.Opacity * input.color.a;']).result;\n    fDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderColor', publicAPI.replaceShaderColor);\n  publicAPI.replaceShaderSelect = function (hash, pipeline, vertexInput) {\n    if (hash.includes('sel')) {\n      var vDesc = pipeline.getShaderDescription('vertex');\n      vDesc.addOutput('u32', 'compositeID', 'flat');\n      var code = vDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Select::Impl', ['  output.compositeID = input.instanceIndex;']).result;\n      vDesc.setCode(code);\n      var fDesc = pipeline.getShaderDescription('fragment');\n      code = fDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Select::Impl', ['var compositeID: u32 = input.compositeID;']).result;\n      fDesc.setCode(code);\n    }\n  };\n  model.shaderReplacements.set('replaceShaderSelect', publicAPI.replaceShaderSelect);\n} // ----------------------------------------------------------------------------\n\nfunction caExtend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, {}, initialValues); // Inheritance\n\n  vtkWebGPUCellArrayMapper.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkWebGPUGlyph3DCellArrayMapper(publicAPI, model);\n}\nvar caNewInstance = newInstance$1(caExtend, 'vtkWebGPUGlyph3DCellArrayMapper'); // ----------------------------------------------------------------------------\n// vtkWebGPUSphereMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUGlyph3DMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUGlyph3DMapper');\n  publicAPI.createCellArrayMapper = function () {\n    var mpr = caNewInstance();\n    mpr.setSSBO(model.SSBO);\n    mpr.setRenderable(model.renderable);\n    return mpr;\n  };\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor');\n      if (!model.renderable.getStatic()) {\n        model.renderable.update();\n      }\n      var gpoly = model.renderable.getInputData(1);\n      model.renderable.mapScalars(gpoly, 1.0);\n      publicAPI.updateSSBO();\n      publicAPI.updateCellArrayMappers(gpoly);\n      for (var i = 0; i < model.children.length; i++) {\n        var cellMapper = model.children[i];\n        cellMapper.setGlyphInstances(model.numInstances);\n      }\n    }\n  };\n  publicAPI.updateSSBO = function () {\n    model.currentInput = model.renderable.getInputData(1);\n    model.renderable.buildArrays(); // update the buffer objects if needed\n\n    var garray = model.renderable.getMatrixArray();\n    var narray = model.renderable.getNormalArray();\n    model.carray = model.renderable.getColorArray();\n    model.numInstances = garray.length / 16;\n    if (model.renderable.getBuildTime().getMTime() > model.glyphBOBuildTime.getMTime()) {\n      // In Core class all arrays are rebuilt when this happens\n      // but these arrays can be shared between all primType\n      model.WebGPURenderWindow = publicAPI.getFirstAncestorOfType('vtkWebGPURenderWindow');\n      var device = model.WebGPURenderWindow.getDevice();\n      model.SSBO.clearData();\n      model.SSBO.setNumberOfInstances(model.numInstances);\n      model.SSBO.addEntry('matrix', 'mat4x4<f32>');\n      model.SSBO.addEntry('normal', 'mat4x4<f32>');\n      if (model.carray) {\n        model.SSBO.addEntry('color', 'vec4<f32>');\n      }\n      model.SSBO.setAllInstancesFromArray('matrix', garray);\n      model.SSBO.setAllInstancesFromArray3x3To4x4('normal', narray);\n      if (model.carray) {\n        model.SSBO.setAllInstancesFromArrayColorToFloat('color', model.carray.getData());\n      }\n      model.SSBO.send(device);\n      model.glyphBOBuildTime.modified();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkWebGPUPolyDataMapper.extend(publicAPI, model, initialValues);\n  model.glyphBOBuildTime = {};\n  obj(model.glyphBOBuildTime, {\n    mtime: 0\n  });\n  model.SSBO = vtkWebGPUStorageBuffer.newInstance({\n    label: 'glyphSSBO'\n  }); // Object methods\n\n  vtkWebGPUGlyph3DMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUGlyph3DMapper'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkGlyph3DMapper', newInstance);\nexport { caExtend, index as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","newInstance","newInstance$1","obj","vtkWebGPUCellArrayMapper","vtkWebGPUPolyDataMapper","vtkWebGPUStorageBuffer","vtkWebGPUShaderCache","registerOverride","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkWebGPUGlyph3DCellArrayMapper","publicAPI","model","classHierarchy","superClass","setGlyphInstances","val","glyphInstances","updateBuffers","setNumberOfInstances","replaceShaderPosition","hash","pipeline","vertexInput","vDesc","getShaderDescription","addBuiltinInput","addBuiltinOutput","hasOutput","addOutput","code","getCode","substitute","result","setCode","shaderReplacements","set","replaceShaderNormal","hasAttribute","replaceShaderColor","renderable","getColorArray","fDesc","replaceShaderSelect","includes","caExtend","initialValues","undefined","assign","extend","caNewInstance","vtkWebGPUGlyph3DMapper","createCellArrayMapper","mpr","setSSBO","SSBO","setRenderable","buildPass","prepass","WebGPUActor","getFirstAncestorOfType","getStatic","update","gpoly","getInputData","mapScalars","updateSSBO","updateCellArrayMappers","children","cellMapper","numInstances","currentInput","buildArrays","garray","getMatrixArray","narray","getNormalArray","carray","getBuildTime","getMTime","glyphBOBuildTime","WebGPURenderWindow","device","getDevice","clearData","addEntry","setAllInstancesFromArray","setAllInstancesFromArray3x3To4x4","setAllInstancesFromArrayColorToFloat","getData","send","modified","DEFAULT_VALUES","mtime","label","index","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/WebGPU/Glyph3DMapper.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { newInstance as newInstance$1, obj } from '../../macros.js';\nimport vtkWebGPUCellArrayMapper from './CellArrayMapper.js';\nimport vtkWebGPUPolyDataMapper from './PolyDataMapper.js';\nimport vtkWebGPUStorageBuffer from './StorageBuffer.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction vtkWebGPUGlyph3DCellArrayMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUGlyph3DCellArrayMapper');\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.setGlyphInstances = function (val) {\n    model.glyphInstances = val;\n  };\n\n  publicAPI.updateBuffers = function () {\n    superClass.updateBuffers();\n    publicAPI.setNumberOfInstances(model.glyphInstances);\n  };\n\n  publicAPI.replaceShaderPosition = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinInput('u32', '@builtin(instance_index) instanceIndex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    if (!vDesc.hasOutput('vertexVC')) vDesc.addOutput('vec3<f32>', 'vertexVC');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    var vertexSC: vec4<f32> = mapperUBO.BCSCMatrix*glyphSSBO.values[input.instanceIndex].matrix*vertexBC;', '    output.vertexVC = (rendererUBO.SCVCMatrix*vertexSC).xyz;', '    output.Position = rendererUBO.SCPCMatrix*vertexSC;']).result;\n    vDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n\n  publicAPI.replaceShaderNormal = function (hash, pipeline, vertexInput) {\n    if (vertexInput.hasAttribute('normalMC')) {\n      var vDesc = pipeline.getShaderDescription('vertex');\n      var code = vDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Normal::Impl', ['  output.normalVC = normalize((rendererUBO.WCVCNormals', ' * mapperUBO.MCWCNormals', ' * glyphSSBO.values[input.instanceIndex].normal*normalMC).xyz);']).result;\n      vDesc.setCode(code);\n    }\n\n    superClass.replaceShaderNormal(hash, pipeline, vertexInput);\n  };\n\n  model.shaderReplacements.set('replaceShaderNormal', publicAPI.replaceShaderNormal);\n\n  publicAPI.replaceShaderColor = function (hash, pipeline, vertexInput) {\n    if (!model.renderable.getColorArray()) {\n      superClass.replaceShaderColor(hash, pipeline, vertexInput);\n      return;\n    }\n\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addOutput('vec4<f32>', 'color');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Color::Impl', ['  output.color = glyphSSBO.values[input.instanceIndex].color;']).result;\n    vDesc.setCode(code);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Color::Impl', ['ambientColor = input.color;', 'diffuseColor = input.color;', 'opacity = mapperUBO.Opacity * input.color.a;']).result;\n    fDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderColor', publicAPI.replaceShaderColor);\n\n  publicAPI.replaceShaderSelect = function (hash, pipeline, vertexInput) {\n    if (hash.includes('sel')) {\n      var vDesc = pipeline.getShaderDescription('vertex');\n      vDesc.addOutput('u32', 'compositeID', 'flat');\n      var code = vDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Select::Impl', ['  output.compositeID = input.instanceIndex;']).result;\n      vDesc.setCode(code);\n      var fDesc = pipeline.getShaderDescription('fragment');\n      code = fDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Select::Impl', ['var compositeID: u32 = input.compositeID;']).result;\n      fDesc.setCode(code);\n    }\n  };\n\n  model.shaderReplacements.set('replaceShaderSelect', publicAPI.replaceShaderSelect);\n} // ----------------------------------------------------------------------------\n\n\nfunction caExtend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, {}, initialValues); // Inheritance\n\n  vtkWebGPUCellArrayMapper.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkWebGPUGlyph3DCellArrayMapper(publicAPI, model);\n}\nvar caNewInstance = newInstance$1(caExtend, 'vtkWebGPUGlyph3DCellArrayMapper'); // ----------------------------------------------------------------------------\n// vtkWebGPUSphereMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUGlyph3DMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUGlyph3DMapper');\n\n  publicAPI.createCellArrayMapper = function () {\n    var mpr = caNewInstance();\n    mpr.setSSBO(model.SSBO);\n    mpr.setRenderable(model.renderable);\n    return mpr;\n  };\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor');\n\n      if (!model.renderable.getStatic()) {\n        model.renderable.update();\n      }\n\n      var gpoly = model.renderable.getInputData(1);\n      model.renderable.mapScalars(gpoly, 1.0);\n      publicAPI.updateSSBO();\n      publicAPI.updateCellArrayMappers(gpoly);\n\n      for (var i = 0; i < model.children.length; i++) {\n        var cellMapper = model.children[i];\n        cellMapper.setGlyphInstances(model.numInstances);\n      }\n    }\n  };\n\n  publicAPI.updateSSBO = function () {\n    model.currentInput = model.renderable.getInputData(1);\n    model.renderable.buildArrays(); // update the buffer objects if needed\n\n    var garray = model.renderable.getMatrixArray();\n    var narray = model.renderable.getNormalArray();\n    model.carray = model.renderable.getColorArray();\n    model.numInstances = garray.length / 16;\n\n    if (model.renderable.getBuildTime().getMTime() > model.glyphBOBuildTime.getMTime()) {\n      // In Core class all arrays are rebuilt when this happens\n      // but these arrays can be shared between all primType\n      model.WebGPURenderWindow = publicAPI.getFirstAncestorOfType('vtkWebGPURenderWindow');\n      var device = model.WebGPURenderWindow.getDevice();\n      model.SSBO.clearData();\n      model.SSBO.setNumberOfInstances(model.numInstances);\n      model.SSBO.addEntry('matrix', 'mat4x4<f32>');\n      model.SSBO.addEntry('normal', 'mat4x4<f32>');\n\n      if (model.carray) {\n        model.SSBO.addEntry('color', 'vec4<f32>');\n      }\n\n      model.SSBO.setAllInstancesFromArray('matrix', garray);\n      model.SSBO.setAllInstancesFromArray3x3To4x4('normal', narray);\n\n      if (model.carray) {\n        model.SSBO.setAllInstancesFromArrayColorToFloat('color', model.carray.getData());\n      }\n\n      model.SSBO.send(device);\n      model.glyphBOBuildTime.modified();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkWebGPUPolyDataMapper.extend(publicAPI, model, initialValues);\n  model.glyphBOBuildTime = {};\n  obj(model.glyphBOBuildTime, {\n    mtime: 0\n  });\n  model.SSBO = vtkWebGPUStorageBuffer.newInstance({\n    label: 'glyphSSBO'\n  }); // Object methods\n\n  vtkWebGPUGlyph3DMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUGlyph3DMapper'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkGlyph3DMapper', newInstance);\n\nexport { caExtend, index as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
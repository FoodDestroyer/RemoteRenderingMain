{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nimport DefaultProtocol from 'vtk.js/Sources/IO/Core/ImageStream/DefaultProtocol';\nimport ViewStream from 'vtk.js/Sources/IO/Core/ImageStream/ViewStream';\nfunction vtkImageStream(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageStream');\n\n  // --------------------------------------------------------------------------\n  // Internal private method\n  // --------------------------------------------------------------------------\n\n  function onImage(data) {\n    const message = data[0];\n    if (!message || !message.image) {\n      return;\n    }\n    for (let i = 0; i < model.viewStreams.length; i++) {\n      model.viewStreams[i].processMessage(message);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // PublicAPI\n  // --------------------------------------------------------------------------\n\n  publicAPI.setServerAnimationFPS = (maxFPS = 30) => {\n    let changeDetected = false;\n    if (model.serverAnimationFPS !== maxFPS) {\n      model.serverAnimationFPS = maxFPS;\n      changeDetected = true;\n    }\n    if (!model.protocol) {\n      return Promise.resolve(true);\n    }\n    if (changeDetected) {\n      publicAPI.modified();\n    }\n    return model.protocol.setServerAnimationFPS(maxFPS);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.connect = (session, protocol = DefaultProtocol) => {\n    if (model.connected || !session || !protocol) {\n      return;\n    }\n    model.protocol = protocol(session);\n    model.protocol.subscribeToImageStream(onImage).promise // new API in wslink 1.0.5+\n    .then(subscription => {\n      model.renderTopicSubscription = subscription;\n      model.connected = true;\n    }).catch(e => {\n      model.connected = false;\n      console.error(e);\n    });\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.disconnect = () => {\n    if (model.protocol && model.connected && model.renderTopicSubscription) {\n      model.protocol.unsubscribeToImageStream(model.renderTopicSubscription);\n      model.renderTopicSubscription = null;\n    }\n    model.connected = false;\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.registerViewStream = view => {\n    model.viewStreams.push(view);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.unregisterViewStream = view => {\n    model.viewStreams = model.viewStreams.filter(v => v !== view);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.createViewStream = (viewId = '-1', size = [400, 400]) => {\n    const {\n      setServerAnimationFPS,\n      getServerAnimationFPS,\n      unregisterViewStream\n    } = publicAPI;\n    const viewStream = ViewStream.newInstance({\n      protocol: model.protocol,\n      unregisterViewStream,\n      sharedAPI: {\n        setServerAnimationFPS,\n        getServerAnimationFPS\n      }\n    });\n    viewStream.setViewId(viewId);\n    viewStream.setSize(size[0], size[1]);\n    publicAPI.registerViewStream(viewStream);\n    return viewStream;\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.delete = macro.chain(() => {\n    while (model.viewStreams.length) {\n      model.viewStreams.pop().delete();\n    }\n    publicAPI.disconnect();\n  }, publicAPI.delete);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // protocol: null,\n  viewStreams: [],\n  serverAnimationFPS: -1\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['serverAnimationFPS', 'protocol']);\n\n  // Object specific methods\n  vtkImageStream(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkImageStream');\n\n// ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","DefaultProtocol","ViewStream","vtkImageStream","publicAPI","model","classHierarchy","push","onImage","data","message","image","i","viewStreams","length","processMessage","setServerAnimationFPS","maxFPS","changeDetected","serverAnimationFPS","protocol","Promise","resolve","modified","connect","session","connected","subscribeToImageStream","promise","then","subscription","renderTopicSubscription","catch","e","console","error","disconnect","unsubscribeToImageStream","registerViewStream","view","unregisterViewStream","filter","v","createViewStream","viewId","size","getServerAnimationFPS","viewStream","newInstance","sharedAPI","setViewId","setSize","delete","chain","pop","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","get"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/vtk.js/Sources/IO/Core/ImageStream/index.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport DefaultProtocol from 'vtk.js/Sources/IO/Core/ImageStream/DefaultProtocol';\nimport ViewStream from 'vtk.js/Sources/IO/Core/ImageStream/ViewStream';\n\nfunction vtkImageStream(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageStream');\n\n  // --------------------------------------------------------------------------\n  // Internal private method\n  // --------------------------------------------------------------------------\n\n  function onImage(data) {\n    const message = data[0];\n    if (!message || !message.image) {\n      return;\n    }\n    for (let i = 0; i < model.viewStreams.length; i++) {\n      model.viewStreams[i].processMessage(message);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // PublicAPI\n  // --------------------------------------------------------------------------\n\n  publicAPI.setServerAnimationFPS = (maxFPS = 30) => {\n    let changeDetected = false;\n    if (model.serverAnimationFPS !== maxFPS) {\n      model.serverAnimationFPS = maxFPS;\n      changeDetected = true;\n    }\n\n    if (!model.protocol) {\n      return Promise.resolve(true);\n    }\n\n    if (changeDetected) {\n      publicAPI.modified();\n    }\n\n    return model.protocol.setServerAnimationFPS(maxFPS);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.connect = (session, protocol = DefaultProtocol) => {\n    if (model.connected || !session || !protocol) {\n      return;\n    }\n    model.protocol = protocol(session);\n    model.protocol\n      .subscribeToImageStream(onImage)\n      .promise // new API in wslink 1.0.5+\n      .then((subscription) => {\n        model.renderTopicSubscription = subscription;\n        model.connected = true;\n      })\n      .catch((e) => {\n        model.connected = false;\n        console.error(e);\n      });\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.disconnect = () => {\n    if (model.protocol && model.connected && model.renderTopicSubscription) {\n      model.protocol.unsubscribeToImageStream(model.renderTopicSubscription);\n      model.renderTopicSubscription = null;\n    }\n    model.connected = false;\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.registerViewStream = (view) => {\n    model.viewStreams.push(view);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.unregisterViewStream = (view) => {\n    model.viewStreams = model.viewStreams.filter((v) => v !== view);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.createViewStream = (viewId = '-1', size = [400, 400]) => {\n    const {\n      setServerAnimationFPS,\n      getServerAnimationFPS,\n      unregisterViewStream,\n    } = publicAPI;\n    const viewStream = ViewStream.newInstance({\n      protocol: model.protocol,\n      unregisterViewStream,\n      sharedAPI: {\n        setServerAnimationFPS,\n        getServerAnimationFPS,\n      },\n    });\n    viewStream.setViewId(viewId);\n    viewStream.setSize(size[0], size[1]);\n    publicAPI.registerViewStream(viewStream);\n\n    return viewStream;\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.delete = macro.chain(() => {\n    while (model.viewStreams.length) {\n      model.viewStreams.pop().delete();\n    }\n    publicAPI.disconnect();\n  }, publicAPI.delete);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // protocol: null,\n  viewStreams: [],\n  serverAnimationFPS: -1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['serverAnimationFPS', 'protocol']);\n\n  // Object specific methods\n  vtkImageStream(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkImageStream');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,uBAAuB;AACzC,OAAOC,eAAe,MAAM,oDAAoD;AAChF,OAAOC,UAAU,MAAM,+CAA+C;AAEtE,SAASC,cAAcA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACxC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,gBAAgB,CAAC;;EAE3C;EACA;EACA;;EAEA,SAASC,OAAOA,CAACC,IAAI,EAAE;IACrB,MAAMC,OAAO,GAAGD,IAAI,CAAC,CAAC,CAAC;IACvB,IAAI,CAACC,OAAO,IAAI,CAACA,OAAO,CAACC,KAAK,EAAE;MAC9B;IACF;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,CAACQ,WAAW,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MACjDP,KAAK,CAACQ,WAAW,CAACD,CAAC,CAAC,CAACG,cAAc,CAACL,OAAO,CAAC;IAC9C;EACF;;EAEA;EACA;EACA;;EAEAN,SAAS,CAACY,qBAAqB,GAAG,CAACC,MAAM,GAAG,EAAE,KAAK;IACjD,IAAIC,cAAc,GAAG,KAAK;IAC1B,IAAIb,KAAK,CAACc,kBAAkB,KAAKF,MAAM,EAAE;MACvCZ,KAAK,CAACc,kBAAkB,GAAGF,MAAM;MACjCC,cAAc,GAAG,IAAI;IACvB;IAEA,IAAI,CAACb,KAAK,CAACe,QAAQ,EAAE;MACnB,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;IAC9B;IAEA,IAAIJ,cAAc,EAAE;MAClBd,SAAS,CAACmB,QAAQ,CAAC,CAAC;IACtB;IAEA,OAAOlB,KAAK,CAACe,QAAQ,CAACJ,qBAAqB,CAACC,MAAM,CAAC;EACrD,CAAC;;EAED;;EAEAb,SAAS,CAACoB,OAAO,GAAG,CAACC,OAAO,EAAEL,QAAQ,GAAGnB,eAAe,KAAK;IAC3D,IAAII,KAAK,CAACqB,SAAS,IAAI,CAACD,OAAO,IAAI,CAACL,QAAQ,EAAE;MAC5C;IACF;IACAf,KAAK,CAACe,QAAQ,GAAGA,QAAQ,CAACK,OAAO,CAAC;IAClCpB,KAAK,CAACe,QAAQ,CACXO,sBAAsB,CAACnB,OAAO,CAAC,CAC/BoB,OAAO,CAAC;IAAA,CACRC,IAAI,CAAEC,YAAY,IAAK;MACtBzB,KAAK,CAAC0B,uBAAuB,GAAGD,YAAY;MAC5CzB,KAAK,CAACqB,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDM,KAAK,CAAEC,CAAC,IAAK;MACZ5B,KAAK,CAACqB,SAAS,GAAG,KAAK;MACvBQ,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;;EAED;;EAEA7B,SAAS,CAACgC,UAAU,GAAG,MAAM;IAC3B,IAAI/B,KAAK,CAACe,QAAQ,IAAIf,KAAK,CAACqB,SAAS,IAAIrB,KAAK,CAAC0B,uBAAuB,EAAE;MACtE1B,KAAK,CAACe,QAAQ,CAACiB,wBAAwB,CAAChC,KAAK,CAAC0B,uBAAuB,CAAC;MACtE1B,KAAK,CAAC0B,uBAAuB,GAAG,IAAI;IACtC;IACA1B,KAAK,CAACqB,SAAS,GAAG,KAAK;EACzB,CAAC;;EAED;;EAEAtB,SAAS,CAACkC,kBAAkB,GAAIC,IAAI,IAAK;IACvClC,KAAK,CAACQ,WAAW,CAACN,IAAI,CAACgC,IAAI,CAAC;EAC9B,CAAC;;EAED;;EAEAnC,SAAS,CAACoC,oBAAoB,GAAID,IAAI,IAAK;IACzClC,KAAK,CAACQ,WAAW,GAAGR,KAAK,CAACQ,WAAW,CAAC4B,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKH,IAAI,CAAC;EACjE,CAAC;;EAED;;EAEAnC,SAAS,CAACuC,gBAAgB,GAAG,CAACC,MAAM,GAAG,IAAI,EAAEC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK;IACjE,MAAM;MACJ7B,qBAAqB;MACrB8B,qBAAqB;MACrBN;IACF,CAAC,GAAGpC,SAAS;IACb,MAAM2C,UAAU,GAAG7C,UAAU,CAAC8C,WAAW,CAAC;MACxC5B,QAAQ,EAAEf,KAAK,CAACe,QAAQ;MACxBoB,oBAAoB;MACpBS,SAAS,EAAE;QACTjC,qBAAqB;QACrB8B;MACF;IACF,CAAC,CAAC;IACFC,UAAU,CAACG,SAAS,CAACN,MAAM,CAAC;IAC5BG,UAAU,CAACI,OAAO,CAACN,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;IACpCzC,SAAS,CAACkC,kBAAkB,CAACS,UAAU,CAAC;IAExC,OAAOA,UAAU;EACnB,CAAC;;EAED;;EAEA3C,SAAS,CAACgD,MAAM,GAAGpD,KAAK,CAACqD,KAAK,CAAC,MAAM;IACnC,OAAOhD,KAAK,CAACQ,WAAW,CAACC,MAAM,EAAE;MAC/BT,KAAK,CAACQ,WAAW,CAACyC,GAAG,CAAC,CAAC,CAACF,MAAM,CAAC,CAAC;IAClC;IACAhD,SAAS,CAACgC,UAAU,CAAC,CAAC;EACxB,CAAC,EAAEhC,SAAS,CAACgD,MAAM,CAAC;AACtB;;AAEA;AACA;AACA;;AAEA,MAAMG,cAAc,GAAG;EACrB;EACA1C,WAAW,EAAE,EAAE;EACfM,kBAAkB,EAAE,CAAC;AACvB,CAAC;;AAED;;AAEA,OAAO,SAASqC,MAAMA,CAACpD,SAAS,EAAEC,KAAK,EAAEoD,aAAa,GAAG,CAAC,CAAC,EAAE;EAC3DC,MAAM,CAACC,MAAM,CAACtD,KAAK,EAAEkD,cAAc,EAAEE,aAAa,CAAC;;EAEnD;EACAzD,KAAK,CAAC4D,GAAG,CAACxD,SAAS,EAAEC,KAAK,CAAC;EAC3BL,KAAK,CAAC6D,GAAG,CAACzD,SAAS,EAAEC,KAAK,EAAE,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;;EAE/D;EACAF,cAAc,CAACC,SAAS,EAAEC,KAAK,CAAC;AAClC;;AAEA;;AAEA,OAAO,MAAM2C,WAAW,GAAGhD,KAAK,CAACgD,WAAW,CAACQ,MAAM,EAAE,gBAAgB,CAAC;;AAEtE;;AAEA,eAAe;EAAER,WAAW;EAAEQ;AAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
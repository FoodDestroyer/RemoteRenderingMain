{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { s as subtract, d as dot, j as cross, k as add } from '../Core/Math/index.js';\nimport macro from '../../macros.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar PLANE_TOLERANCE = 1.0e-6;\nvar COINCIDE = 'coincide';\nvar DISJOINT = 'disjoint'; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n}\nfunction distanceToPlane(x, origin, normal) {\n  var distance = normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n  return Math.abs(distance);\n}\nfunction projectPoint(x, origin, normal, xproj) {\n  var xo = [];\n  subtract(x, origin, xo);\n  var t = dot(normal, xo);\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\nfunction projectVector(v, normal, vproj) {\n  var t = dot(v, normal);\n  var n2 = dot(normal, normal);\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n  vproj[0] = v[0] - t * normal[0] / n2;\n  vproj[1] = v[1] - t * normal[1] / n2;\n  vproj[2] = v[2] - t * normal[2] / n2;\n  return vproj;\n}\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  var xo = [];\n  subtract(x, origin, xo);\n  var t = dot(normal, xo);\n  var n2 = dot(normal, normal);\n  if (n2 !== 0) {\n    xproj[0] = x[0] - t * normal[0] / n2;\n    xproj[1] = x[1] - t * normal[1] / n2;\n    xproj[2] = x[2] - t * normal[2] / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\nfunction intersectWithLine(p1, p2, origin, normal) {\n  var outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: []\n  };\n  var p21 = [];\n  var p1Origin = []; // Compute line vector\n\n  subtract(p2, p1, p21);\n  subtract(origin, p1, p1Origin); // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n\n  var num = dot(normal, p1Origin);\n  var den = dot(normal, p21); // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n\n  var fabsden;\n  var fabstolerance; // Trying to avoid an expensive call to fabs()\n\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  } // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n\n  outObj.t = num / den;\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\nfunction intersectWithPlane(plane1Origin, plane1Normal, plane2Origin, plane2Normal) {\n  var outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null\n  };\n  var cross$1 = [];\n  cross(plane1Normal, plane2Normal, cross$1);\n  var absCross = cross$1.map(function (n) {\n    return Math.abs(n);\n  }); // test if the two planes are parallel\n\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    var v = [];\n    subtract(plane1Origin, plane2Origin, v);\n    if (dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n    return outObj;\n  } // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n\n  var maxc;\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  } // To get a point on the intersect line, zero the max coord, and solve for the other two\n\n  var iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n\n  var d1 = -dot(plane1Normal, plane1Origin);\n  var d2 = -dot(plane2Normal, plane2Origin); // eslint-disable-next-line default-case\n\n  switch (maxc) {\n    case 'x':\n      // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross$1[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross$1[0];\n      break;\n    case 'y':\n      // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross$1[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross$1[1];\n      break;\n    case 'z':\n      // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross$1[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross$1[2];\n      iP[2] = 0;\n      break;\n  }\n  outObj.l0 = iP;\n  add(iP, cross$1, outObj.l1);\n  outObj.intersection = true;\n  return outObj;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {\n  evaluate: evaluate,\n  distanceToPlane: distanceToPlane,\n  projectPoint: projectPoint,\n  projectVector: projectVector,\n  generalizedProjectPoint: generalizedProjectPoint,\n  intersectWithLine: intersectWithLine,\n  intersectWithPlane: intersectWithPlane,\n  DISJOINT: DISJOINT,\n  COINCIDE: COINCIDE\n}; // ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n  publicAPI.distanceToPlane = function (x) {\n    return distanceToPlane(x, model.origin, model.normal);\n  };\n  publicAPI.projectPoint = function (x, xproj) {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n  publicAPI.projectVector = function (v, vproj) {\n    return projectVector(v, model.normal, vproj);\n  };\n  publicAPI.push = function (distance) {\n    if (distance === 0.0) {\n      return;\n    }\n    for (var i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n  publicAPI.generalizedProjectPoint = function (x, xproj) {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n  publicAPI.evaluateFunction = function (x, y, z) {\n    if (!Array.isArray(x)) {\n      return model.normal[0] * (x - model.origin[0]) + model.normal[1] * (y - model.origin[1]) + model.normal[2] * (z - model.origin[2]);\n    }\n    return model.normal[0] * (x[0] - model.origin[0]) + model.normal[1] * (x[1] - model.origin[1]) + model.normal[2] * (x[2] - model.origin[2]);\n  };\n  publicAPI.evaluateGradient = function (xyz) {\n    var retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n  publicAPI.intersectWithLine = function (p1, p2) {\n    return intersectWithLine(p1, p2, model.origin, model.normal);\n  };\n  publicAPI.intersectWithPlane = function (planeOrigin, planeNormal) {\n    return intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n  vtkPlane(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPlane'); // ----------------------------------------------------------------------------\n\nvar vtkPlane$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\nexport { STATIC, vtkPlane$1 as default, extend, newInstance, vtkPlane };","map":{"version":3,"names":["_defineProperty","s","subtract","d","dot","j","cross","k","add","macro","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","PLANE_TOLERANCE","COINCIDE","DISJOINT","evaluate","normal","origin","x","distanceToPlane","distance","Math","abs","projectPoint","xproj","xo","t","projectVector","v","vproj","n2","generalizedProjectPoint","intersectWithLine","p1","p2","outObj","intersection","betweenPoints","Number","MAX_VALUE","p21","p1Origin","num","den","fabsden","fabstolerance","intersectWithPlane","plane1Origin","plane1Normal","plane2Origin","plane2Normal","l0","l1","error","cross$1","absCross","map","n","maxc","iP","d1","d2","STATIC","vtkPlane","publicAPI","model","classHierarchy","evaluateFunction","y","z","Array","isArray","evaluateGradient","xyz","retVal","planeOrigin","planeNormal","DEFAULT_VALUES","extend","initialValues","undefined","assign","obj","setGetArray","newInstance","vtkPlane$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/Plane.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { s as subtract, d as dot, j as cross, k as add } from '../Core/Math/index.js';\nimport macro from '../../macros.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar PLANE_TOLERANCE = 1.0e-6;\nvar COINCIDE = 'coincide';\nvar DISJOINT = 'disjoint'; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n}\n\nfunction distanceToPlane(x, origin, normal) {\n  var distance = normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n  return Math.abs(distance);\n}\n\nfunction projectPoint(x, origin, normal, xproj) {\n  var xo = [];\n  subtract(x, origin, xo);\n  var t = dot(normal, xo);\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\n\nfunction projectVector(v, normal, vproj) {\n  var t = dot(v, normal);\n  var n2 = dot(normal, normal);\n\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n\n  vproj[0] = v[0] - t * normal[0] / n2;\n  vproj[1] = v[1] - t * normal[1] / n2;\n  vproj[2] = v[2] - t * normal[2] / n2;\n  return vproj;\n}\n\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  var xo = [];\n  subtract(x, origin, xo);\n  var t = dot(normal, xo);\n  var n2 = dot(normal, normal);\n\n  if (n2 !== 0) {\n    xproj[0] = x[0] - t * normal[0] / n2;\n    xproj[1] = x[1] - t * normal[1] / n2;\n    xproj[2] = x[2] - t * normal[2] / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\n\nfunction intersectWithLine(p1, p2, origin, normal) {\n  var outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: []\n  };\n  var p21 = [];\n  var p1Origin = []; // Compute line vector\n\n  subtract(p2, p1, p21);\n  subtract(origin, p1, p1Origin); // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n\n  var num = dot(normal, p1Origin);\n  var den = dot(normal, p21); // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n\n  var fabsden;\n  var fabstolerance; // Trying to avoid an expensive call to fabs()\n\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  } // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n\n\n  outObj.t = num / den;\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\n\nfunction intersectWithPlane(plane1Origin, plane1Normal, plane2Origin, plane2Normal) {\n  var outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null\n  };\n  var cross$1 = [];\n  cross(plane1Normal, plane2Normal, cross$1);\n  var absCross = cross$1.map(function (n) {\n    return Math.abs(n);\n  }); // test if the two planes are parallel\n\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    var v = [];\n    subtract(plane1Origin, plane2Origin, v);\n\n    if (dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n\n    return outObj;\n  } // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n\n\n  var maxc;\n\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  } // To get a point on the intersect line, zero the max coord, and solve for the other two\n\n\n  var iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n\n  var d1 = -dot(plane1Normal, plane1Origin);\n  var d2 = -dot(plane2Normal, plane2Origin); // eslint-disable-next-line default-case\n\n  switch (maxc) {\n    case 'x':\n      // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross$1[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross$1[0];\n      break;\n\n    case 'y':\n      // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross$1[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross$1[1];\n      break;\n\n    case 'z':\n      // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross$1[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross$1[2];\n      iP[2] = 0;\n      break;\n  }\n\n  outObj.l0 = iP;\n  add(iP, cross$1, outObj.l1);\n  outObj.intersection = true;\n  return outObj;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  evaluate: evaluate,\n  distanceToPlane: distanceToPlane,\n  projectPoint: projectPoint,\n  projectVector: projectVector,\n  generalizedProjectPoint: generalizedProjectPoint,\n  intersectWithLine: intersectWithLine,\n  intersectWithPlane: intersectWithPlane,\n  DISJOINT: DISJOINT,\n  COINCIDE: COINCIDE\n}; // ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n\n  publicAPI.distanceToPlane = function (x) {\n    return distanceToPlane(x, model.origin, model.normal);\n  };\n\n  publicAPI.projectPoint = function (x, xproj) {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.projectVector = function (v, vproj) {\n    return projectVector(v, model.normal, vproj);\n  };\n\n  publicAPI.push = function (distance) {\n    if (distance === 0.0) {\n      return;\n    }\n\n    for (var i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n\n  publicAPI.generalizedProjectPoint = function (x, xproj) {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.evaluateFunction = function (x, y, z) {\n    if (!Array.isArray(x)) {\n      return model.normal[0] * (x - model.origin[0]) + model.normal[1] * (y - model.origin[1]) + model.normal[2] * (z - model.origin[2]);\n    }\n\n    return model.normal[0] * (x[0] - model.origin[0]) + model.normal[1] * (x[1] - model.origin[1]) + model.normal[2] * (x[2] - model.origin[2]);\n  };\n\n  publicAPI.evaluateGradient = function (xyz) {\n    var retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n\n  publicAPI.intersectWithLine = function (p1, p2) {\n    return intersectWithLine(p1, p2, model.origin, model.normal);\n  };\n\n  publicAPI.intersectWithPlane = function (planeOrigin, planeNormal) {\n    return intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n  vtkPlane(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPlane'); // ----------------------------------------------------------------------------\n\nvar vtkPlane$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkPlane$1 as default, extend, newInstance, vtkPlane };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
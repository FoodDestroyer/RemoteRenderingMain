{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkVolume from '../../Rendering/Core/Volume.js';\nimport vtkHttpDataSetReader from './HttpDataSetReader.js';\nimport vtkHttpDataSetSeriesReader from './HttpDataSetSeriesReader.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkTexture from '../../Rendering/Core/Texture.js';\nimport vtkTextureLODsDownloader from '../../Rendering/Misc/TextureLODsDownloader.js';\nimport vtkHttpDataSetLODsLoader from '../Misc/HttpDataSetLODsLoader.js';\nimport vtkColorTransferFunction from '../../Rendering/Core/ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport vtkVolumeMapper from '../../Rendering/Core/VolumeMapper.js';\nimport vtkTimeStepBasedAnimationHandler from '../../Interaction/Animations/TimeStepBasedAnimationHandler.js';\nimport DataAccessHelper from './DataAccessHelper.js';\nimport './DataAccessHelper/LiteHttpDataAccessHelper.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar itemCount = 1;\nfunction applySettings(sceneItem, settings) {\n  if (settings.actor) {\n    sceneItem.actor.set(settings.actor);\n  }\n  if (settings.actorRotation) {\n    sceneItem.actor.rotateWXYZ(settings.actorRotation[0], settings.actorRotation[1], settings.actorRotation[2], settings.actorRotation[3]);\n  }\n  if (settings.volumeRotation) {\n    sceneItem.volume.rotateWXYZ(settings.volumeRotation[0], settings.volumeRotation[1], settings.volumeRotation[2], settings.volumeRotation[3]);\n  }\n  if (settings.property) {\n    if (settings.volume) {\n      var volumePropertySettings = _objectSpread({}, settings.property);\n      delete volumePropertySettings.components;\n      sceneItem.volume.getProperty().set(volumePropertySettings);\n      if (settings.property.components) {\n        var volumeProperty = sceneItem.volume.getProperty();\n        sceneItem.volumeComponents.forEach(function (component, componentIndex) {\n          volumeProperty.setScalarOpacityUnitDistance(componentIndex, settings.property.components[componentIndex].scalarOpacityUnitDistance);\n          if (component.rgbTransferFunction) {\n            volumeProperty.setRGBTransferFunction(componentIndex, component.rgbTransferFunction);\n          }\n          if (component.grayTransferFunction) {\n            volumeProperty.setGrayTransferFunction(componentIndex, component.grayTransferFunction);\n          }\n          if (component.scalarOpacity) {\n            volumeProperty.setScalarOpacity(componentIndex, component.scalarOpacity);\n          }\n        });\n      }\n    } else {\n      sceneItem.actor.getProperty().set(settings.property);\n    }\n  }\n  if (settings.mapper) {\n    if (settings.mapper.colorByArrayName) {\n      sceneItem.source.enableArray(settings.mapper.colorByArrayName, settings.mapper.colorByArrayName);\n      sceneItem.source.loadData();\n    }\n    sceneItem.mapper.set(settings.mapper);\n    if (settings.mapper.colorByArrayName && settings.luts[settings.mapper.colorByArrayName]) {\n      sceneItem.mapper.setLookupTable(settings.luts[settings.mapper.colorByArrayName]);\n      sceneItem.mapper.setUseLookupTableScalarRange(true);\n    }\n  }\n  if (settings.lookupTable) {\n    sceneItem.mapper.getLookupTable().set(settings.lookupTable);\n    sceneItem.mapper.getLookupTable().build();\n  }\n  if (settings.textureLODs) {\n    sceneItem.textureLODs = settings.textureLODs;\n  }\n  if (settings.sourceLODs) {\n    sceneItem.sourceLODs = settings.sourceLODs;\n  }\n} // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction isImage(str) {\n  var ext = str.split('.').pop().toLowerCase();\n  return ['jpg', 'png', 'jpeg'].indexOf(ext) !== -1;\n}\nfunction loadColorTransferFunction(item) {\n  var tf = vtkColorTransferFunction.newInstance(item);\n  if (item.nodes) {\n    tf.removeAllPoints();\n    item.nodes.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 6),\n        x = _ref2[0],\n        r = _ref2[1],\n        g = _ref2[2],\n        b = _ref2[3],\n        midpoint = _ref2[4],\n        sharpness = _ref2[5];\n      tf.addRGBPointLong(x, r, g, b, midpoint, sharpness);\n    });\n  }\n  return tf;\n}\nfunction loadPiecewiseFunction(item) {\n  var pwf = vtkPiecewiseFunction.newInstance(item);\n  if (item.points) {\n    pwf.removeAllPoints();\n    item.points.forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 4),\n        x = _ref4[0],\n        y = _ref4[1],\n        midpoint = _ref4[2],\n        sharpness = _ref4[3];\n      return pwf.addPointLong(x, y, midpoint, sharpness);\n    });\n  }\n  return pwf;\n}\nfunction initializeVolumeComponents(components) {\n  return components.map(function (component) {\n    var ret = {};\n    if (component.rgbTransferFunction) {\n      ret.rgbTransferFunction = loadColorTransferFunction(component.rgbTransferFunction);\n    } else if (component.grayTransferFunction) {\n      ret.grayTransferFunction = loadPiecewiseFunction(component.grayTransferFunction);\n    }\n    if (component.scalarOpacity) {\n      ret.scalarOpacity = loadPiecewiseFunction(component.scalarOpacity);\n    }\n    return ret;\n  });\n} // ----------------------------------------------------------------------------\n\nfunction defineLoadFuctionForReader(type) {\n  return function (item, model, publicAPI) {\n    var source = type.newInstance({\n      fetchGzip: model.fetchGzip,\n      dataAccessHelper: model.dataAccessHelper\n    });\n    var mapper;\n    if (item.volume) {\n      mapper = vtkVolumeMapper.newInstance();\n    } else {\n      mapper = vtkMapper.newInstance();\n    }\n    var sceneItem = {\n      name: item.name || \"Item \".concat(itemCount++),\n      source: source,\n      mapper: mapper,\n      defaultSettings: item\n    };\n    if (item.volume) {\n      var volume = vtkVolume.newInstance();\n      sceneItem.volume = volume;\n      if (model.renderer) {\n        model.renderer.addVolume(volume);\n      }\n      if (item.property && item.property.components) {\n        // initialize transfer functions\n        sceneItem.volumeComponents = initializeVolumeComponents(item.property.components);\n      }\n      volume.setMapper(mapper);\n    } else {\n      var actor = vtkActor.newInstance();\n      sceneItem.actor = actor;\n      if (item.texture && item.texture in model.usedTextures) {\n        // If this texture has already been used, re-use it\n        actor.addTexture(model.usedTextures[item.texture]);\n      } else if (item.texture) {\n        var url = [model.baseURL, item.texture].join('/');\n        var texture = vtkTexture.newInstance();\n        texture.setInterpolate(true);\n        texture.setRepeat(true);\n        actor.addTexture(texture);\n        sceneItem.texture = texture;\n        model.usedTextures[item.texture] = texture;\n        if (isImage(item.texture)) {\n          // It's an image file\n          model.dataAccessHelper.fetchImage({}, url, {\n            crossOrigin: 'anonymous'\n          }).then(function (img) {\n            texture.setImage(img);\n          });\n        } else {\n          // Assume it's a dataset file\n          var textureSource = type.newInstance({\n            fetchGzip: model.fetchGzip,\n            dataAccessHelper: model.dataAccessHelper\n          });\n          textureSource.setUrl(url, {\n            loadData: true\n          }).then(function () {\n            texture.setInputData(textureSource.getOutputData());\n          });\n        }\n      }\n      var textureLODs = item.textureLODs;\n      if (textureLODs && textureLODs.files && textureLODs.files.length !== 0) {\n        // If this texture LOD has already been used, re-use it\n        var textureLODsStr = JSON.stringify(textureLODs);\n        if (textureLODsStr in model.usedTextureLODs) {\n          actor.addTexture(model.usedTextureLODs[textureLODsStr]);\n        } else {\n          // Set it on the scene item so it can be accessed later, for\n          // doing things like setting a callback function.\n          sceneItem.textureLODsDownloader = vtkTextureLODsDownloader.newInstance();\n          var textureDownloader = sceneItem.textureLODsDownloader;\n          var _texture = vtkTexture.newInstance();\n          _texture.setInterpolate(true);\n          actor.addTexture(_texture);\n          model.usedTextureLODs[textureLODsStr] = _texture;\n          textureDownloader.setTexture(_texture);\n          textureDownloader.setCrossOrigin('anonymous');\n          textureDownloader.setBaseUrl(textureLODs.baseUrl);\n          textureDownloader.setFiles(textureLODs.files);\n          if (model.startLODLoaders) {\n            textureDownloader.startDownloads();\n          }\n        }\n      }\n      if (model.renderer) {\n        model.renderer.addActor(actor);\n      }\n      actor.setMapper(mapper);\n    }\n    mapper.setInputConnection(source.getOutputPort());\n    source.setUrl([model.baseURL, item[item.type].url].join('/'), {\n      loadData: true\n    }).then(function () {\n      return publicAPI.invokeReady();\n    });\n    applySettings(sceneItem, item);\n    model.scene.push(sceneItem);\n    var sourceLODs = item.sourceLODs;\n    if (sourceLODs && sourceLODs.files && sourceLODs.files.length !== 0) {\n      // Set it on the scene item so it can be accessed later, for\n      // doing things like setting a callback function.\n      sceneItem.dataSetLODsLoader = vtkHttpDataSetLODsLoader.newInstance();\n      var dataSetLODsLoader = sceneItem.dataSetLODsLoader;\n      dataSetLODsLoader.setMapper(mapper);\n      dataSetLODsLoader.setSceneItem(sceneItem);\n      dataSetLODsLoader.setBaseUrl(sourceLODs.baseUrl);\n      dataSetLODsLoader.setFiles(sourceLODs.files);\n      if (model.startLODLoaders) {\n        dataSetLODsLoader.startDownloads();\n      }\n    }\n    return sceneItem;\n  };\n}\nfunction loadTimeStepBasedAnimationHandler(data, model) {\n  model.animationHandler = vtkTimeStepBasedAnimationHandler.newInstance({\n    scene: model.scene,\n    originalMetadata: model.metadata,\n    applySettings: applySettings\n  });\n  if (model.animationHandler && model.renderer) {\n    model.animationHandler.addRenderer(model.renderer);\n  }\n  model.animationHandler.setData(data);\n} // ----------------------------------------------------------------------------\n// Note: keeping both types (with and without 'vtk' prefix) for backwards compatibility\n// see https://gitlab.kitware.com/paraview/paraview/-/merge_requests/4628#note_876772\n\nvar TYPE_MAPPING = {\n  httpDataSetReader: defineLoadFuctionForReader(vtkHttpDataSetReader),\n  vtkHttpDataSetReader: defineLoadFuctionForReader(vtkHttpDataSetReader),\n  httpDataSetSeriesReader: defineLoadFuctionForReader(vtkHttpDataSetSeriesReader),\n  vtkHttpDataSetSeriesReader: defineLoadFuctionForReader(vtkHttpDataSetSeriesReader)\n};\nvar ANIMATION_TYPE_MAPPING = {\n  timeStepBasedAnimationHandler: loadTimeStepBasedAnimationHandler,\n  vtkTimeStepBasedAnimationHandler: loadTimeStepBasedAnimationHandler\n}; // ----------------------------------------------------------------------------\n\nfunction updateDatasetTypeMapping(typeName, handler) {\n  TYPE_MAPPING[typeName] = handler;\n} // ----------------------------------------------------------------------------\n// vtkHttpSceneLoader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkHttpSceneLoader(publicAPI, model) {\n  var originalSceneParameters = {}; // These are here to re-use the same textures when possible\n\n  if (!model.usedTextures) {\n    model.usedTextures = {};\n  }\n  if (!model.usedTextureLODs) {\n    model.usedTextureLODs = {};\n  } // Set our className\n\n  model.classHierarchy.push('vtkHttpSceneLoader'); // Create scene container\n\n  if (!model.scene) {\n    model.scene = [];\n  }\n  function setCameraParameters(params) {\n    if (model.renderer) {\n      var camera = model.renderer.getActiveCamera();\n      if (camera) {\n        camera.set(params);\n      } else {\n        vtkErrorMacro('No active camera to update');\n      }\n    }\n  }\n  function setBackground(color) {\n    if (model.renderer) {\n      model.renderer.setBackground(color);\n    }\n  } // Create default dataAccessHelper if not available\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  }\n  publicAPI.update = function () {\n    model.dataAccessHelper.fetchJSON(publicAPI, model.url).then(function (data) {\n      if (data.fetchGzip !== undefined) {\n        model.fetchGzip = data.fetchGzip;\n      }\n      if (data.background && model.renderer) {\n        setBackground(data.background);\n      }\n      if (data.camera) {\n        originalSceneParameters.camera = data.camera;\n        setCameraParameters(data.camera);\n      }\n      var luts = {};\n      if (data.lookupTables) {\n        Object.keys(data.lookupTables).forEach(function (fieldName) {\n          var config = data.lookupTables[fieldName];\n          var lookupTable = loadColorTransferFunction(config);\n          luts[fieldName] = lookupTable;\n        });\n      }\n      if (data.scene) {\n        data.scene.forEach(function (item) {\n          var builder = TYPE_MAPPING[item.type];\n          if (builder) {\n            builder(_objectSpread({\n              luts: luts\n            }, item), model, publicAPI);\n          }\n        });\n        global.scene = model.scene; // Clear these\n\n        model.usedTextures = {};\n        model.usedTextureLODs = {};\n      } // Capture index.json into meta\n\n      model.metadata = data;\n      if (data.animation) {\n        var animationLoader = ANIMATION_TYPE_MAPPING[data.animation.type];\n        animationLoader(_objectSpread({}, data.animation), model, publicAPI, setCameraParameters, setBackground);\n      }\n    }, function (error) {\n      vtkErrorMacro(\"Error fetching scene \".concat(error));\n    });\n  };\n  publicAPI.resetScene = function () {\n    if (originalSceneParameters.camera) {\n      setCameraParameters(originalSceneParameters.camera);\n    }\n  }; // Set DataSet url\n\n  publicAPI.setUrl = function (url) {\n    if (url.indexOf('index.json') === -1) {\n      model.baseURL = url;\n      model.url = \"\".concat(url, \"/index.json\");\n    } else {\n      model.url = url; // Remove the file in the URL\n\n      var path = url.split('/');\n      path.pop();\n      model.baseURL = path.join('/');\n    } // Fetch data\n\n    return publicAPI.update();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  fetchGzip: false,\n  url: null,\n  baseURL: null,\n  animationHandler: null,\n  // Whether or not to automatically start texture LOD and poly LOD\n  // downloads when they are read.\n  startLODLoaders: true\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['fetchGzip', 'url', 'baseURL', 'scene', 'metadata', 'animationHandler']);\n  macro.setGet(publicAPI, model, ['renderer']);\n  macro.event(publicAPI, model, 'ready'); // Object methods\n\n  vtkHttpSceneLoader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkHttpSceneLoader'); // ----------------------------------------------------------------------------\n\nvar vtkHttpSceneLoader$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  applySettings: applySettings,\n  updateDatasetTypeMapping: updateDatasetTypeMapping\n};\nexport { vtkHttpSceneLoader$1 as default, extend, newInstance };","map":{"version":3,"names":["_slicedToArray","_defineProperty","macro","vtkActor","vtkVolume","vtkHttpDataSetReader","vtkHttpDataSetSeriesReader","vtkMapper","vtkTexture","vtkTextureLODsDownloader","vtkHttpDataSetLODsLoader","vtkColorTransferFunction","vtkPiecewiseFunction","vtkVolumeMapper","vtkTimeStepBasedAnimationHandler","DataAccessHelper","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkErrorMacro","itemCount","applySettings","sceneItem","settings","actor","set","actorRotation","rotateWXYZ","volumeRotation","volume","property","volumePropertySettings","components","getProperty","volumeProperty","volumeComponents","component","componentIndex","setScalarOpacityUnitDistance","scalarOpacityUnitDistance","rgbTransferFunction","setRGBTransferFunction","grayTransferFunction","setGrayTransferFunction","scalarOpacity","setScalarOpacity","mapper","colorByArrayName","enableArray","loadData","luts","setLookupTable","setUseLookupTableScalarRange","lookupTable","getLookupTable","build","textureLODs","sourceLODs","isImage","str","ext","split","pop","toLowerCase","indexOf","loadColorTransferFunction","item","tf","newInstance","nodes","removeAllPoints","_ref","_ref2","x","r","g","b","midpoint","sharpness","addRGBPointLong","loadPiecewiseFunction","pwf","points","_ref3","_ref4","y","addPointLong","initializeVolumeComponents","map","ret","defineLoadFuctionForReader","type","model","publicAPI","fetchGzip","dataAccessHelper","name","concat","defaultSettings","renderer","addVolume","setMapper","texture","usedTextures","addTexture","url","baseURL","join","setInterpolate","setRepeat","fetchImage","crossOrigin","then","img","setImage","textureSource","setUrl","setInputData","getOutputData","files","textureLODsStr","JSON","stringify","usedTextureLODs","textureLODsDownloader","textureDownloader","_texture","setTexture","setCrossOrigin","setBaseUrl","baseUrl","setFiles","startLODLoaders","startDownloads","addActor","setInputConnection","getOutputPort","invokeReady","scene","dataSetLODsLoader","setSceneItem","loadTimeStepBasedAnimationHandler","data","animationHandler","originalMetadata","metadata","addRenderer","setData","TYPE_MAPPING","httpDataSetReader","httpDataSetSeriesReader","ANIMATION_TYPE_MAPPING","timeStepBasedAnimationHandler","updateDatasetTypeMapping","typeName","handler","vtkHttpSceneLoader","originalSceneParameters","classHierarchy","setCameraParameters","params","camera","getActiveCamera","setBackground","color","get","update","fetchJSON","undefined","background","lookupTables","fieldName","config","builder","global","animation","animationLoader","error","resetScene","path","DEFAULT_VALUES","extend","initialValues","assign","obj","setGet","event","vtkHttpSceneLoader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Core/HttpSceneLoader.js"],"sourcesContent":["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkVolume from '../../Rendering/Core/Volume.js';\nimport vtkHttpDataSetReader from './HttpDataSetReader.js';\nimport vtkHttpDataSetSeriesReader from './HttpDataSetSeriesReader.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkTexture from '../../Rendering/Core/Texture.js';\nimport vtkTextureLODsDownloader from '../../Rendering/Misc/TextureLODsDownloader.js';\nimport vtkHttpDataSetLODsLoader from '../Misc/HttpDataSetLODsLoader.js';\nimport vtkColorTransferFunction from '../../Rendering/Core/ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport vtkVolumeMapper from '../../Rendering/Core/VolumeMapper.js';\nimport vtkTimeStepBasedAnimationHandler from '../../Interaction/Animations/TimeStepBasedAnimationHandler.js';\nimport DataAccessHelper from './DataAccessHelper.js';\nimport './DataAccessHelper/LiteHttpDataAccessHelper.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar itemCount = 1;\n\nfunction applySettings(sceneItem, settings) {\n  if (settings.actor) {\n    sceneItem.actor.set(settings.actor);\n  }\n\n  if (settings.actorRotation) {\n    sceneItem.actor.rotateWXYZ(settings.actorRotation[0], settings.actorRotation[1], settings.actorRotation[2], settings.actorRotation[3]);\n  }\n\n  if (settings.volumeRotation) {\n    sceneItem.volume.rotateWXYZ(settings.volumeRotation[0], settings.volumeRotation[1], settings.volumeRotation[2], settings.volumeRotation[3]);\n  }\n\n  if (settings.property) {\n    if (settings.volume) {\n      var volumePropertySettings = _objectSpread({}, settings.property);\n\n      delete volumePropertySettings.components;\n      sceneItem.volume.getProperty().set(volumePropertySettings);\n\n      if (settings.property.components) {\n        var volumeProperty = sceneItem.volume.getProperty();\n        sceneItem.volumeComponents.forEach(function (component, componentIndex) {\n          volumeProperty.setScalarOpacityUnitDistance(componentIndex, settings.property.components[componentIndex].scalarOpacityUnitDistance);\n\n          if (component.rgbTransferFunction) {\n            volumeProperty.setRGBTransferFunction(componentIndex, component.rgbTransferFunction);\n          }\n\n          if (component.grayTransferFunction) {\n            volumeProperty.setGrayTransferFunction(componentIndex, component.grayTransferFunction);\n          }\n\n          if (component.scalarOpacity) {\n            volumeProperty.setScalarOpacity(componentIndex, component.scalarOpacity);\n          }\n        });\n      }\n    } else {\n      sceneItem.actor.getProperty().set(settings.property);\n    }\n  }\n\n  if (settings.mapper) {\n    if (settings.mapper.colorByArrayName) {\n      sceneItem.source.enableArray(settings.mapper.colorByArrayName, settings.mapper.colorByArrayName);\n      sceneItem.source.loadData();\n    }\n\n    sceneItem.mapper.set(settings.mapper);\n\n    if (settings.mapper.colorByArrayName && settings.luts[settings.mapper.colorByArrayName]) {\n      sceneItem.mapper.setLookupTable(settings.luts[settings.mapper.colorByArrayName]);\n      sceneItem.mapper.setUseLookupTableScalarRange(true);\n    }\n  }\n\n  if (settings.lookupTable) {\n    sceneItem.mapper.getLookupTable().set(settings.lookupTable);\n    sceneItem.mapper.getLookupTable().build();\n  }\n\n  if (settings.textureLODs) {\n    sceneItem.textureLODs = settings.textureLODs;\n  }\n\n  if (settings.sourceLODs) {\n    sceneItem.sourceLODs = settings.sourceLODs;\n  }\n} // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n\nfunction isImage(str) {\n  var ext = str.split('.').pop().toLowerCase();\n  return ['jpg', 'png', 'jpeg'].indexOf(ext) !== -1;\n}\n\nfunction loadColorTransferFunction(item) {\n  var tf = vtkColorTransferFunction.newInstance(item);\n\n  if (item.nodes) {\n    tf.removeAllPoints();\n    item.nodes.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 6),\n          x = _ref2[0],\n          r = _ref2[1],\n          g = _ref2[2],\n          b = _ref2[3],\n          midpoint = _ref2[4],\n          sharpness = _ref2[5];\n\n      tf.addRGBPointLong(x, r, g, b, midpoint, sharpness);\n    });\n  }\n\n  return tf;\n}\n\nfunction loadPiecewiseFunction(item) {\n  var pwf = vtkPiecewiseFunction.newInstance(item);\n\n  if (item.points) {\n    pwf.removeAllPoints();\n    item.points.forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 4),\n          x = _ref4[0],\n          y = _ref4[1],\n          midpoint = _ref4[2],\n          sharpness = _ref4[3];\n\n      return pwf.addPointLong(x, y, midpoint, sharpness);\n    });\n  }\n\n  return pwf;\n}\n\nfunction initializeVolumeComponents(components) {\n  return components.map(function (component) {\n    var ret = {};\n\n    if (component.rgbTransferFunction) {\n      ret.rgbTransferFunction = loadColorTransferFunction(component.rgbTransferFunction);\n    } else if (component.grayTransferFunction) {\n      ret.grayTransferFunction = loadPiecewiseFunction(component.grayTransferFunction);\n    }\n\n    if (component.scalarOpacity) {\n      ret.scalarOpacity = loadPiecewiseFunction(component.scalarOpacity);\n    }\n\n    return ret;\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction defineLoadFuctionForReader(type) {\n  return function (item, model, publicAPI) {\n    var source = type.newInstance({\n      fetchGzip: model.fetchGzip,\n      dataAccessHelper: model.dataAccessHelper\n    });\n    var mapper;\n\n    if (item.volume) {\n      mapper = vtkVolumeMapper.newInstance();\n    } else {\n      mapper = vtkMapper.newInstance();\n    }\n\n    var sceneItem = {\n      name: item.name || \"Item \".concat(itemCount++),\n      source: source,\n      mapper: mapper,\n      defaultSettings: item\n    };\n\n    if (item.volume) {\n      var volume = vtkVolume.newInstance();\n      sceneItem.volume = volume;\n\n      if (model.renderer) {\n        model.renderer.addVolume(volume);\n      }\n\n      if (item.property && item.property.components) {\n        // initialize transfer functions\n        sceneItem.volumeComponents = initializeVolumeComponents(item.property.components);\n      }\n\n      volume.setMapper(mapper);\n    } else {\n      var actor = vtkActor.newInstance();\n      sceneItem.actor = actor;\n\n      if (item.texture && item.texture in model.usedTextures) {\n        // If this texture has already been used, re-use it\n        actor.addTexture(model.usedTextures[item.texture]);\n      } else if (item.texture) {\n        var url = [model.baseURL, item.texture].join('/');\n        var texture = vtkTexture.newInstance();\n        texture.setInterpolate(true);\n        texture.setRepeat(true);\n        actor.addTexture(texture);\n        sceneItem.texture = texture;\n        model.usedTextures[item.texture] = texture;\n\n        if (isImage(item.texture)) {\n          // It's an image file\n          model.dataAccessHelper.fetchImage({}, url, {\n            crossOrigin: 'anonymous'\n          }).then(function (img) {\n            texture.setImage(img);\n          });\n        } else {\n          // Assume it's a dataset file\n          var textureSource = type.newInstance({\n            fetchGzip: model.fetchGzip,\n            dataAccessHelper: model.dataAccessHelper\n          });\n          textureSource.setUrl(url, {\n            loadData: true\n          }).then(function () {\n            texture.setInputData(textureSource.getOutputData());\n          });\n        }\n      }\n\n      var textureLODs = item.textureLODs;\n\n      if (textureLODs && textureLODs.files && textureLODs.files.length !== 0) {\n        // If this texture LOD has already been used, re-use it\n        var textureLODsStr = JSON.stringify(textureLODs);\n\n        if (textureLODsStr in model.usedTextureLODs) {\n          actor.addTexture(model.usedTextureLODs[textureLODsStr]);\n        } else {\n          // Set it on the scene item so it can be accessed later, for\n          // doing things like setting a callback function.\n          sceneItem.textureLODsDownloader = vtkTextureLODsDownloader.newInstance();\n          var textureDownloader = sceneItem.textureLODsDownloader;\n\n          var _texture = vtkTexture.newInstance();\n\n          _texture.setInterpolate(true);\n\n          actor.addTexture(_texture);\n          model.usedTextureLODs[textureLODsStr] = _texture;\n          textureDownloader.setTexture(_texture);\n          textureDownloader.setCrossOrigin('anonymous');\n          textureDownloader.setBaseUrl(textureLODs.baseUrl);\n          textureDownloader.setFiles(textureLODs.files);\n\n          if (model.startLODLoaders) {\n            textureDownloader.startDownloads();\n          }\n        }\n      }\n\n      if (model.renderer) {\n        model.renderer.addActor(actor);\n      }\n\n      actor.setMapper(mapper);\n    }\n\n    mapper.setInputConnection(source.getOutputPort());\n    source.setUrl([model.baseURL, item[item.type].url].join('/'), {\n      loadData: true\n    }).then(function () {\n      return publicAPI.invokeReady();\n    });\n    applySettings(sceneItem, item);\n    model.scene.push(sceneItem);\n    var sourceLODs = item.sourceLODs;\n\n    if (sourceLODs && sourceLODs.files && sourceLODs.files.length !== 0) {\n      // Set it on the scene item so it can be accessed later, for\n      // doing things like setting a callback function.\n      sceneItem.dataSetLODsLoader = vtkHttpDataSetLODsLoader.newInstance();\n      var dataSetLODsLoader = sceneItem.dataSetLODsLoader;\n      dataSetLODsLoader.setMapper(mapper);\n      dataSetLODsLoader.setSceneItem(sceneItem);\n      dataSetLODsLoader.setBaseUrl(sourceLODs.baseUrl);\n      dataSetLODsLoader.setFiles(sourceLODs.files);\n\n      if (model.startLODLoaders) {\n        dataSetLODsLoader.startDownloads();\n      }\n    }\n\n    return sceneItem;\n  };\n}\n\nfunction loadTimeStepBasedAnimationHandler(data, model) {\n  model.animationHandler = vtkTimeStepBasedAnimationHandler.newInstance({\n    scene: model.scene,\n    originalMetadata: model.metadata,\n    applySettings: applySettings\n  });\n\n  if (model.animationHandler && model.renderer) {\n    model.animationHandler.addRenderer(model.renderer);\n  }\n\n  model.animationHandler.setData(data);\n} // ----------------------------------------------------------------------------\n// Note: keeping both types (with and without 'vtk' prefix) for backwards compatibility\n// see https://gitlab.kitware.com/paraview/paraview/-/merge_requests/4628#note_876772\n\n\nvar TYPE_MAPPING = {\n  httpDataSetReader: defineLoadFuctionForReader(vtkHttpDataSetReader),\n  vtkHttpDataSetReader: defineLoadFuctionForReader(vtkHttpDataSetReader),\n  httpDataSetSeriesReader: defineLoadFuctionForReader(vtkHttpDataSetSeriesReader),\n  vtkHttpDataSetSeriesReader: defineLoadFuctionForReader(vtkHttpDataSetSeriesReader)\n};\nvar ANIMATION_TYPE_MAPPING = {\n  timeStepBasedAnimationHandler: loadTimeStepBasedAnimationHandler,\n  vtkTimeStepBasedAnimationHandler: loadTimeStepBasedAnimationHandler\n}; // ----------------------------------------------------------------------------\n\nfunction updateDatasetTypeMapping(typeName, handler) {\n  TYPE_MAPPING[typeName] = handler;\n} // ----------------------------------------------------------------------------\n// vtkHttpSceneLoader methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkHttpSceneLoader(publicAPI, model) {\n  var originalSceneParameters = {}; // These are here to re-use the same textures when possible\n\n  if (!model.usedTextures) {\n    model.usedTextures = {};\n  }\n\n  if (!model.usedTextureLODs) {\n    model.usedTextureLODs = {};\n  } // Set our className\n\n\n  model.classHierarchy.push('vtkHttpSceneLoader'); // Create scene container\n\n  if (!model.scene) {\n    model.scene = [];\n  }\n\n  function setCameraParameters(params) {\n    if (model.renderer) {\n      var camera = model.renderer.getActiveCamera();\n\n      if (camera) {\n        camera.set(params);\n      } else {\n        vtkErrorMacro('No active camera to update');\n      }\n    }\n  }\n\n  function setBackground(color) {\n    if (model.renderer) {\n      model.renderer.setBackground(color);\n    }\n  } // Create default dataAccessHelper if not available\n\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  }\n\n  publicAPI.update = function () {\n    model.dataAccessHelper.fetchJSON(publicAPI, model.url).then(function (data) {\n      if (data.fetchGzip !== undefined) {\n        model.fetchGzip = data.fetchGzip;\n      }\n\n      if (data.background && model.renderer) {\n        setBackground(data.background);\n      }\n\n      if (data.camera) {\n        originalSceneParameters.camera = data.camera;\n        setCameraParameters(data.camera);\n      }\n\n      var luts = {};\n\n      if (data.lookupTables) {\n        Object.keys(data.lookupTables).forEach(function (fieldName) {\n          var config = data.lookupTables[fieldName];\n          var lookupTable = loadColorTransferFunction(config);\n          luts[fieldName] = lookupTable;\n        });\n      }\n\n      if (data.scene) {\n        data.scene.forEach(function (item) {\n          var builder = TYPE_MAPPING[item.type];\n\n          if (builder) {\n            builder(_objectSpread({\n              luts: luts\n            }, item), model, publicAPI);\n          }\n        });\n        global.scene = model.scene; // Clear these\n\n        model.usedTextures = {};\n        model.usedTextureLODs = {};\n      } // Capture index.json into meta\n\n\n      model.metadata = data;\n\n      if (data.animation) {\n        var animationLoader = ANIMATION_TYPE_MAPPING[data.animation.type];\n        animationLoader(_objectSpread({}, data.animation), model, publicAPI, setCameraParameters, setBackground);\n      }\n    }, function (error) {\n      vtkErrorMacro(\"Error fetching scene \".concat(error));\n    });\n  };\n\n  publicAPI.resetScene = function () {\n    if (originalSceneParameters.camera) {\n      setCameraParameters(originalSceneParameters.camera);\n    }\n  }; // Set DataSet url\n\n\n  publicAPI.setUrl = function (url) {\n    if (url.indexOf('index.json') === -1) {\n      model.baseURL = url;\n      model.url = \"\".concat(url, \"/index.json\");\n    } else {\n      model.url = url; // Remove the file in the URL\n\n      var path = url.split('/');\n      path.pop();\n      model.baseURL = path.join('/');\n    } // Fetch data\n\n\n    return publicAPI.update();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  fetchGzip: false,\n  url: null,\n  baseURL: null,\n  animationHandler: null,\n  // Whether or not to automatically start texture LOD and poly LOD\n  // downloads when they are read.\n  startLODLoaders: true\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['fetchGzip', 'url', 'baseURL', 'scene', 'metadata', 'animationHandler']);\n  macro.setGet(publicAPI, model, ['renderer']);\n  macro.event(publicAPI, model, 'ready'); // Object methods\n\n  vtkHttpSceneLoader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkHttpSceneLoader'); // ----------------------------------------------------------------------------\n\nvar vtkHttpSceneLoader$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  applySettings: applySettings,\n  updateDatasetTypeMapping: updateDatasetTypeMapping\n};\n\nexport { vtkHttpSceneLoader$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkAppendPolyData from '../General/AppendPolyData.js';\nimport vtkConeSource from './ConeSource.js';\nimport vtkCylinderSource from './CylinderSource.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// vtkArrowSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkArrowSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkArrowSource');\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    var cylinder = vtkCylinderSource.newInstance({\n      capping: true\n    });\n    cylinder.setResolution(model.shaftResolution);\n    cylinder.setRadius(model.shaftRadius);\n    cylinder.setHeight(1.0 - model.tipLength);\n    cylinder.setCenter(0, (1.0 - model.tipLength) * 0.5, 0.0);\n    var cylinderPD = cylinder.getOutputData();\n    var cylinderPts = cylinderPD.getPoints().getData();\n    var cylinderNormals = cylinderPD.getPointData().getNormals().getData(); // Apply transformation to the cylinder\n\n    vtkMatrixBuilder.buildFromDegree().rotateZ(-90).apply(cylinderPts).apply(cylinderNormals);\n    var cone = vtkConeSource.newInstance();\n    cone.setResolution(model.tipResolution);\n    cone.setHeight(model.tipLength);\n    cone.setRadius(model.tipRadius);\n    var conePD = cone.getOutputData();\n    var conePts = conePD.getPoints().getData(); // Apply transformation to the cone\n\n    vtkMatrixBuilder.buildFromRadian().translate(1.0 - model.tipLength * 0.5, 0.0, 0.0).apply(conePts);\n    var append = vtkAppendPolyData.newInstance();\n    append.setInputData(cylinderPD);\n    append.addInputData(conePD);\n    var appendPD = append.getOutputData();\n    var appendPts = appendPD.getPoints().getData(); // Center the arrow about [0, 0, 0]\n\n    vtkMatrixBuilder.buildFromRadian().translate(-0.5 + model.tipLength * 0.5, 0.0, 0.0).apply(appendPts);\n    if (model.invert) {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(-1, -1, -1).apply(appendPts); // Update output\n\n      outData[0] = appendPD;\n    } else {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(1, 1, 1).apply(appendPts); // Update output\n\n      outData[0] = append.getOutputData();\n    }\n  } // Expose methods\n\n  publicAPI.requestData = requestData;\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  tipResolution: 6,\n  tipRadius: 0.1,\n  tipLength: 0.35,\n  shaftResolution: 6,\n  shaftRadius: 0.03,\n  invert: false,\n  direction: [1.0, 0.0, 0.0],\n  pointType: 'Float64Array'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['tipResolution', 'tipRadius', 'tipLength', 'shaftResolution', 'shaftRadius', 'invert']);\n  macro.setGetArray(publicAPI, model, ['direction'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkArrowSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkArrowSource'); // ----------------------------------------------------------------------------\n\nvar vtkArrowSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkArrowSource$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkAppendPolyData","vtkConeSource","vtkCylinderSource","vtkMatrixBuilder","vtkArrowSource","publicAPI","model","classHierarchy","push","requestData","inData","outData","deleted","cylinder","newInstance","capping","setResolution","shaftResolution","setRadius","shaftRadius","setHeight","tipLength","setCenter","cylinderPD","getOutputData","cylinderPts","getPoints","getData","cylinderNormals","getPointData","getNormals","buildFromDegree","rotateZ","apply","cone","tipResolution","tipRadius","conePD","conePts","buildFromRadian","translate","append","setInputData","addInputData","appendPD","appendPts","invert","rotateFromDirections","direction","scale","DEFAULT_VALUES","pointType","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","setGetArray","algo","vtkArrowSource$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/Sources/ArrowSource.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkAppendPolyData from '../General/AppendPolyData.js';\nimport vtkConeSource from './ConeSource.js';\nimport vtkCylinderSource from './CylinderSource.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// vtkArrowSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkArrowSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkArrowSource');\n\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n\n    var cylinder = vtkCylinderSource.newInstance({\n      capping: true\n    });\n    cylinder.setResolution(model.shaftResolution);\n    cylinder.setRadius(model.shaftRadius);\n    cylinder.setHeight(1.0 - model.tipLength);\n    cylinder.setCenter(0, (1.0 - model.tipLength) * 0.5, 0.0);\n    var cylinderPD = cylinder.getOutputData();\n    var cylinderPts = cylinderPD.getPoints().getData();\n    var cylinderNormals = cylinderPD.getPointData().getNormals().getData(); // Apply transformation to the cylinder\n\n    vtkMatrixBuilder.buildFromDegree().rotateZ(-90).apply(cylinderPts).apply(cylinderNormals);\n    var cone = vtkConeSource.newInstance();\n    cone.setResolution(model.tipResolution);\n    cone.setHeight(model.tipLength);\n    cone.setRadius(model.tipRadius);\n    var conePD = cone.getOutputData();\n    var conePts = conePD.getPoints().getData(); // Apply transformation to the cone\n\n    vtkMatrixBuilder.buildFromRadian().translate(1.0 - model.tipLength * 0.5, 0.0, 0.0).apply(conePts);\n    var append = vtkAppendPolyData.newInstance();\n    append.setInputData(cylinderPD);\n    append.addInputData(conePD);\n    var appendPD = append.getOutputData();\n    var appendPts = appendPD.getPoints().getData(); // Center the arrow about [0, 0, 0]\n\n    vtkMatrixBuilder.buildFromRadian().translate(-0.5 + model.tipLength * 0.5, 0.0, 0.0).apply(appendPts);\n\n    if (model.invert) {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(-1, -1, -1).apply(appendPts); // Update output\n\n      outData[0] = appendPD;\n    } else {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(1, 1, 1).apply(appendPts); // Update output\n\n      outData[0] = append.getOutputData();\n    }\n  } // Expose methods\n\n\n  publicAPI.requestData = requestData;\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  tipResolution: 6,\n  tipRadius: 0.1,\n  tipLength: 0.35,\n  shaftResolution: 6,\n  shaftRadius: 0.03,\n  invert: false,\n  direction: [1.0, 0.0, 0.0],\n  pointType: 'Float64Array'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['tipResolution', 'tipRadius', 'tipLength', 'shaftResolution', 'shaftRadius', 'invert']);\n  macro.setGetArray(publicAPI, model, ['direction'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkArrowSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkArrowSource'); // ----------------------------------------------------------------------------\n\nvar vtkArrowSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkArrowSource$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
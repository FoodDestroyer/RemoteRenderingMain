{"ast":null,"code":"// ----------------------------------------------------------------------------\n// capitalize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Add isA function and register your class name\n// ----------------------------------------------------------------------------\n\nfunction isA(publicAPI) {\n  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (!model.isA) {\n    model.isA = [];\n  }\n  if (name) {\n    model.isA.push(name);\n  }\n  if (!publicAPI.isA) {\n    publicAPI.isA = function (className) {\n      return model.isA.indexOf(className) !== -1;\n    };\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Basic setter\n// ----------------------------------------------------------------------------\n\nfunction set(publicAPI) {\n  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  names.forEach(function (name) {\n    publicAPI[\"set\".concat(capitalize(name))] = function (value) {\n      model[name] = value;\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Basic getter\n// ----------------------------------------------------------------------------\n\nfunction get(publicAPI) {\n  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  names.forEach(function (name) {\n    publicAPI[\"get\".concat(capitalize(name))] = function () {\n      return model[name];\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Add destroy function\n// ----------------------------------------------------------------------------\n\nfunction destroy(publicAPI) {\n  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var previousDestroy = publicAPI.destroy;\n  if (!model.subscriptions) {\n    model.subscriptions = [];\n  }\n  publicAPI.destroy = function () {\n    if (previousDestroy) {\n      previousDestroy();\n    }\n    while (model.subscriptions && model.subscriptions.length) {\n      model.subscriptions.pop().unsubscribe();\n    }\n    Object.keys(model).forEach(function (field) {\n      delete model[field];\n    });\n\n    // Flag the instance beeing deleted\n    model.deleted = true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), fireXXX(args...)\n// ----------------------------------------------------------------------------\n\nfunction event(publicAPI, model, eventName) {\n  var asynchrounous = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var callbacks = [];\n  var previousDestroy = publicAPI.destroy;\n  function off(index) {\n    callbacks[index] = null;\n  }\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({\n      unsubscribe: unsubscribe\n    });\n  }\n  publicAPI[\"fire\".concat(capitalize(eventName))] = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (model.deleted) {\n      console.log('instance deleted - can not call any method');\n      return;\n    }\n    function processCallbacks() {\n      callbacks.forEach(function (callback) {\n        if (callback) {\n          try {\n            callback.apply(publicAPI, args);\n          } catch (errObj) {\n            console.log('Error event:', eventName, errObj);\n          }\n        }\n      });\n    }\n    if (asynchrounous) {\n      setTimeout(processCallbacks, 0);\n    } else {\n      processCallbacks();\n    }\n  };\n  publicAPI[\"on\".concat(capitalize(eventName))] = function (callback) {\n    if (model.deleted) {\n      console.log('instance deleted - can not call any method');\n      return null;\n    }\n    var index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n  publicAPI.destroy = function () {\n    previousDestroy();\n    callbacks.forEach(function (el, index) {\n      return off(index);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nfunction chain() {\n  for (var _len2 = arguments.length, fn = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fn[_key2] = arguments[_key2];\n  }\n  return function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return fn.filter(function (i) {\n      return !!i;\n    }).forEach(function (i) {\n      return i.apply(void 0, args);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nfunction newInstance(extend) {\n  return function () {\n    var initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var model = {};\n    var publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  };\n}\nexport default {\n  chain: chain,\n  destroy: destroy,\n  event: event,\n  get: get,\n  isA: isA,\n  newInstance: newInstance,\n  set: set\n};","map":{"version":3,"names":["capitalize","str","charAt","toUpperCase","slice","isA","publicAPI","model","arguments","length","undefined","name","push","className","indexOf","set","names","forEach","concat","value","get","destroy","previousDestroy","subscriptions","pop","unsubscribe","Object","keys","field","deleted","event","eventName","asynchrounous","callbacks","off","index","on","freeze","_len","args","Array","_key","console","log","processCallbacks","callback","apply","errObj","setTimeout","el","chain","_len2","fn","_key2","_len3","_key3","filter","i","newInstance","extend","initialValues"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/wslink/src/CompositeClosureHelper/index.js"],"sourcesContent":["// ----------------------------------------------------------------------------\n// capitalize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Add isA function and register your class name\n// ----------------------------------------------------------------------------\n\nfunction isA(publicAPI, model = {}, name = null) {\n  if (!model.isA) {\n    model.isA = [];\n  }\n\n  if (name) {\n    model.isA.push(name);\n  }\n\n  if (!publicAPI.isA) {\n    publicAPI.isA = (className) => model.isA.indexOf(className) !== -1;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Basic setter\n// ----------------------------------------------------------------------------\n\nfunction set(publicAPI, model = {}, names = []) {\n  names.forEach((name) => {\n    publicAPI[`set${capitalize(name)}`] = (value) => {\n      model[name] = value;\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Basic getter\n// ----------------------------------------------------------------------------\n\nfunction get(publicAPI, model = {}, names = []) {\n  names.forEach((name) => {\n    publicAPI[`get${capitalize(name)}`] = () => model[name];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Add destroy function\n// ----------------------------------------------------------------------------\n\nfunction destroy(publicAPI, model = {}) {\n  const previousDestroy = publicAPI.destroy;\n\n  if (!model.subscriptions) {\n    model.subscriptions = [];\n  }\n\n  publicAPI.destroy = () => {\n    if (previousDestroy) {\n      previousDestroy();\n    }\n    while (model.subscriptions && model.subscriptions.length) {\n      model.subscriptions.pop().unsubscribe();\n    }\n    Object.keys(model).forEach((field) => {\n      delete model[field];\n    });\n\n    // Flag the instance beeing deleted\n    model.deleted = true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), fireXXX(args...)\n// ----------------------------------------------------------------------------\n\nfunction event(publicAPI, model, eventName, asynchrounous = true) {\n  const callbacks = [];\n  const previousDestroy = publicAPI.destroy;\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({ unsubscribe });\n  }\n\n  publicAPI[`fire${capitalize(eventName)}`] = (...args) => {\n    if (model.deleted) {\n      console.log('instance deleted - can not call any method');\n      return;\n    }\n\n    function processCallbacks() {\n      callbacks.forEach((callback) => {\n        if (callback) {\n          try {\n            callback.apply(publicAPI, args);\n          } catch (errObj) {\n            console.log('Error event:', eventName, errObj);\n          }\n        }\n      });\n    }\n\n    if (asynchrounous) {\n      setTimeout(processCallbacks, 0);\n    } else {\n      processCallbacks();\n    }\n  };\n\n  publicAPI[`on${capitalize(eventName)}`] = (callback) => {\n    if (model.deleted) {\n      console.log('instance deleted - can not call any method');\n      return null;\n    }\n\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.destroy = () => {\n    previousDestroy();\n    callbacks.forEach((el, index) => off(index));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nfunction chain(...fn) {\n  return (...args) => fn.filter((i) => !!i).forEach((i) => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nfunction newInstance(extend) {\n  return (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  };\n}\n\nexport default {\n  chain,\n  destroy,\n  event,\n  get,\n  isA,\n  newInstance,\n  set,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
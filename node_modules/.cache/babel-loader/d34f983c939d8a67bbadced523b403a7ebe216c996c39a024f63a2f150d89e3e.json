{"ast":null,"code":"// ----------------------------------------------------------------------------\n// Marching squares case functions (using lines to generate the 2D tessellation).\n// For each case, a list of edge ids that form the triangles. A -1 marks the\n// end of the list of edges. Edges are taken three at a time to generate\n// triangle points.\n// ----------------------------------------------------------------------------\nvar MARCHING_SQUARES_CASES = [[-1, -1, -1, -1, -1]\n/* 0 */, [0, 3, -1, -1, -1]\n/* 1 */, [1, 0, -1, -1, -1]\n/* 2 */, [1, 3, -1, -1, -1]\n/* 3 */, [2, 1, -1, -1, -1]\n/* 4 */, [0, 3, 2, 1, -1]\n/* 5 */, [2, 0, -1, -1, -1]\n/* 6 */, [2, 3, -1, -1, -1]\n/* 7 */, [3, 2, -1, -1, -1]\n/* 8 */, [0, 2, -1, -1, -1]\n/* 9 */, [1, 0, 3, 2, -1]\n/* 10 */, [1, 2, -1, -1, -1]\n/* 11 */, [3, 1, -1, -1, -1]\n/* 12 */, [0, 1, -1, -1, -1]\n/* 13 */, [3, 0, -1, -1, -1]\n/* 14 */, [-1, -1, -1, -1, -1]\n/* 15 */];\n\nvar EDGES = [[0, 1], [1, 3], [2, 3], [0, 2]];\nfunction getCase(index) {\n  return MARCHING_SQUARES_CASES[index];\n} // Define the four edges of the pixel by the following pairs of vertices\n\nfunction getEdge(eid) {\n  return EDGES[eid];\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar vtkCaseTable = {\n  getCase: getCase,\n  getEdge: getEdge\n};\nexport { vtkCaseTable as default };","map":{"version":3,"names":["MARCHING_SQUARES_CASES","EDGES","getCase","index","getEdge","eid","vtkCaseTable","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/General/ImageMarchingSquares/caseTable.js"],"sourcesContent":["// ----------------------------------------------------------------------------\n// Marching squares case functions (using lines to generate the 2D tessellation).\n// For each case, a list of edge ids that form the triangles. A -1 marks the\n// end of the list of edges. Edges are taken three at a time to generate\n// triangle points.\n// ----------------------------------------------------------------------------\nvar MARCHING_SQUARES_CASES = [[-1, -1, -1, -1, -1]\n/* 0 */\n, [0, 3, -1, -1, -1]\n/* 1 */\n, [1, 0, -1, -1, -1]\n/* 2 */\n, [1, 3, -1, -1, -1]\n/* 3 */\n, [2, 1, -1, -1, -1]\n/* 4 */\n, [0, 3, 2, 1, -1]\n/* 5 */\n, [2, 0, -1, -1, -1]\n/* 6 */\n, [2, 3, -1, -1, -1]\n/* 7 */\n, [3, 2, -1, -1, -1]\n/* 8 */\n, [0, 2, -1, -1, -1]\n/* 9 */\n, [1, 0, 3, 2, -1]\n/* 10 */\n, [1, 2, -1, -1, -1]\n/* 11 */\n, [3, 1, -1, -1, -1]\n/* 12 */\n, [0, 1, -1, -1, -1]\n/* 13 */\n, [3, 0, -1, -1, -1]\n/* 14 */\n, [-1, -1, -1, -1, -1]\n/* 15 */\n];\nvar EDGES = [[0, 1], [1, 3], [2, 3], [0, 2]];\n\nfunction getCase(index) {\n  return MARCHING_SQUARES_CASES[index];\n} // Define the four edges of the pixel by the following pairs of vertices\n\n\nfunction getEdge(eid) {\n  return EDGES[eid];\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar vtkCaseTable = {\n  getCase: getCase,\n  getEdge: getEdge\n};\n\nexport { vtkCaseTable as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACjD,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACjB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,SACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACjB,UACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,UACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,UACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,UACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,UACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACrB,SACC;;AACD,IAAIC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAE5C,SAASC,OAAOA,CAACC,KAAK,EAAE;EACtB,OAAOH,sBAAsB,CAACG,KAAK,CAAC;AACtC,CAAC,CAAC;;AAGF,SAASC,OAAOA,CAACC,GAAG,EAAE;EACpB,OAAOJ,KAAK,CAACI,GAAG,CAAC;AACnB,CAAC,CAAC;AACF;AACA;;AAGA,IAAIC,YAAY,GAAG;EACjBJ,OAAO,EAAEA,OAAO;EAChBE,OAAO,EAAEA;AACX,CAAC;AAED,SAASE,YAAY,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
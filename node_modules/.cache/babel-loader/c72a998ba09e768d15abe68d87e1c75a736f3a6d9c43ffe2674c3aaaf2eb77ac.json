{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './BufferObject/Constants.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar ObjectType = Constants.ObjectType; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {}; // ----------------------------------------------------------------------------\n// vtkOpenGLBufferObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLBufferObject'); // Class-specific private functions\n\n  function convertType(type) {\n    switch (type) {\n      case ObjectType.ELEMENT_ARRAY_BUFFER:\n        return model.context.ELEMENT_ARRAY_BUFFER;\n      case ObjectType.TEXTURE_BUFFER:\n        if ('TEXTURE_BUFFER' in model.context) {\n          return model.context.TEXTURE_BUFFER;\n        }\n\n      /* eslint-disable no-fallthrough */\n      // Intentional fallthrough in case there is no TEXTURE_BUFFER in WebGL\n\n      case ObjectType.ARRAY_BUFFER:\n      default:\n        return model.context.ARRAY_BUFFER;\n\n      /* eslint-enable no-fallthrough */\n    }\n  }\n\n  var internalType = null;\n  var internalHandle = null;\n  var dirty = true;\n  var error = ''; // Public API methods\n\n  publicAPI.getType = function () {\n    return internalType;\n  };\n  publicAPI.setType = function (value) {\n    internalType = value;\n  };\n  publicAPI.getHandle = function () {\n    return internalHandle;\n  };\n  publicAPI.isReady = function () {\n    return dirty === false;\n  };\n  publicAPI.generateBuffer = function (type) {\n    var objectTypeGL = convertType(type);\n    if (internalHandle === null) {\n      internalHandle = model.context.createBuffer();\n      internalType = type;\n    }\n    return convertType(internalType) === objectTypeGL;\n  };\n  publicAPI.upload = function (data, type) {\n    // buffer, size, type\n    var alreadyGenerated = publicAPI.generateBuffer(type);\n    if (!alreadyGenerated) {\n      error = 'Trying to upload array buffer to incompatible buffer.';\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    model.context.bufferData(convertType(internalType), data, model.context.STATIC_DRAW);\n    dirty = false;\n    return true;\n  };\n  publicAPI.bind = function () {\n    if (!internalHandle) {\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    return true;\n  };\n  publicAPI.release = function () {\n    if (!internalHandle) {\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), null);\n    return true;\n  };\n  publicAPI.releaseGraphicsResources = function () {\n    if (internalHandle !== null) {\n      model.context.bindBuffer(convertType(internalType), null);\n      model.context.deleteBuffer(internalHandle);\n      internalHandle = null;\n    }\n  };\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n  publicAPI.getError = function () {\n    return error;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  objectType: ObjectType.ARRAY_BUFFER,\n  // _openGLRenderWindow: null,\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['_openGLRenderWindow']);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n  vtkOpenGLBufferObject(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkBufferObject = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\nexport { STATIC, vtkBufferObject as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","Constants","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","ObjectType","STATIC","vtkOpenGLBufferObject","publicAPI","model","classHierarchy","convertType","type","ELEMENT_ARRAY_BUFFER","context","TEXTURE_BUFFER","ARRAY_BUFFER","internalType","internalHandle","dirty","error","getType","setType","value","getHandle","isReady","generateBuffer","objectTypeGL","createBuffer","upload","data","alreadyGenerated","bindBuffer","bufferData","STATIC_DRAW","bind","release","releaseGraphicsResources","deleteBuffer","setOpenGLRenderWindow","rw","_openGLRenderWindow","getContext","getError","DEFAULT_VALUES","objectType","extend","initialValues","undefined","assign","obj","get","moveToProtected","newInstance","vtkBufferObject","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './BufferObject/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar ObjectType = Constants.ObjectType; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {}; // ----------------------------------------------------------------------------\n// vtkOpenGLBufferObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLBufferObject'); // Class-specific private functions\n\n  function convertType(type) {\n    switch (type) {\n      case ObjectType.ELEMENT_ARRAY_BUFFER:\n        return model.context.ELEMENT_ARRAY_BUFFER;\n\n      case ObjectType.TEXTURE_BUFFER:\n        if ('TEXTURE_BUFFER' in model.context) {\n          return model.context.TEXTURE_BUFFER;\n        }\n\n      /* eslint-disable no-fallthrough */\n      // Intentional fallthrough in case there is no TEXTURE_BUFFER in WebGL\n\n      case ObjectType.ARRAY_BUFFER:\n      default:\n        return model.context.ARRAY_BUFFER;\n\n      /* eslint-enable no-fallthrough */\n    }\n  }\n\n  var internalType = null;\n  var internalHandle = null;\n  var dirty = true;\n  var error = ''; // Public API methods\n\n  publicAPI.getType = function () {\n    return internalType;\n  };\n\n  publicAPI.setType = function (value) {\n    internalType = value;\n  };\n\n  publicAPI.getHandle = function () {\n    return internalHandle;\n  };\n\n  publicAPI.isReady = function () {\n    return dirty === false;\n  };\n\n  publicAPI.generateBuffer = function (type) {\n    var objectTypeGL = convertType(type);\n\n    if (internalHandle === null) {\n      internalHandle = model.context.createBuffer();\n      internalType = type;\n    }\n\n    return convertType(internalType) === objectTypeGL;\n  };\n\n  publicAPI.upload = function (data, type) {\n    // buffer, size, type\n    var alreadyGenerated = publicAPI.generateBuffer(type);\n\n    if (!alreadyGenerated) {\n      error = 'Trying to upload array buffer to incompatible buffer.';\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    model.context.bufferData(convertType(internalType), data, model.context.STATIC_DRAW);\n    dirty = false;\n    return true;\n  };\n\n  publicAPI.bind = function () {\n    if (!internalHandle) {\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    return true;\n  };\n\n  publicAPI.release = function () {\n    if (!internalHandle) {\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), null);\n    return true;\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (internalHandle !== null) {\n      model.context.bindBuffer(convertType(internalType), null);\n      model.context.deleteBuffer(internalHandle);\n      internalHandle = null;\n    }\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  publicAPI.getError = function () {\n    return error;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  objectType: ObjectType.ARRAY_BUFFER,\n  // _openGLRenderWindow: null,\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['_openGLRenderWindow']);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n  vtkOpenGLBufferObject(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkBufferObject = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\n\nexport { STATIC, vtkBufferObject as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\n\n// vtkImageGridSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageGridSource(publicAPI, model) {\n  var _this = this;\n\n  // Set our className\n  model.classHierarchy.push('vtkImageGridSource');\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    var state = {};\n    var dataset = {\n      type: 'vtkImageData',\n      mtime: model.mtime,\n      metadata: {\n        source: 'vtkImageGridSource',\n        state: state\n      }\n    }; // Add parameter used to create dataset as metadata.state[*]\n\n    ['gridSpacing', 'gridOrigin', 'dataSpacing', 'dataOrigin'].forEach(function (field) {\n      state[field] = [].concat(model[field]);\n    });\n    var id = vtkImageData.newInstance(dataset);\n    id.setOrigin(model.dataOrigin[0], model.dataOrigin[1], model.dataOrigin[2]);\n    id.setSpacing(model.dataSpacing[0], model.dataSpacing[1], model.dataSpacing[2]);\n    id.setExtent.apply(_this, model.dataExtent);\n    id.setDirection(model.dataDirection);\n    var dims = [0, 0, 0];\n    dims = dims.map(function (_, i) {\n      return model.dataExtent[i * 2 + 1] - model.dataExtent[i * 2] + 1;\n    });\n    var newArray = new Uint8Array(dims[0] * dims[1] * dims[2]);\n    var xval = 0;\n    var yval = 0;\n    var zval = 0;\n    var i = 0;\n    for (var z = model.dataExtent[4]; z <= model.dataExtent[5]; z++) {\n      if (model.gridSpacing[2]) {\n        zval = z % model.gridSpacing[2] === model.gridOrigin[2];\n      } else {\n        zval = 0;\n      }\n      for (var y = model.dataExtent[2]; y <= model.dataExtent[3]; y++) {\n        if (model.gridSpacing[1]) {\n          yval = y % model.gridSpacing[1] === model.gridOrigin[1];\n        } else {\n          yval = 0;\n        }\n        for (var x = model.dataExtent[0]; x <= model.dataExtent[1]; x++) {\n          if (model.gridSpacing[0]) {\n            xval = x % model.gridSpacing[0] === model.gridOrigin[0];\n          } else {\n            xval = 0;\n          }\n          newArray[i] = zval || yval || xval ? model.lineValue : model.fillValue;\n          i++;\n        }\n      }\n    }\n    var da = vtkDataArray.newInstance({\n      numberOfComponents: 1,\n      values: newArray\n    });\n    da.setName('scalars');\n    var cpd = id.getPointData();\n    cpd.setScalars(da); // Update output\n\n    outData[0] = id;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  lineValue: 0,\n  fillValue: 255,\n  gridSpacing: [10, 10, 0],\n  gridOrigin: [0, 0, 0],\n  dataSpacing: [1.0, 1.0, 1.0],\n  dataOrigin: [0.0, 0.0, 0.0],\n  dataExtent: [0, 255, 0, 255, 0, 0],\n  dataDirection: [1, 0, 0, 0, 1, 0, 0, 0, 1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['lineValue', 'fillValue']);\n  macro.setGetArray(publicAPI, model, ['gridOrigin', 'gridSpacing', 'dataOrigin', 'dataSpacing'], 3);\n  macro.setGetArray(publicAPI, model, ['dataExtent'], 6);\n  macro.setGetArray(publicAPI, model, ['dataDirection'], 9);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkImageGridSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageGridSource'); // ----------------------------------------------------------------------------\n\nvar vtkImageGridSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkImageGridSource$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkImageData","vtkDataArray","vtkImageGridSource","publicAPI","model","_this","classHierarchy","push","requestData","inData","outData","deleted","state","dataset","type","mtime","metadata","source","forEach","field","concat","id","newInstance","setOrigin","dataOrigin","setSpacing","dataSpacing","setExtent","apply","dataExtent","setDirection","dataDirection","dims","map","_","i","newArray","Uint8Array","xval","yval","zval","z","gridSpacing","gridOrigin","y","x","lineValue","fillValue","da","numberOfComponents","values","setName","cpd","getPointData","setScalars","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","setGetArray","algo","vtkImageGridSource$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/Sources/ImageGridSource.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\n\n// vtkImageGridSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageGridSource(publicAPI, model) {\n  var _this = this;\n\n  // Set our className\n  model.classHierarchy.push('vtkImageGridSource');\n\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n\n    var state = {};\n    var dataset = {\n      type: 'vtkImageData',\n      mtime: model.mtime,\n      metadata: {\n        source: 'vtkImageGridSource',\n        state: state\n      }\n    }; // Add parameter used to create dataset as metadata.state[*]\n\n    ['gridSpacing', 'gridOrigin', 'dataSpacing', 'dataOrigin'].forEach(function (field) {\n      state[field] = [].concat(model[field]);\n    });\n    var id = vtkImageData.newInstance(dataset);\n    id.setOrigin(model.dataOrigin[0], model.dataOrigin[1], model.dataOrigin[2]);\n    id.setSpacing(model.dataSpacing[0], model.dataSpacing[1], model.dataSpacing[2]);\n    id.setExtent.apply(_this, model.dataExtent);\n    id.setDirection(model.dataDirection);\n    var dims = [0, 0, 0];\n    dims = dims.map(function (_, i) {\n      return model.dataExtent[i * 2 + 1] - model.dataExtent[i * 2] + 1;\n    });\n    var newArray = new Uint8Array(dims[0] * dims[1] * dims[2]);\n    var xval = 0;\n    var yval = 0;\n    var zval = 0;\n    var i = 0;\n\n    for (var z = model.dataExtent[4]; z <= model.dataExtent[5]; z++) {\n      if (model.gridSpacing[2]) {\n        zval = z % model.gridSpacing[2] === model.gridOrigin[2];\n      } else {\n        zval = 0;\n      }\n\n      for (var y = model.dataExtent[2]; y <= model.dataExtent[3]; y++) {\n        if (model.gridSpacing[1]) {\n          yval = y % model.gridSpacing[1] === model.gridOrigin[1];\n        } else {\n          yval = 0;\n        }\n\n        for (var x = model.dataExtent[0]; x <= model.dataExtent[1]; x++) {\n          if (model.gridSpacing[0]) {\n            xval = x % model.gridSpacing[0] === model.gridOrigin[0];\n          } else {\n            xval = 0;\n          }\n\n          newArray[i] = zval || yval || xval ? model.lineValue : model.fillValue;\n          i++;\n        }\n      }\n    }\n\n    var da = vtkDataArray.newInstance({\n      numberOfComponents: 1,\n      values: newArray\n    });\n    da.setName('scalars');\n    var cpd = id.getPointData();\n    cpd.setScalars(da); // Update output\n\n    outData[0] = id;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  lineValue: 0,\n  fillValue: 255,\n  gridSpacing: [10, 10, 0],\n  gridOrigin: [0, 0, 0],\n  dataSpacing: [1.0, 1.0, 1.0],\n  dataOrigin: [0.0, 0.0, 0.0],\n  dataExtent: [0, 255, 0, 255, 0, 0],\n  dataDirection: [1, 0, 0, 0, 1, 0, 0, 0, 1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['lineValue', 'fillValue']);\n  macro.setGetArray(publicAPI, model, ['gridOrigin', 'gridSpacing', 'dataOrigin', 'dataSpacing'], 3);\n  macro.setGetArray(publicAPI, model, ['dataExtent'], 6);\n  macro.setGetArray(publicAPI, model, ['dataDirection'], 9);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkImageGridSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageGridSource'); // ----------------------------------------------------------------------------\n\nvar vtkImageGridSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkImageGridSource$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
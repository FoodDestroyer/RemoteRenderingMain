{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nfunction identity(i) {\n  return i;\n}\nfunction toNativeType(str) {\n  if (str === null || str === 'null') {\n    return null;\n  }\n  if (str === 'true') {\n    return true;\n  }\n  if (str === 'false') {\n    return false;\n  }\n  if (str === undefined || str === 'undefined') {\n    return undefined;\n  }\n  if (str[0] === '[' && str[str.length - 1] === ']') {\n    return str.substring(1, str.length - 1).split(',').map(function (s) {\n      return toNativeType(s.trim());\n    });\n  }\n  if (str === '' || Number.isNaN(Number(str))) {\n    return str;\n  }\n  return Number(str);\n}\nfunction extractURLParameters() {\n  var castToNativeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.search;\n  var summary = {};\n  var convert = castToNativeType ? toNativeType : identity;\n  var queryTokens = (query || '').replace(/#.*/, '') // remove hash query\n  .replace('?', '') // Remove ? from the head\n  .split('&'); // extract token pair\n\n  queryTokens.forEach(function (token) {\n    var _token$split$map = token.split('=').map(function (s) {\n        return decodeURIComponent(s);\n      }),\n      _token$split$map2 = _slicedToArray(_token$split$map, 2),\n      key = _token$split$map2[0],\n      value = _token$split$map2[1];\n    if (key) {\n      summary[key] = value ? convert(value) : true;\n    }\n  });\n  return summary;\n}\nvar vtkURLExtract = {\n  toNativeType: toNativeType,\n  extractURLParameters: extractURLParameters\n};\nexport { vtkURLExtract as default };","map":{"version":3,"names":["_slicedToArray","identity","i","toNativeType","str","undefined","length","substring","split","map","s","trim","Number","isNaN","extractURLParameters","castToNativeType","arguments","query","window","location","search","summary","convert","queryTokens","replace","forEach","token","_token$split$map","decodeURIComponent","_token$split$map2","key","value","vtkURLExtract","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/Core/URLExtract.js"],"sourcesContent":["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\n\nfunction identity(i) {\n  return i;\n}\n\nfunction toNativeType(str) {\n  if (str === null || str === 'null') {\n    return null;\n  }\n\n  if (str === 'true') {\n    return true;\n  }\n\n  if (str === 'false') {\n    return false;\n  }\n\n  if (str === undefined || str === 'undefined') {\n    return undefined;\n  }\n\n  if (str[0] === '[' && str[str.length - 1] === ']') {\n    return str.substring(1, str.length - 1).split(',').map(function (s) {\n      return toNativeType(s.trim());\n    });\n  }\n\n  if (str === '' || Number.isNaN(Number(str))) {\n    return str;\n  }\n\n  return Number(str);\n}\n\nfunction extractURLParameters() {\n  var castToNativeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.search;\n  var summary = {};\n  var convert = castToNativeType ? toNativeType : identity;\n  var queryTokens = (query || '').replace(/#.*/, '') // remove hash query\n  .replace('?', '') // Remove ? from the head\n  .split('&'); // extract token pair\n\n  queryTokens.forEach(function (token) {\n    var _token$split$map = token.split('=').map(function (s) {\n      return decodeURIComponent(s);\n    }),\n        _token$split$map2 = _slicedToArray(_token$split$map, 2),\n        key = _token$split$map2[0],\n        value = _token$split$map2[1];\n\n    if (key) {\n      summary[key] = value ? convert(value) : true;\n    }\n  });\n  return summary;\n}\n\nvar vtkURLExtract = {\n  toNativeType: toNativeType,\n  extractURLParameters: extractURLParameters\n};\n\nexport { vtkURLExtract as default };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sCAAsC;AAEjE,SAASC,QAAQA,CAACC,CAAC,EAAE;EACnB,OAAOA,CAAC;AACV;AAEA,SAASC,YAAYA,CAACC,GAAG,EAAE;EACzB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,MAAM,EAAE;IAClC,OAAO,IAAI;EACb;EAEA,IAAIA,GAAG,KAAK,MAAM,EAAE;IAClB,OAAO,IAAI;EACb;EAEA,IAAIA,GAAG,KAAK,OAAO,EAAE;IACnB,OAAO,KAAK;EACd;EAEA,IAAIA,GAAG,KAAKC,SAAS,IAAID,GAAG,KAAK,WAAW,EAAE;IAC5C,OAAOC,SAAS;EAClB;EAEA,IAAID,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,GAAG,CAACA,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IACjD,OAAOF,GAAG,CAACG,SAAS,CAAC,CAAC,EAAEH,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;MAClE,OAAOP,YAAY,CAACO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEA,IAAIP,GAAG,KAAK,EAAE,IAAIQ,MAAM,CAACC,KAAK,CAACD,MAAM,CAACR,GAAG,CAAC,CAAC,EAAE;IAC3C,OAAOA,GAAG;EACZ;EAEA,OAAOQ,MAAM,CAACR,GAAG,CAAC;AACpB;AAEA,SAASU,oBAAoBA,CAAA,EAAG;EAC9B,IAAIC,gBAAgB,GAAGC,SAAS,CAACV,MAAM,GAAG,CAAC,IAAIU,SAAS,CAAC,CAAC,CAAC,KAAKX,SAAS,GAAGW,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EAC/F,IAAIC,KAAK,GAAGD,SAAS,CAACV,MAAM,GAAG,CAAC,IAAIU,SAAS,CAAC,CAAC,CAAC,KAAKX,SAAS,GAAGW,SAAS,CAAC,CAAC,CAAC,GAAGE,MAAM,CAACC,QAAQ,CAACC,MAAM;EACtG,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,IAAIC,OAAO,GAAGP,gBAAgB,GAAGZ,YAAY,GAAGF,QAAQ;EACxD,IAAIsB,WAAW,GAAG,CAACN,KAAK,IAAI,EAAE,EAAEO,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAAA,CAClDA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;EAAA,CACjBhB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEbe,WAAW,CAACE,OAAO,CAAC,UAAUC,KAAK,EAAE;IACnC,IAAIC,gBAAgB,GAAGD,KAAK,CAAClB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;QACvD,OAAOkB,kBAAkB,CAAClB,CAAC,CAAC;MAC9B,CAAC,CAAC;MACEmB,iBAAiB,GAAG7B,cAAc,CAAC2B,gBAAgB,EAAE,CAAC,CAAC;MACvDG,GAAG,GAAGD,iBAAiB,CAAC,CAAC,CAAC;MAC1BE,KAAK,GAAGF,iBAAiB,CAAC,CAAC,CAAC;IAEhC,IAAIC,GAAG,EAAE;MACPT,OAAO,CAACS,GAAG,CAAC,GAAGC,KAAK,GAAGT,OAAO,CAACS,KAAK,CAAC,GAAG,IAAI;IAC9C;EACF,CAAC,CAAC;EACF,OAAOV,OAAO;AAChB;AAEA,IAAIW,aAAa,GAAG;EAClB7B,YAAY,EAAEA,YAAY;EAC1BW,oBAAoB,EAAEA;AACxB,CAAC;AAED,SAASkB,aAAa,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var resolveCoincidentTopologyPolygonOffsetFaces = 1;\nvar resolveCoincidentTopology = 0;\nvar RESOLVE_COINCIDENT_TOPOLOGY_MODE = ['VTK_RESOLVE_OFF', 'VTK_RESOLVE_POLYGON_OFFSET'];\nfunction getResolveCoincidentTopologyPolygonOffsetFaces() {\n  return resolveCoincidentTopologyPolygonOffsetFaces;\n}\nfunction setResolveCoincidentTopologyPolygonOffsetFaces(value) {\n  resolveCoincidentTopologyPolygonOffsetFaces = value;\n}\nfunction getResolveCoincidentTopology() {\n  return resolveCoincidentTopology;\n}\nfunction setResolveCoincidentTopology() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  resolveCoincidentTopology = mode;\n}\nfunction setResolveCoincidentTopologyToDefault() {\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\n}\n\nfunction setResolveCoincidentTopologyToOff() {\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\n}\n\nfunction setResolveCoincidentTopologyToPolygonOffset() {\n  setResolveCoincidentTopology(1); // VTK_RESOLVE_POLYGON_OFFSET\n}\n\nfunction getResolveCoincidentTopologyAsString() {\n  return RESOLVE_COINCIDENT_TOPOLOGY_MODE[resolveCoincidentTopology];\n}\nvar otherStaticMethods = {\n  getResolveCoincidentTopologyAsString: getResolveCoincidentTopologyAsString,\n  getResolveCoincidentTopologyPolygonOffsetFaces: getResolveCoincidentTopologyPolygonOffsetFaces,\n  getResolveCoincidentTopology: getResolveCoincidentTopology,\n  setResolveCoincidentTopology: setResolveCoincidentTopology,\n  setResolveCoincidentTopologyPolygonOffsetFaces: setResolveCoincidentTopologyPolygonOffsetFaces,\n  setResolveCoincidentTopologyToDefault: setResolveCoincidentTopologyToDefault,\n  setResolveCoincidentTopologyToOff: setResolveCoincidentTopologyToOff,\n  setResolveCoincidentTopologyToPolygonOffset: setResolveCoincidentTopologyToPolygonOffset\n};\nexport { RESOLVE_COINCIDENT_TOPOLOGY_MODE, otherStaticMethods as default, getResolveCoincidentTopology, getResolveCoincidentTopologyAsString, getResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopology, setResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopologyToDefault, setResolveCoincidentTopologyToOff, setResolveCoincidentTopologyToPolygonOffset };","map":{"version":3,"names":["resolveCoincidentTopologyPolygonOffsetFaces","resolveCoincidentTopology","RESOLVE_COINCIDENT_TOPOLOGY_MODE","getResolveCoincidentTopologyPolygonOffsetFaces","setResolveCoincidentTopologyPolygonOffsetFaces","value","getResolveCoincidentTopology","setResolveCoincidentTopology","mode","arguments","length","undefined","setResolveCoincidentTopologyToDefault","setResolveCoincidentTopologyToOff","setResolveCoincidentTopologyToPolygonOffset","getResolveCoincidentTopologyAsString","otherStaticMethods","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js"],"sourcesContent":["var resolveCoincidentTopologyPolygonOffsetFaces = 1;\nvar resolveCoincidentTopology = 0;\nvar RESOLVE_COINCIDENT_TOPOLOGY_MODE = ['VTK_RESOLVE_OFF', 'VTK_RESOLVE_POLYGON_OFFSET'];\nfunction getResolveCoincidentTopologyPolygonOffsetFaces() {\n  return resolveCoincidentTopologyPolygonOffsetFaces;\n}\nfunction setResolveCoincidentTopologyPolygonOffsetFaces(value) {\n  resolveCoincidentTopologyPolygonOffsetFaces = value;\n}\nfunction getResolveCoincidentTopology() {\n  return resolveCoincidentTopology;\n}\nfunction setResolveCoincidentTopology() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  resolveCoincidentTopology = mode;\n}\nfunction setResolveCoincidentTopologyToDefault() {\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\n}\nfunction setResolveCoincidentTopologyToOff() {\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\n}\nfunction setResolveCoincidentTopologyToPolygonOffset() {\n  setResolveCoincidentTopology(1); // VTK_RESOLVE_POLYGON_OFFSET\n}\nfunction getResolveCoincidentTopologyAsString() {\n  return RESOLVE_COINCIDENT_TOPOLOGY_MODE[resolveCoincidentTopology];\n}\nvar otherStaticMethods = {\n  getResolveCoincidentTopologyAsString: getResolveCoincidentTopologyAsString,\n  getResolveCoincidentTopologyPolygonOffsetFaces: getResolveCoincidentTopologyPolygonOffsetFaces,\n  getResolveCoincidentTopology: getResolveCoincidentTopology,\n  setResolveCoincidentTopology: setResolveCoincidentTopology,\n  setResolveCoincidentTopologyPolygonOffsetFaces: setResolveCoincidentTopologyPolygonOffsetFaces,\n  setResolveCoincidentTopologyToDefault: setResolveCoincidentTopologyToDefault,\n  setResolveCoincidentTopologyToOff: setResolveCoincidentTopologyToOff,\n  setResolveCoincidentTopologyToPolygonOffset: setResolveCoincidentTopologyToPolygonOffset\n};\n\nexport { RESOLVE_COINCIDENT_TOPOLOGY_MODE, otherStaticMethods as default, getResolveCoincidentTopology, getResolveCoincidentTopologyAsString, getResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopology, setResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopologyToDefault, setResolveCoincidentTopologyToOff, setResolveCoincidentTopologyToPolygonOffset };\n"],"mappings":"AAAA,IAAIA,2CAA2C,GAAG,CAAC;AACnD,IAAIC,yBAAyB,GAAG,CAAC;AACjC,IAAIC,gCAAgC,GAAG,CAAC,iBAAiB,EAAE,4BAA4B,CAAC;AACxF,SAASC,8CAA8CA,CAAA,EAAG;EACxD,OAAOH,2CAA2C;AACpD;AACA,SAASI,8CAA8CA,CAACC,KAAK,EAAE;EAC7DL,2CAA2C,GAAGK,KAAK;AACrD;AACA,SAASC,4BAA4BA,CAAA,EAAG;EACtC,OAAOL,yBAAyB;AAClC;AACA,SAASM,4BAA4BA,CAAA,EAAG;EACtC,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;EAChFR,yBAAyB,GAAGO,IAAI;AAClC;AACA,SAASI,qCAAqCA,CAAA,EAAG;EAC/CL,4BAA4B,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC;;AACA,SAASM,iCAAiCA,CAAA,EAAG;EAC3CN,4BAA4B,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC;;AACA,SAASO,2CAA2CA,CAAA,EAAG;EACrDP,4BAA4B,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC;;AACA,SAASQ,oCAAoCA,CAAA,EAAG;EAC9C,OAAOb,gCAAgC,CAACD,yBAAyB,CAAC;AACpE;AACA,IAAIe,kBAAkB,GAAG;EACvBD,oCAAoC,EAAEA,oCAAoC;EAC1EZ,8CAA8C,EAAEA,8CAA8C;EAC9FG,4BAA4B,EAAEA,4BAA4B;EAC1DC,4BAA4B,EAAEA,4BAA4B;EAC1DH,8CAA8C,EAAEA,8CAA8C;EAC9FQ,qCAAqC,EAAEA,qCAAqC;EAC5EC,iCAAiC,EAAEA,iCAAiC;EACpEC,2CAA2C,EAAEA;AAC/C,CAAC;AAED,SAASZ,gCAAgC,EAAEc,kBAAkB,IAAIC,OAAO,EAAEX,4BAA4B,EAAES,oCAAoC,EAAEZ,8CAA8C,EAAEI,4BAA4B,EAAEH,8CAA8C,EAAEQ,qCAAqC,EAAEC,iCAAiC,EAAEC,2CAA2C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
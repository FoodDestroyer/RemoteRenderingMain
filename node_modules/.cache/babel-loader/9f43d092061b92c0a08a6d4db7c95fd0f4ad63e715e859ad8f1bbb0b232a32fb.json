{"ast":null,"code":"var _jsxFileName = \"/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js\";\nimport React, { Component } from 'react';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\n// import SmartConnect from 'wslink/src/SmartConnect';\n// import vtkVolumeController from '@kitware/vtk.js/Interaction/UI/VolumeController';\nimport vtkInteractorStyleManipulator from '@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass VTKClient extends Component {\n  constructor(props) {\n    super(props);\n    this.containerRef = /*#__PURE__*/React.createRef();\n  }\n  async componentDidMount() {\n    // Create VTK.js full-screen renderer\n    const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n      container: this.containerRef.current\n    });\n\n    // Initialize WebSocket connection to VTK server\n    const wsClient = vtkWSLinkClient.newInstance({\n      sessionURL: 'ws://localhost:7500/ws'\n    });\n    await wsClient.connect();\n\n    // Create volume controller\n    //   const volumeController = vtkVolumeController.newInstance({\n    //     renderWindow: fullScreenRenderer.getRenderWindow(),\n    //     wsLink: wsClient.getConnection(),\n    //     useShadow: true,\n    //   });\n\n    // Set the default interactor style for the render window\n    fullScreenRenderer.getRenderWindow().getInteractor().setInteractorStyle(vtkInteractorStyleManipulator.newInstance());\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.containerRef,\n      className: \"vtk-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this);\n  }\n}\nexport default VTKClient;","map":{"version":3,"names":["React","Component","vtkFullScreenRenderWindow","vtkWSLinkClient","vtkInteractorStyleManipulator","jsxDEV","_jsxDEV","VTKClient","constructor","props","containerRef","createRef","componentDidMount","fullScreenRenderer","newInstance","container","current","wsClient","sessionURL","connect","getRenderWindow","getInteractor","setInteractorStyle","render","ref","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js"],"sourcesContent":["import React,{Component}  from 'react';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\n// import SmartConnect from 'wslink/src/SmartConnect';\n// import vtkVolumeController from '@kitware/vtk.js/Interaction/UI/VolumeController';\nimport vtkInteractorStyleManipulator from '@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator';\n\nclass VTKClient extends Component {\n    constructor(props) {\n      super(props);\n      this.containerRef = React.createRef();\n    }\n  \n    async componentDidMount() {\n      // Create VTK.js full-screen renderer\n      const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n        container: this.containerRef.current,\n      });\n  \n      // Initialize WebSocket connection to VTK server\n      const wsClient = vtkWSLinkClient.newInstance({\n        sessionURL: 'ws://localhost:7500/ws',\n      });\n      await wsClient.connect();\n  \n      // Create volume controller\n    //   const volumeController = vtkVolumeController.newInstance({\n    //     renderWindow: fullScreenRenderer.getRenderWindow(),\n    //     wsLink: wsClient.getConnection(),\n    //     useShadow: true,\n    //   });\n  \n      // Set the default interactor style for the render window\n      fullScreenRenderer.getRenderWindow().getInteractor().setInteractorStyle(vtkInteractorStyleManipulator.newInstance());\n    }\n  \n    render() {\n      return <div ref={this.containerRef} className=\"vtk-container\" />;\n    }\n  }\n  \n  export default VTKClient;"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAQ,OAAO;AACtC,OAAOC,yBAAyB,MAAM,uDAAuD;AAC7F,OAAOC,eAAe,MAAM,sCAAsC;AAClE;AACA;AACA,OAAOC,6BAA6B,MAAM,8DAA8D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzG,MAAMC,SAAS,SAASN,SAAS,CAAC;EAC9BO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,YAAY,gBAAGV,KAAK,CAACW,SAAS,CAAC,CAAC;EACvC;EAEA,MAAMC,iBAAiBA,CAAA,EAAG;IACxB;IACA,MAAMC,kBAAkB,GAAGX,yBAAyB,CAACY,WAAW,CAAC;MAC/DC,SAAS,EAAE,IAAI,CAACL,YAAY,CAACM;IAC/B,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAQ,GAAGd,eAAe,CAACW,WAAW,CAAC;MAC3CI,UAAU,EAAE;IACd,CAAC,CAAC;IACF,MAAMD,QAAQ,CAACE,OAAO,CAAC,CAAC;;IAExB;IACF;IACA;IACA;IACA;IACA;;IAEE;IACAN,kBAAkB,CAACO,eAAe,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC,CAACC,kBAAkB,CAAClB,6BAA6B,CAACU,WAAW,CAAC,CAAC,CAAC;EACtH;EAEAS,MAAMA,CAAA,EAAG;IACP,oBAAOjB,OAAA;MAAKkB,GAAG,EAAE,IAAI,CAACd,YAAa;MAACe,SAAS,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClE;AACF;AAEA,eAAetB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
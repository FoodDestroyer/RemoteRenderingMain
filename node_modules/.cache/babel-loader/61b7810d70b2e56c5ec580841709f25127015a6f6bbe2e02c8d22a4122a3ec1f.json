{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport vtkImageData from '../DataModel/ImageData.js';\nimport vtkDataArray from './DataArray.js';\n\n/**\n * Takes a canvas and converts it to a vtkImageData.\n *\n * Optionally supply a bounding box to get a particular subset of the canvas.\n *\n * @param canvas       The HTML canvas to convert\n * @param boundingBox  A bounding box of type [top, left, width, height]\n */\n\nfunction canvasToImageData(canvas) {\n  var boundingBox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0, 0];\n  var _boundingBox = _slicedToArray(boundingBox, 4),\n    top = _boundingBox[0],\n    left = _boundingBox[1],\n    width = _boundingBox[2],\n    height = _boundingBox[3];\n  var ctxt = canvas.getContext('2d');\n  var idata = ctxt.getImageData(top, left, width || canvas.width, height || canvas.height);\n  var imageData = vtkImageData.newInstance({\n    type: 'vtkImageData'\n  });\n  imageData.setOrigin(0, 0, 0);\n  imageData.setSpacing(1, 1, 1);\n  imageData.setExtent(0, (width || canvas.width) - 1, 0, (height || canvas.height) - 1, 0, 0);\n  var scalars = vtkDataArray.newInstance({\n    numberOfComponents: 4,\n    values: new Uint8Array(idata.data.buffer)\n  });\n  scalars.setName('scalars');\n  imageData.getPointData().setScalars(scalars);\n  return imageData;\n}\n/**\n * Converts an Image object to a vtkImageData.\n */\n\nfunction imageToImageData(image) {\n  var transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    flipX: false,\n    flipY: false,\n    rotate: 0\n  };\n  var canvas = document.createElement('canvas');\n  canvas.width = image.width;\n  canvas.height = image.height;\n  var ctx = canvas.getContext('2d');\n  var flipX = transform.flipX,\n    flipY = transform.flipY,\n    rotate = transform.rotate;\n  ctx.translate(canvas.width / 2, canvas.height / 2);\n  ctx.scale(flipX ? -1 : 1, flipY ? -1 : 1);\n  ctx.rotate(rotate * Math.PI / 180);\n  ctx.drawImage(image, -image.width / 2, -image.height / 2);\n  return canvasToImageData(canvas);\n}\nvar ImageHelper = {\n  canvasToImageData: canvasToImageData,\n  imageToImageData: imageToImageData\n};\nexport { ImageHelper as default };","map":{"version":3,"names":["_slicedToArray","vtkImageData","vtkDataArray","canvasToImageData","canvas","boundingBox","arguments","length","undefined","_boundingBox","top","left","width","height","ctxt","getContext","idata","getImageData","imageData","newInstance","type","setOrigin","setSpacing","setExtent","scalars","numberOfComponents","values","Uint8Array","data","buffer","setName","getPointData","setScalars","imageToImageData","image","transform","flipX","flipY","rotate","document","createElement","ctx","translate","scale","Math","PI","drawImage","ImageHelper","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/Core/ImageHelper.js"],"sourcesContent":["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport vtkImageData from '../DataModel/ImageData.js';\nimport vtkDataArray from './DataArray.js';\n\n/**\n * Takes a canvas and converts it to a vtkImageData.\n *\n * Optionally supply a bounding box to get a particular subset of the canvas.\n *\n * @param canvas       The HTML canvas to convert\n * @param boundingBox  A bounding box of type [top, left, width, height]\n */\n\nfunction canvasToImageData(canvas) {\n  var boundingBox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0, 0];\n\n  var _boundingBox = _slicedToArray(boundingBox, 4),\n      top = _boundingBox[0],\n      left = _boundingBox[1],\n      width = _boundingBox[2],\n      height = _boundingBox[3];\n\n  var ctxt = canvas.getContext('2d');\n  var idata = ctxt.getImageData(top, left, width || canvas.width, height || canvas.height);\n  var imageData = vtkImageData.newInstance({\n    type: 'vtkImageData'\n  });\n  imageData.setOrigin(0, 0, 0);\n  imageData.setSpacing(1, 1, 1);\n  imageData.setExtent(0, (width || canvas.width) - 1, 0, (height || canvas.height) - 1, 0, 0);\n  var scalars = vtkDataArray.newInstance({\n    numberOfComponents: 4,\n    values: new Uint8Array(idata.data.buffer)\n  });\n  scalars.setName('scalars');\n  imageData.getPointData().setScalars(scalars);\n  return imageData;\n}\n/**\n * Converts an Image object to a vtkImageData.\n */\n\n\nfunction imageToImageData(image) {\n  var transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    flipX: false,\n    flipY: false,\n    rotate: 0\n  };\n  var canvas = document.createElement('canvas');\n  canvas.width = image.width;\n  canvas.height = image.height;\n  var ctx = canvas.getContext('2d');\n  var flipX = transform.flipX,\n      flipY = transform.flipY,\n      rotate = transform.rotate;\n  ctx.translate(canvas.width / 2, canvas.height / 2);\n  ctx.scale(flipX ? -1 : 1, flipY ? -1 : 1);\n  ctx.rotate(rotate * Math.PI / 180);\n  ctx.drawImage(image, -image.width / 2, -image.height / 2);\n  return canvasToImageData(canvas);\n}\n\nvar ImageHelper = {\n  canvasToImageData: canvasToImageData,\n  imageToImageData: imageToImageData\n};\n\nexport { ImageHelper as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
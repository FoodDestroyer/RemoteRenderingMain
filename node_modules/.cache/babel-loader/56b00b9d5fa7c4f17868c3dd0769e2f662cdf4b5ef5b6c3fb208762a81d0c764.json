{"ast":null,"code":"import { newInstance as newInstance$1 } from '../../macros.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUCellArrayMapper from './CellArrayMapper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nvar PrimitiveTypes = vtkWebGPUBufferManager.PrimitiveTypes; // ----------------------------------------------------------------------------\n// vtkWebGPUPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPolyDataMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPolyDataMapper');\n  publicAPI.createCellArrayMapper = function () {\n    return vtkWebGPUCellArrayMapper.newInstance();\n  };\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor');\n      if (!model.renderable.getStatic()) {\n        model.renderable.update();\n      }\n      var poly = model.renderable.getInputData();\n      model.renderable.mapScalars(poly, 1.0);\n      publicAPI.updateCellArrayMappers(poly);\n    }\n  };\n  publicAPI.updateCellArrayMappers = function (poly) {\n    var prims = [poly.getVerts(), poly.getLines(), poly.getPolys(), poly.getStrips()]; // we instantiate a cell array mapper for each cellArray that has cells\n    // and they handle the rendering of that cell array\n\n    var cellMappers = [];\n    var cellOffset = 0;\n    for (var i = PrimitiveTypes.Points; i <= PrimitiveTypes.Triangles; i++) {\n      if (prims[i].getNumberOfValues() > 0) {\n        if (!model.primitives[i]) {\n          model.primitives[i] = publicAPI.createCellArrayMapper();\n        }\n        var cellMapper = model.primitives[i];\n        cellMapper.setCellArray(prims[i]);\n        cellMapper.setCurrentInput(poly);\n        cellMapper.setCellOffset(cellOffset);\n        cellMapper.setPrimitiveType(i);\n        cellMapper.setRenderable(model.renderable);\n        cellOffset += prims[i].getNumberOfCells();\n        cellMappers.push(cellMapper);\n      } else {\n        model.primitives[i] = null;\n      }\n    }\n    if (model.WebGPUActor.getRenderable().getProperty().getEdgeVisibility()) {\n      for (var _i = PrimitiveTypes.TriangleEdges; _i <= PrimitiveTypes.TriangleStripEdges; _i++) {\n        if (prims[_i - 2].getNumberOfValues() > 0) {\n          if (!model.primitives[_i]) {\n            model.primitives[_i] = publicAPI.createCellArrayMapper();\n          }\n          var _cellMapper = model.primitives[_i];\n          _cellMapper.setCellArray(prims[_i - 2]);\n          _cellMapper.setCurrentInput(poly);\n          _cellMapper.setCellOffset(model.primitives[_i - 2].getCellOffset());\n          _cellMapper.setPrimitiveType(_i);\n          _cellMapper.setRenderable(model.renderable);\n          cellMappers.push(_cellMapper);\n        } else {\n          model.primitives[_i] = null;\n        }\n      }\n    }\n    publicAPI.prepareNodes();\n    publicAPI.addMissingChildren(cellMappers);\n    publicAPI.removeUnusedNodes();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  primitives: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.primitives = []; // Object methods\n\n  vtkWebGPUPolyDataMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUPolyDataMapper'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUPolyDataMapper$1 = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkMapper', newInstance);\nexport { vtkWebGPUPolyDataMapper$1 as default, extend, newInstance };","map":{"version":3,"names":["newInstance","newInstance$1","vtkWebGPUBufferManager","vtkWebGPUCellArrayMapper","vtkViewNode","registerOverride","PrimitiveTypes","vtkWebGPUPolyDataMapper","publicAPI","model","classHierarchy","push","createCellArrayMapper","buildPass","prepass","WebGPUActor","getFirstAncestorOfType","renderable","getStatic","update","poly","getInputData","mapScalars","updateCellArrayMappers","prims","getVerts","getLines","getPolys","getStrips","cellMappers","cellOffset","i","Points","Triangles","getNumberOfValues","primitives","cellMapper","setCellArray","setCurrentInput","setCellOffset","setPrimitiveType","setRenderable","getNumberOfCells","getRenderable","getProperty","getEdgeVisibility","_i","TriangleEdges","TriangleStripEdges","_cellMapper","getCellOffset","prepareNodes","addMissingChildren","removeUnusedNodes","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","vtkWebGPUPolyDataMapper$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper.js"],"sourcesContent":["import { newInstance as newInstance$1 } from '../../macros.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUCellArrayMapper from './CellArrayMapper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nvar PrimitiveTypes = vtkWebGPUBufferManager.PrimitiveTypes; // ----------------------------------------------------------------------------\n// vtkWebGPUPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPolyDataMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPolyDataMapper');\n\n  publicAPI.createCellArrayMapper = function () {\n    return vtkWebGPUCellArrayMapper.newInstance();\n  };\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor');\n\n      if (!model.renderable.getStatic()) {\n        model.renderable.update();\n      }\n\n      var poly = model.renderable.getInputData();\n      model.renderable.mapScalars(poly, 1.0);\n      publicAPI.updateCellArrayMappers(poly);\n    }\n  };\n\n  publicAPI.updateCellArrayMappers = function (poly) {\n    var prims = [poly.getVerts(), poly.getLines(), poly.getPolys(), poly.getStrips()]; // we instantiate a cell array mapper for each cellArray that has cells\n    // and they handle the rendering of that cell array\n\n    var cellMappers = [];\n    var cellOffset = 0;\n\n    for (var i = PrimitiveTypes.Points; i <= PrimitiveTypes.Triangles; i++) {\n      if (prims[i].getNumberOfValues() > 0) {\n        if (!model.primitives[i]) {\n          model.primitives[i] = publicAPI.createCellArrayMapper();\n        }\n\n        var cellMapper = model.primitives[i];\n        cellMapper.setCellArray(prims[i]);\n        cellMapper.setCurrentInput(poly);\n        cellMapper.setCellOffset(cellOffset);\n        cellMapper.setPrimitiveType(i);\n        cellMapper.setRenderable(model.renderable);\n        cellOffset += prims[i].getNumberOfCells();\n        cellMappers.push(cellMapper);\n      } else {\n        model.primitives[i] = null;\n      }\n    }\n\n    if (model.WebGPUActor.getRenderable().getProperty().getEdgeVisibility()) {\n      for (var _i = PrimitiveTypes.TriangleEdges; _i <= PrimitiveTypes.TriangleStripEdges; _i++) {\n        if (prims[_i - 2].getNumberOfValues() > 0) {\n          if (!model.primitives[_i]) {\n            model.primitives[_i] = publicAPI.createCellArrayMapper();\n          }\n\n          var _cellMapper = model.primitives[_i];\n\n          _cellMapper.setCellArray(prims[_i - 2]);\n\n          _cellMapper.setCurrentInput(poly);\n\n          _cellMapper.setCellOffset(model.primitives[_i - 2].getCellOffset());\n\n          _cellMapper.setPrimitiveType(_i);\n\n          _cellMapper.setRenderable(model.renderable);\n\n          cellMappers.push(_cellMapper);\n        } else {\n          model.primitives[_i] = null;\n        }\n      }\n    }\n\n    publicAPI.prepareNodes();\n    publicAPI.addMissingChildren(cellMappers);\n    publicAPI.removeUnusedNodes();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  primitives: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.primitives = []; // Object methods\n\n  vtkWebGPUPolyDataMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUPolyDataMapper'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUPolyDataMapper$1 = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkMapper', newInstance);\n\nexport { vtkWebGPUPolyDataMapper$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
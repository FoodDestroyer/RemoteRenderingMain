{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport { FormatTypes, TextureCoordinatesName } from './PLYWriter/Constants.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar vtkErrorMacro = macro.vtkErrorMacro,\n  vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkPLYWriter methods\n// ----------------------------------------------------------------------------\n\nvar _writeHeader = function writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, vertexCount, faceListLength, withNormals, withUVs, withColors, withIndices) {\n  var isBinary = fileFormat !== FormatTypes.ASCII;\n  var format;\n  if (isBinary) {\n    format = fileType ? 'binary_little_endian' : 'binary_big_endian';\n  } else format = 'ascii';\n  headerComments.unshift('VTK.js generated PLY File');\n  if (textureFileName) {\n    headerComments.push(\"TextureFile \".concat(textureFileName));\n  }\n  var commentElements = headerComments.map(function (comment) {\n    return \"comment \".concat(comment);\n  }).join('\\n');\n  var header = ['ply', \"format \".concat(format, \" 1.0\"), \"\".concat(commentElements), \"element vertex \".concat(vertexCount), 'property float x', 'property float y', 'property float z']; // normals\n\n  if (withNormals) {\n    header.push('property float nx', 'property float ny', 'property float nz');\n  } // uvs\n\n  if (withUVs) {\n    header.push(\"property float \".concat(textureCoordinatesName[0]), \"property float \".concat(textureCoordinatesName[1]));\n  } // colors\n\n  if (withColors) {\n    header.push('property uchar red', 'property uchar green', 'property uchar blue');\n  } // faces\n\n  if (withIndices) {\n    header.push(\"element face \".concat(faceListLength), 'property list uchar int vertex_indices');\n  }\n  header.push('end_header\\n');\n  return header.join('\\n');\n};\nvar binaryWriter = function binaryWriter() {\n  var output;\n  var vOffset;\n  var fOffset;\n  var indexByteCount = 4;\n  var ft;\n  return {\n    init: function init(polyData) {},\n    writeHeader: function writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, numPts, numPolys, withNormals, withUVs, withColors, withIndices) {\n      var vertexCount = polyData.getPoints().getNumberOfPoints();\n      ft = fileType; // 1 byte shape descriptor\n      // 3 vertex indices at ${indexByteCount} bytes\n\n      var faceListLength = withIndices ? numPolys * (indexByteCount * 3 + 1) : 0; // 3 position values at 4 bytes\n      // 3 normal values at 4 bytes\n      // 3 color channels with 1 byte\n      // 2 uv values at 4 bytes\n\n      var vertexListLength = vertexCount * (4 * 3 + (withNormals ? 4 * 3 : 0) + (withUVs ? 4 * 2 : 0) + (withColors ? 3 : 0));\n      var header = _writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, numPts, numPolys, withNormals, withUVs, withColors, withIndices);\n      var headerBin = new TextEncoder().encode(header);\n      output = new DataView(new ArrayBuffer(headerBin.length + vertexListLength + faceListLength));\n      new Uint8Array(output.buffer).set(headerBin, 0);\n      vOffset = headerBin.length;\n      fOffset = vOffset + vertexListLength;\n    },\n    writeVertice: function writeVertice(x, y, z, nx, ny, nz, u, v, r, g, b) {\n      // xyz\n      output.setFloat32(vOffset, x, ft);\n      vOffset += 4;\n      output.setFloat32(vOffset, y, ft);\n      vOffset += 4;\n      output.setFloat32(vOffset, z, ft);\n      vOffset += 4; // nxnynz\n\n      if (nx !== null && ny !== null && nz !== null) {\n        output.setFloat32(vOffset, nx, ft);\n        vOffset += 4;\n        output.setFloat32(vOffset, ny, ft);\n        vOffset += 4;\n        output.setFloat32(vOffset, nz, ft);\n        vOffset += 4;\n      } // uv\n\n      if (u !== null && v !== null) {\n        output.setFloat32(vOffset, u, ft);\n        vOffset += 4;\n        output.setFloat32(vOffset, v, ft);\n        vOffset += 4;\n      } // rgb\n\n      if (r !== null && g !== null && b !== null) {\n        output.setUint8(vOffset, r);\n        vOffset += 1;\n        output.setUint8(vOffset, g);\n        vOffset += 1;\n        output.setUint8(vOffset, b);\n        vOffset += 1;\n      }\n    },\n    writeFace: function writeFace(n, x, y, z) {\n      output.setUint8(fOffset, n);\n      fOffset += 1;\n      output.setUint32(fOffset, x, ft);\n      fOffset += indexByteCount;\n      output.setUint32(fOffset, y, ft);\n      fOffset += indexByteCount;\n      output.setUint32(fOffset, z, ft);\n      fOffset += indexByteCount;\n    },\n    writeFooter: function writeFooter(polyData) {},\n    getOutputData: function getOutputData() {\n      return output;\n    }\n  };\n};\nvar asciiWriter = function asciiWriter() {\n  var fileContent = '';\n  return {\n    init: function init(polyData) {},\n    writeHeader: function writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, numPts, numPolys, withNormals, withUVs, withColors, withIndices) {\n      fileContent += _writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, numPts, numPolys, withNormals, withUVs, withColors, withIndices);\n    },\n    writeVertice: function writeVertice(x, y, z, nx, ny, nz, u, v, r, g, b) {\n      fileContent += \"\".concat(x, \" \").concat(y, \" \").concat(z);\n      if (nx !== null && ny !== null && nz !== null) {\n        fileContent += \" \".concat(nx, \" \").concat(ny, \" \").concat(nz);\n      }\n      if (u !== null && v !== null) {\n        fileContent += \" \".concat(u, \" \").concat(v);\n      }\n      if (r !== null && g !== null && b !== null) {\n        fileContent += \" \".concat(r, \" \").concat(g, \" \").concat(b);\n      }\n      fileContent += '\\n';\n    },\n    writeFace: function writeFace(n, x, y, z) {\n      fileContent += \"\".concat(n, \" \").concat(x, \" \").concat(y, \" \").concat(z, \"\\n\");\n    },\n    writeFooter: function writeFooter(polyData) {},\n    getOutputData: function getOutputData() {\n      return fileContent;\n    }\n  };\n};\nfunction writePLY(polyData, format, dataByteOrder, headerComments, textureFileName, textureCoordinatesName, transform, withNormals, withUVs, withColors, withIndices) {\n  var inPts = polyData.getPoints();\n  var polys = polyData.getPolys();\n  if (inPts === null || polys === null) {\n    vtkErrorMacro('No data to write!');\n  }\n  var writer = null;\n  if (format === FormatTypes.BINARY) {\n    writer = binaryWriter();\n  } else if (format === FormatTypes.ASCII) {\n    writer = asciiWriter();\n  } else {\n    vtkErrorMacro('Invalid type format');\n  }\n  var tCoordsName = textureCoordinatesName;\n  if (typeof textureCoordinatesName === 'undefined') {\n    vtkWarningMacro('Invalid TextureCoordinatesName value, fallback to default uv values');\n    tCoordsName = TextureCoordinatesName.UV;\n  }\n  writer.init(polyData);\n  var numPts = inPts.getNumberOfPoints();\n  var numPolys = polys.getNumberOfCells(); // textureCoords / uvs\n\n  var textureCoords = polyData.getPointData().getTCoords(); // eslint-disable-next-line no-param-reassign\n\n  withUVs = !(textureCoords === null); // scalars / colors\n\n  var scalars = polyData.getPointData().getScalars(); // eslint-disable-next-line no-param-reassign\n\n  withColors = !(scalars === null);\n  var fileType = dataByteOrder ? 0 : 1;\n  writer.writeHeader(polyData, format, fileType, headerComments, textureFileName, tCoordsName, numPts, numPolys, withNormals, withUVs, withColors, withIndices);\n  var normals = polyData.getPointData().getNormals(); // points / vertices\n\n  for (var i = 0; i < numPts; i++) {\n    // eslint-disable-next-line prefer-const\n    var p = inPts.getPoint(i); // TODO: apply transform matrix\n    // divide by 1 to remove trailing zeros\n\n    var x = p[0].toPrecision(6) / 1;\n    var y = p[1].toPrecision(6) / 1;\n    var z = p[2].toPrecision(6) / 1; // normals\n\n    var nx = null;\n    var ny = null;\n    var nz = null; // uvs\n\n    var u = null;\n    var v = null; // colors\n\n    var r = null;\n    var g = null;\n    var b = null;\n    if (textureCoords) {\n      u = textureCoords.getData()[i * 2];\n      v = textureCoords.getData()[i * 2 + 1];\n    }\n    if (scalars) {\n      r = scalars.getData()[i * 3];\n      g = scalars.getData()[i * 3 + 1];\n      b = scalars.getData()[i * 3 + 2];\n    }\n    if (normals) {\n      nx = normals.getData()[i * 2];\n      ny = normals.getData()[i * 2 + 1];\n      nz = normals.getData()[i * 2 + 2];\n    }\n    writer.writeVertice(x, y, z, nx, ny, nz, u, v, r, g, b);\n  } // polys / indices\n\n  var pd = polys.getData();\n  for (var _i = 0, l = pd.length; _i < l; _i += 4) {\n    writer.writeFace(pd[_i + 0], pd[_i + 1], pd[_i + 2], pd[_i + 3]);\n  }\n  writer.writeFooter(polyData);\n  return writer.getOutputData();\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {\n  writePLY: writePLY\n}; // ----------------------------------------------------------------------------\n// vtkPLYWriter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPLYWriter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPLYWriter');\n  publicAPI.requestData = function (inData, outData) {\n    var input = inData[0];\n    if (!input || input.getClassName() !== 'vtkPolyData') {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    outData[0] = writePLY(input, model.format, model.dataByteOrder, model.headerComments, model.textureFileName, model.textureCoordinatesName, model.transform, model.withNormals, model.withUVs, model.withColors, model.withIndices);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  format: FormatTypes.ASCII,\n  dataByteOrder: 0,\n  headerComments: [],\n  textureFileName: null,\n  textureCoordinatesName: TextureCoordinatesName.UV,\n  transform: null,\n  withNormals: true,\n  withUVs: true,\n  withColors: true,\n  withIndices: true\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['format', 'dataByteOrder',\n  // binary_little_endian 0 binary_big_endian 1\n  'headerComments', 'textureFileName', 'textureCoordinatesName', 'transform', 'withNormals', 'withUVs', 'withColors', 'withIndices']); // Object specific methods\n\n  vtkPLYWriter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPLYWriter'); // ----------------------------------------------------------------------------\n\nvar vtkPLYWriter$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\nexport { STATIC, vtkPLYWriter$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","FormatTypes","TextureCoordinatesName","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkErrorMacro","vtkWarningMacro","_writeHeader","writeHeader","polyData","fileFormat","fileType","headerComments","textureFileName","textureCoordinatesName","vertexCount","faceListLength","withNormals","withUVs","withColors","withIndices","isBinary","ASCII","format","unshift","concat","commentElements","map","comment","join","header","binaryWriter","output","vOffset","fOffset","indexByteCount","ft","init","numPts","numPolys","getPoints","getNumberOfPoints","vertexListLength","headerBin","TextEncoder","encode","DataView","ArrayBuffer","Uint8Array","buffer","set","writeVertice","x","y","z","nx","ny","nz","u","v","r","g","b","setFloat32","setUint8","writeFace","n","setUint32","writeFooter","getOutputData","asciiWriter","fileContent","writePLY","dataByteOrder","transform","inPts","polys","getPolys","writer","BINARY","tCoordsName","UV","getNumberOfCells","textureCoords","getPointData","getTCoords","scalars","getScalars","normals","getNormals","p","getPoint","toPrecision","getData","pd","_i","l","STATIC","vtkPLYWriter","publicAPI","model","classHierarchy","requestData","inData","outData","input","getClassName","DEFAULT_VALUES","extend","initialValues","undefined","assign","obj","algo","setGet","newInstance","vtkPLYWriter$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Geometry/PLYWriter.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport { FormatTypes, TextureCoordinatesName } from './PLYWriter/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkErrorMacro = macro.vtkErrorMacro,\n    vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkPLYWriter methods\n// ----------------------------------------------------------------------------\n\nvar _writeHeader = function writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, vertexCount, faceListLength, withNormals, withUVs, withColors, withIndices) {\n  var isBinary = fileFormat !== FormatTypes.ASCII;\n  var format;\n\n  if (isBinary) {\n    format = fileType ? 'binary_little_endian' : 'binary_big_endian';\n  } else format = 'ascii';\n\n  headerComments.unshift('VTK.js generated PLY File');\n\n  if (textureFileName) {\n    headerComments.push(\"TextureFile \".concat(textureFileName));\n  }\n\n  var commentElements = headerComments.map(function (comment) {\n    return \"comment \".concat(comment);\n  }).join('\\n');\n  var header = ['ply', \"format \".concat(format, \" 1.0\"), \"\".concat(commentElements), \"element vertex \".concat(vertexCount), 'property float x', 'property float y', 'property float z']; // normals\n\n  if (withNormals) {\n    header.push('property float nx', 'property float ny', 'property float nz');\n  } // uvs\n\n\n  if (withUVs) {\n    header.push(\"property float \".concat(textureCoordinatesName[0]), \"property float \".concat(textureCoordinatesName[1]));\n  } // colors\n\n\n  if (withColors) {\n    header.push('property uchar red', 'property uchar green', 'property uchar blue');\n  } // faces\n\n\n  if (withIndices) {\n    header.push(\"element face \".concat(faceListLength), 'property list uchar int vertex_indices');\n  }\n\n  header.push('end_header\\n');\n  return header.join('\\n');\n};\n\nvar binaryWriter = function binaryWriter() {\n  var output;\n  var vOffset;\n  var fOffset;\n  var indexByteCount = 4;\n  var ft;\n  return {\n    init: function init(polyData) {},\n    writeHeader: function writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, numPts, numPolys, withNormals, withUVs, withColors, withIndices) {\n      var vertexCount = polyData.getPoints().getNumberOfPoints();\n      ft = fileType; // 1 byte shape descriptor\n      // 3 vertex indices at ${indexByteCount} bytes\n\n      var faceListLength = withIndices ? numPolys * (indexByteCount * 3 + 1) : 0; // 3 position values at 4 bytes\n      // 3 normal values at 4 bytes\n      // 3 color channels with 1 byte\n      // 2 uv values at 4 bytes\n\n      var vertexListLength = vertexCount * (4 * 3 + (withNormals ? 4 * 3 : 0) + (withUVs ? 4 * 2 : 0) + (withColors ? 3 : 0));\n\n      var header = _writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, numPts, numPolys, withNormals, withUVs, withColors, withIndices);\n\n      var headerBin = new TextEncoder().encode(header);\n      output = new DataView(new ArrayBuffer(headerBin.length + vertexListLength + faceListLength));\n      new Uint8Array(output.buffer).set(headerBin, 0);\n      vOffset = headerBin.length;\n      fOffset = vOffset + vertexListLength;\n    },\n    writeVertice: function writeVertice(x, y, z, nx, ny, nz, u, v, r, g, b) {\n      // xyz\n      output.setFloat32(vOffset, x, ft);\n      vOffset += 4;\n      output.setFloat32(vOffset, y, ft);\n      vOffset += 4;\n      output.setFloat32(vOffset, z, ft);\n      vOffset += 4; // nxnynz\n\n      if (nx !== null && ny !== null && nz !== null) {\n        output.setFloat32(vOffset, nx, ft);\n        vOffset += 4;\n        output.setFloat32(vOffset, ny, ft);\n        vOffset += 4;\n        output.setFloat32(vOffset, nz, ft);\n        vOffset += 4;\n      } // uv\n\n\n      if (u !== null && v !== null) {\n        output.setFloat32(vOffset, u, ft);\n        vOffset += 4;\n        output.setFloat32(vOffset, v, ft);\n        vOffset += 4;\n      } // rgb\n\n\n      if (r !== null && g !== null && b !== null) {\n        output.setUint8(vOffset, r);\n        vOffset += 1;\n        output.setUint8(vOffset, g);\n        vOffset += 1;\n        output.setUint8(vOffset, b);\n        vOffset += 1;\n      }\n    },\n    writeFace: function writeFace(n, x, y, z) {\n      output.setUint8(fOffset, n);\n      fOffset += 1;\n      output.setUint32(fOffset, x, ft);\n      fOffset += indexByteCount;\n      output.setUint32(fOffset, y, ft);\n      fOffset += indexByteCount;\n      output.setUint32(fOffset, z, ft);\n      fOffset += indexByteCount;\n    },\n    writeFooter: function writeFooter(polyData) {},\n    getOutputData: function getOutputData() {\n      return output;\n    }\n  };\n};\n\nvar asciiWriter = function asciiWriter() {\n  var fileContent = '';\n  return {\n    init: function init(polyData) {},\n    writeHeader: function writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, numPts, numPolys, withNormals, withUVs, withColors, withIndices) {\n      fileContent += _writeHeader(polyData, fileFormat, fileType, headerComments, textureFileName, textureCoordinatesName, numPts, numPolys, withNormals, withUVs, withColors, withIndices);\n    },\n    writeVertice: function writeVertice(x, y, z, nx, ny, nz, u, v, r, g, b) {\n      fileContent += \"\".concat(x, \" \").concat(y, \" \").concat(z);\n\n      if (nx !== null && ny !== null && nz !== null) {\n        fileContent += \" \".concat(nx, \" \").concat(ny, \" \").concat(nz);\n      }\n\n      if (u !== null && v !== null) {\n        fileContent += \" \".concat(u, \" \").concat(v);\n      }\n\n      if (r !== null && g !== null && b !== null) {\n        fileContent += \" \".concat(r, \" \").concat(g, \" \").concat(b);\n      }\n\n      fileContent += '\\n';\n    },\n    writeFace: function writeFace(n, x, y, z) {\n      fileContent += \"\".concat(n, \" \").concat(x, \" \").concat(y, \" \").concat(z, \"\\n\");\n    },\n    writeFooter: function writeFooter(polyData) {},\n    getOutputData: function getOutputData() {\n      return fileContent;\n    }\n  };\n};\n\nfunction writePLY(polyData, format, dataByteOrder, headerComments, textureFileName, textureCoordinatesName, transform, withNormals, withUVs, withColors, withIndices) {\n  var inPts = polyData.getPoints();\n  var polys = polyData.getPolys();\n\n  if (inPts === null || polys === null) {\n    vtkErrorMacro('No data to write!');\n  }\n\n  var writer = null;\n\n  if (format === FormatTypes.BINARY) {\n    writer = binaryWriter();\n  } else if (format === FormatTypes.ASCII) {\n    writer = asciiWriter();\n  } else {\n    vtkErrorMacro('Invalid type format');\n  }\n\n  var tCoordsName = textureCoordinatesName;\n\n  if (typeof textureCoordinatesName === 'undefined') {\n    vtkWarningMacro('Invalid TextureCoordinatesName value, fallback to default uv values');\n    tCoordsName = TextureCoordinatesName.UV;\n  }\n\n  writer.init(polyData);\n  var numPts = inPts.getNumberOfPoints();\n  var numPolys = polys.getNumberOfCells(); // textureCoords / uvs\n\n  var textureCoords = polyData.getPointData().getTCoords(); // eslint-disable-next-line no-param-reassign\n\n  withUVs = !(textureCoords === null); // scalars / colors\n\n  var scalars = polyData.getPointData().getScalars(); // eslint-disable-next-line no-param-reassign\n\n  withColors = !(scalars === null);\n  var fileType = dataByteOrder ? 0 : 1;\n  writer.writeHeader(polyData, format, fileType, headerComments, textureFileName, tCoordsName, numPts, numPolys, withNormals, withUVs, withColors, withIndices);\n  var normals = polyData.getPointData().getNormals(); // points / vertices\n\n  for (var i = 0; i < numPts; i++) {\n    // eslint-disable-next-line prefer-const\n    var p = inPts.getPoint(i); // TODO: apply transform matrix\n    // divide by 1 to remove trailing zeros\n\n\n    var x = p[0].toPrecision(6) / 1;\n    var y = p[1].toPrecision(6) / 1;\n    var z = p[2].toPrecision(6) / 1; // normals\n\n    var nx = null;\n    var ny = null;\n    var nz = null; // uvs\n\n    var u = null;\n    var v = null; // colors\n\n    var r = null;\n    var g = null;\n    var b = null;\n\n    if (textureCoords) {\n      u = textureCoords.getData()[i * 2];\n      v = textureCoords.getData()[i * 2 + 1];\n    }\n\n    if (scalars) {\n      r = scalars.getData()[i * 3];\n      g = scalars.getData()[i * 3 + 1];\n      b = scalars.getData()[i * 3 + 2];\n    }\n\n    if (normals) {\n      nx = normals.getData()[i * 2];\n      ny = normals.getData()[i * 2 + 1];\n      nz = normals.getData()[i * 2 + 2];\n    }\n\n    writer.writeVertice(x, y, z, nx, ny, nz, u, v, r, g, b);\n  } // polys / indices\n\n\n  var pd = polys.getData();\n\n  for (var _i = 0, l = pd.length; _i < l; _i += 4) {\n    writer.writeFace(pd[_i + 0], pd[_i + 1], pd[_i + 2], pd[_i + 3]);\n  }\n\n  writer.writeFooter(polyData);\n  return writer.getOutputData();\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  writePLY: writePLY\n}; // ----------------------------------------------------------------------------\n// vtkPLYWriter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPLYWriter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPLYWriter');\n\n  publicAPI.requestData = function (inData, outData) {\n    var input = inData[0];\n\n    if (!input || input.getClassName() !== 'vtkPolyData') {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n\n    outData[0] = writePLY(input, model.format, model.dataByteOrder, model.headerComments, model.textureFileName, model.textureCoordinatesName, model.transform, model.withNormals, model.withUVs, model.withColors, model.withIndices);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  format: FormatTypes.ASCII,\n  dataByteOrder: 0,\n  headerComments: [],\n  textureFileName: null,\n  textureCoordinatesName: TextureCoordinatesName.UV,\n  transform: null,\n  withNormals: true,\n  withUVs: true,\n  withColors: true,\n  withIndices: true\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['format', 'dataByteOrder', // binary_little_endian 0 binary_big_endian 1\n  'headerComments', 'textureFileName', 'textureCoordinatesName', 'transform', 'withNormals', 'withUVs', 'withColors', 'withIndices']); // Object specific methods\n\n  vtkPLYWriter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPLYWriter'); // ----------------------------------------------------------------------------\n\nvar vtkPLYWriter$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkPLYWriter$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
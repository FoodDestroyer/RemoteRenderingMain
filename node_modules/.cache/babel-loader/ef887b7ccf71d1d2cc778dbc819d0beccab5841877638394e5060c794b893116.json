{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport { F as createUninitializedBounds, C as clampValue, K as floor } from '../../Common/Core/Math/index.js';\nimport Constants from './VolumeMapper/Constants.js';\nimport vtkAbstractMapper from './AbstractMapper.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar BlendMode = Constants.BlendMode,\n  FilterMode = Constants.FilterMode;\nfunction createRadonTransferFunction(firstAbsorbentMaterialHounsfieldValue, firstAbsorbentMaterialAbsorption, maxAbsorbentMaterialHounsfieldValue, maxAbsorbentMaterialAbsorption, outputTransferFunction) {\n  var ofun = null;\n  if (outputTransferFunction) {\n    ofun = outputTransferFunction;\n    ofun.removeAllPoints();\n  } else {\n    ofun = vtkPiecewiseFunction.newInstance();\n  }\n  ofun.addPointLong(-1024, 0, 1, 1); // air (i.e. material with no absorption)\n\n  ofun.addPoint(firstAbsorbentMaterialHounsfieldValue, firstAbsorbentMaterialAbsorption);\n  ofun.addPoint(maxAbsorbentMaterialHounsfieldValue, maxAbsorbentMaterialAbsorption);\n  return ofun;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {\n  createRadonTransferFunction: createRadonTransferFunction\n}; // ----------------------------------------------------------------------------\n// vtkVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeMapper');\n  var superClass = _objectSpread({}, publicAPI);\n  publicAPI.getBounds = function () {\n    var input = publicAPI.getInputData();\n    if (!input) {\n      model.bounds = createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n      model.bounds = input.getBounds();\n    }\n    return model.bounds;\n  };\n  publicAPI.update = function () {\n    publicAPI.getInputData();\n  };\n  publicAPI.setBlendModeToComposite = function () {\n    publicAPI.setBlendMode(BlendMode.COMPOSITE_BLEND);\n  };\n  publicAPI.setBlendModeToMaximumIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.MAXIMUM_INTENSITY_BLEND);\n  };\n  publicAPI.setBlendModeToMinimumIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.MINIMUM_INTENSITY_BLEND);\n  };\n  publicAPI.setBlendModeToAverageIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.AVERAGE_INTENSITY_BLEND);\n  };\n  publicAPI.setBlendModeToAdditiveIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.ADDITIVE_INTENSITY_BLEND);\n  };\n  publicAPI.setBlendModeToRadonTransform = function () {\n    publicAPI.setBlendMode(BlendMode.RADON_TRANSFORM_BLEND);\n  };\n  publicAPI.getBlendModeAsString = function () {\n    return macro.enumToString(BlendMode, model.blendMode);\n  };\n  publicAPI.setAverageIPScalarRange = function (min, max) {\n    console.warn('setAverageIPScalarRange is deprecated use setIpScalarRange');\n    publicAPI.setIpScalarRange(min, max);\n  };\n  publicAPI.getFilterModeAsString = function () {\n    return macro.enumToString(FilterMode, model.filterMode);\n  };\n  publicAPI.setFilterModeToOff = function () {\n    publicAPI.setFilterMode(FilterMode.OFF);\n  };\n  publicAPI.setFilterModeToNormalized = function () {\n    publicAPI.setFilterMode(FilterMode.NORMALIZED);\n  };\n  publicAPI.setFilterModeToRaw = function () {\n    publicAPI.setFilterMode(FilterMode.RAW);\n  };\n  publicAPI.setGlobalIlluminationReach = function (gl) {\n    return superClass.setGlobalIlluminationReach(clampValue(gl, 0.0, 1.0));\n  };\n  publicAPI.setVolumetricScatteringBlending = function (vsb) {\n    return superClass.setVolumetricScatteringBlending(clampValue(vsb, 0.0, 1.0));\n  };\n  publicAPI.setVolumeShadowSamplingDistFactor = function (vsdf) {\n    return superClass.setVolumeShadowSamplingDistFactor(vsdf >= 1.0 ? vsdf : 1.0);\n  };\n  publicAPI.setAnisotropy = function (at) {\n    return superClass.setAnisotropy(clampValue(at, -0.99, 0.99));\n  };\n  publicAPI.setLAOKernelSize = function (ks) {\n    return superClass.setLAOKernelSize(floor(clampValue(ks, 1, 32)));\n  };\n  publicAPI.setLAOKernelRadius = function (kr) {\n    return superClass.setLAOKernelRadius(kr >= 1 ? kr : 1);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n// TODO: what values to use for averageIPScalarRange to get GLSL to use max / min values like [-Math.inf, Math.inf]?\n\nvar DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  sampleDistance: 1.0,\n  imageSampleDistance: 1.0,\n  maximumSamplesPerRay: 1000,\n  autoAdjustSampleDistances: true,\n  initialInteractionScale: 1.0,\n  interactionSampleDistanceFactor: 1.0,\n  blendMode: BlendMode.COMPOSITE_BLEND,\n  ipScalarRange: [-1000000.0, 1000000.0],\n  filterMode: FilterMode.OFF,\n  // ignored by WebGL so no behavior change\n  preferSizeOverAccuracy: false,\n  // Whether to use halfFloat representation of float, when it is inaccurate\n  computeNormalFromOpacity: false,\n  // volume shadow parameters\n  volumetricScatteringBlending: 0.0,\n  globalIlluminationReach: 0.0,\n  volumeShadowSamplingDistFactor: 5.0,\n  anisotropy: 0.0,\n  // local ambient occlusion\n  localAmbientOcclusion: false,\n  LAOKernelSize: 15,\n  LAOKernelRadius: 7\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['sampleDistance', 'imageSampleDistance', 'maximumSamplesPerRay', 'autoAdjustSampleDistances', 'initialInteractionScale', 'interactionSampleDistanceFactor', 'blendMode', 'filterMode', 'preferSizeOverAccuracy', 'computeNormalFromOpacity', 'volumetricScatteringBlending', 'globalIlluminationReach', 'volumeShadowSamplingDistFactor', 'anisotropy', 'localAmbientOcclusion', 'LAOKernelSize', 'LAOKernelRadius']);\n  macro.setGetArray(publicAPI, model, ['ipScalarRange'], 2);\n  macro.event(publicAPI, model, 'lightingActivated'); // Object methods\n\n  vtkVolumeMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeMapper'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeMapper$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\nexport { STATIC, vtkVolumeMapper$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","F","createUninitializedBounds","C","clampValue","K","floor","Constants","vtkAbstractMapper","vtkPiecewiseFunction","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","BlendMode","FilterMode","createRadonTransferFunction","firstAbsorbentMaterialHounsfieldValue","firstAbsorbentMaterialAbsorption","maxAbsorbentMaterialHounsfieldValue","maxAbsorbentMaterialAbsorption","outputTransferFunction","ofun","removeAllPoints","newInstance","addPointLong","addPoint","STATIC","vtkVolumeMapper","publicAPI","model","classHierarchy","superClass","getBounds","input","getInputData","bounds","static","update","setBlendModeToComposite","setBlendMode","COMPOSITE_BLEND","setBlendModeToMaximumIntensity","MAXIMUM_INTENSITY_BLEND","setBlendModeToMinimumIntensity","MINIMUM_INTENSITY_BLEND","setBlendModeToAverageIntensity","AVERAGE_INTENSITY_BLEND","setBlendModeToAdditiveIntensity","ADDITIVE_INTENSITY_BLEND","setBlendModeToRadonTransform","RADON_TRANSFORM_BLEND","getBlendModeAsString","enumToString","blendMode","setAverageIPScalarRange","min","max","console","warn","setIpScalarRange","getFilterModeAsString","filterMode","setFilterModeToOff","setFilterMode","OFF","setFilterModeToNormalized","NORMALIZED","setFilterModeToRaw","RAW","setGlobalIlluminationReach","gl","setVolumetricScatteringBlending","vsb","setVolumeShadowSamplingDistFactor","vsdf","setAnisotropy","at","setLAOKernelSize","ks","setLAOKernelRadius","kr","DEFAULT_VALUES","sampleDistance","imageSampleDistance","maximumSamplesPerRay","autoAdjustSampleDistances","initialInteractionScale","interactionSampleDistanceFactor","ipScalarRange","preferSizeOverAccuracy","computeNormalFromOpacity","volumetricScatteringBlending","globalIlluminationReach","volumeShadowSamplingDistFactor","anisotropy","localAmbientOcclusion","LAOKernelSize","LAOKernelRadius","extend","initialValues","undefined","assign","setGet","setGetArray","event","vtkVolumeMapper$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport { F as createUninitializedBounds, C as clampValue, K as floor } from '../../Common/Core/Math/index.js';\nimport Constants from './VolumeMapper/Constants.js';\nimport vtkAbstractMapper from './AbstractMapper.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar BlendMode = Constants.BlendMode,\n    FilterMode = Constants.FilterMode;\n\nfunction createRadonTransferFunction(firstAbsorbentMaterialHounsfieldValue, firstAbsorbentMaterialAbsorption, maxAbsorbentMaterialHounsfieldValue, maxAbsorbentMaterialAbsorption, outputTransferFunction) {\n  var ofun = null;\n\n  if (outputTransferFunction) {\n    ofun = outputTransferFunction;\n    ofun.removeAllPoints();\n  } else {\n    ofun = vtkPiecewiseFunction.newInstance();\n  }\n\n  ofun.addPointLong(-1024, 0, 1, 1); // air (i.e. material with no absorption)\n\n  ofun.addPoint(firstAbsorbentMaterialHounsfieldValue, firstAbsorbentMaterialAbsorption);\n  ofun.addPoint(maxAbsorbentMaterialHounsfieldValue, maxAbsorbentMaterialAbsorption);\n  return ofun;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  createRadonTransferFunction: createRadonTransferFunction\n}; // ----------------------------------------------------------------------------\n// vtkVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeMapper');\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.getBounds = function () {\n    var input = publicAPI.getInputData();\n\n    if (!input) {\n      model.bounds = createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n\n      model.bounds = input.getBounds();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.update = function () {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.setBlendModeToComposite = function () {\n    publicAPI.setBlendMode(BlendMode.COMPOSITE_BLEND);\n  };\n\n  publicAPI.setBlendModeToMaximumIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.MAXIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToMinimumIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.MINIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToAverageIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.AVERAGE_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToAdditiveIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.ADDITIVE_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToRadonTransform = function () {\n    publicAPI.setBlendMode(BlendMode.RADON_TRANSFORM_BLEND);\n  };\n\n  publicAPI.getBlendModeAsString = function () {\n    return macro.enumToString(BlendMode, model.blendMode);\n  };\n\n  publicAPI.setAverageIPScalarRange = function (min, max) {\n    console.warn('setAverageIPScalarRange is deprecated use setIpScalarRange');\n    publicAPI.setIpScalarRange(min, max);\n  };\n\n  publicAPI.getFilterModeAsString = function () {\n    return macro.enumToString(FilterMode, model.filterMode);\n  };\n\n  publicAPI.setFilterModeToOff = function () {\n    publicAPI.setFilterMode(FilterMode.OFF);\n  };\n\n  publicAPI.setFilterModeToNormalized = function () {\n    publicAPI.setFilterMode(FilterMode.NORMALIZED);\n  };\n\n  publicAPI.setFilterModeToRaw = function () {\n    publicAPI.setFilterMode(FilterMode.RAW);\n  };\n\n  publicAPI.setGlobalIlluminationReach = function (gl) {\n    return superClass.setGlobalIlluminationReach(clampValue(gl, 0.0, 1.0));\n  };\n\n  publicAPI.setVolumetricScatteringBlending = function (vsb) {\n    return superClass.setVolumetricScatteringBlending(clampValue(vsb, 0.0, 1.0));\n  };\n\n  publicAPI.setVolumeShadowSamplingDistFactor = function (vsdf) {\n    return superClass.setVolumeShadowSamplingDistFactor(vsdf >= 1.0 ? vsdf : 1.0);\n  };\n\n  publicAPI.setAnisotropy = function (at) {\n    return superClass.setAnisotropy(clampValue(at, -0.99, 0.99));\n  };\n\n  publicAPI.setLAOKernelSize = function (ks) {\n    return superClass.setLAOKernelSize(floor(clampValue(ks, 1, 32)));\n  };\n\n  publicAPI.setLAOKernelRadius = function (kr) {\n    return superClass.setLAOKernelRadius(kr >= 1 ? kr : 1);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n// TODO: what values to use for averageIPScalarRange to get GLSL to use max / min values like [-Math.inf, Math.inf]?\n\n\nvar DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  sampleDistance: 1.0,\n  imageSampleDistance: 1.0,\n  maximumSamplesPerRay: 1000,\n  autoAdjustSampleDistances: true,\n  initialInteractionScale: 1.0,\n  interactionSampleDistanceFactor: 1.0,\n  blendMode: BlendMode.COMPOSITE_BLEND,\n  ipScalarRange: [-1000000.0, 1000000.0],\n  filterMode: FilterMode.OFF,\n  // ignored by WebGL so no behavior change\n  preferSizeOverAccuracy: false,\n  // Whether to use halfFloat representation of float, when it is inaccurate\n  computeNormalFromOpacity: false,\n  // volume shadow parameters\n  volumetricScatteringBlending: 0.0,\n  globalIlluminationReach: 0.0,\n  volumeShadowSamplingDistFactor: 5.0,\n  anisotropy: 0.0,\n  // local ambient occlusion\n  localAmbientOcclusion: false,\n  LAOKernelSize: 15,\n  LAOKernelRadius: 7\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['sampleDistance', 'imageSampleDistance', 'maximumSamplesPerRay', 'autoAdjustSampleDistances', 'initialInteractionScale', 'interactionSampleDistanceFactor', 'blendMode', 'filterMode', 'preferSizeOverAccuracy', 'computeNormalFromOpacity', 'volumetricScatteringBlending', 'globalIlluminationReach', 'volumeShadowSamplingDistFactor', 'anisotropy', 'localAmbientOcclusion', 'LAOKernelSize', 'LAOKernelRadius']);\n  macro.setGetArray(publicAPI, model, ['ipScalarRange'], 2);\n  macro.event(publicAPI, model, 'lightingActivated'); // Object methods\n\n  vtkVolumeMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeMapper'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeMapper$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkVolumeMapper$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from '../../macros.js';\nimport DataAccessHelper from '../Core/DataAccessHelper.js';\nimport vtkLegacyAsciiParser from './LegacyAsciiParser.js';\nimport '../Core/DataAccessHelper/LiteHttpDataAccessHelper.js';\n\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n// ----------------------------------------------------------------------------\n// vtkPolyDataReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPolyDataReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPolyDataReader'); // Create default dataAccessHelper if not available\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  } // Internal method to fetch Array\n\n  function fetchData(url) {\n    var compression = model.compression,\n      progressCallback = model.progressCallback;\n    return model.dataAccessHelper.fetchText(publicAPI, url, {\n      compression: compression,\n      progressCallback: progressCallback\n    });\n  } // Set DataSet url\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.url = url; // Remove the file in the URL\n\n    var path = url.split('/');\n    path.pop();\n    model.baseURL = path.join('/');\n    model.compression = option.compression; // Fetch metadata\n\n    return publicAPI.loadData({\n      progressCallback: option.progressCallback\n    });\n  }; // Fetch the actual data arrays\n\n  publicAPI.loadData = function () {\n    var promise = fetchData(model.url);\n    promise.then(publicAPI.parseAsText);\n    return promise;\n  };\n  publicAPI.parseAsText = function (content) {\n    if (!content) {\n      return;\n    }\n    if (content !== model.parseData) {\n      publicAPI.modified();\n    } else {\n      return;\n    }\n    model.parseData = content;\n    model.output[0] = vtkLegacyAsciiParser.parseLegacyASCII(model.parseData).dataset;\n  };\n  publicAPI.requestData = function (inData, outData) {\n    publicAPI.parseAsText(model.parseData);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {// baseURL: null,\n  // dataAccessHelper: null,\n  // url: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url', 'baseURL']);\n  macro.setGet(publicAPI, model, ['dataAccessHelper']);\n  macro.algo(publicAPI, model, 0, 1); // vtkPolyDataReader methods\n\n  vtkPolyDataReader(publicAPI, model); // To support destructuring\n\n  if (!model.compression) {\n    model.compression = null;\n  }\n  if (!model.progressCallback) {\n    model.progressCallback = null;\n  }\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPolyDataReader'); // ----------------------------------------------------------------------------\n\nvar vtkPolyDataReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkPolyDataReader$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","DataAccessHelper","vtkLegacyAsciiParser","vtkPolyDataReader","publicAPI","model","classHierarchy","push","dataAccessHelper","get","fetchData","url","compression","progressCallback","fetchText","setUrl","option","arguments","length","undefined","path","split","pop","baseURL","join","loadData","promise","then","parseAsText","content","parseData","modified","output","parseLegacyASCII","dataset","requestData","inData","outData","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","setGet","algo","newInstance","vtkPolyDataReader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Legacy/PolyDataReader.js"],"sourcesContent":["import macro from '../../macros.js';\nimport DataAccessHelper from '../Core/DataAccessHelper.js';\nimport vtkLegacyAsciiParser from './LegacyAsciiParser.js';\nimport '../Core/DataAccessHelper/LiteHttpDataAccessHelper.js';\n\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n// ----------------------------------------------------------------------------\n// vtkPolyDataReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPolyDataReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPolyDataReader'); // Create default dataAccessHelper if not available\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  } // Internal method to fetch Array\n\n\n  function fetchData(url) {\n    var compression = model.compression,\n        progressCallback = model.progressCallback;\n    return model.dataAccessHelper.fetchText(publicAPI, url, {\n      compression: compression,\n      progressCallback: progressCallback\n    });\n  } // Set DataSet url\n\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.url = url; // Remove the file in the URL\n\n    var path = url.split('/');\n    path.pop();\n    model.baseURL = path.join('/');\n    model.compression = option.compression; // Fetch metadata\n\n    return publicAPI.loadData({\n      progressCallback: option.progressCallback\n    });\n  }; // Fetch the actual data arrays\n\n\n  publicAPI.loadData = function () {\n    var promise = fetchData(model.url);\n    promise.then(publicAPI.parseAsText);\n    return promise;\n  };\n\n  publicAPI.parseAsText = function (content) {\n    if (!content) {\n      return;\n    }\n\n    if (content !== model.parseData) {\n      publicAPI.modified();\n    } else {\n      return;\n    }\n\n    model.parseData = content;\n    model.output[0] = vtkLegacyAsciiParser.parseLegacyASCII(model.parseData).dataset;\n  };\n\n  publicAPI.requestData = function (inData, outData) {\n    publicAPI.parseAsText(model.parseData);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// baseURL: null,\n  // dataAccessHelper: null,\n  // url: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url', 'baseURL']);\n  macro.setGet(publicAPI, model, ['dataAccessHelper']);\n  macro.algo(publicAPI, model, 0, 1); // vtkPolyDataReader methods\n\n  vtkPolyDataReader(publicAPI, model); // To support destructuring\n\n  if (!model.compression) {\n    model.compression = null;\n  }\n\n  if (!model.progressCallback) {\n    model.progressCallback = null;\n  }\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPolyDataReader'); // ----------------------------------------------------------------------------\n\nvar vtkPolyDataReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPolyDataReader$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAO,sDAAsD;;AAE7D;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,iBAAiBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC3C;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;;EAEhD,IAAI,CAACF,KAAK,CAACG,gBAAgB,EAAE;IAC3BH,KAAK,CAACG,gBAAgB,GAAGP,gBAAgB,CAACQ,GAAG,CAAC,MAAM,CAAC;EACvD,CAAC,CAAC;;EAGF,SAASC,SAASA,CAACC,GAAG,EAAE;IACtB,IAAIC,WAAW,GAAGP,KAAK,CAACO,WAAW;MAC/BC,gBAAgB,GAAGR,KAAK,CAACQ,gBAAgB;IAC7C,OAAOR,KAAK,CAACG,gBAAgB,CAACM,SAAS,CAACV,SAAS,EAAEO,GAAG,EAAE;MACtDC,WAAW,EAAEA,WAAW;MACxBC,gBAAgB,EAAEA;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC;;EAGFT,SAAS,CAACW,MAAM,GAAG,UAAUJ,GAAG,EAAE;IAChC,IAAIK,MAAM,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACnFZ,KAAK,CAACM,GAAG,GAAGA,GAAG,CAAC,CAAC;;IAEjB,IAAIS,IAAI,GAAGT,GAAG,CAACU,KAAK,CAAC,GAAG,CAAC;IACzBD,IAAI,CAACE,GAAG,CAAC,CAAC;IACVjB,KAAK,CAACkB,OAAO,GAAGH,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC;IAC9BnB,KAAK,CAACO,WAAW,GAAGI,MAAM,CAACJ,WAAW,CAAC,CAAC;;IAExC,OAAOR,SAAS,CAACqB,QAAQ,CAAC;MACxBZ,gBAAgB,EAAEG,MAAM,CAACH;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;;EAGHT,SAAS,CAACqB,QAAQ,GAAG,YAAY;IAC/B,IAAIC,OAAO,GAAGhB,SAAS,CAACL,KAAK,CAACM,GAAG,CAAC;IAClCe,OAAO,CAACC,IAAI,CAACvB,SAAS,CAACwB,WAAW,CAAC;IACnC,OAAOF,OAAO;EAChB,CAAC;EAEDtB,SAAS,CAACwB,WAAW,GAAG,UAAUC,OAAO,EAAE;IACzC,IAAI,CAACA,OAAO,EAAE;MACZ;IACF;IAEA,IAAIA,OAAO,KAAKxB,KAAK,CAACyB,SAAS,EAAE;MAC/B1B,SAAS,CAAC2B,QAAQ,CAAC,CAAC;IACtB,CAAC,MAAM;MACL;IACF;IAEA1B,KAAK,CAACyB,SAAS,GAAGD,OAAO;IACzBxB,KAAK,CAAC2B,MAAM,CAAC,CAAC,CAAC,GAAG9B,oBAAoB,CAAC+B,gBAAgB,CAAC5B,KAAK,CAACyB,SAAS,CAAC,CAACI,OAAO;EAClF,CAAC;EAED9B,SAAS,CAAC+B,WAAW,GAAG,UAAUC,MAAM,EAAEC,OAAO,EAAE;IACjDjC,SAAS,CAACwB,WAAW,CAACvB,KAAK,CAACyB,SAAS,CAAC;EACxC,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIQ,cAAc,GAAG,CAAC;EACpB;EACA;AAAA,CACD,CAAC,CAAC;;AAEH,SAASC,MAAMA,CAACnC,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAImC,aAAa,GAAGvB,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FwB,MAAM,CAACC,MAAM,CAACrC,KAAK,EAAEiC,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErDxC,KAAK,CAAC2C,GAAG,CAACvC,SAAS,EAAEC,KAAK,CAAC;EAC3BL,KAAK,CAACS,GAAG,CAACL,SAAS,EAAEC,KAAK,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;EAC/CL,KAAK,CAAC4C,MAAM,CAACxC,SAAS,EAAEC,KAAK,EAAE,CAAC,kBAAkB,CAAC,CAAC;EACpDL,KAAK,CAAC6C,IAAI,CAACzC,SAAS,EAAEC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEpCF,iBAAiB,CAACC,SAAS,EAAEC,KAAK,CAAC,CAAC,CAAC;;EAErC,IAAI,CAACA,KAAK,CAACO,WAAW,EAAE;IACtBP,KAAK,CAACO,WAAW,GAAG,IAAI;EAC1B;EAEA,IAAI,CAACP,KAAK,CAACQ,gBAAgB,EAAE;IAC3BR,KAAK,CAACQ,gBAAgB,GAAG,IAAI;EAC/B;AACF,CAAC,CAAC;;AAEF,IAAIiC,WAAW,GAAG9C,KAAK,CAAC8C,WAAW,CAACP,MAAM,EAAE,mBAAmB,CAAC,CAAC,CAAC;;AAElE,IAAIQ,mBAAmB,GAAG;EACxBD,WAAW,EAAEA,WAAW;EACxBP,MAAM,EAAEA;AACV,CAAC;AAED,SAASQ,mBAAmB,IAAIC,OAAO,EAAET,MAAM,EAAEO,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
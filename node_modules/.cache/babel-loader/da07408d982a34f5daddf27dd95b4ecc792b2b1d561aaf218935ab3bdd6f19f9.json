{"ast":null,"code":"import { newInstance as newInstance$1, obj, get, setGet } from '../../macros.js';\n\n// vtkWebGPUPipeline methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPipeline(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPipeline');\n  publicAPI.getShaderDescriptions = function () {\n    return model.shaderDescriptions;\n  };\n  publicAPI.initialize = function (device, hash) {\n    // start with the renderencoder settings\n    model.pipelineDescription = model.renderEncoder.getPipelineSettings();\n    model.pipelineDescription.primitive.topology = model.topology;\n    model.pipelineDescription.vertex = model.vertexState;\n    model.pipelineDescription.label = hash; // add in bind group layouts\n\n    var bindGroupLayouts = [];\n    for (var i = 0; i < model.layouts.length; i++) {\n      bindGroupLayouts.push(model.layouts[i].layout);\n    }\n    model.pipelineLayout = device.getHandle().createPipelineLayout({\n      bindGroupLayouts: bindGroupLayouts\n    });\n    model.pipelineDescription.layout = model.pipelineLayout;\n    for (var _i = 0; _i < model.shaderDescriptions.length; _i++) {\n      var sd = model.shaderDescriptions[_i];\n      var sm = device.getShaderModule(sd);\n      if (sd.getType() === 'vertex') {\n        model.pipelineDescription.vertex.module = sm.getHandle();\n        model.pipelineDescription.vertex.entryPoint = 'main';\n      }\n      if (sd.getType() === 'fragment') {\n        model.pipelineDescription.fragment.module = sm.getHandle();\n        model.pipelineDescription.fragment.entryPoint = 'main';\n      }\n    }\n    model.handle = device.getHandle().createRenderPipeline(model.pipelineDescription);\n  };\n  publicAPI.getShaderDescription = function (stype) {\n    for (var i = 0; i < model.shaderDescriptions.length; i++) {\n      if (model.shaderDescriptions[i].getType() === stype) return model.shaderDescriptions[i];\n    }\n    return null;\n  };\n  publicAPI.addBindGroupLayout = function (bindGroup) {\n    if (!bindGroup) {\n      return;\n    }\n    model.layouts.push({\n      layout: bindGroup.getBindGroupLayout(model.device),\n      label: bindGroup.getLabel()\n    });\n  };\n  publicAPI.getBindGroupLayout = function (idx) {\n    return model.layouts[idx].layout;\n  };\n  publicAPI.getBindGroupLayoutCount = function (llabel) {\n    for (var i = 0; i < model.layouts.length; i++) {\n      if (model.layouts[i].label === llabel) {\n        return i;\n      }\n    }\n    return 0;\n  };\n  publicAPI.bindVertexInput = function (renderEncoder, vInput) {\n    vInput.bindBuffers(renderEncoder);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  handle: null,\n  layouts: null,\n  renderEncoder: null,\n  shaderDescriptions: null,\n  vertexState: null,\n  topology: null,\n  pipelineDescription: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  model.layouts = [];\n  model.shaderDescriptions = [];\n  get(publicAPI, model, ['handle', 'pipelineDescription']);\n  setGet(publicAPI, model, ['device', 'renderEncoder', 'topology', 'vertexState']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkWebGPUPipeline(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUPipeline'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUPipeline$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkWebGPUPipeline$1 as default, extend, newInstance };","map":{"version":3,"names":["newInstance","newInstance$1","obj","get","setGet","vtkWebGPUPipeline","publicAPI","model","classHierarchy","push","getShaderDescriptions","shaderDescriptions","initialize","device","hash","pipelineDescription","renderEncoder","getPipelineSettings","primitive","topology","vertex","vertexState","label","bindGroupLayouts","i","layouts","length","layout","pipelineLayout","getHandle","createPipelineLayout","_i","sd","sm","getShaderModule","getType","module","entryPoint","fragment","handle","createRenderPipeline","getShaderDescription","stype","addBindGroupLayout","bindGroup","getBindGroupLayout","getLabel","idx","getBindGroupLayoutCount","llabel","bindVertexInput","vInput","bindBuffers","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","vtkWebGPUPipeline$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/WebGPU/Pipeline.js"],"sourcesContent":["import { newInstance as newInstance$1, obj, get, setGet } from '../../macros.js';\n\n// vtkWebGPUPipeline methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPipeline(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPipeline');\n\n  publicAPI.getShaderDescriptions = function () {\n    return model.shaderDescriptions;\n  };\n\n  publicAPI.initialize = function (device, hash) {\n    // start with the renderencoder settings\n    model.pipelineDescription = model.renderEncoder.getPipelineSettings();\n    model.pipelineDescription.primitive.topology = model.topology;\n    model.pipelineDescription.vertex = model.vertexState;\n    model.pipelineDescription.label = hash; // add in bind group layouts\n\n    var bindGroupLayouts = [];\n\n    for (var i = 0; i < model.layouts.length; i++) {\n      bindGroupLayouts.push(model.layouts[i].layout);\n    }\n\n    model.pipelineLayout = device.getHandle().createPipelineLayout({\n      bindGroupLayouts: bindGroupLayouts\n    });\n    model.pipelineDescription.layout = model.pipelineLayout;\n\n    for (var _i = 0; _i < model.shaderDescriptions.length; _i++) {\n      var sd = model.shaderDescriptions[_i];\n      var sm = device.getShaderModule(sd);\n\n      if (sd.getType() === 'vertex') {\n        model.pipelineDescription.vertex.module = sm.getHandle();\n        model.pipelineDescription.vertex.entryPoint = 'main';\n      }\n\n      if (sd.getType() === 'fragment') {\n        model.pipelineDescription.fragment.module = sm.getHandle();\n        model.pipelineDescription.fragment.entryPoint = 'main';\n      }\n    }\n\n    model.handle = device.getHandle().createRenderPipeline(model.pipelineDescription);\n  };\n\n  publicAPI.getShaderDescription = function (stype) {\n    for (var i = 0; i < model.shaderDescriptions.length; i++) {\n      if (model.shaderDescriptions[i].getType() === stype) return model.shaderDescriptions[i];\n    }\n\n    return null;\n  };\n\n  publicAPI.addBindGroupLayout = function (bindGroup) {\n    if (!bindGroup) {\n      return;\n    }\n\n    model.layouts.push({\n      layout: bindGroup.getBindGroupLayout(model.device),\n      label: bindGroup.getLabel()\n    });\n  };\n\n  publicAPI.getBindGroupLayout = function (idx) {\n    return model.layouts[idx].layout;\n  };\n\n  publicAPI.getBindGroupLayoutCount = function (llabel) {\n    for (var i = 0; i < model.layouts.length; i++) {\n      if (model.layouts[i].label === llabel) {\n        return i;\n      }\n    }\n\n    return 0;\n  };\n\n  publicAPI.bindVertexInput = function (renderEncoder, vInput) {\n    vInput.bindBuffers(renderEncoder);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  handle: null,\n  layouts: null,\n  renderEncoder: null,\n  shaderDescriptions: null,\n  vertexState: null,\n  topology: null,\n  pipelineDescription: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  model.layouts = [];\n  model.shaderDescriptions = [];\n  get(publicAPI, model, ['handle', 'pipelineDescription']);\n  setGet(publicAPI, model, ['device', 'renderEncoder', 'topology', 'vertexState']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkWebGPUPipeline(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUPipeline'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUPipeline$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUPipeline$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
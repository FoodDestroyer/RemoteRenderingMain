{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport macro from '../../macros.js';\nimport ImageHelper from '../../Common/Core/ImageHelper.js';\nimport vtkTexture from '../../Rendering/Core/Texture.js';\nimport { unzipSync, strFromU8 } from 'fflate';\n\n// vtkSkyboxReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSkyboxReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSkyboxReader'); // Internal method to fetch Array\n\n  function fetchData(url) {\n    var compression = model.compression,\n      progressCallback = model.progressCallback;\n    return model.dataAccessHelper.fetchBinary(url, {\n      compression: compression,\n      progressCallback: progressCallback\n    });\n  } // Set DataSet url\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.url = url; // Fetch metadata\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n  publicAPI.loadData = function () {\n    return fetchData(model.url).then(publicAPI.parseAsArrayBuffer);\n  };\n  publicAPI.parseAsArrayBuffer = function (content) {\n    if (!content) {\n      return false;\n    }\n    model.textures = {};\n    model.busy = true;\n    publicAPI.invokeBusy(model.busy);\n    model.dataMapping = {};\n    var imageReady = []; // Finish data processing\n\n    function workDone() {\n      for (var i = 0; i < model.positions.length; i++) {\n        var key = model.positions[i];\n        var images = model.dataMapping[key];\n        if (!model.textures[key]) {\n          model.textures[key] = vtkTexture.newInstance({\n            interpolate: true\n          });\n        }\n        if (images) {\n          var texture = model.textures[key];\n          for (var idx = 0; idx < 6; idx++) {\n            var _model$faceMapping$id = model.faceMapping[idx],\n              fileName = _model$faceMapping$id.fileName,\n              transform = _model$faceMapping$id.transform;\n            var readyIndex = imageReady.indexOf(\"\".concat(key, \"/\").concat(fileName));\n            if (readyIndex !== -1) {\n              texture.setInputData(ImageHelper.imageToImageData(images[fileName], transform), idx); // Free image\n\n              URL.revokeObjectURL(images[fileName].src);\n              delete images[fileName]; // Don't process again\n\n              imageReady.splice(readyIndex, 1);\n            }\n          }\n        }\n      }\n      model.busy = false;\n      publicAPI.modified();\n      publicAPI.invokeBusy(model.busy);\n    }\n    var decompressedFiles = unzipSync(new Uint8Array(content));\n    var pending = []; // Find root index.json\n\n    Object.entries(decompressedFiles).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        relativePath = _ref2[0],\n        fileData = _ref2[1];\n      if (relativePath.match(/index.json$/)) {\n        var txt = strFromU8(fileData);\n        var config = JSON.parse(txt);\n        if (config.skybox && config.skybox.faceMapping) {\n          model.faceMapping = config.skybox.faceMapping;\n        }\n        if (config.metadata && config.metadata.skybox && config.metadata.skybox.faceMapping) {\n          model.faceMapping = config.metadata.skybox.faceMapping;\n        }\n      }\n      if (relativePath.match(/\\.jpg$/)) {\n        var pathTokens = relativePath.split('/');\n        var fileName = pathTokens.pop();\n        var key = pathTokens.pop();\n        if (!model.dataMapping[key]) {\n          model.dataMapping[key] = {};\n        }\n        var blob = new Blob([fileData.buffer]);\n        var img = new Image();\n        var readyKey = \"\".concat(key, \"/\").concat(fileName);\n        model.dataMapping[key][fileName] = img;\n        pending.push(new Promise(function (resolve) {\n          img.onload = function () {\n            imageReady.push(readyKey);\n            resolve();\n          };\n        }));\n        img.src = URL.createObjectURL(blob);\n      }\n    });\n    model.positions = Object.keys(model.dataMapping);\n    model.position = model.positions[0];\n    Promise.all(pending).then(function () {\n      workDone();\n    });\n    return publicAPI.getReadyPromise();\n  };\n  publicAPI.requestData = function (inData, outData) {\n    outData[0] = model.textures[model.position];\n  };\n  publicAPI.setPosition = function (name) {\n    if (model.positions.indexOf(name) !== -1 && name !== model.position) {\n      model.position = name;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.getReadyPromise = function () {\n    if (!model.busy) {\n      return Promise.resolve(publicAPI);\n    }\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onBusy(function (isBusy) {\n        if (!isBusy) {\n          subscription.unsubscribe();\n          resolve(publicAPI);\n        }\n      });\n    });\n  }; // return Busy state\n\n  publicAPI.isBusy = function () {\n    return model.busy;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  // url: null,\n  busy: false,\n  // everything must be flipped in Y due to canvas\n  // versus vtk ordering\n  faceMapping: [{\n    fileName: 'right.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'left.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'up.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'down.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'back.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'front.jpg',\n    transform: {\n      flipY: true\n    }\n  }]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url', 'positions', 'position']);\n  macro.setGet(publicAPI, model, ['faceMapping']);\n  macro.event(publicAPI, model, 'busy');\n  macro.algo(publicAPI, model, 0, 6); // Object methods\n\n  vtkSkyboxReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSkyboxReader'); // ----------------------------------------------------------------------------\n\nvar vtkSkyboxReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkSkyboxReader$1 as default, extend, newInstance };","map":{"version":3,"names":["_slicedToArray","macro","ImageHelper","vtkTexture","unzipSync","strFromU8","vtkSkyboxReader","publicAPI","model","classHierarchy","push","fetchData","url","compression","progressCallback","dataAccessHelper","fetchBinary","setUrl","option","arguments","length","undefined","loadData","then","parseAsArrayBuffer","content","textures","busy","invokeBusy","dataMapping","imageReady","workDone","i","positions","key","images","newInstance","interpolate","texture","idx","_model$faceMapping$id","faceMapping","fileName","transform","readyIndex","indexOf","concat","setInputData","imageToImageData","URL","revokeObjectURL","src","splice","modified","decompressedFiles","Uint8Array","pending","Object","entries","forEach","_ref","_ref2","relativePath","fileData","match","txt","config","JSON","parse","skybox","metadata","pathTokens","split","pop","blob","Blob","buffer","img","Image","readyKey","Promise","resolve","onload","createObjectURL","keys","position","all","getReadyPromise","requestData","inData","outData","setPosition","name","reject","subscription","onBusy","isBusy","unsubscribe","DEFAULT_VALUES","flipY","extend","initialValues","assign","obj","get","setGet","event","algo","vtkSkyboxReader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Misc/SkyboxReader.js"],"sourcesContent":["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport macro from '../../macros.js';\nimport ImageHelper from '../../Common/Core/ImageHelper.js';\nimport vtkTexture from '../../Rendering/Core/Texture.js';\nimport { unzipSync, strFromU8 } from 'fflate';\n\n// vtkSkyboxReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSkyboxReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSkyboxReader'); // Internal method to fetch Array\n\n  function fetchData(url) {\n    var compression = model.compression,\n        progressCallback = model.progressCallback;\n    return model.dataAccessHelper.fetchBinary(url, {\n      compression: compression,\n      progressCallback: progressCallback\n    });\n  } // Set DataSet url\n\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.url = url; // Fetch metadata\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n\n  publicAPI.loadData = function () {\n    return fetchData(model.url).then(publicAPI.parseAsArrayBuffer);\n  };\n\n  publicAPI.parseAsArrayBuffer = function (content) {\n    if (!content) {\n      return false;\n    }\n\n    model.textures = {};\n    model.busy = true;\n    publicAPI.invokeBusy(model.busy);\n    model.dataMapping = {};\n    var imageReady = []; // Finish data processing\n\n    function workDone() {\n      for (var i = 0; i < model.positions.length; i++) {\n        var key = model.positions[i];\n        var images = model.dataMapping[key];\n\n        if (!model.textures[key]) {\n          model.textures[key] = vtkTexture.newInstance({\n            interpolate: true\n          });\n        }\n\n        if (images) {\n          var texture = model.textures[key];\n\n          for (var idx = 0; idx < 6; idx++) {\n            var _model$faceMapping$id = model.faceMapping[idx],\n                fileName = _model$faceMapping$id.fileName,\n                transform = _model$faceMapping$id.transform;\n            var readyIndex = imageReady.indexOf(\"\".concat(key, \"/\").concat(fileName));\n\n            if (readyIndex !== -1) {\n              texture.setInputData(ImageHelper.imageToImageData(images[fileName], transform), idx); // Free image\n\n              URL.revokeObjectURL(images[fileName].src);\n              delete images[fileName]; // Don't process again\n\n              imageReady.splice(readyIndex, 1);\n            }\n          }\n        }\n      }\n\n      model.busy = false;\n      publicAPI.modified();\n      publicAPI.invokeBusy(model.busy);\n    }\n\n    var decompressedFiles = unzipSync(new Uint8Array(content));\n    var pending = []; // Find root index.json\n\n    Object.entries(decompressedFiles).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          relativePath = _ref2[0],\n          fileData = _ref2[1];\n\n      if (relativePath.match(/index.json$/)) {\n        var txt = strFromU8(fileData);\n        var config = JSON.parse(txt);\n\n        if (config.skybox && config.skybox.faceMapping) {\n          model.faceMapping = config.skybox.faceMapping;\n        }\n\n        if (config.metadata && config.metadata.skybox && config.metadata.skybox.faceMapping) {\n          model.faceMapping = config.metadata.skybox.faceMapping;\n        }\n      }\n\n      if (relativePath.match(/\\.jpg$/)) {\n        var pathTokens = relativePath.split('/');\n        var fileName = pathTokens.pop();\n        var key = pathTokens.pop();\n\n        if (!model.dataMapping[key]) {\n          model.dataMapping[key] = {};\n        }\n\n        var blob = new Blob([fileData.buffer]);\n        var img = new Image();\n        var readyKey = \"\".concat(key, \"/\").concat(fileName);\n        model.dataMapping[key][fileName] = img;\n        pending.push(new Promise(function (resolve) {\n          img.onload = function () {\n            imageReady.push(readyKey);\n            resolve();\n          };\n        }));\n        img.src = URL.createObjectURL(blob);\n      }\n    });\n    model.positions = Object.keys(model.dataMapping);\n    model.position = model.positions[0];\n    Promise.all(pending).then(function () {\n      workDone();\n    });\n    return publicAPI.getReadyPromise();\n  };\n\n  publicAPI.requestData = function (inData, outData) {\n    outData[0] = model.textures[model.position];\n  };\n\n  publicAPI.setPosition = function (name) {\n    if (model.positions.indexOf(name) !== -1 && name !== model.position) {\n      model.position = name;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getReadyPromise = function () {\n    if (!model.busy) {\n      return Promise.resolve(publicAPI);\n    }\n\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onBusy(function (isBusy) {\n        if (!isBusy) {\n          subscription.unsubscribe();\n          resolve(publicAPI);\n        }\n      });\n    });\n  }; // return Busy state\n\n\n  publicAPI.isBusy = function () {\n    return model.busy;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // url: null,\n  busy: false,\n  // everything must be flipped in Y due to canvas\n  // versus vtk ordering\n  faceMapping: [{\n    fileName: 'right.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'left.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'up.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'down.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'back.jpg',\n    transform: {\n      flipY: true\n    }\n  }, {\n    fileName: 'front.jpg',\n    transform: {\n      flipY: true\n    }\n  }]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url', 'positions', 'position']);\n  macro.setGet(publicAPI, model, ['faceMapping']);\n  macro.event(publicAPI, model, 'busy');\n  macro.algo(publicAPI, model, 0, 6); // Object methods\n\n  vtkSkyboxReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSkyboxReader'); // ----------------------------------------------------------------------------\n\nvar vtkSkyboxReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkSkyboxReader$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from 'vtk.js/Sources/macros';\nfunction vtkViewStream(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewStream');\n\n  // Internal variables\n  model.imageDecodingPool = [new Image(), new Image()];\n  model.eventPool = [];\n  model.nextPoolImageIndex = 0;\n  model.urlToRevoke = [];\n  model.activeURL = null;\n  model.fps = [];\n  model.lastTime = Date.now();\n  model.lastImageEvent = null;\n\n  // --------------------------------------------------------------------------\n  // Internal methods\n  // --------------------------------------------------------------------------\n\n  function imageLoaded(e) {\n    const id = Number(this.dataset.id);\n    publicAPI.invokeImageReady(model.eventPool[id]);\n  }\n\n  // --------------------------------------------------------------------------\n\n  function prepareDecodingPool(size = 2) {\n    while (model.imageDecodingPool.length < size) {\n      model.imageDecodingPool.push(new Image());\n    }\n    for (let i = 0; i < model.imageDecodingPool.length; i++) {\n      model.imageDecodingPool[i].dataset.id = i;\n      model.imageDecodingPool[i].onload = imageLoaded;\n    }\n  }\n\n  // --------------------------------------------------------------------------\n\n  function decodeImage(event) {\n    model.eventPool[model.nextPoolImageIndex] = event;\n    event.image = model.imageDecodingPool[model.nextPoolImageIndex++];\n    model.nextPoolImageIndex %= model.imageDecodingPool.length;\n    event.image.src = event.url;\n  }\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.pushCamera = () => {\n    const focalPoint = model.camera.getReferenceByName('focalPoint');\n    const viewUp = model.camera.getReferenceByName('viewUp');\n    const position = model.camera.getReferenceByName('position');\n    const parallelProjection = model.camera.getParallelProjection();\n    const viewAngle = model.camera.getViewAngle();\n    const parallelScale = model.camera.getParallelScale();\n    let promise = null;\n    if (model.useCameraParameters) {\n      promise = model.protocol.updateCameraParameters(model.viewId, {\n        focalPoint,\n        viewUp,\n        position,\n        parallelProjection,\n        viewAngle,\n        parallelScale\n      }, false);\n    } else {\n      promise = model.protocol.updateCamera(model.viewId, focalPoint, viewUp, position, false);\n    }\n    if (model.isAnimating) {\n      setTimeout(publicAPI.pushCamera, 1000 / model.cameraUpdateRate);\n    }\n    return promise;\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.invalidateCache = () => model.protocol.invalidateCache(model.viewId);\n\n  // --------------------------------------------------------------------------\n  // PublicAPI\n  // --------------------------------------------------------------------------\n\n  publicAPI.render = () => model.protocol.render({\n    view: model.viewId,\n    size: model.size\n  });\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.resetCamera = () => model.protocol.resetCamera(model.viewId);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.startAnimation = () => model.protocol.startAnimation(model.viewId);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.stopAnimation = () => model.protocol.stopAnimation(model.viewId);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setSize = (width, height) => {\n    let changeDetected = false;\n    if (model.size[0] !== width || model.size[1] !== height) {\n      model.size = [width, height];\n      changeDetected = true;\n    }\n    if (changeDetected) {\n      publicAPI.modified();\n      if (model.protocol) {\n        return model.protocol.setSize(model.viewId, width, height);\n      }\n    }\n    return Promise.resolve(false);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.startInteraction = () => {\n    const promises = [model.protocol.setQuality(model.viewId, model.interactiveQuality, model.interactiveRatio)];\n    if (model.camera) {\n      promises.push(publicAPI.startAnimation());\n      model.isAnimating = true;\n      promises.push(publicAPI.pushCamera());\n    }\n    return Promise.all(promises);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.endInteraction = () => {\n    const promises = [];\n    promises.push(model.protocol.setQuality(model.viewId, model.stillQuality, model.stillRatio));\n    if (model.camera) {\n      promises.push(publicAPI.stopAnimation());\n      model.isAnimating = false;\n      promises.push(publicAPI.pushCamera());\n    } else {\n      promises.push(publicAPI.render());\n    }\n    return Promise.all(promises);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setViewId = id => {\n    if (model.viewId === id || !model.protocol) {\n      return false;\n    }\n    if (model.viewId) {\n      model.protocol.unregisterView(model.viewId);\n    }\n    model.viewId = id;\n    if (model.viewId) {\n      model.protocol.registerView(model.viewId).then(({\n        viewId\n      }) => {\n        model.viewId = viewId;\n      });\n    }\n    return true;\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.processMessage = msg => {\n    /* eslint-disable eqeqeq */\n    if (msg.id != model.viewId) {\n      return;\n    }\n    /* eslint-enable eqeqeq */\n    const imgBlob = new Blob([msg.image], {\n      type: model.mimeType\n    });\n    if (model.activeURL) {\n      model.urlToRevoke.push(model.activeURL);\n      model.activeURL = null;\n      while (model.urlToRevoke.length > 60) {\n        const url = model.urlToRevoke.shift();\n        window.URL.revokeObjectURL(url);\n      }\n    }\n    model.activeURL = URL.createObjectURL(imgBlob);\n    const time = Date.now();\n    const fps = Math.floor(10000 / (time - model.lastTime)) / 10;\n    model.fps.push(fps);\n    model.lastTime = time;\n    model.lastImageEvent = {\n      url: model.activeURL,\n      fps,\n      metadata: {\n        size: msg.size,\n        id: msg.id,\n        memory: msg.memsize,\n        workTime: msg.workTime\n      }\n    };\n    if (model.decodeImage) {\n      decodeImage(model.lastImageEvent);\n    } else {\n      publicAPI.invokeImageReady(model.lastImageEvent);\n    }\n\n    // GC fps\n    while (model.fps.length > model.fpsWindowSize) {\n      model.fps.shift();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.delete = macro.chain(() => {\n    model.unregisterViewStream(publicAPI);\n    publicAPI.setViewId(null);\n    while (model.urlToRevoke.length) {\n      window.URL.revokeObjectURL(model.urlToRevoke.pop());\n    }\n  }, publicAPI.delete);\n\n  // --------------------------------------------------------------------------\n  // Initialize object\n  // --------------------------------------------------------------------------\n\n  prepareDecodingPool();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // protocol: null,\n  // api: null,\n  cameraUpdateRate: 30,\n  decodeImage: true,\n  fpsWindowSize: 250,\n  interactiveQuality: 80,\n  interactiveRatio: 1,\n  isAnimating: false,\n  mimeType: 'image/jpeg',\n  size: [-1, -1],\n  stillQuality: 100,\n  stillRatio: 1,\n  useCameraParameters: false,\n  viewId: null\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'ImageReady');\n  macro.get(publicAPI, model, ['viewId', 'size', 'fps', 'lastImageEvent']);\n  macro.setGet(publicAPI, model, ['camera', 'cameraUpdateRate', 'decodeImage', 'fpsWindowSize', 'interactiveQuality', 'interactiveRatio', 'stillQuality', 'stillRatio', 'useCameraParameters']);\n\n  // Object specific methods\n  vtkViewStream(publicAPI, model);\n\n  // Blend APIs\n  Object.assign(publicAPI, model.sharedAPI);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkViewStream');\n\n// ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkViewStream","publicAPI","model","classHierarchy","push","imageDecodingPool","Image","eventPool","nextPoolImageIndex","urlToRevoke","activeURL","fps","lastTime","Date","now","lastImageEvent","imageLoaded","e","id","Number","dataset","invokeImageReady","prepareDecodingPool","size","length","i","onload","decodeImage","event","image","src","url","pushCamera","focalPoint","camera","getReferenceByName","viewUp","position","parallelProjection","getParallelProjection","viewAngle","getViewAngle","parallelScale","getParallelScale","promise","useCameraParameters","protocol","updateCameraParameters","viewId","updateCamera","isAnimating","setTimeout","cameraUpdateRate","invalidateCache","render","view","resetCamera","startAnimation","stopAnimation","setSize","width","height","changeDetected","modified","Promise","resolve","startInteraction","promises","setQuality","interactiveQuality","interactiveRatio","all","endInteraction","stillQuality","stillRatio","setViewId","unregisterView","registerView","then","processMessage","msg","imgBlob","Blob","type","mimeType","shift","window","URL","revokeObjectURL","createObjectURL","time","Math","floor","metadata","memory","memsize","workTime","fpsWindowSize","delete","chain","unregisterViewStream","pop","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","get","setGet","sharedAPI","newInstance"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/vtk.js/Sources/IO/Core/ImageStream/ViewStream.js"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\n\nfunction vtkViewStream(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewStream');\n\n  // Internal variables\n  model.imageDecodingPool = [new Image(), new Image()];\n  model.eventPool = [];\n  model.nextPoolImageIndex = 0;\n  model.urlToRevoke = [];\n  model.activeURL = null;\n  model.fps = [];\n  model.lastTime = Date.now();\n  model.lastImageEvent = null;\n\n  // --------------------------------------------------------------------------\n  // Internal methods\n  // --------------------------------------------------------------------------\n\n  function imageLoaded(e) {\n    const id = Number(this.dataset.id);\n    publicAPI.invokeImageReady(model.eventPool[id]);\n  }\n\n  // --------------------------------------------------------------------------\n\n  function prepareDecodingPool(size = 2) {\n    while (model.imageDecodingPool.length < size) {\n      model.imageDecodingPool.push(new Image());\n    }\n    for (let i = 0; i < model.imageDecodingPool.length; i++) {\n      model.imageDecodingPool[i].dataset.id = i;\n      model.imageDecodingPool[i].onload = imageLoaded;\n    }\n  }\n\n  // --------------------------------------------------------------------------\n\n  function decodeImage(event) {\n    model.eventPool[model.nextPoolImageIndex] = event;\n    event.image = model.imageDecodingPool[model.nextPoolImageIndex++];\n    model.nextPoolImageIndex %= model.imageDecodingPool.length;\n    event.image.src = event.url;\n  }\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.pushCamera = () => {\n    const focalPoint = model.camera.getReferenceByName('focalPoint');\n    const viewUp = model.camera.getReferenceByName('viewUp');\n    const position = model.camera.getReferenceByName('position');\n    const parallelProjection = model.camera.getParallelProjection();\n    const viewAngle = model.camera.getViewAngle();\n    const parallelScale = model.camera.getParallelScale();\n    let promise = null;\n\n    if (model.useCameraParameters) {\n      promise = model.protocol.updateCameraParameters(\n        model.viewId,\n        {\n          focalPoint,\n          viewUp,\n          position,\n          parallelProjection,\n          viewAngle,\n          parallelScale,\n        },\n        false\n      );\n    } else {\n      promise = model.protocol.updateCamera(\n        model.viewId,\n        focalPoint,\n        viewUp,\n        position,\n        false\n      );\n    }\n\n    if (model.isAnimating) {\n      setTimeout(publicAPI.pushCamera, 1000 / model.cameraUpdateRate);\n    }\n    return promise;\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.invalidateCache = () =>\n    model.protocol.invalidateCache(model.viewId);\n\n  // --------------------------------------------------------------------------\n  // PublicAPI\n  // --------------------------------------------------------------------------\n\n  publicAPI.render = () =>\n    model.protocol.render({ view: model.viewId, size: model.size });\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.resetCamera = () => model.protocol.resetCamera(model.viewId);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.startAnimation = () => model.protocol.startAnimation(model.viewId);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.stopAnimation = () => model.protocol.stopAnimation(model.viewId);\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setSize = (width, height) => {\n    let changeDetected = false;\n    if (model.size[0] !== width || model.size[1] !== height) {\n      model.size = [width, height];\n      changeDetected = true;\n    }\n\n    if (changeDetected) {\n      publicAPI.modified();\n      if (model.protocol) {\n        return model.protocol.setSize(model.viewId, width, height);\n      }\n    }\n\n    return Promise.resolve(false);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.startInteraction = () => {\n    const promises = [\n      model.protocol.setQuality(\n        model.viewId,\n        model.interactiveQuality,\n        model.interactiveRatio\n      ),\n    ];\n\n    if (model.camera) {\n      promises.push(publicAPI.startAnimation());\n      model.isAnimating = true;\n      promises.push(publicAPI.pushCamera());\n    }\n\n    return Promise.all(promises);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.endInteraction = () => {\n    const promises = [];\n    promises.push(\n      model.protocol.setQuality(\n        model.viewId,\n        model.stillQuality,\n        model.stillRatio\n      )\n    );\n    if (model.camera) {\n      promises.push(publicAPI.stopAnimation());\n      model.isAnimating = false;\n      promises.push(publicAPI.pushCamera());\n    } else {\n      promises.push(publicAPI.render());\n    }\n\n    return Promise.all(promises);\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.setViewId = (id) => {\n    if (model.viewId === id || !model.protocol) {\n      return false;\n    }\n    if (model.viewId) {\n      model.protocol.unregisterView(model.viewId);\n    }\n    model.viewId = id;\n    if (model.viewId) {\n      model.protocol.registerView(model.viewId).then(({ viewId }) => {\n        model.viewId = viewId;\n      });\n    }\n    return true;\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.processMessage = (msg) => {\n    /* eslint-disable eqeqeq */\n    if (msg.id != model.viewId) {\n      return;\n    }\n    /* eslint-enable eqeqeq */\n    const imgBlob = new Blob([msg.image], {\n      type: model.mimeType,\n    });\n    if (model.activeURL) {\n      model.urlToRevoke.push(model.activeURL);\n      model.activeURL = null;\n      while (model.urlToRevoke.length > 60) {\n        const url = model.urlToRevoke.shift();\n        window.URL.revokeObjectURL(url);\n      }\n    }\n    model.activeURL = URL.createObjectURL(imgBlob);\n    const time = Date.now();\n    const fps = Math.floor(10000 / (time - model.lastTime)) / 10;\n    model.fps.push(fps);\n    model.lastTime = time;\n\n    model.lastImageEvent = {\n      url: model.activeURL,\n      fps,\n      metadata: {\n        size: msg.size,\n        id: msg.id,\n        memory: msg.memsize,\n        workTime: msg.workTime,\n      },\n    };\n    if (model.decodeImage) {\n      decodeImage(model.lastImageEvent);\n    } else {\n      publicAPI.invokeImageReady(model.lastImageEvent);\n    }\n\n    // GC fps\n    while (model.fps.length > model.fpsWindowSize) {\n      model.fps.shift();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.delete = macro.chain(() => {\n    model.unregisterViewStream(publicAPI);\n    publicAPI.setViewId(null);\n    while (model.urlToRevoke.length) {\n      window.URL.revokeObjectURL(model.urlToRevoke.pop());\n    }\n  }, publicAPI.delete);\n\n  // --------------------------------------------------------------------------\n  // Initialize object\n  // --------------------------------------------------------------------------\n\n  prepareDecodingPool();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // protocol: null,\n  // api: null,\n  cameraUpdateRate: 30,\n  decodeImage: true,\n  fpsWindowSize: 250,\n  interactiveQuality: 80,\n  interactiveRatio: 1,\n  isAnimating: false,\n  mimeType: 'image/jpeg',\n  size: [-1, -1],\n  stillQuality: 100,\n  stillRatio: 1,\n  useCameraParameters: false,\n  viewId: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'ImageReady');\n  macro.get(publicAPI, model, ['viewId', 'size', 'fps', 'lastImageEvent']);\n  macro.setGet(publicAPI, model, [\n    'camera',\n    'cameraUpdateRate',\n    'decodeImage',\n    'fpsWindowSize',\n    'interactiveQuality',\n    'interactiveRatio',\n    'stillQuality',\n    'stillRatio',\n    'useCameraParameters',\n  ]);\n\n  // Object specific methods\n  vtkViewStream(publicAPI, model);\n\n  // Blend APIs\n  Object.assign(publicAPI, model.sharedAPI);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkViewStream');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from '../../macros.js';\nimport { u as uninitializeBounds } from '../Core/Math/index.js';\nimport vtkPoints from '../Core/Points.js';\n\n// vtkCell methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCell(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCell');\n  publicAPI.initialize = function (points) {\n    var pointIdsList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (!pointIdsList) {\n      model.points = points;\n      model.pointsIds = new Array(points.getNumberOfPoints());\n      for (var i = points.getNumberOfPoints() - 1; i >= 0; --i) {\n        model.pointsIds[i] = i;\n      }\n    } else {\n      model.pointsIds = pointIdsList;\n      var triangleData = model.points.getData();\n      if (triangleData.length !== 3 * model.pointsIds.length) {\n        triangleData = macro.newTypedArray(points.getDataType(), 3 * model.pointsIds.length);\n      }\n      var pointsData = points.getData();\n      model.pointsIds.forEach(function (pointId, index) {\n        // const start = 3 * pointId;\n        // pointsData.set(p.subarray(start, start + 3), 3 * index);\n        var pointOffset = 3 * pointId;\n        var trianglePointOffset = 3 * index;\n        triangleData[trianglePointOffset] = pointsData[pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n      });\n      model.points.setData(triangleData);\n    }\n  };\n  publicAPI.getBounds = function () {\n    var nbPoints = model.points.getNumberOfPoints();\n    var x = [];\n    if (nbPoints) {\n      model.points.getPoint(0, x);\n      model.bounds[0] = x[0];\n      model.bounds[1] = x[0];\n      model.bounds[2] = x[1];\n      model.bounds[3] = x[1];\n      model.bounds[4] = x[2];\n      model.bounds[5] = x[2];\n      for (var i = 1; i < nbPoints; i++) {\n        model.points.getPoint(i, x);\n        model.bounds[0] = x[0] < model.bounds[0] ? x[0] : model.bounds[0];\n        model.bounds[1] = x[0] > model.bounds[1] ? x[0] : model.bounds[1];\n        model.bounds[2] = x[1] < model.bounds[2] ? x[1] : model.bounds[2];\n        model.bounds[3] = x[1] > model.bounds[3] ? x[1] : model.bounds[3];\n        model.bounds[4] = x[2] < model.bounds[4] ? x[2] : model.bounds[4];\n        model.bounds[5] = x[2] > model.bounds[5] ? x[2] : model.bounds[5];\n      }\n    } else {\n      uninitializeBounds(model.bounds);\n    }\n    return model.bounds;\n  };\n  publicAPI.getLength2 = function () {\n    publicAPI.getBounds();\n    var length = 0.0;\n    var diff = 0;\n    for (var i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      length += diff * diff;\n    }\n    return length;\n  };\n  publicAPI.getParametricDistance = function (pcoords) {\n    var pDist;\n    var pDistMax = 0.0;\n    for (var i = 0; i < 3; i++) {\n      if (pcoords[i] < 0.0) {\n        pDist = -pcoords[i];\n      } else if (pcoords[i] > 1.0) {\n        pDist = pcoords[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n    return pDistMax;\n  };\n  publicAPI.getNumberOfPoints = function () {\n    return model.points.getNumberOfPoints();\n  };\n  publicAPI.deepCopy = function (cell) {\n    cell.initialize(model.points, model.pointsIds);\n  };\n  publicAPI.getCellDimension = function () {}; // virtual\n\n  publicAPI.intersectWithLine = function (p1, p2, tol, t, x, pcoords, subId) {}; // virtual\n\n  publicAPI.evaluatePosition = function (x, closestPoint, subId, pcoords, dist2, weights) {\n    macro.vtkErrorMacro('vtkCell.evaluatePosition is not implemented.');\n  }; // virtual\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  bounds: [-1, -1, -1, -1, -1, -1],\n  pointsIds: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  }\n  macro.get(publicAPI, model, ['points', 'pointsIds']);\n  vtkCell(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCell'); // ----------------------------------------------------------------------------\n\nvar vtkCell$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkCell$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","u","uninitializeBounds","vtkPoints","vtkCell","publicAPI","model","classHierarchy","push","initialize","points","pointIdsList","arguments","length","undefined","pointsIds","Array","getNumberOfPoints","i","triangleData","getData","newTypedArray","getDataType","pointsData","forEach","pointId","index","pointOffset","trianglePointOffset","setData","getBounds","nbPoints","x","getPoint","bounds","getLength2","diff","getParametricDistance","pcoords","pDist","pDistMax","deepCopy","cell","getCellDimension","intersectWithLine","p1","p2","tol","t","subId","evaluatePosition","closestPoint","dist2","weights","vtkErrorMacro","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","newInstance","get","vtkCell$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/Cell.js"],"sourcesContent":["import macro from '../../macros.js';\nimport { u as uninitializeBounds } from '../Core/Math/index.js';\nimport vtkPoints from '../Core/Points.js';\n\n// vtkCell methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCell(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCell');\n\n  publicAPI.initialize = function (points) {\n    var pointIdsList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (!pointIdsList) {\n      model.points = points;\n      model.pointsIds = new Array(points.getNumberOfPoints());\n\n      for (var i = points.getNumberOfPoints() - 1; i >= 0; --i) {\n        model.pointsIds[i] = i;\n      }\n    } else {\n      model.pointsIds = pointIdsList;\n      var triangleData = model.points.getData();\n\n      if (triangleData.length !== 3 * model.pointsIds.length) {\n        triangleData = macro.newTypedArray(points.getDataType(), 3 * model.pointsIds.length);\n      }\n\n      var pointsData = points.getData();\n      model.pointsIds.forEach(function (pointId, index) {\n        // const start = 3 * pointId;\n        // pointsData.set(p.subarray(start, start + 3), 3 * index);\n        var pointOffset = 3 * pointId;\n        var trianglePointOffset = 3 * index;\n        triangleData[trianglePointOffset] = pointsData[pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n      });\n      model.points.setData(triangleData);\n    }\n  };\n\n  publicAPI.getBounds = function () {\n    var nbPoints = model.points.getNumberOfPoints();\n    var x = [];\n\n    if (nbPoints) {\n      model.points.getPoint(0, x);\n      model.bounds[0] = x[0];\n      model.bounds[1] = x[0];\n      model.bounds[2] = x[1];\n      model.bounds[3] = x[1];\n      model.bounds[4] = x[2];\n      model.bounds[5] = x[2];\n\n      for (var i = 1; i < nbPoints; i++) {\n        model.points.getPoint(i, x);\n        model.bounds[0] = x[0] < model.bounds[0] ? x[0] : model.bounds[0];\n        model.bounds[1] = x[0] > model.bounds[1] ? x[0] : model.bounds[1];\n        model.bounds[2] = x[1] < model.bounds[2] ? x[1] : model.bounds[2];\n        model.bounds[3] = x[1] > model.bounds[3] ? x[1] : model.bounds[3];\n        model.bounds[4] = x[2] < model.bounds[4] ? x[2] : model.bounds[4];\n        model.bounds[5] = x[2] > model.bounds[5] ? x[2] : model.bounds[5];\n      }\n    } else {\n      uninitializeBounds(model.bounds);\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.getLength2 = function () {\n    publicAPI.getBounds();\n    var length = 0.0;\n    var diff = 0;\n\n    for (var i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      length += diff * diff;\n    }\n\n    return length;\n  };\n\n  publicAPI.getParametricDistance = function (pcoords) {\n    var pDist;\n    var pDistMax = 0.0;\n\n    for (var i = 0; i < 3; i++) {\n      if (pcoords[i] < 0.0) {\n        pDist = -pcoords[i];\n      } else if (pcoords[i] > 1.0) {\n        pDist = pcoords[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n\n    return pDistMax;\n  };\n\n  publicAPI.getNumberOfPoints = function () {\n    return model.points.getNumberOfPoints();\n  };\n\n  publicAPI.deepCopy = function (cell) {\n    cell.initialize(model.points, model.pointsIds);\n  };\n\n  publicAPI.getCellDimension = function () {}; // virtual\n\n\n  publicAPI.intersectWithLine = function (p1, p2, tol, t, x, pcoords, subId) {}; // virtual\n\n\n  publicAPI.evaluatePosition = function (x, closestPoint, subId, pcoords, dist2, weights) {\n    macro.vtkErrorMacro('vtkCell.evaluatePosition is not implemented.');\n  }; // virtual\n\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bounds: [-1, -1, -1, -1, -1, -1],\n  pointsIds: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  }\n\n  macro.get(publicAPI, model, ['points', 'pointsIds']);\n  vtkCell(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCell'); // ----------------------------------------------------------------------------\n\nvar vtkCell$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkCell$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
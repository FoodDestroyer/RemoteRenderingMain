{"ast":null,"code":"import { mat4 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, get } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkWebGPUImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUImageSlice'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType('vtkWebGPURenderWindow');\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  }; // we draw textures, then mapper, then post pass textures\n\n  publicAPI.traverseOpaquePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(function (child) {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.traverseTranslucentPass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(function (child) {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n  publicAPI.getBufferShift = function (wgpuRen) {\n    publicAPI.getKeyMatrices(wgpuRen);\n    return model.bufferShift;\n  };\n  publicAPI.getKeyMatrices = function (wgpuRen) {\n    // has the actor or stabilization center changed?\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\n      model.renderable.computeMatrix();\n      var mcwc = model.renderable.getMatrix(); // compute the net shift\n\n      var center = wgpuRen.getStabilizedCenterByReference();\n      model.bufferShift[0] = mcwc[3] - center[0];\n      model.bufferShift[1] = mcwc[7] - center[1];\n      model.bufferShift[2] = mcwc[11] - center[2];\n      mat4.transpose(model.keyMatrices.bcwc, mcwc);\n      if (model.renderable.getIsIdentity()) {\n        mat4.identity(model.keyMatrices.normalMatrix);\n      } else {\n        // we use bcwc BEFORE the translate below (just to get transposed mcvc)\n        mat4.copy(model.keyMatrices.normalMatrix, model.keyMatrices.bcwc); // zero out translation\n\n        model.keyMatrices.normalMatrix[3] = 0.0;\n        model.keyMatrices.normalMatrix[7] = 0.0;\n        model.keyMatrices.normalMatrix[11] = 0.0;\n        mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n        mat4.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      } // only meed the buffer shift to get to world\n\n      mat4.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [-model.bufferShift[0], -model.bufferShift[1], -model.bufferShift[2]]); // to get to stabilized we also need the center\n\n      mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\n      model.keyMatricesTime.modified();\n    }\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  bufferShift: undefined,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  propID: undefined\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatricesTime = {};\n  obj(model.keyMatricesTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16)\n  };\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n  model.bufferShift = [0, 0, 0, 0];\n  get(publicAPI, model, ['propID', 'keyMatricesTime']); // Object methods\n\n  vtkWebGPUImageSlice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUImageSlice'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkImageSlice', newInstance);\nexport { index as default, extend, newInstance };","map":{"version":3,"names":["mat4","newInstance","newInstance$1","obj","get","vtkViewNode","registerOverride","vtkWebGPUImageSlice","publicAPI","model","classHierarchy","push","buildPass","prepass","renderable","getVisibility","WebGPURenderer","getFirstAncestorOfType","WebGPURenderWindow","propID","undefined","getUniquePropID","prepareNodes","addMissingNode","getMapper","removeUnusedNodes","traverseOpaquePass","renderPass","getNestedVisibility","getIsOpaque","getSelector","getNestedPickable","apply","children","forEach","child","traverse","traverseTranslucentPass","queryPass","incrementOpaqueActorCount","incrementTranslucentActorCount","getBufferShift","wgpuRen","getKeyMatrices","bufferShift","Math","max","getMTime","getStabilizedTime","keyMatricesTime","computeMatrix","mcwc","getMatrix","center","getStabilizedCenterByReference","transpose","keyMatrices","bcwc","getIsIdentity","identity","normalMatrix","copy","invert","translate","bcsc","modified","DEFAULT_VALUES","keyMatrixTime","extend","initialValues","arguments","length","Object","assign","mtime","Float64Array","index","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/WebGPU/ImageSlice.js"],"sourcesContent":["import { mat4 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, get } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkWebGPUImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUImageSlice'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType('vtkWebGPURenderWindow');\n\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseOpaquePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(function (child) {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.traverseTranslucentPass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(function (child) {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.getBufferShift = function (wgpuRen) {\n    publicAPI.getKeyMatrices(wgpuRen);\n    return model.bufferShift;\n  };\n\n  publicAPI.getKeyMatrices = function (wgpuRen) {\n    // has the actor or stabilization center changed?\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\n      model.renderable.computeMatrix();\n      var mcwc = model.renderable.getMatrix(); // compute the net shift\n\n      var center = wgpuRen.getStabilizedCenterByReference();\n      model.bufferShift[0] = mcwc[3] - center[0];\n      model.bufferShift[1] = mcwc[7] - center[1];\n      model.bufferShift[2] = mcwc[11] - center[2];\n      mat4.transpose(model.keyMatrices.bcwc, mcwc);\n\n      if (model.renderable.getIsIdentity()) {\n        mat4.identity(model.keyMatrices.normalMatrix);\n      } else {\n        // we use bcwc BEFORE the translate below (just to get transposed mcvc)\n        mat4.copy(model.keyMatrices.normalMatrix, model.keyMatrices.bcwc); // zero out translation\n\n        model.keyMatrices.normalMatrix[3] = 0.0;\n        model.keyMatrices.normalMatrix[7] = 0.0;\n        model.keyMatrices.normalMatrix[11] = 0.0;\n        mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n        mat4.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      } // only meed the buffer shift to get to world\n\n\n      mat4.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [-model.bufferShift[0], -model.bufferShift[1], -model.bufferShift[2]]); // to get to stabilized we also need the center\n\n      mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\n      model.keyMatricesTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bufferShift: undefined,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  propID: undefined\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatricesTime = {};\n  obj(model.keyMatricesTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16)\n  };\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n  model.bufferShift = [0, 0, 0, 0];\n  get(publicAPI, model, ['propID', 'keyMatricesTime']); // Object methods\n\n  vtkWebGPUImageSlice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUImageSlice'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkImageSlice', newInstance);\n\nexport { index as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
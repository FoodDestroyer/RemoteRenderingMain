{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkAbstractPicker from './AbstractPicker.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport { d as dot, l as normalize, n as norm, e as distance2BetweenPoints } from '../../Common/Core/Math/index.js';\nimport { mat4, vec4 } from 'gl-matrix';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkPicker methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPicker(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPicker');\n  var superClass = _objectSpread({}, publicAPI);\n  function initialize() {\n    superClass.initialize();\n    model.actors = [];\n    model.pickedPositions = [];\n    model.mapperPosition[0] = 0.0;\n    model.mapperPosition[1] = 0.0;\n    model.mapperPosition[2] = 0.0;\n    model.mapper = null;\n    model.dataSet = null;\n    model.globalTMin = Number.MAX_VALUE;\n  } // Intersect data with specified ray.\n  // Project the center point of the mapper onto the ray and determine its parametric value\n\n  publicAPI.intersectWithLine = function (p1, p2, tol, mapper) {\n    if (!mapper) {\n      return Number.MAX_VALUE;\n    }\n    var center = mapper.getCenter();\n    var ray = [];\n    for (var i = 0; i < 3; i++) {\n      ray[i] = p2[i] - p1[i];\n    }\n    var rayFactor = dot(ray, ray);\n    if (rayFactor === 0.0) {\n      return 2.0;\n    } // Project the center point onto the ray and determine its parametric value\n\n    var t = (ray[0] * (center[0] - p1[0]) + ray[1] * (center[1] - p1[1]) + ray[2] * (center[2] - p1[2])) / rayFactor;\n    return t;\n  }; // To be overridden in subclasses\n\n  publicAPI.pick = function (selection, renderer) {\n    if (selection.length !== 3) {\n      vtkWarningMacro('vtkPicker::pick: selectionPt needs three components');\n    }\n    var selectionX = selection[0];\n    var selectionY = selection[1];\n    var selectionZ = selection[2];\n    var cameraPos = [];\n    var cameraFP = [];\n    var displayCoords = [];\n    var worldCoords = [];\n    var ray = [];\n    var cameraDOP = [];\n    var clipRange = [];\n    var tF;\n    var tB;\n    var p1World = [];\n    var p2World = [];\n    var viewport = [];\n    var winSize = [];\n    var x;\n    var y;\n    var windowLowerLeft = [];\n    var windowUpperRight = [];\n    var tol = 0.0;\n    var props = [];\n    var pickable = false;\n    var p1Mapper = new Float64Array(4);\n    var p2Mapper = new Float64Array(4);\n    var bbox = vtkBoundingBox.newInstance();\n    var t = [];\n    var hitPosition = [];\n    var view = renderer.getRenderWindow().getViews()[0];\n    initialize();\n    model.renderer = renderer;\n    model.selectionPoint[0] = selectionX;\n    model.selectionPoint[1] = selectionY;\n    model.selectionPoint[2] = selectionZ;\n    if (!renderer) {\n      vtkErrorMacro('Picker::Pick Must specify renderer');\n      return;\n    } // Get camera focal point and position. Convert to display (screen)\n    // coordinates. We need a depth value for z-buffer.\n\n    var camera = renderer.getActiveCamera();\n    cameraPos = camera.getPosition();\n    cameraFP = camera.getFocalPoint();\n    var dims = view.getViewportSize(renderer);\n    var aspect = dims[0] / dims[1];\n    displayCoords = renderer.worldToNormalizedDisplay(cameraFP[0], cameraFP[1], cameraFP[2], aspect);\n    displayCoords = view.normalizedDisplayToDisplay(displayCoords[0], displayCoords[1], displayCoords[2]);\n    selectionZ = displayCoords[2]; // Convert the selection point into world coordinates.\n\n    var normalizedDisplay = view.displayToNormalizedDisplay(selectionX, selectionY, selectionZ);\n    worldCoords = renderer.normalizedDisplayToWorld(normalizedDisplay[0], normalizedDisplay[1], normalizedDisplay[2], aspect);\n    for (var i = 0; i < 3; i++) {\n      model.pickPosition[i] = worldCoords[i];\n    } //  Compute the ray endpoints. The ray is along the line running from\n    //  the camera position to the selection point, starting where this line\n    //  intersects the front clipping plane, and terminating where this\n    //  line intersects the back clipping plane.\n\n    for (var _i = 0; _i < 3; _i++) {\n      ray[_i] = model.pickPosition[_i] - cameraPos[_i];\n    }\n    for (var _i2 = 0; _i2 < 3; _i2++) {\n      cameraDOP[_i2] = cameraFP[_i2] - cameraPos[_i2];\n    }\n    normalize(cameraDOP);\n    var rayLength = dot(cameraDOP, ray);\n    if (rayLength === 0.0) {\n      vtkWarningMacro('Picker::Pick Cannot process points');\n      return;\n    }\n    clipRange = camera.getClippingRange();\n    if (camera.getParallelProjection()) {\n      tF = clipRange[0] - rayLength;\n      tB = clipRange[1] - rayLength;\n      for (var _i3 = 0; _i3 < 3; _i3++) {\n        p1World[_i3] = model.pickPosition[_i3] + tF * cameraDOP[_i3];\n        p2World[_i3] = model.pickPosition[_i3] + tB * cameraDOP[_i3];\n      }\n    } else {\n      tF = clipRange[0] / rayLength;\n      tB = clipRange[1] / rayLength;\n      for (var _i4 = 0; _i4 < 3; _i4++) {\n        p1World[_i4] = cameraPos[_i4] + tF * ray[_i4];\n        p2World[_i4] = cameraPos[_i4] + tB * ray[_i4];\n      }\n    }\n    p1World[3] = 1.0;\n    p2World[3] = 1.0; // Compute the tolerance in world coordinates.  Do this by\n    // determining the world coordinates of the diagonal points of the\n    // window, computing the width of the window in world coordinates, and\n    // multiplying by the tolerance.\n\n    viewport = renderer.getViewport();\n    if (renderer.getRenderWindow()) {\n      winSize = renderer.getRenderWindow().getViews()[0].getSize();\n    }\n    x = winSize[0] * viewport[0];\n    y = winSize[1] * viewport[1];\n    var normalizedLeftDisplay = view.displayToNormalizedDisplay(x, y, selectionZ);\n    windowLowerLeft = renderer.normalizedDisplayToWorld(normalizedLeftDisplay[0], normalizedLeftDisplay[1], normalizedLeftDisplay[2], aspect);\n    x = winSize[0] * viewport[2];\n    y = winSize[1] * viewport[3];\n    var normalizedRightDisplay = view.displayToNormalizedDisplay(x, y, selectionZ);\n    windowUpperRight = renderer.normalizedDisplayToWorld(normalizedRightDisplay[0], normalizedRightDisplay[1], normalizedRightDisplay[2], aspect);\n    for (var _i5 = 0; _i5 < 3; _i5++) {\n      tol += (windowUpperRight[_i5] - windowLowerLeft[_i5]) * (windowUpperRight[_i5] - windowLowerLeft[_i5]);\n    }\n    tol = Math.sqrt(tol) * model.tolerance;\n    if (model.pickFromList) {\n      props = model.pickList;\n    } else {\n      props = renderer.getActors();\n    }\n    var scale = [];\n    props.forEach(function (prop) {\n      var mapper = prop.getMapper();\n      pickable = prop.getNestedPickable() && prop.getNestedVisibility();\n      if (prop.getProperty().getOpacity() <= 0.0) {\n        pickable = false;\n      }\n      if (pickable) {\n        model.transformMatrix = prop.getMatrix().slice(0); // Webgl need a transpose matrix but we need the untransposed one to project world points\n        // into the right referential\n\n        mat4.transpose(model.transformMatrix, model.transformMatrix);\n        mat4.invert(model.transformMatrix, model.transformMatrix); // Extract scale\n\n        var col1 = [model.transformMatrix[0], model.transformMatrix[1], model.transformMatrix[2]];\n        var col2 = [model.transformMatrix[4], model.transformMatrix[5], model.transformMatrix[6]];\n        var col3 = [model.transformMatrix[8], model.transformMatrix[9], model.transformMatrix[10]];\n        scale[0] = norm(col1);\n        scale[1] = norm(col2);\n        scale[2] = norm(col3);\n        vec4.transformMat4(p1Mapper, p1World, model.transformMatrix);\n        vec4.transformMat4(p2Mapper, p2World, model.transformMatrix);\n        p1Mapper[0] /= p1Mapper[3];\n        p1Mapper[1] /= p1Mapper[3];\n        p1Mapper[2] /= p1Mapper[3];\n        p2Mapper[0] /= p2Mapper[3];\n        p2Mapper[1] /= p2Mapper[3];\n        p2Mapper[2] /= p2Mapper[3];\n        for (var _i6 = 0; _i6 < 3; _i6++) {\n          ray[_i6] = p2Mapper[_i6] - p1Mapper[_i6];\n        }\n        if (mapper) {\n          bbox.setBounds(mapper.getBounds());\n          bbox.inflate(tol);\n        } else {\n          bbox.reset();\n        }\n        if (bbox.intersectBox(p1Mapper, ray, hitPosition, t)) {\n          t[0] = publicAPI.intersectWithLine(p1Mapper, p2Mapper, tol * 0.333 * (scale[0] + scale[1] + scale[2]), mapper);\n          if (t[0] < Number.MAX_VALUE) {\n            var p = [];\n            p[0] = (1.0 - t[0]) * p1World[0] + t[0] * p2World[0];\n            p[1] = (1.0 - t[0]) * p1World[1] + t[0] * p2World[1];\n            p[2] = (1.0 - t[0]) * p1World[2] + t[0] * p2World[2]; // Check if the current actor is already in the list\n\n            var actorID = -1;\n            for (var _i7 = 0; _i7 < model.actors.length; _i7++) {\n              if (model.actors[_i7] === prop) {\n                actorID = _i7;\n                break;\n              }\n            }\n            if (actorID === -1) {\n              model.actors.push(prop);\n              model.pickedPositions.push(p);\n            } else {\n              var oldPoint = model.pickedPositions[actorID];\n              var distOld = distance2BetweenPoints(p1World, oldPoint);\n              var distCurrent = distance2BetweenPoints(p1World, p);\n              if (distCurrent < distOld) {\n                model.pickedPositions[actorID] = p;\n              }\n            }\n          }\n        }\n      }\n      publicAPI.invokePickChange(model.pickedPositions);\n      return 1;\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  tolerance: 0.025,\n  mapperPosition: [0.0, 0.0, 0.0],\n  mapper: null,\n  dataSet: null,\n  actors: [],\n  pickedPositions: [],\n  transformMatrix: null,\n  globalTMin: Number.MAX_VALUE\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkAbstractPicker.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['tolerance']);\n  macro.setGetArray(publicAPI, model, ['mapperPosition'], 3);\n  macro.get(publicAPI, model, ['mapper', 'dataSet', 'actors', 'pickedPositions']);\n  macro.event(publicAPI, model, 'pickChange');\n  vtkPicker(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPicker'); // ----------------------------------------------------------------------------\n\nvar vtkPicker$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkPicker$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","vtkAbstractPicker","vtkBoundingBox","d","dot","l","normalize","n","norm","e","distance2BetweenPoints","mat4","vec4","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkErrorMacro","vtkWarningMacro","vtkPicker","publicAPI","model","classHierarchy","superClass","initialize","actors","pickedPositions","mapperPosition","mapper","dataSet","globalTMin","Number","MAX_VALUE","intersectWithLine","p1","p2","tol","center","getCenter","ray","rayFactor","t","pick","selection","renderer","selectionX","selectionY","selectionZ","cameraPos","cameraFP","displayCoords","worldCoords","cameraDOP","clipRange","tF","tB","p1World","p2World","viewport","winSize","x","y","windowLowerLeft","windowUpperRight","props","pickable","p1Mapper","Float64Array","p2Mapper","bbox","newInstance","hitPosition","view","getRenderWindow","getViews","selectionPoint","camera","getActiveCamera","getPosition","getFocalPoint","dims","getViewportSize","aspect","worldToNormalizedDisplay","normalizedDisplayToDisplay","normalizedDisplay","displayToNormalizedDisplay","normalizedDisplayToWorld","pickPosition","_i","_i2","rayLength","getClippingRange","getParallelProjection","_i3","_i4","getViewport","getSize","normalizedLeftDisplay","normalizedRightDisplay","_i5","Math","sqrt","tolerance","pickFromList","pickList","getActors","scale","prop","getMapper","getNestedPickable","getNestedVisibility","getProperty","getOpacity","transformMatrix","getMatrix","slice","transpose","invert","col1","col2","col3","transformMat4","_i6","setBounds","getBounds","inflate","reset","intersectBox","p","actorID","_i7","oldPoint","distOld","distCurrent","invokePickChange","DEFAULT_VALUES","extend","initialValues","undefined","assign","setGet","setGetArray","get","event","vtkPicker$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/Picker.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkAbstractPicker from './AbstractPicker.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport { d as dot, l as normalize, n as norm, e as distance2BetweenPoints } from '../../Common/Core/Math/index.js';\nimport { mat4, vec4 } from 'gl-matrix';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkPicker methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPicker(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPicker');\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  function initialize() {\n    superClass.initialize();\n    model.actors = [];\n    model.pickedPositions = [];\n    model.mapperPosition[0] = 0.0;\n    model.mapperPosition[1] = 0.0;\n    model.mapperPosition[2] = 0.0;\n    model.mapper = null;\n    model.dataSet = null;\n    model.globalTMin = Number.MAX_VALUE;\n  } // Intersect data with specified ray.\n  // Project the center point of the mapper onto the ray and determine its parametric value\n\n\n  publicAPI.intersectWithLine = function (p1, p2, tol, mapper) {\n    if (!mapper) {\n      return Number.MAX_VALUE;\n    }\n\n    var center = mapper.getCenter();\n    var ray = [];\n\n    for (var i = 0; i < 3; i++) {\n      ray[i] = p2[i] - p1[i];\n    }\n\n    var rayFactor = dot(ray, ray);\n\n    if (rayFactor === 0.0) {\n      return 2.0;\n    } // Project the center point onto the ray and determine its parametric value\n\n\n    var t = (ray[0] * (center[0] - p1[0]) + ray[1] * (center[1] - p1[1]) + ray[2] * (center[2] - p1[2])) / rayFactor;\n    return t;\n  }; // To be overridden in subclasses\n\n\n  publicAPI.pick = function (selection, renderer) {\n    if (selection.length !== 3) {\n      vtkWarningMacro('vtkPicker::pick: selectionPt needs three components');\n    }\n\n    var selectionX = selection[0];\n    var selectionY = selection[1];\n    var selectionZ = selection[2];\n    var cameraPos = [];\n    var cameraFP = [];\n    var displayCoords = [];\n    var worldCoords = [];\n    var ray = [];\n    var cameraDOP = [];\n    var clipRange = [];\n    var tF;\n    var tB;\n    var p1World = [];\n    var p2World = [];\n    var viewport = [];\n    var winSize = [];\n    var x;\n    var y;\n    var windowLowerLeft = [];\n    var windowUpperRight = [];\n    var tol = 0.0;\n    var props = [];\n    var pickable = false;\n    var p1Mapper = new Float64Array(4);\n    var p2Mapper = new Float64Array(4);\n    var bbox = vtkBoundingBox.newInstance();\n    var t = [];\n    var hitPosition = [];\n    var view = renderer.getRenderWindow().getViews()[0];\n    initialize();\n    model.renderer = renderer;\n    model.selectionPoint[0] = selectionX;\n    model.selectionPoint[1] = selectionY;\n    model.selectionPoint[2] = selectionZ;\n\n    if (!renderer) {\n      vtkErrorMacro('Picker::Pick Must specify renderer');\n      return;\n    } // Get camera focal point and position. Convert to display (screen)\n    // coordinates. We need a depth value for z-buffer.\n\n\n    var camera = renderer.getActiveCamera();\n    cameraPos = camera.getPosition();\n    cameraFP = camera.getFocalPoint();\n    var dims = view.getViewportSize(renderer);\n    var aspect = dims[0] / dims[1];\n    displayCoords = renderer.worldToNormalizedDisplay(cameraFP[0], cameraFP[1], cameraFP[2], aspect);\n    displayCoords = view.normalizedDisplayToDisplay(displayCoords[0], displayCoords[1], displayCoords[2]);\n    selectionZ = displayCoords[2]; // Convert the selection point into world coordinates.\n\n    var normalizedDisplay = view.displayToNormalizedDisplay(selectionX, selectionY, selectionZ);\n    worldCoords = renderer.normalizedDisplayToWorld(normalizedDisplay[0], normalizedDisplay[1], normalizedDisplay[2], aspect);\n\n    for (var i = 0; i < 3; i++) {\n      model.pickPosition[i] = worldCoords[i];\n    } //  Compute the ray endpoints. The ray is along the line running from\n    //  the camera position to the selection point, starting where this line\n    //  intersects the front clipping plane, and terminating where this\n    //  line intersects the back clipping plane.\n\n\n    for (var _i = 0; _i < 3; _i++) {\n      ray[_i] = model.pickPosition[_i] - cameraPos[_i];\n    }\n\n    for (var _i2 = 0; _i2 < 3; _i2++) {\n      cameraDOP[_i2] = cameraFP[_i2] - cameraPos[_i2];\n    }\n\n    normalize(cameraDOP);\n    var rayLength = dot(cameraDOP, ray);\n\n    if (rayLength === 0.0) {\n      vtkWarningMacro('Picker::Pick Cannot process points');\n      return;\n    }\n\n    clipRange = camera.getClippingRange();\n\n    if (camera.getParallelProjection()) {\n      tF = clipRange[0] - rayLength;\n      tB = clipRange[1] - rayLength;\n\n      for (var _i3 = 0; _i3 < 3; _i3++) {\n        p1World[_i3] = model.pickPosition[_i3] + tF * cameraDOP[_i3];\n        p2World[_i3] = model.pickPosition[_i3] + tB * cameraDOP[_i3];\n      }\n    } else {\n      tF = clipRange[0] / rayLength;\n      tB = clipRange[1] / rayLength;\n\n      for (var _i4 = 0; _i4 < 3; _i4++) {\n        p1World[_i4] = cameraPos[_i4] + tF * ray[_i4];\n        p2World[_i4] = cameraPos[_i4] + tB * ray[_i4];\n      }\n    }\n\n    p1World[3] = 1.0;\n    p2World[3] = 1.0; // Compute the tolerance in world coordinates.  Do this by\n    // determining the world coordinates of the diagonal points of the\n    // window, computing the width of the window in world coordinates, and\n    // multiplying by the tolerance.\n\n    viewport = renderer.getViewport();\n\n    if (renderer.getRenderWindow()) {\n      winSize = renderer.getRenderWindow().getViews()[0].getSize();\n    }\n\n    x = winSize[0] * viewport[0];\n    y = winSize[1] * viewport[1];\n    var normalizedLeftDisplay = view.displayToNormalizedDisplay(x, y, selectionZ);\n    windowLowerLeft = renderer.normalizedDisplayToWorld(normalizedLeftDisplay[0], normalizedLeftDisplay[1], normalizedLeftDisplay[2], aspect);\n    x = winSize[0] * viewport[2];\n    y = winSize[1] * viewport[3];\n    var normalizedRightDisplay = view.displayToNormalizedDisplay(x, y, selectionZ);\n    windowUpperRight = renderer.normalizedDisplayToWorld(normalizedRightDisplay[0], normalizedRightDisplay[1], normalizedRightDisplay[2], aspect);\n\n    for (var _i5 = 0; _i5 < 3; _i5++) {\n      tol += (windowUpperRight[_i5] - windowLowerLeft[_i5]) * (windowUpperRight[_i5] - windowLowerLeft[_i5]);\n    }\n\n    tol = Math.sqrt(tol) * model.tolerance;\n\n    if (model.pickFromList) {\n      props = model.pickList;\n    } else {\n      props = renderer.getActors();\n    }\n\n    var scale = [];\n    props.forEach(function (prop) {\n      var mapper = prop.getMapper();\n      pickable = prop.getNestedPickable() && prop.getNestedVisibility();\n\n      if (prop.getProperty().getOpacity() <= 0.0) {\n        pickable = false;\n      }\n\n      if (pickable) {\n        model.transformMatrix = prop.getMatrix().slice(0); // Webgl need a transpose matrix but we need the untransposed one to project world points\n        // into the right referential\n\n        mat4.transpose(model.transformMatrix, model.transformMatrix);\n        mat4.invert(model.transformMatrix, model.transformMatrix); // Extract scale\n\n        var col1 = [model.transformMatrix[0], model.transformMatrix[1], model.transformMatrix[2]];\n        var col2 = [model.transformMatrix[4], model.transformMatrix[5], model.transformMatrix[6]];\n        var col3 = [model.transformMatrix[8], model.transformMatrix[9], model.transformMatrix[10]];\n        scale[0] = norm(col1);\n        scale[1] = norm(col2);\n        scale[2] = norm(col3);\n        vec4.transformMat4(p1Mapper, p1World, model.transformMatrix);\n        vec4.transformMat4(p2Mapper, p2World, model.transformMatrix);\n        p1Mapper[0] /= p1Mapper[3];\n        p1Mapper[1] /= p1Mapper[3];\n        p1Mapper[2] /= p1Mapper[3];\n        p2Mapper[0] /= p2Mapper[3];\n        p2Mapper[1] /= p2Mapper[3];\n        p2Mapper[2] /= p2Mapper[3];\n\n        for (var _i6 = 0; _i6 < 3; _i6++) {\n          ray[_i6] = p2Mapper[_i6] - p1Mapper[_i6];\n        }\n\n        if (mapper) {\n          bbox.setBounds(mapper.getBounds());\n          bbox.inflate(tol);\n        } else {\n          bbox.reset();\n        }\n\n        if (bbox.intersectBox(p1Mapper, ray, hitPosition, t)) {\n          t[0] = publicAPI.intersectWithLine(p1Mapper, p2Mapper, tol * 0.333 * (scale[0] + scale[1] + scale[2]), mapper);\n\n          if (t[0] < Number.MAX_VALUE) {\n            var p = [];\n            p[0] = (1.0 - t[0]) * p1World[0] + t[0] * p2World[0];\n            p[1] = (1.0 - t[0]) * p1World[1] + t[0] * p2World[1];\n            p[2] = (1.0 - t[0]) * p1World[2] + t[0] * p2World[2]; // Check if the current actor is already in the list\n\n            var actorID = -1;\n\n            for (var _i7 = 0; _i7 < model.actors.length; _i7++) {\n              if (model.actors[_i7] === prop) {\n                actorID = _i7;\n                break;\n              }\n            }\n\n            if (actorID === -1) {\n              model.actors.push(prop);\n              model.pickedPositions.push(p);\n            } else {\n              var oldPoint = model.pickedPositions[actorID];\n              var distOld = distance2BetweenPoints(p1World, oldPoint);\n              var distCurrent = distance2BetweenPoints(p1World, p);\n\n              if (distCurrent < distOld) {\n                model.pickedPositions[actorID] = p;\n              }\n            }\n          }\n        }\n      }\n\n      publicAPI.invokePickChange(model.pickedPositions);\n      return 1;\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  tolerance: 0.025,\n  mapperPosition: [0.0, 0.0, 0.0],\n  mapper: null,\n  dataSet: null,\n  actors: [],\n  pickedPositions: [],\n  transformMatrix: null,\n  globalTMin: Number.MAX_VALUE\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkAbstractPicker.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['tolerance']);\n  macro.setGetArray(publicAPI, model, ['mapperPosition'], 3);\n  macro.get(publicAPI, model, ['mapper', 'dataSet', 'actors', 'pickedPositions']);\n  macro.event(publicAPI, model, 'pickChange');\n  vtkPicker(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPicker'); // ----------------------------------------------------------------------------\n\nvar vtkPicker$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPicker$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import vtk from '../../../vtk.js';\nimport macro from '../../../macros.js';\nimport vtkDataArray from '../../Core/DataArray.js';\nvar vtkErrorMacro = macro.vtkErrorMacro,\n  vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkFieldData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFieldData(publicAPI, model) {\n  model.classHierarchy.push('vtkFieldData');\n  var superGetState = publicAPI.getState; // Decode serialized data if any\n\n  if (model.arrays) {\n    model.arrays = model.arrays.map(function (item) {\n      return {\n        data: vtk(item.data)\n      };\n    });\n  }\n  publicAPI.initialize = function () {\n    publicAPI.initializeFields();\n    publicAPI.copyAllOn();\n    publicAPI.clearFieldFlags();\n  };\n  publicAPI.initializeFields = function () {\n    model.arrays = [];\n    model.copyFieldFlags = {};\n    publicAPI.modified();\n  };\n  publicAPI.copyStructure = function (other) {\n    publicAPI.initializeFields();\n    model.copyFieldFlags = other.getCopyFieldFlags().map(function (x) {\n      return x;\n    }); // Deep-copy\n\n    model.arrays = other.arrays().map(function (x) {\n      return {\n        array: x\n      };\n    }); // Deep-copy\n    // TODO: Copy array information objects (once we support information objects)\n  };\n\n  publicAPI.getNumberOfArrays = function () {\n    return model.arrays.length;\n  };\n  publicAPI.getNumberOfActiveArrays = function () {\n    return model.arrays.length;\n  };\n  publicAPI.addArray = function (arr) {\n    var name = arr.getName();\n    var _publicAPI$getArrayWi = publicAPI.getArrayWithIndex(name),\n      array = _publicAPI$getArrayWi.array,\n      index = _publicAPI$getArrayWi.index;\n    if (array != null) {\n      model.arrays[index] = {\n        data: arr\n      };\n      return index;\n    }\n    model.arrays = [].concat(model.arrays, {\n      data: arr\n    });\n    return model.arrays.length - 1;\n  };\n  publicAPI.removeAllArrays = function () {\n    model.arrays = [];\n  };\n  publicAPI.removeArray = function (arrayName) {\n    var index = model.arrays.findIndex(function (array) {\n      return array.data.getName() === arrayName;\n    });\n    return publicAPI.removeArrayByIndex(index);\n  };\n  publicAPI.removeArrayByIndex = function (arrayIdx) {\n    if (arrayIdx !== -1 && arrayIdx < model.arrays.length) {\n      model.arrays.splice(arrayIdx, 1); // TBD modified() ?\n\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getArrays = function () {\n    return model.arrays.map(function (entry) {\n      return entry.data;\n    });\n  };\n  publicAPI.getArray = function (arraySpec) {\n    return typeof arraySpec === 'number' ? publicAPI.getArrayByIndex(arraySpec) : publicAPI.getArrayByName(arraySpec);\n  };\n  publicAPI.getArrayByName = function (arrayName) {\n    return model.arrays.reduce(function (a, b, i) {\n      return b.data.getName() === arrayName ? b.data : a;\n    }, null);\n  };\n  publicAPI.getArrayWithIndex = function (arrayName) {\n    var index = model.arrays.findIndex(function (array) {\n      return array.data.getName() === arrayName;\n    });\n    return {\n      array: index !== -1 ? model.arrays[index].data : null,\n      index: index\n    };\n  };\n  publicAPI.getArrayByIndex = function (idx) {\n    return idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;\n  };\n  publicAPI.hasArray = function (arrayName) {\n    return publicAPI.getArrayWithIndex(arrayName).index >= 0;\n  };\n  publicAPI.getArrayName = function (idx) {\n    var arr = model.arrays[idx];\n    return arr ? arr.data.getName() : '';\n  };\n  publicAPI.getCopyFieldFlags = function () {\n    return model.copyFieldFlags;\n  };\n  publicAPI.getFlag = function (arrayName) {\n    return model.copyFieldFlags[arrayName];\n  };\n  publicAPI.passData = function (other) {\n    var fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var toId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    other.getArrays().forEach(function (arr) {\n      var copyFlag = publicAPI.getFlag(arr.getName());\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\n        var destArr = publicAPI.getArrayByName(arr.getName());\n        if (!destArr) {\n          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {\n            // TBD: should this be a deep or a shallow copy?\n            publicAPI.addArray(arr);\n            other.getAttributes(arr).forEach(function (attrType) {\n              publicAPI.setAttribute(arr, attrType);\n            });\n          } else {\n            var ncomps = arr.getNumberOfComponents();\n            var newSize = arr.getNumberOfValues();\n            var tId = toId > -1 ? toId : fromId;\n            if (newSize <= tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: ncomps,\n              values: macro.newTypedArray(arr.getDataType(), newSize),\n              size: 0\n            });\n            destArr.insertTuple(tId, arr.getTuple(fromId));\n            publicAPI.addArray(destArr);\n            other.getAttributes(arr).forEach(function (attrType) {\n              publicAPI.setAttribute(destArr, attrType);\n            });\n          }\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\n          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {\n            var _tId = toId > -1 ? toId : fromId;\n            destArr.insertTuple(_tId, arr.getTuple(fromId));\n          } else {\n            // if `fromId` is not provided, just copy all (or as much possible)\n            // from `arr` to `destArr`.\n            destArr.insertTuples(0, arr.getTuples());\n          }\n        } else {\n          vtkErrorMacro('Unhandled case in passData');\n        }\n      }\n    });\n  };\n  publicAPI.interpolateData = function (other) {\n    var fromId1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var fromId2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    var toId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n    var t = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    other.getArrays().forEach(function (arr) {\n      var copyFlag = publicAPI.getFlag(arr.getName());\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\n        var destArr = publicAPI.getArrayByName(arr.getName());\n        if (!destArr) {\n          if (fromId1 < 0 || fromId2 < 0 || fromId1 > arr.getNumberOfTuples()) {\n            // TBD: should this be a deep or a shallow copy?\n            publicAPI.addArray(arr);\n            other.getAttributes(arr).forEach(function (attrType) {\n              publicAPI.setAttribute(arr, attrType);\n            });\n          } else {\n            var ncomps = arr.getNumberOfComponents();\n            var newSize = arr.getNumberOfValues(); // TODO: Is this supposed to happen?\n\n            var tId = toId > -1 ? toId : fromId1;\n            if (newSize <= tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: ncomps,\n              values: macro.newTypedArray(arr.getDataType(), newSize),\n              size: 0\n            });\n            destArr.interpolateTuple(tId, arr, fromId1, arr, fromId2, t);\n            publicAPI.addArray(destArr);\n            other.getAttributes(arr).forEach(function (attrType) {\n              publicAPI.setAttribute(destArr, attrType);\n            });\n          }\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\n          if (fromId1 > -1 && fromId1 < arr.getNumberOfTuples()) {\n            var _tId2 = toId > -1 ? toId : fromId1;\n            destArr.interpolateTuple(_tId2, arr, fromId1, arr, fromId2, t);\n            vtkWarningMacro('Unexpected case in interpolateData');\n          } else {\n            // if `fromId` is not provided, just copy all (or as much possible)\n            // from `arr` to `destArr`.\n            destArr.insertTuples(arr.getTuples());\n          }\n        } else {\n          vtkErrorMacro('Unhandled case in interpolateData');\n        }\n      }\n    });\n  };\n  publicAPI.copyFieldOn = function (arrayName) {\n    model.copyFieldFlags[arrayName] = true;\n  };\n  publicAPI.copyFieldOff = function (arrayName) {\n    model.copyFieldFlags[arrayName] = false;\n  };\n  publicAPI.copyAllOn = function () {\n    if (!model.doCopyAllOn || model.doCopyAllOff) {\n      model.doCopyAllOn = true;\n      model.doCopyAllOff = false;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.copyAllOff = function () {\n    if (model.doCopyAllOn || !model.doCopyAllOff) {\n      model.doCopyAllOn = false;\n      model.doCopyAllOff = true;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.clearFieldFlags = function () {\n    model.copyFieldFlags = {};\n  };\n  publicAPI.deepCopy = function (other) {\n    model.arrays = other.getArrays().map(function (arr) {\n      var arrNew = arr.newClone();\n      arrNew.deepCopy(arr);\n      return {\n        data: arrNew\n      };\n    });\n  };\n  publicAPI.copyFlags = function (other) {\n    return other.getCopyFieldFlags().map(function (x) {\n      return x;\n    });\n  }; // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());\n\n  publicAPI.reset = function () {\n    return model.arrays.forEach(function (entry) {\n      return entry.data.reset();\n    });\n  }; // TODO: getActualMemorySize\n\n  publicAPI.getMTime = function () {\n    return model.arrays.reduce(function (a, b) {\n      return b.data.getMTime() > a ? b.data.getMTime() : a;\n    }, model.mtime);\n  }; // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }\n  // TODO: publicAPI.getArrayContainingComponent = (component) => ...\n\n  publicAPI.getNumberOfComponents = function () {\n    return model.arrays.reduce(function (a, b) {\n      return a + b.data.getNumberOfComponents();\n    }, 0);\n  };\n  publicAPI.getNumberOfTuples = function () {\n    return model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;\n  };\n  publicAPI.getState = function () {\n    var result = superGetState();\n    if (result) {\n      result.arrays = model.arrays.map(function (item) {\n        return {\n          data: item.data.getState()\n        };\n      });\n    }\n    return result;\n  };\n}\nvar DEFAULT_VALUES = {\n  arrays: [],\n  copyFieldFlags: [],\n  // fields not to copy\n  doCopyAllOn: true,\n  doCopyAllOff: false\n};\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  vtkFieldData(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkFieldData'); // ----------------------------------------------------------------------------\n\nvar vtkFieldData$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkFieldData$1 as default, extend, newInstance };","map":{"version":3,"names":["vtk","macro","vtkDataArray","vtkErrorMacro","vtkWarningMacro","vtkFieldData","publicAPI","model","classHierarchy","push","superGetState","getState","arrays","map","item","data","initialize","initializeFields","copyAllOn","clearFieldFlags","copyFieldFlags","modified","copyStructure","other","getCopyFieldFlags","x","array","getNumberOfArrays","length","getNumberOfActiveArrays","addArray","arr","name","getName","_publicAPI$getArrayWi","getArrayWithIndex","index","concat","removeAllArrays","removeArray","arrayName","findIndex","removeArrayByIndex","arrayIdx","splice","getArrays","entry","getArray","arraySpec","getArrayByIndex","getArrayByName","reduce","a","b","i","idx","hasArray","getArrayName","getFlag","passData","fromId","arguments","undefined","toId","forEach","copyFlag","doCopyAllOff","destArr","getNumberOfTuples","getAttributes","attrType","setAttribute","ncomps","getNumberOfComponents","newSize","getNumberOfValues","tId","newInstance","dataType","getDataType","numberOfComponents","values","newTypedArray","size","insertTuple","getTuple","_tId","insertTuples","getTuples","interpolateData","fromId1","fromId2","t","interpolateTuple","_tId2","copyFieldOn","copyFieldOff","doCopyAllOn","copyAllOff","deepCopy","arrNew","newClone","copyFlags","reset","getMTime","mtime","result","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","vtkFieldData$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js"],"sourcesContent":["import vtk from '../../../vtk.js';\nimport macro from '../../../macros.js';\nimport vtkDataArray from '../../Core/DataArray.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro,\n    vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkFieldData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFieldData(publicAPI, model) {\n  model.classHierarchy.push('vtkFieldData');\n  var superGetState = publicAPI.getState; // Decode serialized data if any\n\n  if (model.arrays) {\n    model.arrays = model.arrays.map(function (item) {\n      return {\n        data: vtk(item.data)\n      };\n    });\n  }\n\n  publicAPI.initialize = function () {\n    publicAPI.initializeFields();\n    publicAPI.copyAllOn();\n    publicAPI.clearFieldFlags();\n  };\n\n  publicAPI.initializeFields = function () {\n    model.arrays = [];\n    model.copyFieldFlags = {};\n    publicAPI.modified();\n  };\n\n  publicAPI.copyStructure = function (other) {\n    publicAPI.initializeFields();\n    model.copyFieldFlags = other.getCopyFieldFlags().map(function (x) {\n      return x;\n    }); // Deep-copy\n\n    model.arrays = other.arrays().map(function (x) {\n      return {\n        array: x\n      };\n    }); // Deep-copy\n    // TODO: Copy array information objects (once we support information objects)\n  };\n\n  publicAPI.getNumberOfArrays = function () {\n    return model.arrays.length;\n  };\n\n  publicAPI.getNumberOfActiveArrays = function () {\n    return model.arrays.length;\n  };\n\n  publicAPI.addArray = function (arr) {\n    var name = arr.getName();\n\n    var _publicAPI$getArrayWi = publicAPI.getArrayWithIndex(name),\n        array = _publicAPI$getArrayWi.array,\n        index = _publicAPI$getArrayWi.index;\n\n    if (array != null) {\n      model.arrays[index] = {\n        data: arr\n      };\n      return index;\n    }\n\n    model.arrays = [].concat(model.arrays, {\n      data: arr\n    });\n    return model.arrays.length - 1;\n  };\n\n  publicAPI.removeAllArrays = function () {\n    model.arrays = [];\n  };\n\n  publicAPI.removeArray = function (arrayName) {\n    var index = model.arrays.findIndex(function (array) {\n      return array.data.getName() === arrayName;\n    });\n    return publicAPI.removeArrayByIndex(index);\n  };\n\n  publicAPI.removeArrayByIndex = function (arrayIdx) {\n    if (arrayIdx !== -1 && arrayIdx < model.arrays.length) {\n      model.arrays.splice(arrayIdx, 1); // TBD modified() ?\n\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getArrays = function () {\n    return model.arrays.map(function (entry) {\n      return entry.data;\n    });\n  };\n\n  publicAPI.getArray = function (arraySpec) {\n    return typeof arraySpec === 'number' ? publicAPI.getArrayByIndex(arraySpec) : publicAPI.getArrayByName(arraySpec);\n  };\n\n  publicAPI.getArrayByName = function (arrayName) {\n    return model.arrays.reduce(function (a, b, i) {\n      return b.data.getName() === arrayName ? b.data : a;\n    }, null);\n  };\n\n  publicAPI.getArrayWithIndex = function (arrayName) {\n    var index = model.arrays.findIndex(function (array) {\n      return array.data.getName() === arrayName;\n    });\n    return {\n      array: index !== -1 ? model.arrays[index].data : null,\n      index: index\n    };\n  };\n\n  publicAPI.getArrayByIndex = function (idx) {\n    return idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;\n  };\n\n  publicAPI.hasArray = function (arrayName) {\n    return publicAPI.getArrayWithIndex(arrayName).index >= 0;\n  };\n\n  publicAPI.getArrayName = function (idx) {\n    var arr = model.arrays[idx];\n    return arr ? arr.data.getName() : '';\n  };\n\n  publicAPI.getCopyFieldFlags = function () {\n    return model.copyFieldFlags;\n  };\n\n  publicAPI.getFlag = function (arrayName) {\n    return model.copyFieldFlags[arrayName];\n  };\n\n  publicAPI.passData = function (other) {\n    var fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var toId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    other.getArrays().forEach(function (arr) {\n      var copyFlag = publicAPI.getFlag(arr.getName());\n\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\n        var destArr = publicAPI.getArrayByName(arr.getName());\n\n        if (!destArr) {\n          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {\n            // TBD: should this be a deep or a shallow copy?\n            publicAPI.addArray(arr);\n            other.getAttributes(arr).forEach(function (attrType) {\n              publicAPI.setAttribute(arr, attrType);\n            });\n          } else {\n            var ncomps = arr.getNumberOfComponents();\n            var newSize = arr.getNumberOfValues();\n            var tId = toId > -1 ? toId : fromId;\n\n            if (newSize <= tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: ncomps,\n              values: macro.newTypedArray(arr.getDataType(), newSize),\n              size: 0\n            });\n            destArr.insertTuple(tId, arr.getTuple(fromId));\n            publicAPI.addArray(destArr);\n            other.getAttributes(arr).forEach(function (attrType) {\n              publicAPI.setAttribute(destArr, attrType);\n            });\n          }\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\n          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {\n            var _tId = toId > -1 ? toId : fromId;\n\n            destArr.insertTuple(_tId, arr.getTuple(fromId));\n          } else {\n            // if `fromId` is not provided, just copy all (or as much possible)\n            // from `arr` to `destArr`.\n            destArr.insertTuples(0, arr.getTuples());\n          }\n        } else {\n          vtkErrorMacro('Unhandled case in passData');\n        }\n      }\n    });\n  };\n\n  publicAPI.interpolateData = function (other) {\n    var fromId1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var fromId2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    var toId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n    var t = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    other.getArrays().forEach(function (arr) {\n      var copyFlag = publicAPI.getFlag(arr.getName());\n\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\n        var destArr = publicAPI.getArrayByName(arr.getName());\n\n        if (!destArr) {\n          if (fromId1 < 0 || fromId2 < 0 || fromId1 > arr.getNumberOfTuples()) {\n            // TBD: should this be a deep or a shallow copy?\n            publicAPI.addArray(arr);\n            other.getAttributes(arr).forEach(function (attrType) {\n              publicAPI.setAttribute(arr, attrType);\n            });\n          } else {\n            var ncomps = arr.getNumberOfComponents();\n            var newSize = arr.getNumberOfValues(); // TODO: Is this supposed to happen?\n\n            var tId = toId > -1 ? toId : fromId1;\n\n            if (newSize <= tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: ncomps,\n              values: macro.newTypedArray(arr.getDataType(), newSize),\n              size: 0\n            });\n            destArr.interpolateTuple(tId, arr, fromId1, arr, fromId2, t);\n            publicAPI.addArray(destArr);\n            other.getAttributes(arr).forEach(function (attrType) {\n              publicAPI.setAttribute(destArr, attrType);\n            });\n          }\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\n          if (fromId1 > -1 && fromId1 < arr.getNumberOfTuples()) {\n            var _tId2 = toId > -1 ? toId : fromId1;\n\n            destArr.interpolateTuple(_tId2, arr, fromId1, arr, fromId2, t);\n            vtkWarningMacro('Unexpected case in interpolateData');\n          } else {\n            // if `fromId` is not provided, just copy all (or as much possible)\n            // from `arr` to `destArr`.\n            destArr.insertTuples(arr.getTuples());\n          }\n        } else {\n          vtkErrorMacro('Unhandled case in interpolateData');\n        }\n      }\n    });\n  };\n\n  publicAPI.copyFieldOn = function (arrayName) {\n    model.copyFieldFlags[arrayName] = true;\n  };\n\n  publicAPI.copyFieldOff = function (arrayName) {\n    model.copyFieldFlags[arrayName] = false;\n  };\n\n  publicAPI.copyAllOn = function () {\n    if (!model.doCopyAllOn || model.doCopyAllOff) {\n      model.doCopyAllOn = true;\n      model.doCopyAllOff = false;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.copyAllOff = function () {\n    if (model.doCopyAllOn || !model.doCopyAllOff) {\n      model.doCopyAllOn = false;\n      model.doCopyAllOff = true;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.clearFieldFlags = function () {\n    model.copyFieldFlags = {};\n  };\n\n  publicAPI.deepCopy = function (other) {\n    model.arrays = other.getArrays().map(function (arr) {\n      var arrNew = arr.newClone();\n      arrNew.deepCopy(arr);\n      return {\n        data: arrNew\n      };\n    });\n  };\n\n  publicAPI.copyFlags = function (other) {\n    return other.getCopyFieldFlags().map(function (x) {\n      return x;\n    });\n  }; // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());\n\n\n  publicAPI.reset = function () {\n    return model.arrays.forEach(function (entry) {\n      return entry.data.reset();\n    });\n  }; // TODO: getActualMemorySize\n\n\n  publicAPI.getMTime = function () {\n    return model.arrays.reduce(function (a, b) {\n      return b.data.getMTime() > a ? b.data.getMTime() : a;\n    }, model.mtime);\n  }; // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }\n  // TODO: publicAPI.getArrayContainingComponent = (component) => ...\n\n\n  publicAPI.getNumberOfComponents = function () {\n    return model.arrays.reduce(function (a, b) {\n      return a + b.data.getNumberOfComponents();\n    }, 0);\n  };\n\n  publicAPI.getNumberOfTuples = function () {\n    return model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;\n  };\n\n  publicAPI.getState = function () {\n    var result = superGetState();\n\n    if (result) {\n      result.arrays = model.arrays.map(function (item) {\n        return {\n          data: item.data.getState()\n        };\n      });\n    }\n\n    return result;\n  };\n}\n\nvar DEFAULT_VALUES = {\n  arrays: [],\n  copyFieldFlags: [],\n  // fields not to copy\n  doCopyAllOn: true,\n  doCopyAllOff: false\n};\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  vtkFieldData(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkFieldData'); // ----------------------------------------------------------------------------\n\nvar vtkFieldData$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkFieldData$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
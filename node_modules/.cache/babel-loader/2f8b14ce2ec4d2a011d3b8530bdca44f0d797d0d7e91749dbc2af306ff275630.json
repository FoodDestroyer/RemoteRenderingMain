{"ast":null,"code":"import{useEffect}from'react';import vtkWSLinkClient from'@kitware/vtk.js/IO/Core/WSLinkClient';import SmartConnect from'wslink/src/SmartConnect';import vtkRemoteView from'@kitware/vtk.js/Rendering/Misc/RemoteView';vtkWSLinkClient.setSmartConnectClass(SmartConnect);var VTKComponent=function VTKComponent(){useEffect(function(){document.body.style.padding='0';document.body.style.margin='0';document.body.style.overflow='hidden';// Prevent scrolling\nvar divRenderer=document.createElement('div');document.body.appendChild(divRenderer);divRenderer.style.position='fixed';divRenderer.style.top='0';divRenderer.style.left='0';divRenderer.style.width='100vw';divRenderer.style.height='100vh';divRenderer.style.overflow='hidden';var clientToConnect=vtkWSLinkClient.newInstance();// Error\nclientToConnect.onConnectionError(function(httpReq){var message=httpReq&&httpReq.response&&httpReq.response.error||\"Connection error\";console.error(message);console.log(httpReq);});// Close\nclientToConnect.onConnectionClose(function(httpReq){var message=httpReq&&httpReq.response&&httpReq.response.error||\"Connection close\";console.error(message);console.log(httpReq);});// hint: if you use the launcher.py and ws-proxy just leave out sessionURL\n// (it will be provided by the launcher)\nvar config={application:'cone',sessionURL:'ws://192.168.235.60:7500/ws'};// Connect\nclientToConnect.connect(config).then(function(validClient){var viewStream=clientToConnect.getImageStream().createViewStream('-1');var view=vtkRemoteView.newInstance({rpcWheelEvent:'viewport.mouse.zoom.wheel',viewStream:viewStream});var session=validClient.getConnection().getSession();view.setSession(session);view.setContainer(divRenderer);view.setInteractiveRatio(0.7);// the scaled image compared to the clients view resolution\nview.setInteractiveQuality(50);// jpeg quality\nwindow.addEventListener('resize',view.resize);}).catch(function(error){console.error(error);});return function(){// Clean up code if needed when the component unmounts\n// For example, you might want to remove the resize event listener and disconnect the client.\n};},[]);// Run the effect only once when the component mounts\nreturn null;// Since this component doesn't render anything, we return null\n};export default VTKComponent;","map":{"version":3,"names":["useEffect","vtkWSLinkClient","SmartConnect","vtkRemoteView","setSmartConnectClass","VTKComponent","document","body","style","padding","margin","overflow","divRenderer","createElement","appendChild","position","top","left","width","height","clientToConnect","newInstance","onConnectionError","httpReq","message","response","error","console","log","onConnectionClose","config","application","sessionURL","connect","then","validClient","viewStream","getImageStream","createViewStream","view","rpcWheelEvent","session","getConnection","getSession","setSession","setContainer","setInteractiveRatio","setInteractiveQuality","window","addEventListener","resize","catch"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js"],"sourcesContent":["import { useEffect } from 'react';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\nimport SmartConnect from 'wslink/src/SmartConnect';\nimport vtkRemoteView from '@kitware/vtk.js/Rendering/Misc/RemoteView';\n\nvtkWSLinkClient.setSmartConnectClass(SmartConnect);\n\nconst VTKComponent = () => {\n    useEffect(() => {\n      document.body.style.padding = '0';\n      document.body.style.margin = '0';\n      document.body.style.overflow = 'hidden'; // Prevent scrolling\n  \n      const divRenderer = document.createElement('div');\n      document.body.appendChild(divRenderer);\n  \n      divRenderer.style.position = 'fixed';\n      divRenderer.style.top = '0';\n      divRenderer.style.left = '0';\n      divRenderer.style.width = '100vw';\n      divRenderer.style.height = '100vh';\n      divRenderer.style.overflow = 'hidden';\n\n    const clientToConnect = vtkWSLinkClient.newInstance();\n\n    // Error\n    clientToConnect.onConnectionError((httpReq) => {\n      const message =\n        (httpReq && httpReq.response && httpReq.response.error) ||\n        `Connection error`;\n      console.error(message);\n      console.log(httpReq);\n    });\n\n    // Close\n    clientToConnect.onConnectionClose((httpReq) => {\n      const message =\n        (httpReq && httpReq.response && httpReq.response.error) ||\n        `Connection close`;\n      console.error(message);\n      console.log(httpReq);\n    });\n\n    // hint: if you use the launcher.py and ws-proxy just leave out sessionURL\n    // (it will be provided by the launcher)\n    const config = {\n      application: 'cone',\n      sessionURL: 'ws://192.168.235.60:7500/ws',\n    };\n\n    // Connect\n    clientToConnect\n      .connect(config)\n      .then((validClient) => {\n        const viewStream = clientToConnect.getImageStream().createViewStream('-1');\n\n        const view = vtkRemoteView.newInstance({\n          rpcWheelEvent: 'viewport.mouse.zoom.wheel',\n          viewStream,\n        });\n        const session = validClient.getConnection().getSession();\n        view.setSession(session);\n        view.setContainer(divRenderer);\n        view.setInteractiveRatio(0.7); // the scaled image compared to the clients view resolution\n        view.setInteractiveQuality(50); // jpeg quality\n\n        window.addEventListener('resize', view.resize);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    return () => {\n      // Clean up code if needed when the component unmounts\n      // For example, you might want to remove the resize event listener and disconnect the client.\n    };\n  }, []); // Run the effect only once when the component mounts\n\n  return null; // Since this component doesn't render anything, we return null\n};\n\nexport default VTKComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
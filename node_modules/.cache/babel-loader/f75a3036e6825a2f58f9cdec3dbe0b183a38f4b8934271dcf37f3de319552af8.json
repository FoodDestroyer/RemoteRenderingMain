{"ast":null,"code":"import { newInstance as newInstance$1, get, setGet, moveToProtected, vtkDebugMacro as vtkDebugMacro$1 } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nvar vtkDebugMacro = vtkDebugMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLRenderer methods\n// ----------------------------------------------------------------------------\n\n/* eslint-disable no-bitwise */\n\nfunction vtkOpenGLRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderer'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      publicAPI.updateLights();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getActiveCamera());\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.updateLights = function () {\n    var count = 0;\n    var lights = model.renderable.getLightsByReference();\n    for (var index = 0; index < lights.length; ++index) {\n      if (lights[index].getSwitch() > 0.0) {\n        count++;\n      }\n    }\n    if (!count) {\n      vtkDebugMacro('No lights are on, creating one.');\n      model.renderable.createLight();\n    }\n    return count;\n  };\n  publicAPI.zBufferPass = function (prepass) {\n    if (prepass) {\n      var clearMask = 0;\n      var gl = model.context;\n      if (!model.renderable.getTransparent()) {\n        model.context.clearColor(1.0, 0.0, 0.0, 1.0);\n        clearMask |= gl.COLOR_BUFFER_BIT;\n      }\n      if (!model.renderable.getPreserveDepthBuffer()) {\n        gl.clearDepth(1.0);\n        clearMask |= gl.DEPTH_BUFFER_BIT;\n        model.context.depthMask(true);\n      }\n      var ts = publicAPI.getTiledSizeAndOrigin();\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.colorMask(true, true, true, true);\n      if (clearMask) {\n        gl.clear(clearMask);\n      }\n      gl.enable(gl.DEPTH_TEST);\n    }\n  };\n  publicAPI.opaqueZBufferPass = function (prepass) {\n    return publicAPI.zBufferPass(prepass);\n  }; // Renders myself\n\n  publicAPI.cameraPass = function (prepass) {\n    if (prepass) {\n      publicAPI.clear();\n    }\n  };\n  publicAPI.getAspectRatio = function () {\n    var size = model._parent.getSizeByReference();\n    var viewport = model.renderable.getViewportByReference();\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\n  };\n  publicAPI.getTiledSizeAndOrigin = function () {\n    var vport = model.renderable.getViewportByReference(); // if there is no window assume 0 1\n\n    var tileViewPort = [0.0, 0.0, 1.0, 1.0]; // find the lower left corner of the viewport, taking into account the\n    // lower left boundary of this tile\n\n    var vpu = vport[0] - tileViewPort[0];\n    var vpv = vport[1] - tileViewPort[1]; // store the result as a pixel value\n\n    var ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\n    var lowerLeftU = Math.round(ndvp[0]);\n    var lowerLeftV = Math.round(ndvp[1]); // find the upper right corner of the viewport, taking into account the\n    // lower left boundary of this tile\n\n    var vpu2 = vport[2] - tileViewPort[0];\n    var vpv2 = vport[3] - tileViewPort[1];\n    var ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2); // now compute the size of the intersection of the viewport with the\n    // current tile\n\n    var usize = Math.round(ndvp2[0]) - lowerLeftU;\n    var vsize = Math.round(ndvp2[1]) - lowerLeftV;\n    if (usize < 0) {\n      usize = 0;\n    }\n    if (vsize < 0) {\n      vsize = 0;\n    }\n    return {\n      usize: usize,\n      vsize: vsize,\n      lowerLeftU: lowerLeftU,\n      lowerLeftV: lowerLeftV\n    };\n  };\n  publicAPI.clear = function () {\n    var clearMask = 0;\n    var gl = model.context;\n    if (!model.renderable.getTransparent()) {\n      var background = model.renderable.getBackgroundByReference(); // renderable ensures that background has 4 entries.\n\n      model.context.clearColor(background[0], background[1], background[2], background[3]);\n      clearMask |= gl.COLOR_BUFFER_BIT;\n    }\n    if (!model.renderable.getPreserveDepthBuffer()) {\n      gl.clearDepth(1.0);\n      clearMask |= gl.DEPTH_BUFFER_BIT;\n      model.context.depthMask(true);\n    }\n    gl.colorMask(true, true, true, true);\n    var ts = publicAPI.getTiledSizeAndOrigin();\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    if (clearMask) {\n      gl.clear(clearMask);\n    }\n    gl.enable(gl.DEPTH_TEST);\n    /* eslint-enable no-bitwise */\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (model.selector !== null) {\n      model.selector.releaseGraphicsResources();\n    }\n  };\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  context: null,\n  // _openGLRenderWindow: null,\n  selector: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues); // Build VTK API\n\n  get(publicAPI, model, ['shaderCache']);\n  setGet(publicAPI, model, ['selector']);\n  moveToProtected(publicAPI, model, ['openGLRenderWindow']); // Object methods\n\n  vtkOpenGLRenderer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLRenderer'); // ----------------------------------------------------------------------------\n\nvar vtkRenderer = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkRenderer', newInstance);\nexport { vtkRenderer as default, extend, newInstance };","map":{"version":3,"names":["newInstance","newInstance$1","get","setGet","moveToProtected","vtkDebugMacro","vtkDebugMacro$1","vtkViewNode","registerOverride","vtkOpenGLRenderer","publicAPI","model","classHierarchy","push","buildPass","prepass","renderable","updateLights","prepareNodes","addMissingNode","getActiveCamera","addMissingNodes","getViewPropsWithNestedProps","removeUnusedNodes","count","lights","getLightsByReference","index","length","getSwitch","createLight","zBufferPass","clearMask","gl","context","getTransparent","clearColor","COLOR_BUFFER_BIT","getPreserveDepthBuffer","clearDepth","DEPTH_BUFFER_BIT","depthMask","ts","getTiledSizeAndOrigin","enable","SCISSOR_TEST","scissor","lowerLeftU","lowerLeftV","usize","vsize","viewport","colorMask","clear","DEPTH_TEST","opaqueZBufferPass","cameraPass","getAspectRatio","size","_parent","getSizeByReference","getViewportByReference","vport","tileViewPort","vpu","vpv","ndvp","normalizedDisplayToDisplay","Math","round","vpu2","vpv2","ndvp2","background","getBackgroundByReference","releaseGraphicsResources","selector","setOpenGLRenderWindow","rw","_openGLRenderWindow","getContext","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","vtkRenderer","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js"],"sourcesContent":["import { newInstance as newInstance$1, get, setGet, moveToProtected, vtkDebugMacro as vtkDebugMacro$1 } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nvar vtkDebugMacro = vtkDebugMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLRenderer methods\n// ----------------------------------------------------------------------------\n\n/* eslint-disable no-bitwise */\n\nfunction vtkOpenGLRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderer'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      publicAPI.updateLights();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getActiveCamera());\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.updateLights = function () {\n    var count = 0;\n    var lights = model.renderable.getLightsByReference();\n\n    for (var index = 0; index < lights.length; ++index) {\n      if (lights[index].getSwitch() > 0.0) {\n        count++;\n      }\n    }\n\n    if (!count) {\n      vtkDebugMacro('No lights are on, creating one.');\n      model.renderable.createLight();\n    }\n\n    return count;\n  };\n\n  publicAPI.zBufferPass = function (prepass) {\n    if (prepass) {\n      var clearMask = 0;\n      var gl = model.context;\n\n      if (!model.renderable.getTransparent()) {\n        model.context.clearColor(1.0, 0.0, 0.0, 1.0);\n        clearMask |= gl.COLOR_BUFFER_BIT;\n      }\n\n      if (!model.renderable.getPreserveDepthBuffer()) {\n        gl.clearDepth(1.0);\n        clearMask |= gl.DEPTH_BUFFER_BIT;\n        model.context.depthMask(true);\n      }\n\n      var ts = publicAPI.getTiledSizeAndOrigin();\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.colorMask(true, true, true, true);\n\n      if (clearMask) {\n        gl.clear(clearMask);\n      }\n\n      gl.enable(gl.DEPTH_TEST);\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = function (prepass) {\n    return publicAPI.zBufferPass(prepass);\n  }; // Renders myself\n\n\n  publicAPI.cameraPass = function (prepass) {\n    if (prepass) {\n      publicAPI.clear();\n    }\n  };\n\n  publicAPI.getAspectRatio = function () {\n    var size = model._parent.getSizeByReference();\n\n    var viewport = model.renderable.getViewportByReference();\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\n  };\n\n  publicAPI.getTiledSizeAndOrigin = function () {\n    var vport = model.renderable.getViewportByReference(); // if there is no window assume 0 1\n\n    var tileViewPort = [0.0, 0.0, 1.0, 1.0]; // find the lower left corner of the viewport, taking into account the\n    // lower left boundary of this tile\n\n    var vpu = vport[0] - tileViewPort[0];\n    var vpv = vport[1] - tileViewPort[1]; // store the result as a pixel value\n\n    var ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\n\n    var lowerLeftU = Math.round(ndvp[0]);\n    var lowerLeftV = Math.round(ndvp[1]); // find the upper right corner of the viewport, taking into account the\n    // lower left boundary of this tile\n\n    var vpu2 = vport[2] - tileViewPort[0];\n    var vpv2 = vport[3] - tileViewPort[1];\n\n    var ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2); // now compute the size of the intersection of the viewport with the\n    // current tile\n\n\n    var usize = Math.round(ndvp2[0]) - lowerLeftU;\n    var vsize = Math.round(ndvp2[1]) - lowerLeftV;\n\n    if (usize < 0) {\n      usize = 0;\n    }\n\n    if (vsize < 0) {\n      vsize = 0;\n    }\n\n    return {\n      usize: usize,\n      vsize: vsize,\n      lowerLeftU: lowerLeftU,\n      lowerLeftV: lowerLeftV\n    };\n  };\n\n  publicAPI.clear = function () {\n    var clearMask = 0;\n    var gl = model.context;\n\n    if (!model.renderable.getTransparent()) {\n      var background = model.renderable.getBackgroundByReference(); // renderable ensures that background has 4 entries.\n\n      model.context.clearColor(background[0], background[1], background[2], background[3]);\n      clearMask |= gl.COLOR_BUFFER_BIT;\n    }\n\n    if (!model.renderable.getPreserveDepthBuffer()) {\n      gl.clearDepth(1.0);\n      clearMask |= gl.DEPTH_BUFFER_BIT;\n      model.context.depthMask(true);\n    }\n\n    gl.colorMask(true, true, true, true);\n    var ts = publicAPI.getTiledSizeAndOrigin();\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n\n    if (clearMask) {\n      gl.clear(clearMask);\n    }\n\n    gl.enable(gl.DEPTH_TEST);\n    /* eslint-enable no-bitwise */\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (model.selector !== null) {\n      model.selector.releaseGraphicsResources();\n    }\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  // _openGLRenderWindow: null,\n  selector: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues); // Build VTK API\n\n  get(publicAPI, model, ['shaderCache']);\n  setGet(publicAPI, model, ['selector']);\n  moveToProtected(publicAPI, model, ['openGLRenderWindow']); // Object methods\n\n  vtkOpenGLRenderer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLRenderer'); // ----------------------------------------------------------------------------\n\nvar vtkRenderer = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkRenderer', newInstance);\n\nexport { vtkRenderer as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const TinyEmitter = require('./tiny-emitter');\nconst MESSAGE_RESULT = 0;\nconst MESSAGE_EVENT = 1;\nconst RESULT_ERROR = 0;\nconst RESULT_SUCCESS = 1;\nclass Worker extends TinyEmitter {\n  /**\n   *\n   * @param worker {Worker}\n   */\n  constructor(worker) {\n    super();\n    this._messageId = 1;\n    this._messages = new Map();\n    this._worker = worker;\n    this._worker.onmessage = this._onMessage.bind(this);\n    this._id = Math.ceil(Math.random() * 10000000);\n  }\n  terminate() {\n    this._worker.terminate();\n  }\n\n  /**\n   * return true if there is no unresolved jobs\n   * @returns {boolean}\n   */\n  isFree() {\n    return this._messages.size === 0;\n  }\n  jobsLength() {\n    return this._messages.size;\n  }\n\n  /**\n   * @param operationName string\n   * @param data any\n   * @param transferable array\n   * @param onEvent function\n   * @returns {Promise}\n   */\n  exec(operationName, data = null, transferable = [], onEvent) {\n    return new Promise((res, rej) => {\n      const messageId = this._messageId++;\n      this._messages.set(messageId, [res, rej, onEvent]);\n      this._worker.postMessage([messageId, data, operationName], transferable || []);\n    });\n  }\n\n  /**\n   *\n   * @param data any\n   * @param transferable array\n   * @param onEvent function\n   * @returns {Promise}\n   */\n  postMessage(data = null, transferable = [], onEvent) {\n    return new Promise((res, rej) => {\n      const messageId = this._messageId++;\n      this._messages.set(messageId, [res, rej, onEvent]);\n      this._worker.postMessage([messageId, data], transferable || []);\n    });\n  }\n  emit(eventName, ...args) {\n    this._worker.postMessage({\n      eventName,\n      args\n    });\n  }\n  _onMessage(e) {\n    //if we got usual event, just emit it locally\n    if (!Array.isArray(e.data) && e.data.eventName) {\n      return super.emit(e.data.eventName, ...e.data.args);\n    }\n    const [type, ...args] = e.data;\n    if (type === MESSAGE_EVENT) this._onEvent(...args);else if (type === MESSAGE_RESULT) this._onResult(...args);else throw new Error(`Wrong message type '${type}'`);\n  }\n  _onResult(messageId, success, payload) {\n    const [res, rej] = this._messages.get(messageId);\n    this._messages.delete(messageId);\n    return success === RESULT_SUCCESS ? res(payload) : rej(payload);\n  }\n  _onEvent(messageId, eventName, data) {\n    const [,, onEvent] = this._messages.get(messageId);\n    if (onEvent) {\n      onEvent(eventName, data);\n    }\n  }\n}\nmodule.exports = Worker;","map":{"version":3,"names":["TinyEmitter","require","MESSAGE_RESULT","MESSAGE_EVENT","RESULT_ERROR","RESULT_SUCCESS","Worker","constructor","worker","_messageId","_messages","Map","_worker","onmessage","_onMessage","bind","_id","Math","ceil","random","terminate","isFree","size","jobsLength","exec","operationName","data","transferable","onEvent","Promise","res","rej","messageId","set","postMessage","emit","eventName","args","e","Array","isArray","type","_onEvent","_onResult","Error","success","payload","get","delete","module","exports"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/webworker-promise/src/index.js"],"sourcesContent":["const TinyEmitter = require('./tiny-emitter');\n\nconst MESSAGE_RESULT = 0;\nconst MESSAGE_EVENT = 1;\n\nconst RESULT_ERROR = 0;\nconst RESULT_SUCCESS = 1;\n\nclass Worker extends TinyEmitter {\n  /**\n   *\n   * @param worker {Worker}\n   */\n  constructor(worker) {\n    super();\n\n    this._messageId = 1;\n    this._messages = new Map();\n\n    this._worker = worker;\n    this._worker.onmessage = this._onMessage.bind(this);\n    this._id = Math.ceil(Math.random() * 10000000);\n  }\n\n  terminate() {\n    this._worker.terminate();\n  }\n\n  /**\n   * return true if there is no unresolved jobs\n   * @returns {boolean}\n   */\n  isFree() {\n    return this._messages.size === 0;\n  }\n\n  jobsLength() {\n    return this._messages.size;\n  }\n\n  /**\n   * @param operationName string\n   * @param data any\n   * @param transferable array\n   * @param onEvent function\n   * @returns {Promise}\n   */\n  exec(operationName, data = null, transferable = [], onEvent) {\n    return new Promise((res, rej) => {\n      const messageId = this._messageId++;\n      this._messages.set(messageId, [res, rej, onEvent]);\n      this._worker.postMessage([messageId, data, operationName], transferable || []);\n    });\n  }\n\n  /**\n   *\n   * @param data any\n   * @param transferable array\n   * @param onEvent function\n   * @returns {Promise}\n   */\n  postMessage(data = null, transferable = [], onEvent) {\n    return new Promise((res, rej) => {\n      const messageId = this._messageId++;\n      this._messages.set(messageId, [res, rej, onEvent]);\n      this._worker.postMessage([messageId, data], transferable || []);\n    });\n  }\n\n  emit(eventName, ...args) {\n    this._worker.postMessage({eventName, args});\n  }\n\n  _onMessage(e) {\n    //if we got usual event, just emit it locally\n    if(!Array.isArray(e.data) && e.data.eventName) {\n      return super.emit(e.data.eventName, ...e.data.args);\n    }\n\n    const [type, ...args] = e.data;\n\n    if(type === MESSAGE_EVENT)\n      this._onEvent(...args);\n    else if(type === MESSAGE_RESULT)\n      this._onResult(...args);\n    else\n      throw new Error(`Wrong message type '${type}'`);\n  }\n\n  _onResult(messageId, success, payload) {\n    const [res, rej] = this._messages.get(messageId);\n    this._messages.delete(messageId);\n\n    return success === RESULT_SUCCESS ? res(payload) : rej(payload);\n  }\n\n  _onEvent(messageId, eventName, data) {\n    const [,,onEvent] = this._messages.get(messageId);\n\n    if(onEvent) {\n      onEvent(eventName, data);\n    }\n  }\n\n}\n\nmodule.exports = Worker;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
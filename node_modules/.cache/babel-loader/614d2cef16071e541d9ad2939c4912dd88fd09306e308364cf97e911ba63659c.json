{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport macro from '../../macros.js';\nimport DataAccessHelper from '../Core/DataAccessHelper.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport '../Core/DataAccessHelper/LiteHttpDataAccessHelper.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + gz\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n// ----------------------------------------------------------------------------\n\nvar data = {}; // ----------------------------------------------------------------------------\n\nfunction copyVector(src, srcOffset, dst, dstOffset, vectorSize) {\n  for (var i = 0; i < vectorSize; i++) {\n    dst[dstOffset + i] = src[srcOffset + i];\n  }\n} // ----------------------------------------------------------------------------\n\nfunction begin(splitMode) {\n  data.splitOn = splitMode;\n  data.pieces = [];\n  data.v = [];\n  data.vt = [];\n  data.vn = [];\n  data.f = [[]];\n  data.size = 0;\n} // ----------------------------------------------------------------------------\n\nfunction faceMap(str) {\n  var idxs = str.split('/').map(function (i) {\n    return Number(i);\n  });\n  var vertexIdx = idxs[0] - 1;\n  var textCoordIdx = idxs[1] ? idxs[1] - 1 : vertexIdx;\n  var vertexNormal = idxs[2] ? idxs[2] - 1 : vertexIdx;\n  return [vertexIdx, textCoordIdx, vertexNormal];\n} // ----------------------------------------------------------------------------\n\nfunction parseLine(line) {\n  if (line[0] === '#') {\n    return;\n  }\n  var tokens = line.split(/[ \\t]+/);\n  if (tokens[0] === data.splitOn) {\n    tokens.shift();\n    data.pieces.push(tokens.join(' ').trim());\n    data.f.push([]);\n    data.size++;\n  } else if (tokens[0] === 'v') {\n    data.v.push(Number(tokens[1]));\n    data.v.push(Number(tokens[2]));\n    data.v.push(Number(tokens[3]));\n  } else if (tokens[0] === 'vt') {\n    data.vt.push(Number(tokens[1]));\n    data.vt.push(Number(tokens[2]));\n  } else if (tokens[0] === 'vn') {\n    data.vn.push(Number(tokens[1]));\n    data.vn.push(Number(tokens[2]));\n    data.vn.push(Number(tokens[3]));\n  } else if (tokens[0] === 'f') {\n    // Handle triangles for now\n    if (data.size === 0) {\n      data.size++;\n    }\n    var cells = data.f[data.size - 1];\n    tokens.shift();\n    var faces = tokens.filter(function (s) {\n      return s.length > 0 && s !== '\\r';\n    });\n    var size = faces.length;\n    cells.push(size);\n    for (var i = 0; i < size; i++) {\n      cells.push(faceMap(faces[i]));\n    }\n  }\n} // ----------------------------------------------------------------------------\n\nfunction end(model) {\n  var hasTcoords = !!data.vt.length;\n  var hasNormals = !!data.vn.length;\n  if (model.splitMode) {\n    model.numberOfOutputs = data.size;\n    for (var idx = 0; idx < data.size; idx++) {\n      var polyIn = data.f[idx];\n      var nbElems = polyIn.length;\n      var nbPoints = data.v.length / 3;\n      var keyPointId = {};\n      var pointDuplicatesReferences = void 0;\n      if (model.trackDuplicates) {\n        // In trackDuplicates mode, we want the following point layout:\n        // [pt0, pt1, pt2, ... ptN, pt0d1, pt0d2, pt1d1]\n        var pointKeys = [];\n        var duplicatesCount = 0;\n        for (var _offset = 0; _offset < nbElems;) {\n          var cellSize = polyIn[_offset++];\n          for (var pIdx = 0; pIdx < cellSize; pIdx++) {\n            var _polyIn$_offset = _slicedToArray(polyIn[_offset++], 3),\n              vIdx = _polyIn$_offset[0],\n              tcIdx = _polyIn$_offset[1],\n              nIdx = _polyIn$_offset[2];\n            var key = \"\".concat(vIdx, \"/\").concat(tcIdx, \"/\").concat(nIdx);\n            if (keyPointId[key] === undefined) {\n              if (pointKeys[vIdx] === undefined) {\n                pointKeys[vIdx] = [key];\n              } else {\n                pointKeys[vIdx].push(key);\n                ++duplicatesCount;\n              } // will be overwritten for duplicates\n\n              keyPointId[key] = vIdx;\n            }\n          }\n        }\n        pointDuplicatesReferences = new Uint16Array(nbPoints + duplicatesCount);\n        var duplicates = 0;\n        for (var pointId = 0; pointId < pointKeys.length; ++pointId) {\n          var usageCount = pointKeys[pointId] ? pointKeys[pointId].length : 0; // Set the first duplicate index on the original point\n\n          pointDuplicatesReferences[pointId] = usageCount > 1 ? nbPoints + duplicates : pointId; // Set the original index on each duplicated point\n\n          for (var duplicateId = 1; duplicateId < usageCount; ++duplicateId) {\n            var finalDuplicateId = nbPoints + duplicates++;\n            pointDuplicatesReferences[finalDuplicateId] = pointId; // Associate the duplicate index to the key\n\n            keyPointId[pointKeys[pointId][duplicateId]] = finalDuplicateId;\n          }\n        }\n      }\n      var ctMapping = {};\n      var polydata = vtkPolyData.newInstance({\n        name: data.pieces[idx]\n      });\n      var pts = [];\n      var tc = [];\n      var normals = [];\n      var polys = [];\n      var offset = 0;\n      while (offset < nbElems) {\n        var _cellSize = polyIn[offset];\n        polys.push(_cellSize);\n        for (var _pIdx = 0; _pIdx < _cellSize; _pIdx++) {\n          var _polyIn = _slicedToArray(polyIn[offset + _pIdx + 1], 3),\n            _vIdx = _polyIn[0],\n            _tcIdx = _polyIn[1],\n            _nIdx = _polyIn[2];\n          var _key = \"\".concat(_vIdx, \"/\").concat(_tcIdx, \"/\").concat(_nIdx);\n          if (ctMapping[_key] === undefined) {\n            var dstOffset = model.trackDuplicates ? keyPointId[_key] : pts.length / 3;\n            ctMapping[_key] = dstOffset;\n            copyVector(data.v, _vIdx * 3, pts, dstOffset * 3, 3);\n            if (hasTcoords) {\n              copyVector(data.vt, _tcIdx * 2, tc, dstOffset * 2, 2);\n            }\n            if (hasNormals) {\n              copyVector(data.vn, _nIdx * 3, normals, dstOffset * 3, 3);\n            }\n          }\n          polys.push(ctMapping[_key]);\n        }\n        offset += _cellSize + 1;\n      }\n      polydata.getPoints().setData(Float32Array.from(pts), 3);\n      if (model.trackDuplicates) {\n        var duplicatesArray = vtkDataArray.newInstance({\n          name: 'Duplicates',\n          values: pointDuplicatesReferences\n        });\n        polydata.getPointData().addArray(duplicatesArray);\n      }\n      polydata.getPolys().setData(Uint32Array.from(polys));\n      if (hasTcoords) {\n        var tcoords = vtkDataArray.newInstance({\n          numberOfComponents: 2,\n          values: Float32Array.from(tc),\n          name: 'TextureCoordinates'\n        });\n        polydata.getPointData().setTCoords(tcoords);\n      }\n      if (hasNormals) {\n        var normalsArray = vtkDataArray.newInstance({\n          numberOfComponents: 3,\n          values: Float32Array.from(normals),\n          name: 'Normals'\n        });\n        polydata.getPointData().setNormals(normalsArray);\n      } // register in output\n\n      model.output[idx] = polydata;\n    }\n  } else {\n    model.numberOfOutputs = 1;\n    var _polydata = vtkPolyData.newInstance();\n    _polydata.getPoints().setData(Float32Array.from(data.v), 3);\n    if (hasTcoords && data.v.length / 3 === data.vt.length / 2) {\n      var _tcoords = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        values: Float32Array.from(data.vt),\n        name: 'TextureCoordinates'\n      });\n      _polydata.getPointData().setTCoords(_tcoords);\n    }\n    if (hasNormals && data.v.length === data.vn.length) {\n      var _normalsArray = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: Float32Array.from(data.vn),\n        name: 'Normals'\n      });\n      _polydata.getPointData().setNormals(_normalsArray);\n    }\n    var _polys = [];\n    var _polyIn2 = data.f[0];\n    var _nbElems = _polyIn2.length;\n    var _offset2 = 0;\n    while (_offset2 < _nbElems) {\n      var _cellSize2 = _polyIn2[_offset2];\n      _polys.push(_cellSize2);\n      for (var _pIdx2 = 0; _pIdx2 < _cellSize2; _pIdx2++) {\n        var _polyIn3 = _slicedToArray(_polyIn2[_offset2 + _pIdx2 + 1], 1),\n          _vIdx2 = _polyIn3[0];\n        _polys.push(_vIdx2);\n      }\n      _offset2 += _cellSize2 + 1;\n    }\n    _polydata.getPolys().setData(Uint32Array.from(_polys));\n    model.output[0] = _polydata;\n  }\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nfunction getPointDuplicateIds(polyData, pointId) {\n  var res = [];\n  var duplicates = polyData.getPointData().getArrayByName('Duplicates');\n  if (duplicates == null) {\n    return res;\n  }\n  var duplicatesData = duplicates.getData();\n  var originalPointId = Math.min(pointId, duplicatesData[pointId]);\n  res.push(originalPointId);\n  var duplicateId = duplicatesData[originalPointId];\n  if (duplicateId !== originalPointId) {\n    // point has duplicates\n    while (duplicateId < duplicatesData.length && duplicatesData[duplicateId] === originalPointId) {\n      // Duplicated points must be next to each other and original point must\n      // reference first duplicate\n      res.push(duplicateId++);\n    }\n  }\n  return res;\n}\nvar STATIC = {\n  getPointDuplicateIds: getPointDuplicateIds\n}; // ----------------------------------------------------------------------------\n// vtkOBJReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOBJReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOBJReader'); // Create default dataAccessHelper if not available\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  } // Internal method to fetch Array\n\n  function fetchData(url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return model.dataAccessHelper.fetchText(publicAPI, url, option);\n  } // Set DataSet url\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (url.indexOf('.obj') === -1 && !option.fullpath) {\n      model.baseURL = url;\n      model.url = \"\".concat(url, \"/index.obj\");\n    } else {\n      model.url = url; // Remove the file in the URL\n\n      var path = url.split('/');\n      path.pop();\n      model.baseURL = path.join('/');\n    } // Fetch metadata\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n  publicAPI.loadData = function () {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return fetchData(model.url, option).then(function (content) {\n      return publicAPI.isDeleted() ? false : publicAPI.parseAsText(content);\n    });\n  };\n  publicAPI.parseAsText = function (content) {\n    if (!content) {\n      return true;\n    }\n    if (content !== model.parseData) {\n      publicAPI.modified();\n    }\n    model.parseData = content;\n    model.numberOfOutputs = 0;\n    begin(model.splitMode);\n    content.split('\\n').forEach(parseLine);\n    end(model);\n    return true;\n  };\n  publicAPI.requestData = function (inData, outData) {\n    publicAPI.parseAsText(model.parseData);\n  }; // return Busy state\n\n  publicAPI.isBusy = function () {\n    return !!model.requestCount;\n  };\n  publicAPI.getNumberOfOutputPorts = function () {\n    return model.numberOfOutputs;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  numberOfOutputs: 1,\n  requestCount: 0,\n  splitMode: null,\n  trackDuplicates: false // baseURL: null,\n  // dataAccessHelper: null,\n  // url: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url', 'baseURL']);\n  macro.setGet(publicAPI, model, ['dataAccessHelper', 'splitMode', 'trackDuplicates']);\n  macro.algo(publicAPI, model, 0, 1);\n  macro.event(publicAPI, model, 'busy'); // Object methods\n\n  vtkOBJReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOBJReader'); // ----------------------------------------------------------------------------\n\nvar vtkOBJReader$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\nexport { STATIC, vtkOBJReader$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","_slicedToArray","macro","DataAccessHelper","vtkDataArray","vtkPolyData","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","data","copyVector","src","srcOffset","dst","dstOffset","vectorSize","begin","splitMode","splitOn","pieces","v","vt","vn","f","size","faceMap","str","idxs","split","map","Number","vertexIdx","textCoordIdx","vertexNormal","parseLine","line","tokens","shift","join","trim","cells","faces","s","end","model","hasTcoords","hasNormals","numberOfOutputs","idx","polyIn","nbElems","nbPoints","keyPointId","pointDuplicatesReferences","trackDuplicates","pointKeys","duplicatesCount","_offset","cellSize","pIdx","_polyIn$_offset","vIdx","tcIdx","nIdx","concat","undefined","Uint16Array","duplicates","pointId","usageCount","duplicateId","finalDuplicateId","ctMapping","polydata","newInstance","name","pts","tc","normals","polys","offset","_cellSize","_pIdx","_polyIn","_vIdx","_tcIdx","_nIdx","_key","getPoints","setData","Float32Array","from","duplicatesArray","values","getPointData","addArray","getPolys","Uint32Array","tcoords","numberOfComponents","setTCoords","normalsArray","setNormals","output","_polydata","_tcoords","_normalsArray","_polys","_polyIn2","_nbElems","_offset2","_cellSize2","_pIdx2","_polyIn3","_vIdx2","getPointDuplicateIds","polyData","res","getArrayByName","duplicatesData","getData","originalPointId","Math","min","STATIC","vtkOBJReader","publicAPI","classHierarchy","dataAccessHelper","get","fetchData","url","option","fetchText","setUrl","indexOf","fullpath","baseURL","path","pop","loadData","then","content","isDeleted","parseAsText","parseData","modified","requestData","inData","outData","isBusy","requestCount","getNumberOfOutputPorts","DEFAULT_VALUES","extend","initialValues","assign","obj","setGet","algo","event","vtkOBJReader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Misc/OBJReader.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport macro from '../../macros.js';\nimport DataAccessHelper from '../Core/DataAccessHelper.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport '../Core/DataAccessHelper/LiteHttpDataAccessHelper.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + gz\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n// ----------------------------------------------------------------------------\n\nvar data = {}; // ----------------------------------------------------------------------------\n\nfunction copyVector(src, srcOffset, dst, dstOffset, vectorSize) {\n  for (var i = 0; i < vectorSize; i++) {\n    dst[dstOffset + i] = src[srcOffset + i];\n  }\n} // ----------------------------------------------------------------------------\n\n\nfunction begin(splitMode) {\n  data.splitOn = splitMode;\n  data.pieces = [];\n  data.v = [];\n  data.vt = [];\n  data.vn = [];\n  data.f = [[]];\n  data.size = 0;\n} // ----------------------------------------------------------------------------\n\n\nfunction faceMap(str) {\n  var idxs = str.split('/').map(function (i) {\n    return Number(i);\n  });\n  var vertexIdx = idxs[0] - 1;\n  var textCoordIdx = idxs[1] ? idxs[1] - 1 : vertexIdx;\n  var vertexNormal = idxs[2] ? idxs[2] - 1 : vertexIdx;\n  return [vertexIdx, textCoordIdx, vertexNormal];\n} // ----------------------------------------------------------------------------\n\n\nfunction parseLine(line) {\n  if (line[0] === '#') {\n    return;\n  }\n\n  var tokens = line.split(/[ \\t]+/);\n\n  if (tokens[0] === data.splitOn) {\n    tokens.shift();\n    data.pieces.push(tokens.join(' ').trim());\n    data.f.push([]);\n    data.size++;\n  } else if (tokens[0] === 'v') {\n    data.v.push(Number(tokens[1]));\n    data.v.push(Number(tokens[2]));\n    data.v.push(Number(tokens[3]));\n  } else if (tokens[0] === 'vt') {\n    data.vt.push(Number(tokens[1]));\n    data.vt.push(Number(tokens[2]));\n  } else if (tokens[0] === 'vn') {\n    data.vn.push(Number(tokens[1]));\n    data.vn.push(Number(tokens[2]));\n    data.vn.push(Number(tokens[3]));\n  } else if (tokens[0] === 'f') {\n    // Handle triangles for now\n    if (data.size === 0) {\n      data.size++;\n    }\n\n    var cells = data.f[data.size - 1];\n    tokens.shift();\n    var faces = tokens.filter(function (s) {\n      return s.length > 0 && s !== '\\r';\n    });\n    var size = faces.length;\n    cells.push(size);\n\n    for (var i = 0; i < size; i++) {\n      cells.push(faceMap(faces[i]));\n    }\n  }\n} // ----------------------------------------------------------------------------\n\n\nfunction end(model) {\n  var hasTcoords = !!data.vt.length;\n  var hasNormals = !!data.vn.length;\n\n  if (model.splitMode) {\n    model.numberOfOutputs = data.size;\n\n    for (var idx = 0; idx < data.size; idx++) {\n      var polyIn = data.f[idx];\n      var nbElems = polyIn.length;\n      var nbPoints = data.v.length / 3;\n      var keyPointId = {};\n      var pointDuplicatesReferences = void 0;\n\n      if (model.trackDuplicates) {\n        // In trackDuplicates mode, we want the following point layout:\n        // [pt0, pt1, pt2, ... ptN, pt0d1, pt0d2, pt1d1]\n        var pointKeys = [];\n        var duplicatesCount = 0;\n\n        for (var _offset = 0; _offset < nbElems;) {\n          var cellSize = polyIn[_offset++];\n\n          for (var pIdx = 0; pIdx < cellSize; pIdx++) {\n            var _polyIn$_offset = _slicedToArray(polyIn[_offset++], 3),\n                vIdx = _polyIn$_offset[0],\n                tcIdx = _polyIn$_offset[1],\n                nIdx = _polyIn$_offset[2];\n\n            var key = \"\".concat(vIdx, \"/\").concat(tcIdx, \"/\").concat(nIdx);\n\n            if (keyPointId[key] === undefined) {\n              if (pointKeys[vIdx] === undefined) {\n                pointKeys[vIdx] = [key];\n              } else {\n                pointKeys[vIdx].push(key);\n                ++duplicatesCount;\n              } // will be overwritten for duplicates\n\n\n              keyPointId[key] = vIdx;\n            }\n          }\n        }\n\n        pointDuplicatesReferences = new Uint16Array(nbPoints + duplicatesCount);\n        var duplicates = 0;\n\n        for (var pointId = 0; pointId < pointKeys.length; ++pointId) {\n          var usageCount = pointKeys[pointId] ? pointKeys[pointId].length : 0; // Set the first duplicate index on the original point\n\n          pointDuplicatesReferences[pointId] = usageCount > 1 ? nbPoints + duplicates : pointId; // Set the original index on each duplicated point\n\n          for (var duplicateId = 1; duplicateId < usageCount; ++duplicateId) {\n            var finalDuplicateId = nbPoints + duplicates++;\n            pointDuplicatesReferences[finalDuplicateId] = pointId; // Associate the duplicate index to the key\n\n            keyPointId[pointKeys[pointId][duplicateId]] = finalDuplicateId;\n          }\n        }\n      }\n\n      var ctMapping = {};\n      var polydata = vtkPolyData.newInstance({\n        name: data.pieces[idx]\n      });\n      var pts = [];\n      var tc = [];\n      var normals = [];\n      var polys = [];\n      var offset = 0;\n\n      while (offset < nbElems) {\n        var _cellSize = polyIn[offset];\n        polys.push(_cellSize);\n\n        for (var _pIdx = 0; _pIdx < _cellSize; _pIdx++) {\n          var _polyIn = _slicedToArray(polyIn[offset + _pIdx + 1], 3),\n              _vIdx = _polyIn[0],\n              _tcIdx = _polyIn[1],\n              _nIdx = _polyIn[2];\n\n          var _key = \"\".concat(_vIdx, \"/\").concat(_tcIdx, \"/\").concat(_nIdx);\n\n          if (ctMapping[_key] === undefined) {\n            var dstOffset = model.trackDuplicates ? keyPointId[_key] : pts.length / 3;\n            ctMapping[_key] = dstOffset;\n            copyVector(data.v, _vIdx * 3, pts, dstOffset * 3, 3);\n\n            if (hasTcoords) {\n              copyVector(data.vt, _tcIdx * 2, tc, dstOffset * 2, 2);\n            }\n\n            if (hasNormals) {\n              copyVector(data.vn, _nIdx * 3, normals, dstOffset * 3, 3);\n            }\n          }\n\n          polys.push(ctMapping[_key]);\n        }\n\n        offset += _cellSize + 1;\n      }\n\n      polydata.getPoints().setData(Float32Array.from(pts), 3);\n\n      if (model.trackDuplicates) {\n        var duplicatesArray = vtkDataArray.newInstance({\n          name: 'Duplicates',\n          values: pointDuplicatesReferences\n        });\n        polydata.getPointData().addArray(duplicatesArray);\n      }\n\n      polydata.getPolys().setData(Uint32Array.from(polys));\n\n      if (hasTcoords) {\n        var tcoords = vtkDataArray.newInstance({\n          numberOfComponents: 2,\n          values: Float32Array.from(tc),\n          name: 'TextureCoordinates'\n        });\n        polydata.getPointData().setTCoords(tcoords);\n      }\n\n      if (hasNormals) {\n        var normalsArray = vtkDataArray.newInstance({\n          numberOfComponents: 3,\n          values: Float32Array.from(normals),\n          name: 'Normals'\n        });\n        polydata.getPointData().setNormals(normalsArray);\n      } // register in output\n\n\n      model.output[idx] = polydata;\n    }\n  } else {\n    model.numberOfOutputs = 1;\n\n    var _polydata = vtkPolyData.newInstance();\n\n    _polydata.getPoints().setData(Float32Array.from(data.v), 3);\n\n    if (hasTcoords && data.v.length / 3 === data.vt.length / 2) {\n      var _tcoords = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        values: Float32Array.from(data.vt),\n        name: 'TextureCoordinates'\n      });\n\n      _polydata.getPointData().setTCoords(_tcoords);\n    }\n\n    if (hasNormals && data.v.length === data.vn.length) {\n      var _normalsArray = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: Float32Array.from(data.vn),\n        name: 'Normals'\n      });\n\n      _polydata.getPointData().setNormals(_normalsArray);\n    }\n\n    var _polys = [];\n    var _polyIn2 = data.f[0];\n    var _nbElems = _polyIn2.length;\n    var _offset2 = 0;\n\n    while (_offset2 < _nbElems) {\n      var _cellSize2 = _polyIn2[_offset2];\n\n      _polys.push(_cellSize2);\n\n      for (var _pIdx2 = 0; _pIdx2 < _cellSize2; _pIdx2++) {\n        var _polyIn3 = _slicedToArray(_polyIn2[_offset2 + _pIdx2 + 1], 1),\n            _vIdx2 = _polyIn3[0];\n\n        _polys.push(_vIdx2);\n      }\n\n      _offset2 += _cellSize2 + 1;\n    }\n\n    _polydata.getPolys().setData(Uint32Array.from(_polys));\n\n    model.output[0] = _polydata;\n  }\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nfunction getPointDuplicateIds(polyData, pointId) {\n  var res = [];\n  var duplicates = polyData.getPointData().getArrayByName('Duplicates');\n\n  if (duplicates == null) {\n    return res;\n  }\n\n  var duplicatesData = duplicates.getData();\n  var originalPointId = Math.min(pointId, duplicatesData[pointId]);\n  res.push(originalPointId);\n  var duplicateId = duplicatesData[originalPointId];\n\n  if (duplicateId !== originalPointId) {\n    // point has duplicates\n    while (duplicateId < duplicatesData.length && duplicatesData[duplicateId] === originalPointId) {\n      // Duplicated points must be next to each other and original point must\n      // reference first duplicate\n      res.push(duplicateId++);\n    }\n  }\n\n  return res;\n}\n\nvar STATIC = {\n  getPointDuplicateIds: getPointDuplicateIds\n}; // ----------------------------------------------------------------------------\n// vtkOBJReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOBJReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOBJReader'); // Create default dataAccessHelper if not available\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  } // Internal method to fetch Array\n\n\n  function fetchData(url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return model.dataAccessHelper.fetchText(publicAPI, url, option);\n  } // Set DataSet url\n\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (url.indexOf('.obj') === -1 && !option.fullpath) {\n      model.baseURL = url;\n      model.url = \"\".concat(url, \"/index.obj\");\n    } else {\n      model.url = url; // Remove the file in the URL\n\n      var path = url.split('/');\n      path.pop();\n      model.baseURL = path.join('/');\n    } // Fetch metadata\n\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n\n  publicAPI.loadData = function () {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return fetchData(model.url, option).then(function (content) {\n      return publicAPI.isDeleted() ? false : publicAPI.parseAsText(content);\n    });\n  };\n\n  publicAPI.parseAsText = function (content) {\n    if (!content) {\n      return true;\n    }\n\n    if (content !== model.parseData) {\n      publicAPI.modified();\n    }\n\n    model.parseData = content;\n    model.numberOfOutputs = 0;\n    begin(model.splitMode);\n    content.split('\\n').forEach(parseLine);\n    end(model);\n    return true;\n  };\n\n  publicAPI.requestData = function (inData, outData) {\n    publicAPI.parseAsText(model.parseData);\n  }; // return Busy state\n\n\n  publicAPI.isBusy = function () {\n    return !!model.requestCount;\n  };\n\n  publicAPI.getNumberOfOutputPorts = function () {\n    return model.numberOfOutputs;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  numberOfOutputs: 1,\n  requestCount: 0,\n  splitMode: null,\n  trackDuplicates: false // baseURL: null,\n  // dataAccessHelper: null,\n  // url: null,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url', 'baseURL']);\n  macro.setGet(publicAPI, model, ['dataAccessHelper', 'splitMode', 'trackDuplicates']);\n  macro.algo(publicAPI, model, 0, 1);\n  macro.event(publicAPI, model, 'busy'); // Object methods\n\n  vtkOBJReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOBJReader'); // ----------------------------------------------------------------------------\n\nvar vtkOBJReader$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkOBJReader$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
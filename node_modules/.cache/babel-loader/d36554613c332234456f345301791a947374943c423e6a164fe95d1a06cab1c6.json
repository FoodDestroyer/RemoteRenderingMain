{"ast":null,"code":"import vtkXMLReader from './XMLReader.js';\nimport macro from '../../macros.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\n\n// vtkXMLImageDataReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkXMLImageDataReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkXMLImageDataReader');\n  publicAPI.parseXML = function (rootElem, type, compressor, byteOrder, headerType) {\n    var _imageDataElem$getAtt;\n    var imageDataElem = rootElem.getElementsByTagName(model.dataType)[0];\n    var origin = imageDataElem.getAttribute('Origin').split(' ').map(function (t) {\n      return Number(t);\n    });\n    var spacing = imageDataElem.getAttribute('Spacing').split(' ').map(function (t) {\n      return Number(t);\n    });\n    var direction = (_imageDataElem$getAtt = imageDataElem.getAttribute('Direction')) === null || _imageDataElem$getAtt === void 0 ? void 0 : _imageDataElem$getAtt.split(' ').map(function (t) {\n      return Number(t);\n    });\n    var pieces = imageDataElem.getElementsByTagName('Piece');\n    var nbPieces = pieces.length;\n    for (var outputIndex = 0; outputIndex < nbPieces; outputIndex++) {\n      // Create image data\n      var piece = pieces[outputIndex];\n      var extent = piece.getAttribute('Extent').split(' ').map(function (t) {\n        return Number(t);\n      });\n      var imageData = vtkImageData.newInstance({\n        origin: origin,\n        spacing: spacing,\n        direction: direction,\n        extent: extent\n      }); // Fill data\n\n      vtkXMLReader.processFieldData(imageData.getNumberOfPoints(), piece.getElementsByTagName('PointData')[0], imageData.getPointData(), compressor, byteOrder, headerType, model.binaryBuffer);\n      vtkXMLReader.processFieldData(imageData.getNumberOfCells(), piece.getElementsByTagName('CellData')[0], imageData.getCellData(), compressor, byteOrder, headerType, model.binaryBuffer); // Add new output\n\n      model.output[outputIndex] = imageData;\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  dataType: 'ImageData'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkXMLReader.extend(publicAPI, model, initialValues);\n  vtkXMLImageDataReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkXMLImageDataReader'); // ----------------------------------------------------------------------------\n\nvar vtkXMLImageDataReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkXMLImageDataReader$1 as default, extend, newInstance };","map":{"version":3,"names":["vtkXMLReader","macro","vtkImageData","vtkXMLImageDataReader","publicAPI","model","classHierarchy","push","parseXML","rootElem","type","compressor","byteOrder","headerType","_imageDataElem$getAtt","imageDataElem","getElementsByTagName","dataType","origin","getAttribute","split","map","t","Number","spacing","direction","pieces","nbPieces","length","outputIndex","piece","extent","imageData","newInstance","processFieldData","getNumberOfPoints","getPointData","binaryBuffer","getNumberOfCells","getCellData","output","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","vtkXMLImageDataReader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/XML/XMLImageDataReader.js"],"sourcesContent":["import vtkXMLReader from './XMLReader.js';\nimport macro from '../../macros.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\n\n// vtkXMLImageDataReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkXMLImageDataReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkXMLImageDataReader');\n\n  publicAPI.parseXML = function (rootElem, type, compressor, byteOrder, headerType) {\n    var _imageDataElem$getAtt;\n\n    var imageDataElem = rootElem.getElementsByTagName(model.dataType)[0];\n    var origin = imageDataElem.getAttribute('Origin').split(' ').map(function (t) {\n      return Number(t);\n    });\n    var spacing = imageDataElem.getAttribute('Spacing').split(' ').map(function (t) {\n      return Number(t);\n    });\n    var direction = (_imageDataElem$getAtt = imageDataElem.getAttribute('Direction')) === null || _imageDataElem$getAtt === void 0 ? void 0 : _imageDataElem$getAtt.split(' ').map(function (t) {\n      return Number(t);\n    });\n    var pieces = imageDataElem.getElementsByTagName('Piece');\n    var nbPieces = pieces.length;\n\n    for (var outputIndex = 0; outputIndex < nbPieces; outputIndex++) {\n      // Create image data\n      var piece = pieces[outputIndex];\n      var extent = piece.getAttribute('Extent').split(' ').map(function (t) {\n        return Number(t);\n      });\n      var imageData = vtkImageData.newInstance({\n        origin: origin,\n        spacing: spacing,\n        direction: direction,\n        extent: extent\n      }); // Fill data\n\n      vtkXMLReader.processFieldData(imageData.getNumberOfPoints(), piece.getElementsByTagName('PointData')[0], imageData.getPointData(), compressor, byteOrder, headerType, model.binaryBuffer);\n      vtkXMLReader.processFieldData(imageData.getNumberOfCells(), piece.getElementsByTagName('CellData')[0], imageData.getCellData(), compressor, byteOrder, headerType, model.binaryBuffer); // Add new output\n\n      model.output[outputIndex] = imageData;\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  dataType: 'ImageData'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkXMLReader.extend(publicAPI, model, initialValues);\n  vtkXMLImageDataReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkXMLImageDataReader'); // ----------------------------------------------------------------------------\n\nvar vtkXMLImageDataReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkXMLImageDataReader$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
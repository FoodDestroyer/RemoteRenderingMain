{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport { l as normalize, e as distance2BetweenPoints } from '../../Common/Core/Math/index.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkInteractorStyleManipulator from './InteractorStyleManipulator.js';\nimport vtkMouseCameraTrackballRotateManipulator from '../Manipulators/MouseCameraTrackballRotateManipulator.js';\nimport vtkMouseCameraTrackballPanManipulator from '../Manipulators/MouseCameraTrackballPanManipulator.js';\nimport vtkMouseCameraTrackballZoomManipulator from '../Manipulators/MouseCameraTrackballZoomManipulator.js';\nimport vtkMouseRangeManipulator from '../Manipulators/MouseRangeManipulator.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction boundsToCorners(bounds) {\n  return [[bounds[0], bounds[2], bounds[4]], [bounds[0], bounds[2], bounds[5]], [bounds[0], bounds[3], bounds[4]], [bounds[0], bounds[3], bounds[5]], [bounds[1], bounds[2], bounds[4]], [bounds[1], bounds[2], bounds[5]], [bounds[1], bounds[3], bounds[4]], [bounds[1], bounds[3], bounds[5]]];\n} // ----------------------------------------------------------------------------\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n  if (value > max) {\n    return max;\n  }\n  return value;\n} // ----------------------------------------------------------------------------\n// vtkInteractorStyleMPRSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleMPRSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleMPRSlice');\n  model.trackballManipulator = vtkMouseCameraTrackballRotateManipulator.newInstance({\n    button: 1\n  });\n  model.panManipulator = vtkMouseCameraTrackballPanManipulator.newInstance({\n    button: 1,\n    shift: true\n  });\n  model.zoomManipulator = vtkMouseCameraTrackballZoomManipulator.newInstance({\n    button: 3\n  });\n  model.scrollManipulator = vtkMouseRangeManipulator.newInstance({\n    scrollEnabled: true,\n    dragEnabled: false\n  }); // cache for sliceRange\n\n  var cache = {\n    sliceNormal: [0, 0, 0],\n    sliceRange: [0, 0]\n  };\n  var cameraSub = null;\n  function updateScrollManipulator() {\n    var range = publicAPI.getSliceRange();\n    model.scrollManipulator.removeScrollListener();\n    model.scrollManipulator.setScrollListener(range[0], range[1], 1, publicAPI.getSlice, publicAPI.setSlice);\n  }\n  function setManipulators() {\n    publicAPI.removeAllMouseManipulators();\n    publicAPI.addMouseManipulator(model.trackballManipulator);\n    publicAPI.addMouseManipulator(model.panManipulator);\n    publicAPI.addMouseManipulator(model.zoomManipulator);\n    publicAPI.addMouseManipulator(model.scrollManipulator);\n    updateScrollManipulator();\n  }\n  var superSetInteractor = publicAPI.setInteractor;\n  publicAPI.setInteractor = function (interactor) {\n    superSetInteractor(interactor);\n    if (cameraSub) {\n      cameraSub.unsubscribe();\n      cameraSub = null;\n    }\n    if (interactor) {\n      var renderer = interactor.getCurrentRenderer();\n      var camera = renderer.getActiveCamera();\n      cameraSub = camera.onModified(function () {\n        updateScrollManipulator();\n        publicAPI.modified();\n      });\n    }\n  };\n  publicAPI.handleMouseMove = macro.chain(publicAPI.handleMouseMove, function () {\n    var renderer = model._interactor.getCurrentRenderer();\n    var camera = renderer.getActiveCamera();\n    var dist = camera.getDistance();\n    camera.setClippingRange(dist, dist + 0.1);\n  });\n  var superSetVolumeMapper = publicAPI.setVolumeMapper;\n  publicAPI.setVolumeMapper = function (mapper) {\n    if (superSetVolumeMapper(mapper)) {\n      var renderer = model._interactor.getCurrentRenderer();\n      var camera = renderer.getActiveCamera();\n      if (mapper) {\n        // prevent zoom manipulator from messing with our focal point\n        camera.setFreezeFocalPoint(true);\n        publicAPI.setSliceNormal.apply(publicAPI, _toConsumableArray(publicAPI.getSliceNormal()));\n      } else {\n        camera.setFreezeFocalPoint(false);\n      }\n    }\n  };\n  publicAPI.getSlice = function () {\n    var renderer = model._interactor.getCurrentRenderer();\n    var camera = renderer.getActiveCamera();\n    var sliceNormal = publicAPI.getSliceNormal(); // Get rotation matrix from normal to +X (since bounds is aligned to XYZ)\n\n    var transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections(sliceNormal, [1, 0, 0]);\n    var fp = camera.getFocalPoint();\n    transform.apply(fp);\n    return fp[0];\n  };\n  publicAPI.setSlice = function (slice) {\n    var renderer = model._interactor.getCurrentRenderer();\n    var camera = renderer.getActiveCamera();\n    if (model.volumeMapper) {\n      var range = publicAPI.getSliceRange();\n      var bounds = model.volumeMapper.getBounds();\n      var clampedSlice = clamp.apply(void 0, [slice].concat(_toConsumableArray(range)));\n      var center = [(bounds[0] + bounds[1]) / 2.0, (bounds[2] + bounds[3]) / 2.0, (bounds[4] + bounds[5]) / 2.0];\n      var distance = camera.getDistance();\n      var dop = camera.getDirectionOfProjection();\n      normalize(dop);\n      var midPoint = (range[1] + range[0]) / 2.0;\n      var zeroPoint = [center[0] - dop[0] * midPoint, center[1] - dop[1] * midPoint, center[2] - dop[2] * midPoint];\n      var slicePoint = [zeroPoint[0] + dop[0] * clampedSlice, zeroPoint[1] + dop[1] * clampedSlice, zeroPoint[2] + dop[2] * clampedSlice];\n      var newPos = [slicePoint[0] - dop[0] * distance, slicePoint[1] - dop[1] * distance, slicePoint[2] - dop[2] * distance];\n      camera.setPosition.apply(camera, newPos);\n      camera.setFocalPoint.apply(camera, slicePoint);\n    }\n  };\n  publicAPI.getSliceRange = function () {\n    if (model.volumeMapper) {\n      var sliceNormal = publicAPI.getSliceNormal();\n      if (sliceNormal[0] === cache.sliceNormal[0] && sliceNormal[1] === cache.sliceNormal[1] && sliceNormal[2] === cache.sliceNormal[2]) {\n        return cache.sliceRange;\n      }\n      var bounds = model.volumeMapper.getBounds();\n      var points = boundsToCorners(bounds); // Get rotation matrix from normal to +X (since bounds is aligned to XYZ)\n\n      var transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections(sliceNormal, [1, 0, 0]);\n      points.forEach(function (pt) {\n        return transform.apply(pt);\n      }); // range is now maximum X distance\n\n      var minX = Infinity;\n      var maxX = -Infinity;\n      for (var i = 0; i < 8; i++) {\n        var x = points[i][0];\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (x < minX) {\n          minX = x;\n        }\n      }\n      cache.sliceNormal = sliceNormal;\n      cache.sliceRange = [minX, maxX];\n      return cache.sliceRange;\n    }\n    return [0, 0];\n  }; // Slice normal is just camera DOP\n\n  publicAPI.getSliceNormal = function () {\n    if (model.volumeMapper) {\n      var renderer = model._interactor.getCurrentRenderer();\n      var camera = renderer.getActiveCamera();\n      return camera.getDirectionOfProjection();\n    }\n    return [0, 0, 0];\n  }; // in world space\n\n  publicAPI.setSliceNormal = function () {\n    var renderer = model._interactor.getCurrentRenderer();\n    var camera = renderer.getActiveCamera();\n    for (var _len = arguments.length, normal = new Array(_len), _key = 0; _key < _len; _key++) {\n      normal[_key] = arguments[_key];\n    }\n    normalize(normal);\n    if (model.volumeMapper) {\n      var bounds = model.volumeMapper.getBounds(); // diagonal will be used as \"width\" of camera scene\n\n      var diagonal = Math.sqrt(distance2BetweenPoints([bounds[0], bounds[2], bounds[4]], [bounds[1], bounds[3], bounds[5]])); // center will be used as initial focal point\n\n      var center = [(bounds[0] + bounds[1]) / 2.0, (bounds[2] + bounds[3]) / 2.0, (bounds[4] + bounds[5]) / 2.0];\n      var angle = 90; // distance from camera to focal point\n\n      var dist = diagonal / (2 * Math.tan(angle / 360 * Math.PI));\n      var cameraPos = [center[0] - normal[0] * dist, center[1] - normal[1] * dist, center[2] - normal[2] * dist]; // set viewUp based on DOP rotation\n\n      var oldDop = camera.getDirectionOfProjection();\n      var transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections(oldDop, normal);\n      var viewUp = [0, 1, 0];\n      transform.apply(viewUp);\n      camera.setPosition.apply(camera, cameraPos);\n      camera.setDistance(dist); // should be set after pos and distance\n\n      camera.setDirectionOfProjection.apply(camera, normal);\n      camera.setViewUp.apply(camera, viewUp);\n      camera.setViewAngle(angle);\n      camera.setClippingRange(dist, dist + 0.1);\n      publicAPI.setCenterOfRotation(center);\n    }\n  };\n  setManipulators();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkInteractorStyleManipulator.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['volumeMapper']); // Object specific methods\n\n  vtkInteractorStyleMPRSlice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkInteractorStyleMPRSlice'); // ----------------------------------------------------------------------------\n\nvar vtkInteractorStyleMPRSlice$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkInteractorStyleMPRSlice$1 as default, extend, newInstance };","map":{"version":3,"names":["_toConsumableArray","macro","l","normalize","e","distance2BetweenPoints","vtkMatrixBuilder","vtkInteractorStyleManipulator","vtkMouseCameraTrackballRotateManipulator","vtkMouseCameraTrackballPanManipulator","vtkMouseCameraTrackballZoomManipulator","vtkMouseRangeManipulator","boundsToCorners","bounds","clamp","value","min","max","vtkInteractorStyleMPRSlice","publicAPI","model","classHierarchy","push","trackballManipulator","newInstance","button","panManipulator","shift","zoomManipulator","scrollManipulator","scrollEnabled","dragEnabled","cache","sliceNormal","sliceRange","cameraSub","updateScrollManipulator","range","getSliceRange","removeScrollListener","setScrollListener","getSlice","setSlice","setManipulators","removeAllMouseManipulators","addMouseManipulator","superSetInteractor","setInteractor","interactor","unsubscribe","renderer","getCurrentRenderer","camera","getActiveCamera","onModified","modified","handleMouseMove","chain","_interactor","dist","getDistance","setClippingRange","superSetVolumeMapper","setVolumeMapper","mapper","setFreezeFocalPoint","setSliceNormal","apply","getSliceNormal","transform","buildFromDegree","identity","rotateFromDirections","fp","getFocalPoint","slice","volumeMapper","getBounds","clampedSlice","concat","center","distance","dop","getDirectionOfProjection","midPoint","zeroPoint","slicePoint","newPos","setPosition","setFocalPoint","points","forEach","pt","minX","Infinity","maxX","i","x","_len","arguments","length","normal","Array","_key","diagonal","Math","sqrt","angle","tan","PI","cameraPos","oldDop","viewUp","setDistance","setDirectionOfProjection","setViewUp","setViewAngle","setCenterOfRotation","DEFAULT_VALUES","extend","initialValues","undefined","Object","assign","setGet","vtkInteractorStyleMPRSlice$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleMPRSlice.js"],"sourcesContent":["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport { l as normalize, e as distance2BetweenPoints } from '../../Common/Core/Math/index.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkInteractorStyleManipulator from './InteractorStyleManipulator.js';\nimport vtkMouseCameraTrackballRotateManipulator from '../Manipulators/MouseCameraTrackballRotateManipulator.js';\nimport vtkMouseCameraTrackballPanManipulator from '../Manipulators/MouseCameraTrackballPanManipulator.js';\nimport vtkMouseCameraTrackballZoomManipulator from '../Manipulators/MouseCameraTrackballZoomManipulator.js';\nimport vtkMouseRangeManipulator from '../Manipulators/MouseRangeManipulator.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction boundsToCorners(bounds) {\n  return [[bounds[0], bounds[2], bounds[4]], [bounds[0], bounds[2], bounds[5]], [bounds[0], bounds[3], bounds[4]], [bounds[0], bounds[3], bounds[5]], [bounds[1], bounds[2], bounds[4]], [bounds[1], bounds[2], bounds[5]], [bounds[1], bounds[3], bounds[4]], [bounds[1], bounds[3], bounds[5]]];\n} // ----------------------------------------------------------------------------\n\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n} // ----------------------------------------------------------------------------\n// vtkInteractorStyleMPRSlice methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkInteractorStyleMPRSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleMPRSlice');\n  model.trackballManipulator = vtkMouseCameraTrackballRotateManipulator.newInstance({\n    button: 1\n  });\n  model.panManipulator = vtkMouseCameraTrackballPanManipulator.newInstance({\n    button: 1,\n    shift: true\n  });\n  model.zoomManipulator = vtkMouseCameraTrackballZoomManipulator.newInstance({\n    button: 3\n  });\n  model.scrollManipulator = vtkMouseRangeManipulator.newInstance({\n    scrollEnabled: true,\n    dragEnabled: false\n  }); // cache for sliceRange\n\n  var cache = {\n    sliceNormal: [0, 0, 0],\n    sliceRange: [0, 0]\n  };\n  var cameraSub = null;\n\n  function updateScrollManipulator() {\n    var range = publicAPI.getSliceRange();\n    model.scrollManipulator.removeScrollListener();\n    model.scrollManipulator.setScrollListener(range[0], range[1], 1, publicAPI.getSlice, publicAPI.setSlice);\n  }\n\n  function setManipulators() {\n    publicAPI.removeAllMouseManipulators();\n    publicAPI.addMouseManipulator(model.trackballManipulator);\n    publicAPI.addMouseManipulator(model.panManipulator);\n    publicAPI.addMouseManipulator(model.zoomManipulator);\n    publicAPI.addMouseManipulator(model.scrollManipulator);\n    updateScrollManipulator();\n  }\n\n  var superSetInteractor = publicAPI.setInteractor;\n\n  publicAPI.setInteractor = function (interactor) {\n    superSetInteractor(interactor);\n\n    if (cameraSub) {\n      cameraSub.unsubscribe();\n      cameraSub = null;\n    }\n\n    if (interactor) {\n      var renderer = interactor.getCurrentRenderer();\n      var camera = renderer.getActiveCamera();\n      cameraSub = camera.onModified(function () {\n        updateScrollManipulator();\n        publicAPI.modified();\n      });\n    }\n  };\n\n  publicAPI.handleMouseMove = macro.chain(publicAPI.handleMouseMove, function () {\n    var renderer = model._interactor.getCurrentRenderer();\n\n    var camera = renderer.getActiveCamera();\n    var dist = camera.getDistance();\n    camera.setClippingRange(dist, dist + 0.1);\n  });\n  var superSetVolumeMapper = publicAPI.setVolumeMapper;\n\n  publicAPI.setVolumeMapper = function (mapper) {\n    if (superSetVolumeMapper(mapper)) {\n      var renderer = model._interactor.getCurrentRenderer();\n\n      var camera = renderer.getActiveCamera();\n\n      if (mapper) {\n        // prevent zoom manipulator from messing with our focal point\n        camera.setFreezeFocalPoint(true);\n        publicAPI.setSliceNormal.apply(publicAPI, _toConsumableArray(publicAPI.getSliceNormal()));\n      } else {\n        camera.setFreezeFocalPoint(false);\n      }\n    }\n  };\n\n  publicAPI.getSlice = function () {\n    var renderer = model._interactor.getCurrentRenderer();\n\n    var camera = renderer.getActiveCamera();\n    var sliceNormal = publicAPI.getSliceNormal(); // Get rotation matrix from normal to +X (since bounds is aligned to XYZ)\n\n    var transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections(sliceNormal, [1, 0, 0]);\n    var fp = camera.getFocalPoint();\n    transform.apply(fp);\n    return fp[0];\n  };\n\n  publicAPI.setSlice = function (slice) {\n    var renderer = model._interactor.getCurrentRenderer();\n\n    var camera = renderer.getActiveCamera();\n\n    if (model.volumeMapper) {\n      var range = publicAPI.getSliceRange();\n      var bounds = model.volumeMapper.getBounds();\n      var clampedSlice = clamp.apply(void 0, [slice].concat(_toConsumableArray(range)));\n      var center = [(bounds[0] + bounds[1]) / 2.0, (bounds[2] + bounds[3]) / 2.0, (bounds[4] + bounds[5]) / 2.0];\n      var distance = camera.getDistance();\n      var dop = camera.getDirectionOfProjection();\n      normalize(dop);\n      var midPoint = (range[1] + range[0]) / 2.0;\n      var zeroPoint = [center[0] - dop[0] * midPoint, center[1] - dop[1] * midPoint, center[2] - dop[2] * midPoint];\n      var slicePoint = [zeroPoint[0] + dop[0] * clampedSlice, zeroPoint[1] + dop[1] * clampedSlice, zeroPoint[2] + dop[2] * clampedSlice];\n      var newPos = [slicePoint[0] - dop[0] * distance, slicePoint[1] - dop[1] * distance, slicePoint[2] - dop[2] * distance];\n      camera.setPosition.apply(camera, newPos);\n      camera.setFocalPoint.apply(camera, slicePoint);\n    }\n  };\n\n  publicAPI.getSliceRange = function () {\n    if (model.volumeMapper) {\n      var sliceNormal = publicAPI.getSliceNormal();\n\n      if (sliceNormal[0] === cache.sliceNormal[0] && sliceNormal[1] === cache.sliceNormal[1] && sliceNormal[2] === cache.sliceNormal[2]) {\n        return cache.sliceRange;\n      }\n\n      var bounds = model.volumeMapper.getBounds();\n      var points = boundsToCorners(bounds); // Get rotation matrix from normal to +X (since bounds is aligned to XYZ)\n\n      var transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections(sliceNormal, [1, 0, 0]);\n      points.forEach(function (pt) {\n        return transform.apply(pt);\n      }); // range is now maximum X distance\n\n      var minX = Infinity;\n      var maxX = -Infinity;\n\n      for (var i = 0; i < 8; i++) {\n        var x = points[i][0];\n\n        if (x > maxX) {\n          maxX = x;\n        }\n\n        if (x < minX) {\n          minX = x;\n        }\n      }\n\n      cache.sliceNormal = sliceNormal;\n      cache.sliceRange = [minX, maxX];\n      return cache.sliceRange;\n    }\n\n    return [0, 0];\n  }; // Slice normal is just camera DOP\n\n\n  publicAPI.getSliceNormal = function () {\n    if (model.volumeMapper) {\n      var renderer = model._interactor.getCurrentRenderer();\n\n      var camera = renderer.getActiveCamera();\n      return camera.getDirectionOfProjection();\n    }\n\n    return [0, 0, 0];\n  }; // in world space\n\n\n  publicAPI.setSliceNormal = function () {\n    var renderer = model._interactor.getCurrentRenderer();\n\n    var camera = renderer.getActiveCamera();\n\n    for (var _len = arguments.length, normal = new Array(_len), _key = 0; _key < _len; _key++) {\n      normal[_key] = arguments[_key];\n    }\n\n    normalize(normal);\n\n    if (model.volumeMapper) {\n      var bounds = model.volumeMapper.getBounds(); // diagonal will be used as \"width\" of camera scene\n\n      var diagonal = Math.sqrt(distance2BetweenPoints([bounds[0], bounds[2], bounds[4]], [bounds[1], bounds[3], bounds[5]])); // center will be used as initial focal point\n\n      var center = [(bounds[0] + bounds[1]) / 2.0, (bounds[2] + bounds[3]) / 2.0, (bounds[4] + bounds[5]) / 2.0];\n      var angle = 90; // distance from camera to focal point\n\n      var dist = diagonal / (2 * Math.tan(angle / 360 * Math.PI));\n      var cameraPos = [center[0] - normal[0] * dist, center[1] - normal[1] * dist, center[2] - normal[2] * dist]; // set viewUp based on DOP rotation\n\n      var oldDop = camera.getDirectionOfProjection();\n      var transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections(oldDop, normal);\n      var viewUp = [0, 1, 0];\n      transform.apply(viewUp);\n      camera.setPosition.apply(camera, cameraPos);\n      camera.setDistance(dist); // should be set after pos and distance\n\n      camera.setDirectionOfProjection.apply(camera, normal);\n      camera.setViewUp.apply(camera, viewUp);\n      camera.setViewAngle(angle);\n      camera.setClippingRange(dist, dist + 0.1);\n      publicAPI.setCenterOfRotation(center);\n    }\n  };\n\n  setManipulators();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkInteractorStyleManipulator.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['volumeMapper']); // Object specific methods\n\n  vtkInteractorStyleMPRSlice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkInteractorStyleMPRSlice'); // ----------------------------------------------------------------------------\n\nvar vtkInteractorStyleMPRSlice$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkInteractorStyleMPRSlice$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * macros.js is the old macro.js.\n * The name change is so we do not get eaten by babel-plugin-macros.\n */\nimport DeepEqual from 'fast-deep-equal';\nimport vtk, { vtkGlobal } from './vtk';\nimport ClassHierarchy from './Common/Core/ClassHierarchy';\nlet globalMTime = 0;\nexport const VOID = Symbol('void');\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\nfunction noOp() {}\nconst consoleMethods = ['log', 'debug', 'info', 'warn', 'error', 'time', 'timeEnd', 'group', 'groupEnd'];\nconsoleMethods.forEach(methodName => {\n  fakeConsole[methodName] = noOp;\n});\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\nconst loggerFunctions = {\n  debug: noOp,\n  // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp\n};\nexport function setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\nexport function vtkLogMacro(...args) {\n  loggerFunctions.log(...args);\n}\nexport function vtkInfoMacro(...args) {\n  loggerFunctions.info(...args);\n}\nexport function vtkDebugMacro(...args) {\n  loggerFunctions.debug(...args);\n}\nexport function vtkErrorMacro(...args) {\n  loggerFunctions.error(...args);\n}\nexport function vtkWarningMacro(...args) {\n  loggerFunctions.warn(...args);\n}\nconst ERROR_ONCE_MAP = {};\nexport function vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nexport const TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray;\ntry {\n  TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n  TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n} catch {\n  // ignore\n}\nexport function newTypedArray(type, ...args) {\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\n}\nexport function newTypedArrayFrom(type, ...args) {\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\n}\n\n// ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nexport function _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\nexport function uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nexport function formatBytesToProperUnit(size, precision = 2, chunkSize = 1000) {\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nexport function formatNumbersWithThousandSeparator(n, separator = ' ') {\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach(key => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find(key => e[key] === value);\n}\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nexport function setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// measurePromiseExecution\n//\n// Measures the time it takes for a promise to finish from\n//   the time this function is invoked.\n// The callback receives the time it took for the promise to resolve or reject.\n// ----------------------------------------------------------------------------\n\nexport function measurePromiseExecution(promise, callback) {\n  const start = performance.now();\n  promise.finally(() => {\n    const delta = performance.now() - start;\n    callback(delta);\n  });\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nexport function obj(publicAPI = {}, model = {}) {\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    const hierarchy = new ClassHierarchy();\n    for (let i = 0; i < model.classHierarchy.length; i++) {\n      hierarchy.push(model.classHierarchy[i]);\n    }\n    model.classHierarchy = hierarchy;\n  }\n  function off(index) {\n    callbacks[index] = null;\n  }\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  publicAPI.isDeleted = () => !!model.deleted;\n  publicAPI.modified = otherMTime => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n    model.mtime = ++globalMTime;\n    callbacks.forEach(callback => callback && callback(publicAPI));\n  };\n  publicAPI.onModified = callback => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n  publicAPI.getMTime = () => model.mtime;\n  publicAPI.isA = className => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n  publicAPI.getClassName = (depth = 0) => model.classHierarchy[model.classHierarchy.length - 1 - depth];\n  publicAPI.set = (map = {}, noWarning = false, noFunction = false) => {\n    let ret = false;\n    Object.keys(map).forEach(name => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(`Warning: Set value to model directly ${name}, ${map[name]}`);\n        }\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n  publicAPI.get = (...list) => {\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach(name => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n  publicAPI.getReferenceByName = val => model[val];\n  publicAPI.delete = () => {\n    Object.keys(model).forEach(field => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = {\n      ...model,\n      vtkClass: publicAPI.getClassName()\n    };\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach(keyName => {\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined || keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive).sort().forEach(name => {\n      sortedObj[name] = jsonArchive[name];\n    });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = (other, debug = false) => {\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(`Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`);\n    }\n    const otherModel = other.get();\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n    otherKeyList.forEach(key => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n    publicAPI.modified();\n  };\n\n  // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nconst objectGetterMap = {\n  object(publicAPI, model, field) {\n    return function getter() {\n      return {\n        ...model[field.name]\n      };\n    };\n  }\n};\nexport function get(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    if (typeof field === 'object') {\n      const getter = objectGetterMap[field.type];\n      if (getter) {\n        publicAPI[`get${_capitalize(field.name)}`] = getter(publicAPI, model, field);\n      } else {\n        publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\n      }\n    } else {\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return value => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (Object.keys(field.enum).map(key => field.enum[key]).indexOf(value) !== -1) {\n            const previousValue = model[field.name];\n            model[field.name] = value;\n            model[onChanged]?.(publicAPI, model, value, previousValue);\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(`Set Enum with invalid argument (String/Number) ${field}, ${value}`);\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n  object(publicAPI, model, field) {\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return value => {\n      if (!DeepEqual(model[field.name], value)) {\n        const previousValue = model[field.name];\n        model[field.name] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  }\n};\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n      if (model[field] !== value) {\n        const previousValue = model[field.name];\n        model[field] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\nexport function set(publicAPI, model, fields) {\n  fields.forEach(field => {\n    if (typeof field === 'object') {\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(publicAPI, model);\n    } else {\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(publicAPI, model);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nexport function setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nexport function getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    publicAPI[`get${_capitalize(field)}`] = () => model[field] ? Array.from(model[field]) : model[field];\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nexport function setArray(publicAPI, model, fieldNames, size, defaultVal = undefined) {\n  fieldNames.forEach(field => {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(`Invalid initial number of values for array (${field})`);\n    }\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    publicAPI[`set${_capitalize(field)}`] = (...args) => {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n      let array = args;\n      let changeDetected;\n      let needCopy = false;\n      // allow null or an array to be passed as a single arg.\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n        needCopy = true;\n      }\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n            while (array.length < size) array.push(defaultVal);\n          } else {\n            throw new RangeError(`Invalid number of values for array setter (${field})`);\n          }\n        }\n        changeDetected = model[field] == null || model[field].length !== array.length;\n        for (let i = 0; !changeDetected && i < array.length; ++i) {\n          changeDetected = model[field][i] !== array[i];\n        }\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n      if (changeDetected) {\n        const previousValue = model[field.name];\n        model[field] = array;\n        model[onChanged]?.(publicAPI, model, array, previousValue);\n        publicAPI.modified();\n      }\n      return changeDetected;\n    };\n    publicAPI[`set${_capitalize(field)}From`] = otherArray => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nexport function setGetArray(publicAPI, model, fieldNames, size, defaultVal = undefined) {\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\nexport function moveToProtected(publicAPI, model, fieldNames) {\n  for (let i = 0; i < fieldNames.length; i++) {\n    const fieldName = fieldNames[i];\n    if (model[fieldName] !== undefined) {\n      model[`_${fieldName}`] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nexport function algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(`algorithm ${publicAPI.getClassName()} only has ${model.numberOfInputs} input ports. To add more input ports, use addInputData()`);\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n  function getInputData(port = 0) {\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n  function setInputConnection(outputPort, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n  function getInputConnection(port = 0) {\n    return model.inputConnection[port];\n  }\n  function getPortToFill() {\n    let portToFill = model.numberOfInputs;\n    while (portToFill && !model.inputData[portToFill - 1] && !model.inputConnection[portToFill - 1]) {\n      portToFill--;\n    }\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n    return portToFill;\n  }\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputConnection(outputPort, getPortToFill());\n  }\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputData(dataset, getPortToFill());\n  }\n  function getOutputData(port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let minOutputMTime = Infinity;\n    let count = numberOfOutputs;\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n    count = model.numberOfInputs;\n    while (count--) {\n      if (model.inputConnection[count]?.filter.shouldUpdate() || publicAPI.getInputData(count)?.getMTime() > minOutputMTime) {\n        return true;\n      }\n    }\n    return false;\n  };\n  function getOutputPort(port = 0) {\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () => numberOfOutputs || model.output.length;\n  publicAPI.getInputArrayToProcess = inputPort => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(arrayDesc.arrayName);\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = (inputPort, arrayName, fieldAssociation, attributeType = 'Scalars') => {\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nexport const EVENT_ABORT = Symbol('Event abort');\nexport function event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\n  publicAPI[`on${_capitalize(eventName)}`] = (callback, priority = 0.0) => {\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(([cbID]) => off(cbID));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nexport function newInstance(extend, className) {\n  const constructor = (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nexport function chain(...fn) {\n  return (...args) => fn.filter(i => !!i).map(i => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nexport function isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\nexport function traverseInstanceTree(instance, extractFunction, accumulator = [], visitedInstances = []) {\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach(key => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach(subObj => {\n          traverseInstanceTree(subObj, extractFunction, accumulator, visitedInstances);\n        });\n      } else {\n        traverseInstanceTree(modelObj, extractFunction, accumulator, visitedInstances);\n      }\n    });\n  }\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport function debounce(func, wait, immediate) {\n  let timeout;\n  const debounced = (...args) => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n  debounced.cancel = () => clearTimeout(timeout);\n  return debounced;\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nexport function throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n  function wrapper(...args) {\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nexport function keystore(publicAPI, model, initialKeystore = {}) {\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = key => model.keystore[key];\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\n  publicAPI.deleteKey = key => delete model.keystore[key];\n  publicAPI.clearKeystore = () => publicAPI.getAllKeys().forEach(key => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\nexport function proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(descriptionList[i].children, descriptionList[i].name);\n      }\n    }\n  }\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n  publicAPI.updateUI = ui => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach(k => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(k => delete groupChildrenNames[k]);\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n  function listProxyProperties(gName = ROOT_GROUP_NAME) {\n    return groupChildrenNames[gName];\n  }\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = {\n        ...propUI\n      };\n    }\n  };\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${_capitalize(publicAPI.getProxyGroup().slice(0, -1))}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n  publicAPI.gcPropertyLinks = type => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = (id, persistent = false) => {\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n    function update(source, force = false) {\n      if (updateInProgress) {\n        return null;\n      }\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n      if (!sourceLink) {\n        return null;\n      }\n      const newValue = sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value\n          });\n        }\n        updateInProgress = false;\n      }\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n      return newValue;\n    }\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === instance && (link.propertyName === propertyName || propertyName === undefined)) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n    function bind(instance, propertyName, updateMe = false) {\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription\n      });\n      if (updateMe) {\n        if (model.propertyLinkMap[id].persistent && model.propertyLinkMap[id].value !== undefined) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName)\n      };\n    }\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties(groupName = ROOT_GROUP_NAME) {\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${_capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n  publicAPI.listPropertyNames = () => getProperties().map(p => p.name);\n  publicAPI.getPropertyByName = name => getProperties().find(p => p.name === name);\n  publicAPI.getPropertyDomainByName = name => (propertyMap[name] || {}).domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties()\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(publicAPI.gcPropertyLinks);\n    parentDelete();\n  };\n\n  // @todo fix infinite recursion due to active source\n  publicAPI.getState = () => null;\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const {\n          link,\n          property,\n          persistent,\n          updateOnBind,\n          type\n        } = model.links[i];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const {\n      modelKey,\n      property,\n      modified = true\n    } = map[propertyName];\n    const methodSrc = _capitalize(property);\n    const methodDst = _capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyState(publicAPI, model, state = {}, defaults = {}) {\n  model.this = publicAPI;\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${_capitalize(key)}`] = value => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nexport function normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nexport default {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  measurePromiseExecution,\n  moveToProtected,\n  newInstance,\n  newTypedArray,\n  newTypedArrayFrom,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS,\n  // deprecated todo remove on breaking API revision\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro\n};","map":{"version":3,"names":["DeepEqual","vtk","vtkGlobal","ClassHierarchy","globalMTime","VOID","Symbol","getCurrentGlobalMTime","fakeConsole","noOp","consoleMethods","forEach","methodName","console","hasOwnProperty","loggerFunctions","debug","error","info","log","warn","setLoggerFunction","name","fn","vtkLogMacro","args","vtkInfoMacro","vtkDebugMacro","vtkErrorMacro","vtkWarningMacro","ERROR_ONCE_MAP","vtkOnceErrorMacro","str","TYPED_ARRAYS","Object","create","Float32Array","Float64Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Uint8ClampedArray","BigInt64Array","BigUint64Array","newTypedArray","type","newTypedArrayFrom","from","capitalize","charAt","toUpperCase","slice","_capitalize","uncapitalize","toLowerCase","formatBytesToProperUnit","size","precision","chunkSize","units","value","Number","currentUnit","pop","toFixed","formatNumbersWithThousandSeparator","n","separator","sections","push","Math","floor","reverse","join","safeArrays","model","keys","key","Array","isArray","concat","shallowEquals","a","b","length","i","enumToString","e","find","getStateArrayMapFunc","item","isA","getState","setImmediateVTK","setTimeout","measurePromiseExecution","promise","callback","start","performance","now","finally","delta","obj","publicAPI","callbacks","isInteger","mtime","classHierarchy","hierarchy","off","index","on","unsubscribe","freeze","isDeleted","deleted","modified","otherMTime","getMTime","onModified","className","count","getClassName","depth","set","map","noWarning","noFunction","ret","indexOf","get","list","subset","getReferenceByName","val","delete","field","el","jsonArchive","vtkClass","keyName","undefined","sortedObj","sort","shallowCopy","other","Error","otherModel","keyList","otherKeyList","keyIdx","splice","toJSON","vtkObjToJSON","objectGetterMap","object","getter","fieldNames","objectSetterMap","enum","onChanged","RangeError","previousValue","TypeError","findSetter","getSetter","setter","fields","setGet","getArray","setArray","defaultVal","array","changeDetected","needCopy","otherArray","target","v","setGetArray","moveToProtected","fieldName","algo","numberOfInputs","numberOfOutputs","inputData","inputConnection","output","inputArrayToProcess","setInputData","dataset","port","getInputData","setInputConnection","outputPort","msg","getInputConnection","getPortToFill","portToFill","addInputConnection","addInputData","getOutputData","shouldUpdate","update","localMTime","minOutputMTime","Infinity","mt","filter","getOutputPort","outputPortAccess","ins","requestData","getNumberOfInputPorts","getNumberOfOutputPorts","getInputArrayToProcess","inputPort","arrayDesc","ds","fieldAssociation","arrayName","setInputArrayToProcess","attributeType","EVENT_ABORT","event","eventName","previousDelete","curCallbackID","callbackID","cbID","invoke","currentCallbacks","cb","priority","apply","arguments","continueNext","cb1","cb2","newInstance","extend","constructor","initialValues","register","chain","isVtkObject","instance","traverseInstanceTree","extractFunction","accumulator","visitedInstances","result","modelObj","subObj","debounce","func","wait","immediate","timeout","debounced","context","later","callNow","clearTimeout","cancel","throttle","delay","isThrottled","argsToUse","next","wrapper","keystore","initialKeystore","assign","setKey","getKey","getAllKeys","deleteKey","clearKeystore","nextProxyId","ROOT_GROUP_NAME","proxy","parentDelete","proxyId","ui","JSON","parse","stringify","propertyMap","groupChildrenNames","registerProperties","descriptionList","currentGroupName","childrenNames","children","updateUI","k","listProxyProperties","gName","updateProxyProperty","propertyName","propUI","prop","activate","proxyManager","setActiveMethod","getProxyGroup","propertyLinkSubscribers","registerPropertyLinkForGC","otherLink","gcPropertyLinks","subscribers","unbind","propertyLinkMap","getPropertyLink","id","persistent","links","updateInProgress","source","force","needUpdate","sourceLink","link","newValue","linkToUpdate","indexToDelete","subscription","bind","updateMe","linkHandler","getProperties","groupName","values","propertyNames","method","listPropertyNames","p","getPropertyByName","getPropertyDomainByName","domain","getProxySection","proxyGroup","properties","registerLinks","property","updateOnBind","sLink","proxyPropertyMapping","subscriptions","modelKey","methodSrc","methodDst","proxyPropertyState","state","defaults","this","applyState","modelKeys","mapping","propValues","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","normalizeWheel","wheelEvent","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","setImmediate"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/vtk.js/Sources/macros.js"],"sourcesContent":["/**\n * macros.js is the old macro.js.\n * The name change is so we do not get eaten by babel-plugin-macros.\n */\nimport DeepEqual from 'fast-deep-equal';\nimport vtk, { vtkGlobal } from './vtk';\nimport ClassHierarchy from './Common/Core/ClassHierarchy';\n\nlet globalMTime = 0;\n\nexport const VOID = Symbol('void');\n\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\n\nfunction noOp() {}\n\nconst consoleMethods = [\n  'log',\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'time',\n  'timeEnd',\n  'group',\n  'groupEnd',\n];\nconsoleMethods.forEach((methodName) => {\n  fakeConsole[methodName] = noOp;\n});\n\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\n\nconst loggerFunctions = {\n  debug: noOp, // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp,\n};\n\nexport function setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\n\nexport function vtkLogMacro(...args) {\n  loggerFunctions.log(...args);\n}\n\nexport function vtkInfoMacro(...args) {\n  loggerFunctions.info(...args);\n}\n\nexport function vtkDebugMacro(...args) {\n  loggerFunctions.debug(...args);\n}\n\nexport function vtkErrorMacro(...args) {\n  loggerFunctions.error(...args);\n}\n\nexport function vtkWarningMacro(...args) {\n  loggerFunctions.warn(...args);\n}\n\nconst ERROR_ONCE_MAP = {};\n\nexport function vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nexport const TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray;\n\ntry {\n  TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n  TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n} catch {\n  // ignore\n}\n\nexport function newTypedArray(type, ...args) {\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\n}\n\nexport function newTypedArrayFrom(type, ...args) {\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\n}\n\n// ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\n\nexport function uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nexport function formatBytesToProperUnit(size, precision = 2, chunkSize = 1000) {\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nexport function formatNumbersWithThousandSeparator(n, separator = ' ') {\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach((key) => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return false;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find((key) => e[key] === value);\n}\n\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nexport function setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// measurePromiseExecution\n//\n// Measures the time it takes for a promise to finish from\n//   the time this function is invoked.\n// The callback receives the time it took for the promise to resolve or reject.\n// ----------------------------------------------------------------------------\n\nexport function measurePromiseExecution(promise, callback) {\n  const start = performance.now();\n  promise.finally(() => {\n    const delta = performance.now() - start;\n    callback(delta);\n  });\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nexport function obj(publicAPI = {}, model = {}) {\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    const hierarchy = new ClassHierarchy();\n    for (let i = 0; i < model.classHierarchy.length; i++) {\n      hierarchy.push(model.classHierarchy[i]);\n    }\n    model.classHierarchy = hierarchy;\n  }\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  publicAPI.isDeleted = () => !!model.deleted;\n\n  publicAPI.modified = (otherMTime) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n\n    model.mtime = ++globalMTime;\n    callbacks.forEach((callback) => callback && callback(publicAPI));\n  };\n\n  publicAPI.onModified = (callback) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.getMTime = () => model.mtime;\n\n  publicAPI.isA = (className) => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  publicAPI.getClassName = (depth = 0) =>\n    model.classHierarchy[model.classHierarchy.length - 1 - depth];\n\n  publicAPI.set = (map = {}, noWarning = false, noFunction = false) => {\n    let ret = false;\n    Object.keys(map).forEach((name) => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(\n            `Warning: Set value to model directly ${name}, ${map[name]}`\n          );\n        }\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n\n  publicAPI.get = (...list) => {\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach((name) => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n\n  publicAPI.getReferenceByName = (val) => model[val];\n\n  publicAPI.delete = () => {\n    Object.keys(model).forEach((field) => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = { ...model, vtkClass: publicAPI.getClassName() };\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach((keyName) => {\n      if (\n        jsonArchive[keyName] === null ||\n        jsonArchive[keyName] === undefined ||\n        keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive)\n      .sort()\n      .forEach((name) => {\n        sortedObj[name] = jsonArchive[name];\n      });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = (other, debug = false) => {\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(\n        `Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`\n      );\n    }\n    const otherModel = other.get();\n\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n\n    otherKeyList.forEach((key) => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n\n    publicAPI.modified();\n  };\n\n  // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nconst objectGetterMap = {\n  object(publicAPI, model, field) {\n    return function getter() {\n      return { ...model[field.name] };\n    };\n  },\n};\n\nexport function get(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    if (typeof field === 'object') {\n      const getter = objectGetterMap[field.type];\n      if (getter) {\n        publicAPI[`get${_capitalize(field.name)}`] = getter(\n          publicAPI,\n          model,\n          field\n        );\n      } else {\n        publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\n      }\n    } else {\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return (value) => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (\n            Object.keys(field.enum)\n              .map((key) => field.enum[key])\n              .indexOf(value) !== -1\n          ) {\n            const previousValue = model[field.name];\n            model[field.name] = value;\n            model[onChanged]?.(publicAPI, model, value, previousValue);\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(\n        `Set Enum with invalid argument (String/Number) ${field}, ${value}`\n      );\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n  object(publicAPI, model, field) {\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return (value) => {\n      if (!DeepEqual(model[field.name], value)) {\n        const previousValue = model[field.name];\n        model[field.name] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  },\n};\n\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      if (model[field] !== value) {\n        const previousValue = model[field.name];\n        model[field] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\n\nexport function set(publicAPI, model, fields) {\n  fields.forEach((field) => {\n    if (typeof field === 'object') {\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    } else {\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nexport function setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nexport function getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    publicAPI[`get${_capitalize(field)}`] = () =>\n      model[field] ? Array.from(model[field]) : model[field];\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nexport function setArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  fieldNames.forEach((field) => {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(\n        `Invalid initial number of values for array (${field})`\n      );\n    }\n    const onChanged = `_on${_capitalize(field)}Changed`;\n\n    publicAPI[`set${_capitalize(field)}`] = (...args) => {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      let array = args;\n      let changeDetected;\n      let needCopy = false;\n      // allow null or an array to be passed as a single arg.\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n        needCopy = true;\n      }\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n            while (array.length < size) array.push(defaultVal);\n          } else {\n            throw new RangeError(\n              `Invalid number of values for array setter (${field})`\n            );\n          }\n        }\n        changeDetected =\n          model[field] == null || model[field].length !== array.length;\n        for (let i = 0; !changeDetected && i < array.length; ++i) {\n          changeDetected = model[field][i] !== array[i];\n        }\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n\n      if (changeDetected) {\n        const previousValue = model[field.name];\n        model[field] = array;\n        model[onChanged]?.(publicAPI, model, array, previousValue);\n        publicAPI.modified();\n      }\n      return changeDetected;\n    };\n\n    publicAPI[`set${_capitalize(field)}From`] = (otherArray) => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nexport function setGetArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\n\nexport function moveToProtected(publicAPI, model, fieldNames) {\n  for (let i = 0; i < fieldNames.length; i++) {\n    const fieldName = fieldNames[i];\n    if (model[fieldName] !== undefined) {\n      model[`_${fieldName}`] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nexport function algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(\n        `algorithm ${publicAPI.getClassName()} only has ${\n          model.numberOfInputs\n        } input ports. To add more input ports, use addInputData()`\n      );\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n\n  function getInputData(port = 0) {\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n\n  function setInputConnection(outputPort, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n\n  function getInputConnection(port = 0) {\n    return model.inputConnection[port];\n  }\n\n  function getPortToFill() {\n    let portToFill = model.numberOfInputs;\n    while (\n      portToFill &&\n      !model.inputData[portToFill - 1] &&\n      !model.inputConnection[portToFill - 1]\n    ) {\n      portToFill--;\n    }\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n    return portToFill;\n  }\n\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputConnection(outputPort, getPortToFill());\n  }\n\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputData(dataset, getPortToFill());\n  }\n\n  function getOutputData(port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let minOutputMTime = Infinity;\n\n    let count = numberOfOutputs;\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n\n    count = model.numberOfInputs;\n    while (count--) {\n      if (\n        model.inputConnection[count]?.filter.shouldUpdate() ||\n        publicAPI.getInputData(count)?.getMTime() > minOutputMTime\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function getOutputPort(port = 0) {\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () =>\n    numberOfOutputs || model.output.length;\n\n  publicAPI.getInputArrayToProcess = (inputPort) => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(\n        arrayDesc.arrayName\n      );\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = (\n    inputPort,\n    arrayName,\n    fieldAssociation,\n    attributeType = 'Scalars'\n  ) => {\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType,\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nexport const EVENT_ABORT = Symbol('Event abort');\n\nexport function event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\n\n  publicAPI[`on${_capitalize(eventName)}`] = (callback, priority = 0.0) => {\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(([cbID]) => off(cbID));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nexport function newInstance(extend, className) {\n  const constructor = (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nexport function chain(...fn) {\n  return (...args) => fn.filter((i) => !!i).map((i) => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nexport function isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\n\nexport function traverseInstanceTree(\n  instance,\n  extractFunction,\n  accumulator = [],\n  visitedInstances = []\n) {\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach((key) => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach((subObj) => {\n          traverseInstanceTree(\n            subObj,\n            extractFunction,\n            accumulator,\n            visitedInstances\n          );\n        });\n      } else {\n        traverseInstanceTree(\n          modelObj,\n          extractFunction,\n          accumulator,\n          visitedInstances\n        );\n      }\n    });\n  }\n\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport function debounce(func, wait, immediate) {\n  let timeout;\n  const debounced = (...args) => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n\n  debounced.cancel = () => clearTimeout(timeout);\n\n  return debounced;\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nexport function throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n\n  function wrapper(...args) {\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nexport function keystore(publicAPI, model, initialKeystore = {}) {\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = (key) => model.keystore[key];\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\n  publicAPI.deleteKey = (key) => delete model.keystore[key];\n  publicAPI.clearKeystore = () =>\n    publicAPI.getAllKeys().forEach((key) => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\n\nexport function proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(\n          descriptionList[i].children,\n          descriptionList[i].name\n        );\n      }\n    }\n  }\n\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n\n  publicAPI.updateUI = (ui) => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach((k) => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(\n      (k) => delete groupChildrenNames[k]\n    );\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n\n  function listProxyProperties(gName = ROOT_GROUP_NAME) {\n    return groupChildrenNames[gName];\n  }\n\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = { ...propUI };\n    }\n  };\n\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${_capitalize(\n        publicAPI.getProxyGroup().slice(0, -1)\n      )}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n\n  publicAPI.gcPropertyLinks = (type) => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = (id, persistent = false) => {\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n\n    function update(source, force = false) {\n      if (updateInProgress) {\n        return null;\n      }\n\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n\n      if (!sourceLink) {\n        return null;\n      }\n\n      const newValue =\n        sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value,\n          });\n        }\n        updateInProgress = false;\n      }\n\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n\n      return newValue;\n    }\n\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (\n          link.instance === instance &&\n          (link.propertyName === propertyName || propertyName === undefined)\n        ) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n\n    function bind(instance, propertyName, updateMe = false) {\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription,\n      });\n      if (updateMe) {\n        if (\n          model.propertyLinkMap[id].persistent &&\n          model.propertyLinkMap[id].value !== undefined\n        ) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value,\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName),\n      };\n    }\n\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent,\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties(groupName = ROOT_GROUP_NAME) {\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${_capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value,\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n\n  publicAPI.listPropertyNames = () => getProperties().map((p) => p.name);\n\n  publicAPI.getPropertyByName = (name) =>\n    getProperties().find((p) => p.name === name);\n\n  publicAPI.getPropertyDomainByName = (name) =>\n    (propertyMap[name] || {}).domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties(),\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(\n      publicAPI.gcPropertyLinks\n    );\n    parentDelete();\n  };\n\n  // @todo fix infinite recursion due to active source\n  publicAPI.getState = () => null;\n\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const { link, property, persistent, updateOnBind, type } =\n          model.links[i];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const { modelKey, property, modified = true } = map[propertyName];\n    const methodSrc = _capitalize(property);\n    const methodDst = _capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyState(\n  publicAPI,\n  model,\n  state = {},\n  defaults = {}\n) {\n  model.this = publicAPI;\n\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${_capitalize(key)}`] = (value) => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\nexport function normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY,\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nexport default {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  measurePromiseExecution,\n  moveToProtected,\n  newInstance,\n  newTypedArray,\n  newTypedArrayFrom,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS, // deprecated todo remove on breaking API revision\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
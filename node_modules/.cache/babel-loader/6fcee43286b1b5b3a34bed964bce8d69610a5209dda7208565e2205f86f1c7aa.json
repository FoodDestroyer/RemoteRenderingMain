{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../../macros.js';\nimport { vec3 } from 'gl-matrix';\nfunction widgetBehavior(publicAPI, model) {\n  model.classHierarchy.push('vtkSplineWidgetProp');\n  model._isDragging = false;\n  model.keysDown = {};\n  model.moveHandle = model.widgetState.getMoveHandle(); // --------------------------------------------------------------------------\n  // Private methods\n  // --------------------------------------------------------------------------\n\n  var updateHandlesSize = function updateHandlesSize() {\n    if (publicAPI.getHandleSizeInPixels() != null) {\n      var scale = publicAPI.getHandleSizeInPixels();\n      model.moveHandle.setScale1(scale);\n      model.widgetState.getHandleList().forEach(function (handle) {\n        handle.setScale1(scale);\n      });\n    }\n  }; // --------------------------------------------------------------------------\n\n  var addPoint = function addPoint() {\n    // Commit handle to location\n    if (!model.lastHandle || model.keysDown.Control || !model.freeHand || vec3.squaredDistance(model.moveHandle.getOrigin(), model.lastHandle.getOrigin()) > publicAPI.getFreehandMinDistance() * publicAPI.getFreehandMinDistance()) {\n      var _model$lastHandle;\n      model.lastHandle = model.widgetState.addHandle();\n      model.lastHandle.setVisible(false);\n      (_model$lastHandle = model.lastHandle).setOrigin.apply(_model$lastHandle, _toConsumableArray(model.moveHandle.getOrigin()));\n      model.lastHandle.setColor(model.moveHandle.getColor());\n      model.lastHandle.setScale1(model.moveHandle.getScale1());\n      model.lastHandle.setManipulator(model.manipulator);\n      if (!model.firstHandle) {\n        model.firstHandle = model.lastHandle;\n      }\n      model._apiSpecificRenderWindow.setCursor('grabbing');\n    }\n  }; // --------------------------------------------------------------------------\n\n  var getHoveredHandle = function getHoveredHandle() {\n    var handles = model.widgetState.getHandleList();\n    var scale = model.moveHandle.getScale1() * vec3.distance(model._apiSpecificRenderWindow.displayToWorld(0, 0, 0, model._renderer), model._apiSpecificRenderWindow.displayToWorld(1, 0, 0, model._renderer));\n    return handles.reduce(function (_ref, handle) {\n      var closestHandle = _ref.closestHandle,\n        closestDistance = _ref.closestDistance;\n      if (handle !== model.moveHandle && model.moveHandle.getOrigin() && handle.getOrigin()) {\n        var distance = vec3.squaredDistance(model.moveHandle.getOrigin(), handle.getOrigin());\n        if (distance < closestDistance) {\n          return {\n            closestHandle: handle,\n            closestDistance: distance\n          };\n        }\n      }\n      return {\n        closestHandle: closestHandle,\n        closestDistance: closestDistance\n      };\n    }, {\n      closestHandle: null,\n      closestDistance: scale * scale\n    }).closestHandle;\n  }; // --------------------------------------------------------------------------\n  // Display 2D\n  // --------------------------------------------------------------------------\n\n  publicAPI.setDisplayCallback = function (callback) {\n    return model.representations[0].setDisplayCallback(callback);\n  }; // --------------------------------------------------------------------------\n  // Public methods\n  // --------------------------------------------------------------------------\n\n  publicAPI.setResetAfterPointPlacement = model._factory.setResetAfterPointPlacement;\n  publicAPI.getResetAfterPointPlacement = model._factory.getResetAfterPointPlacement;\n  publicAPI.setResetAfterPointPlacement(publicAPI.getResetAfterPointPlacement());\n  publicAPI.setFreehandMinDistance = model._factory.setFreehandMinDistance;\n  publicAPI.getFreehandMinDistance = model._factory.getFreehandMinDistance;\n  publicAPI.setFreehandMinDistance(publicAPI.getFreehandMinDistance());\n  publicAPI.setAllowFreehand = model._factory.setAllowFreehand;\n  publicAPI.getAllowFreehand = model._factory.getAllowFreehand;\n  publicAPI.setAllowFreehand(publicAPI.getAllowFreehand());\n  publicAPI.setDefaultCursor = model._factory.setDefaultCursor;\n  publicAPI.getDefaultCursor = model._factory.getDefaultCursor;\n  publicAPI.setDefaultCursor(publicAPI.getDefaultCursor()); // --------------------------------------------------------------------------\n\n  publicAPI.setHandleSizeInPixels = function (size) {\n    model._factory.setHandleSizeInPixels(size);\n    updateHandlesSize();\n  };\n  publicAPI.getHandleSizeInPixels = model._factory.getHandleSizeInPixels;\n  publicAPI.setHandleSizeInPixels(model._factory.getHandleSizeInPixels()); // set initial value\n  // --------------------------------------------------------------------------\n\n  publicAPI.setResolution = function (resolution) {\n    model._factory.setResolution(resolution);\n    model.representations[1].setResolution(resolution);\n  };\n  publicAPI.setResolution(model._factory.getResolution()); // set initial value\n  // --------------------------------------------------------------------------\n\n  publicAPI.getPoints = function () {\n    return model.representations[1].getOutputData().getPoints().getData();\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.reset = function () {\n    model.widgetState.clearHandleList();\n    model.lastHandle = null;\n    model.firstHandle = null;\n  }; // --------------------------------------------------------------------------\n  // Right click: Delete handle\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleRightButtonPress = function (e) {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n    if (model.activeState !== model.moveHandle) {\n      model._interactor.requestAnimation(publicAPI);\n      model.activeState.deactivate();\n      model.widgetState.removeHandle(model.activeState);\n      model.activeState = null;\n      model._interactor.cancelAnimation(publicAPI);\n    } else {\n      var handle = getHoveredHandle();\n      if (handle) {\n        model.widgetState.removeHandle(handle);\n      } else if (model.lastHandle) {\n        model.widgetState.removeHandle(model.lastHandle);\n        var handles = model.widgetState.getHandleList();\n        model.lastHandle = handles[handles.length - 1];\n      }\n    }\n    publicAPI.invokeInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Left press: Add new point\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleLeftButtonPress = function (e) {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n    if (model.activeState === model.moveHandle) {\n      if (model.widgetState.getHandleList().length === 0) {\n        addPoint();\n      } else {\n        var hoveredHandle = getHoveredHandle();\n        if (hoveredHandle && !model.keysDown.Control) {\n          model.moveHandle.deactivate();\n          model.moveHandle.setVisible(false);\n          model.activeState = hoveredHandle;\n          hoveredHandle.activate();\n          model._isDragging = true;\n          model.lastHandle.setVisible(true);\n        } else {\n          addPoint();\n        }\n      }\n      model.freeHand = publicAPI.getAllowFreehand() && !model._isDragging;\n    } else if (model.dragable) {\n      model._isDragging = true;\n      model._apiSpecificRenderWindow.setCursor('grabbing');\n      model._interactor.requestAnimation(publicAPI);\n    }\n    publicAPI.invokeStartInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Left release\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleLeftButtonRelease = function (e) {\n    if (model._isDragging) {\n      if (!model.hasFocus) {\n        model._apiSpecificRenderWindow.setCursor(model.defaultCursor);\n        model.widgetState.deactivate();\n        model._interactor.cancelAnimation(publicAPI);\n        publicAPI.invokeEndInteractionEvent();\n      } else {\n        var _model$moveHandle;\n        (_model$moveHandle = model.moveHandle).setOrigin.apply(_model$moveHandle, _toConsumableArray(model.activeState.getOrigin()));\n        model.activeState.deactivate();\n        model.moveHandle.activate();\n        model.activeState = model.moveHandle;\n        if (!model.draggedPoint) {\n          if (vec3.squaredDistance(model.moveHandle.getOrigin(), model.lastHandle.getOrigin()) < model.moveHandle.getScale1() * model.moveHandle.getScale1() || vec3.squaredDistance(model.moveHandle.getOrigin(), model.firstHandle.getOrigin()) < model.moveHandle.getScale1() * model.moveHandle.getScale1()) {\n            model.lastHandle.setVisible(true);\n            publicAPI.invokeEndInteractionEvent();\n            if (publicAPI.getResetAfterPointPlacement()) {\n              publicAPI.reset();\n            } else {\n              publicAPI.loseFocus();\n            }\n          }\n        }\n        model._interactor.render();\n      }\n    } else if (model.activeState !== model.moveHandle) {\n      model.widgetState.deactivate();\n    }\n    model.freeHand = false;\n    model.draggedPoint = false;\n    model._isDragging = false;\n    return model.hasFocus ? macro.EVENT_ABORT : macro.VOID;\n  }; // --------------------------------------------------------------------------\n  // Mouse move: Drag selected handle / Handle follow the mouse\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleMouseMove = function (callData) {\n    var _model$activeState$ge, _model$activeState, _model$activeState$ge2;\n    var manipulator = (_model$activeState$ge = (_model$activeState = model.activeState) === null || _model$activeState === void 0 ? void 0 : (_model$activeState$ge2 = _model$activeState.getManipulator) === null || _model$activeState$ge2 === void 0 ? void 0 : _model$activeState$ge2.call(_model$activeState)) !== null && _model$activeState$ge !== void 0 ? _model$activeState$ge : model.manipulator;\n    if (!manipulator || !model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n    var _manipulator$handleEv = manipulator.handleEvent(callData, model._apiSpecificRenderWindow),\n      worldCoords = _manipulator$handleEv.worldCoords;\n    var hoveredHandle = getHoveredHandle();\n    if (hoveredHandle) {\n      model.moveHandle.setVisible(false);\n      if (hoveredHandle !== model.firstHandle) {\n        model._apiSpecificRenderWindow.setCursor('grabbing');\n      }\n    } else if (!model._isDragging && model.hasFocus) {\n      model.moveHandle.setVisible(true);\n      model._apiSpecificRenderWindow.setCursor(model.defaultCursor);\n    }\n    if (model.lastHandle) {\n      model.lastHandle.setVisible(true);\n    }\n    if (worldCoords.length && (model._isDragging || model.activeState === model.moveHandle)) {\n      model.activeState.setOrigin(worldCoords);\n      if (model._isDragging) {\n        model.draggedPoint = true;\n      }\n      if (model.freeHand && model.activeState === model.moveHandle) {\n        addPoint();\n      }\n    }\n    return model.hasFocus ? macro.EVENT_ABORT : macro.VOID;\n  }; // --------------------------------------------------------------------------\n  // Mofifier keys\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleKeyDown = function (_ref2) {\n    var key = _ref2.key;\n    model.keysDown[key] = true;\n    if (!model.hasFocus) {\n      return;\n    }\n    if (key === 'Enter') {\n      if (model.widgetState.getHandleList().length > 0) {\n        publicAPI.invokeEndInteractionEvent();\n        if (publicAPI.getResetAfterPointPlacement()) {\n          publicAPI.reset();\n        } else {\n          publicAPI.loseFocus();\n        }\n      }\n    } else if (key === 'Escape') {\n      publicAPI.reset();\n      publicAPI.loseFocus();\n      publicAPI.invokeEndInteractionEvent();\n    } else if (key === 'Delete' || key === 'Backspace') {\n      if (model.lastHandle) {\n        model.widgetState.removeHandle(model.lastHandle);\n        var handleList = model.widgetState.getHandleList();\n        model.lastHandle = handleList[handleList.length - 1];\n      }\n    }\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.handleKeyUp = function (_ref3) {\n    var key = _ref3.key;\n    model.keysDown[key] = false;\n  }; // --------------------------------------------------------------------------\n  // Focus API - modeHandle follow mouse when widget has focus\n  // --------------------------------------------------------------------------\n\n  publicAPI.grabFocus = function () {\n    if (!model.hasFocus) {\n      model.activeState = model.moveHandle;\n      model.activeState.activate();\n      model.activeState.setVisible(true);\n      model._interactor.requestAnimation(publicAPI);\n      updateHandlesSize();\n    }\n    model.hasFocus = true;\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.loseFocus = function () {\n    if (model.hasFocus) {\n      model._interactor.cancelAnimation(publicAPI);\n    }\n    model.widgetState.deactivate();\n    model.moveHandle.deactivate();\n    model.moveHandle.setVisible(false);\n    model.activeState = null;\n    model._interactor.render();\n    model.hasFocus = false;\n  };\n}\nexport { widgetBehavior as default };","map":{"version":3,"names":["_toConsumableArray","macro","vec3","widgetBehavior","publicAPI","model","classHierarchy","push","_isDragging","keysDown","moveHandle","widgetState","getMoveHandle","updateHandlesSize","getHandleSizeInPixels","scale","setScale1","getHandleList","forEach","handle","addPoint","lastHandle","Control","freeHand","squaredDistance","getOrigin","getFreehandMinDistance","_model$lastHandle","addHandle","setVisible","setOrigin","apply","setColor","getColor","getScale1","setManipulator","manipulator","firstHandle","_apiSpecificRenderWindow","setCursor","getHoveredHandle","handles","distance","displayToWorld","_renderer","reduce","_ref","closestHandle","closestDistance","setDisplayCallback","callback","representations","setResetAfterPointPlacement","_factory","getResetAfterPointPlacement","setFreehandMinDistance","setAllowFreehand","getAllowFreehand","setDefaultCursor","getDefaultCursor","setHandleSizeInPixels","size","setResolution","resolution","getResolution","getPoints","getOutputData","getData","reset","clearHandleList","handleRightButtonPress","e","activeState","getActive","pickable","VOID","_interactor","requestAnimation","deactivate","removeHandle","cancelAnimation","length","invokeInteractionEvent","EVENT_ABORT","handleLeftButtonPress","hoveredHandle","activate","dragable","invokeStartInteractionEvent","handleLeftButtonRelease","hasFocus","defaultCursor","invokeEndInteractionEvent","_model$moveHandle","draggedPoint","loseFocus","render","handleMouseMove","callData","_model$activeState$ge","_model$activeState","_model$activeState$ge2","getManipulator","call","_manipulator$handleEv","handleEvent","worldCoords","handleKeyDown","_ref2","key","handleList","handleKeyUp","_ref3","grabFocus","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Widgets/Widgets3D/SplineWidget/behavior.js"],"sourcesContent":["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../../macros.js';\nimport { vec3 } from 'gl-matrix';\n\nfunction widgetBehavior(publicAPI, model) {\n  model.classHierarchy.push('vtkSplineWidgetProp');\n  model._isDragging = false;\n  model.keysDown = {};\n  model.moveHandle = model.widgetState.getMoveHandle(); // --------------------------------------------------------------------------\n  // Private methods\n  // --------------------------------------------------------------------------\n\n  var updateHandlesSize = function updateHandlesSize() {\n    if (publicAPI.getHandleSizeInPixels() != null) {\n      var scale = publicAPI.getHandleSizeInPixels();\n      model.moveHandle.setScale1(scale);\n      model.widgetState.getHandleList().forEach(function (handle) {\n        handle.setScale1(scale);\n      });\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  var addPoint = function addPoint() {\n    // Commit handle to location\n    if (!model.lastHandle || model.keysDown.Control || !model.freeHand || vec3.squaredDistance(model.moveHandle.getOrigin(), model.lastHandle.getOrigin()) > publicAPI.getFreehandMinDistance() * publicAPI.getFreehandMinDistance()) {\n      var _model$lastHandle;\n\n      model.lastHandle = model.widgetState.addHandle();\n      model.lastHandle.setVisible(false);\n\n      (_model$lastHandle = model.lastHandle).setOrigin.apply(_model$lastHandle, _toConsumableArray(model.moveHandle.getOrigin()));\n\n      model.lastHandle.setColor(model.moveHandle.getColor());\n      model.lastHandle.setScale1(model.moveHandle.getScale1());\n      model.lastHandle.setManipulator(model.manipulator);\n\n      if (!model.firstHandle) {\n        model.firstHandle = model.lastHandle;\n      }\n\n      model._apiSpecificRenderWindow.setCursor('grabbing');\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  var getHoveredHandle = function getHoveredHandle() {\n    var handles = model.widgetState.getHandleList();\n    var scale = model.moveHandle.getScale1() * vec3.distance(model._apiSpecificRenderWindow.displayToWorld(0, 0, 0, model._renderer), model._apiSpecificRenderWindow.displayToWorld(1, 0, 0, model._renderer));\n    return handles.reduce(function (_ref, handle) {\n      var closestHandle = _ref.closestHandle,\n          closestDistance = _ref.closestDistance;\n\n      if (handle !== model.moveHandle && model.moveHandle.getOrigin() && handle.getOrigin()) {\n        var distance = vec3.squaredDistance(model.moveHandle.getOrigin(), handle.getOrigin());\n\n        if (distance < closestDistance) {\n          return {\n            closestHandle: handle,\n            closestDistance: distance\n          };\n        }\n      }\n\n      return {\n        closestHandle: closestHandle,\n        closestDistance: closestDistance\n      };\n    }, {\n      closestHandle: null,\n      closestDistance: scale * scale\n    }).closestHandle;\n  }; // --------------------------------------------------------------------------\n  // Display 2D\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.setDisplayCallback = function (callback) {\n    return model.representations[0].setDisplayCallback(callback);\n  }; // --------------------------------------------------------------------------\n  // Public methods\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.setResetAfterPointPlacement = model._factory.setResetAfterPointPlacement;\n  publicAPI.getResetAfterPointPlacement = model._factory.getResetAfterPointPlacement;\n  publicAPI.setResetAfterPointPlacement(publicAPI.getResetAfterPointPlacement());\n  publicAPI.setFreehandMinDistance = model._factory.setFreehandMinDistance;\n  publicAPI.getFreehandMinDistance = model._factory.getFreehandMinDistance;\n  publicAPI.setFreehandMinDistance(publicAPI.getFreehandMinDistance());\n  publicAPI.setAllowFreehand = model._factory.setAllowFreehand;\n  publicAPI.getAllowFreehand = model._factory.getAllowFreehand;\n  publicAPI.setAllowFreehand(publicAPI.getAllowFreehand());\n  publicAPI.setDefaultCursor = model._factory.setDefaultCursor;\n  publicAPI.getDefaultCursor = model._factory.getDefaultCursor;\n  publicAPI.setDefaultCursor(publicAPI.getDefaultCursor()); // --------------------------------------------------------------------------\n\n  publicAPI.setHandleSizeInPixels = function (size) {\n    model._factory.setHandleSizeInPixels(size);\n\n    updateHandlesSize();\n  };\n\n  publicAPI.getHandleSizeInPixels = model._factory.getHandleSizeInPixels;\n  publicAPI.setHandleSizeInPixels(model._factory.getHandleSizeInPixels()); // set initial value\n  // --------------------------------------------------------------------------\n\n  publicAPI.setResolution = function (resolution) {\n    model._factory.setResolution(resolution);\n\n    model.representations[1].setResolution(resolution);\n  };\n\n  publicAPI.setResolution(model._factory.getResolution()); // set initial value\n  // --------------------------------------------------------------------------\n\n  publicAPI.getPoints = function () {\n    return model.representations[1].getOutputData().getPoints().getData();\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.reset = function () {\n    model.widgetState.clearHandleList();\n    model.lastHandle = null;\n    model.firstHandle = null;\n  }; // --------------------------------------------------------------------------\n  // Right click: Delete handle\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleRightButtonPress = function (e) {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n\n    if (model.activeState !== model.moveHandle) {\n      model._interactor.requestAnimation(publicAPI);\n\n      model.activeState.deactivate();\n      model.widgetState.removeHandle(model.activeState);\n      model.activeState = null;\n\n      model._interactor.cancelAnimation(publicAPI);\n    } else {\n      var handle = getHoveredHandle();\n\n      if (handle) {\n        model.widgetState.removeHandle(handle);\n      } else if (model.lastHandle) {\n        model.widgetState.removeHandle(model.lastHandle);\n        var handles = model.widgetState.getHandleList();\n        model.lastHandle = handles[handles.length - 1];\n      }\n    }\n\n    publicAPI.invokeInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Left press: Add new point\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleLeftButtonPress = function (e) {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n\n    if (model.activeState === model.moveHandle) {\n      if (model.widgetState.getHandleList().length === 0) {\n        addPoint();\n      } else {\n        var hoveredHandle = getHoveredHandle();\n\n        if (hoveredHandle && !model.keysDown.Control) {\n          model.moveHandle.deactivate();\n          model.moveHandle.setVisible(false);\n          model.activeState = hoveredHandle;\n          hoveredHandle.activate();\n          model._isDragging = true;\n          model.lastHandle.setVisible(true);\n        } else {\n          addPoint();\n        }\n      }\n\n      model.freeHand = publicAPI.getAllowFreehand() && !model._isDragging;\n    } else if (model.dragable) {\n      model._isDragging = true;\n\n      model._apiSpecificRenderWindow.setCursor('grabbing');\n\n      model._interactor.requestAnimation(publicAPI);\n    }\n\n    publicAPI.invokeStartInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Left release\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleLeftButtonRelease = function (e) {\n    if (model._isDragging) {\n      if (!model.hasFocus) {\n        model._apiSpecificRenderWindow.setCursor(model.defaultCursor);\n\n        model.widgetState.deactivate();\n\n        model._interactor.cancelAnimation(publicAPI);\n\n        publicAPI.invokeEndInteractionEvent();\n      } else {\n        var _model$moveHandle;\n\n        (_model$moveHandle = model.moveHandle).setOrigin.apply(_model$moveHandle, _toConsumableArray(model.activeState.getOrigin()));\n\n        model.activeState.deactivate();\n        model.moveHandle.activate();\n        model.activeState = model.moveHandle;\n\n        if (!model.draggedPoint) {\n          if (vec3.squaredDistance(model.moveHandle.getOrigin(), model.lastHandle.getOrigin()) < model.moveHandle.getScale1() * model.moveHandle.getScale1() || vec3.squaredDistance(model.moveHandle.getOrigin(), model.firstHandle.getOrigin()) < model.moveHandle.getScale1() * model.moveHandle.getScale1()) {\n            model.lastHandle.setVisible(true);\n            publicAPI.invokeEndInteractionEvent();\n\n            if (publicAPI.getResetAfterPointPlacement()) {\n              publicAPI.reset();\n            } else {\n              publicAPI.loseFocus();\n            }\n          }\n        }\n\n        model._interactor.render();\n      }\n    } else if (model.activeState !== model.moveHandle) {\n      model.widgetState.deactivate();\n    }\n\n    model.freeHand = false;\n    model.draggedPoint = false;\n    model._isDragging = false;\n    return model.hasFocus ? macro.EVENT_ABORT : macro.VOID;\n  }; // --------------------------------------------------------------------------\n  // Mouse move: Drag selected handle / Handle follow the mouse\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseMove = function (callData) {\n    var _model$activeState$ge, _model$activeState, _model$activeState$ge2;\n\n    var manipulator = (_model$activeState$ge = (_model$activeState = model.activeState) === null || _model$activeState === void 0 ? void 0 : (_model$activeState$ge2 = _model$activeState.getManipulator) === null || _model$activeState$ge2 === void 0 ? void 0 : _model$activeState$ge2.call(_model$activeState)) !== null && _model$activeState$ge !== void 0 ? _model$activeState$ge : model.manipulator;\n\n    if (!manipulator || !model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n\n    var _manipulator$handleEv = manipulator.handleEvent(callData, model._apiSpecificRenderWindow),\n        worldCoords = _manipulator$handleEv.worldCoords;\n\n    var hoveredHandle = getHoveredHandle();\n\n    if (hoveredHandle) {\n      model.moveHandle.setVisible(false);\n\n      if (hoveredHandle !== model.firstHandle) {\n        model._apiSpecificRenderWindow.setCursor('grabbing');\n      }\n    } else if (!model._isDragging && model.hasFocus) {\n      model.moveHandle.setVisible(true);\n\n      model._apiSpecificRenderWindow.setCursor(model.defaultCursor);\n    }\n\n    if (model.lastHandle) {\n      model.lastHandle.setVisible(true);\n    }\n\n    if (worldCoords.length && (model._isDragging || model.activeState === model.moveHandle)) {\n      model.activeState.setOrigin(worldCoords);\n\n      if (model._isDragging) {\n        model.draggedPoint = true;\n      }\n\n      if (model.freeHand && model.activeState === model.moveHandle) {\n        addPoint();\n      }\n    }\n\n    return model.hasFocus ? macro.EVENT_ABORT : macro.VOID;\n  }; // --------------------------------------------------------------------------\n  // Mofifier keys\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleKeyDown = function (_ref2) {\n    var key = _ref2.key;\n    model.keysDown[key] = true;\n\n    if (!model.hasFocus) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      if (model.widgetState.getHandleList().length > 0) {\n        publicAPI.invokeEndInteractionEvent();\n\n        if (publicAPI.getResetAfterPointPlacement()) {\n          publicAPI.reset();\n        } else {\n          publicAPI.loseFocus();\n        }\n      }\n    } else if (key === 'Escape') {\n      publicAPI.reset();\n      publicAPI.loseFocus();\n      publicAPI.invokeEndInteractionEvent();\n    } else if (key === 'Delete' || key === 'Backspace') {\n      if (model.lastHandle) {\n        model.widgetState.removeHandle(model.lastHandle);\n        var handleList = model.widgetState.getHandleList();\n        model.lastHandle = handleList[handleList.length - 1];\n      }\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.handleKeyUp = function (_ref3) {\n    var key = _ref3.key;\n    model.keysDown[key] = false;\n  }; // --------------------------------------------------------------------------\n  // Focus API - modeHandle follow mouse when widget has focus\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.grabFocus = function () {\n    if (!model.hasFocus) {\n      model.activeState = model.moveHandle;\n      model.activeState.activate();\n      model.activeState.setVisible(true);\n\n      model._interactor.requestAnimation(publicAPI);\n\n      updateHandlesSize();\n    }\n\n    model.hasFocus = true;\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.loseFocus = function () {\n    if (model.hasFocus) {\n      model._interactor.cancelAnimation(publicAPI);\n    }\n\n    model.widgetState.deactivate();\n    model.moveHandle.deactivate();\n    model.moveHandle.setVisible(false);\n    model.activeState = null;\n\n    model._interactor.render();\n\n    model.hasFocus = false;\n  };\n}\n\nexport { widgetBehavior as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
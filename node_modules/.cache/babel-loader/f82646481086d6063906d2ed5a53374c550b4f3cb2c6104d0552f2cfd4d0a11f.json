{"ast":null,"code":"import { mat4, mat3 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, setGet } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkOpenGLVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVolume'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      renderPass.incrementVolumeCount();\n    }\n  };\n  publicAPI.traverseVolumePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.children[0].traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  }; // Renders myself\n\n  publicAPI.volumePass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    model.context.depthMask(!prepass);\n  };\n  publicAPI.getKeyMatrices = function () {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.MCWCMatrix, model.renderable.getMatrix());\n      mat4.transpose(model.MCWCMatrix, model.MCWCMatrix);\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.normalMatrix);\n      } else {\n        mat3.fromMat4(model.normalMatrix, model.MCWCMatrix);\n        mat3.invert(model.normalMatrix, model.normalMatrix);\n      }\n      model.keyMatrixTime.modified();\n    }\n    return {\n      mcwc: model.MCWCMatrix,\n      normalMatrix: model.normalMatrix\n    };\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {// context: null,\n  // keyMatrixTime: null,\n  // normalMatrix: null,\n  // MCWCMatrix: null,\n  // _openGLRenderWindow: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  }); // always set by getter\n\n  model.normalMatrix = new Float64Array(9);\n  model.MCWCMatrix = new Float64Array(16); // Build VTK API\n\n  setGet(publicAPI, model, ['context']); // Object methods\n\n  vtkOpenGLVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLVolume'); // ----------------------------------------------------------------------------\n\nvar vtkVolume = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkVolume', newInstance);\nexport { vtkVolume as default, extend, newInstance };","map":{"version":3,"names":["mat4","mat3","newInstance","newInstance$1","obj","setGet","vtkViewNode","registerOverride","vtkOpenGLVolume","publicAPI","model","classHierarchy","push","buildPass","prepass","renderable","getVisibility","_openGLRenderWindow","getFirstAncestorOfType","_openGLRenderer","context","getContext","prepareNodes","addMissingNode","getMapper","removeUnusedNodes","queryPass","renderPass","incrementVolumeCount","traverseVolumePass","getNestedVisibility","getSelector","getNestedPickable","apply","children","traverse","volumePass","depthMask","getKeyMatrices","getMTime","keyMatrixTime","computeMatrix","copy","MCWCMatrix","getMatrix","transpose","getIsIdentity","identity","normalMatrix","fromMat4","invert","modified","mcwc","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","mtime","Float64Array","vtkVolume","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/OpenGL/Volume.js"],"sourcesContent":["import { mat4, mat3 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, setGet } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkOpenGLVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVolume'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      renderPass.incrementVolumeCount();\n    }\n  };\n\n  publicAPI.traverseVolumePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children[0].traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  }; // Renders myself\n\n\n  publicAPI.volumePass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    model.context.depthMask(!prepass);\n  };\n\n  publicAPI.getKeyMatrices = function () {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.MCWCMatrix, model.renderable.getMatrix());\n      mat4.transpose(model.MCWCMatrix, model.MCWCMatrix);\n\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.normalMatrix);\n      } else {\n        mat3.fromMat4(model.normalMatrix, model.MCWCMatrix);\n        mat3.invert(model.normalMatrix, model.normalMatrix);\n      }\n\n      model.keyMatrixTime.modified();\n    }\n\n    return {\n      mcwc: model.MCWCMatrix,\n      normalMatrix: model.normalMatrix\n    };\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// context: null,\n  // keyMatrixTime: null,\n  // normalMatrix: null,\n  // MCWCMatrix: null,\n  // _openGLRenderWindow: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  }); // always set by getter\n\n  model.normalMatrix = new Float64Array(9);\n  model.MCWCMatrix = new Float64Array(16); // Build VTK API\n\n  setGet(publicAPI, model, ['context']); // Object methods\n\n  vtkOpenGLVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLVolume'); // ----------------------------------------------------------------------------\n\nvar vtkVolume = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkVolume', newInstance);\n\nexport { vtkVolume as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
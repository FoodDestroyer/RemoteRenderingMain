{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { capitalize } from '../../../macros.js';\nimport vtkActor from '../../Core/Actor.js';\nimport vtkCamera from '../../Core/Camera.js';\nimport vtkColorTransferFunction from '../../Core/ColorTransferFunction.js';\nimport vtkDataArray from '../../../Common/Core/DataArray.js';\nimport vtkPoints from '../../../Common/Core/Points.js';\nimport vtkCellArray from '../../../Common/Core/CellArray.js';\nimport vtkGlyph3DMapper from '../../Core/Glyph3DMapper.js';\nimport vtkLight from '../../Core/Light.js';\nimport vtkLookupTable from '../../../Common/Core/LookupTable.js';\nimport vtkMapper from '../../Core/Mapper.js';\nimport vtkPolyData from '../../../Common/DataModel/PolyData.js';\nimport vtkImageData from '../../../Common/DataModel/ImageData.js';\nimport vtkProperty from '../../Core/Property.js';\nimport vtkRenderer from '../../Core/Renderer.js';\nimport vtkRenderWindow from '../../Core/RenderWindow.js';\nimport vtkTexture from '../../Core/Texture.js';\nimport vtkVolume from '../../Core/Volume.js';\nimport vtkVolumeMapper from '../../Core/VolumeMapper.js';\nimport vtkVolumeProperty from '../../Core/VolumeProperty.js';\nimport vtkImageSlice from '../../Core/ImageSlice.js';\nimport vtkImageMapper from '../../Core/ImageMapper.js';\nimport vtkImageProperty from '../../Core/ImageProperty.js';\nimport vtkPiecewiseFunction from '../../../Common/DataModel/PiecewiseFunction.js';\nimport vtkCubeAxesActor from '../../Core/CubeAxesActor.js';\nimport vtkScalarBarActor from '../../Core/ScalarBarActor.js';\nimport vtkAxesActor from '../../Core/AxesActor.js';\nimport BehaviorManager from './BehaviorManager.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// Some internal, module-level variables and methods\n// ----------------------------------------------------------------------------\n\nvar TYPE_HANDLERS = {};\nvar WRAPPED_ID_RE = /instance:\\${([^}]+)}/;\nvar WRAP_ID = function WRAP_ID(id) {\n  return \"instance:${\".concat(id, \"}\");\n};\nvar ONE_TIME_INSTANCE_TRACKERS = {};\nvar SKIPPED_INSTANCE_IDS = [];\nvar EXCLUDE_INSTANCE_MAP = {};\nvar DATA_ARRAY_MAPPER = {\n  vtkPoints: vtkPoints,\n  vtkCellArray: vtkCellArray,\n  vtkDataArray: vtkDataArray\n}; // ----------------------------------------------------------------------------\n\nfunction extractCallArgs(synchronizerContext, argList) {\n  return argList.map(function (arg) {\n    var m = WRAPPED_ID_RE.exec(arg);\n    if (m) {\n      return synchronizerContext.getInstance(m[1]);\n    }\n    return arg;\n  });\n} // ----------------------------------------------------------------------------\n\nfunction extractInstanceIds(argList) {\n  return argList.map(function (arg) {\n    return WRAPPED_ID_RE.exec(arg);\n  }).filter(function (m) {\n    return m;\n  }).map(function (m) {\n    return m[1];\n  });\n} // ----------------------------------------------------------------------------\n\nfunction extractDependencyIds(state) {\n  var depList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (state.dependencies) {\n    state.dependencies.forEach(function (childState) {\n      depList.push(childState.id);\n      extractDependencyIds(childState, depList);\n    });\n  }\n  return depList;\n} // ----------------------------------------------------------------------------\n\nfunction bindArrays(arraysToBind) {\n  while (arraysToBind.length) {\n    var _arraysToBind$shift = arraysToBind.shift(),\n      _arraysToBind$shift2 = _slicedToArray(_arraysToBind$shift, 2),\n      fn = _arraysToBind$shift2[0],\n      args = _arraysToBind$shift2[1];\n    fn.apply(void 0, _toConsumableArray(args));\n  }\n} // ----------------------------------------------------------------------------\n\nfunction createNewArrayHandler(instance, arrayMetadata, arraysToBind) {\n  return function (values) {\n    var regMethod = arrayMetadata.registration ? arrayMetadata.registration : 'addArray';\n    var location = arrayMetadata.location ? instance.getReferenceByName(arrayMetadata.location) : instance; // Try to prevent unncessary modified\n\n    var previousArray = null;\n    if (arrayMetadata.location) {\n      previousArray = instance.getReferenceByName(arrayMetadata.location).getArray(arrayMetadata.name);\n    } else {\n      previousArray = instance[\"get\".concat(regMethod.substring(3))]();\n    }\n    if (previousArray) {\n      if (previousArray.getData() !== values) {\n        arraysToBind.push([previousArray.setData, [values, arrayMetadata.numberOfComponents]]);\n      }\n      return previousArray;\n    }\n    var vtkClass = arrayMetadata.vtkClass ? arrayMetadata.vtkClass : 'vtkDataArray';\n    var array = DATA_ARRAY_MAPPER[vtkClass].newInstance(_objectSpread(_objectSpread({}, arrayMetadata), {}, {\n      values: values\n    }));\n    arraysToBind.push([location[regMethod], [array]]);\n    return array;\n  };\n} // ----------------------------------------------------------------------------\n// Static methods for export\n// ----------------------------------------------------------------------------\n\nfunction update(type, instance, props, context) {\n  if (!instance) {\n    return Promise.reject(new Error(\"No instance provided.\"));\n  }\n  var handler = TYPE_HANDLERS[type];\n  if (handler && handler.update) {\n    return handler.update(instance, props, context);\n  }\n  return Promise.reject(new Error(\"No updater for \".concat(type)));\n} // ----------------------------------------------------------------------------\n\nfunction build(type) {\n  var initialProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var handler = TYPE_HANDLERS[type];\n  if (handler && handler.build) {\n    // DEBUG console.log(`new ${type} - ${initialProps.managedInstanceId}`);\n    return handler.build(initialProps);\n  }\n  console.log('No builder for', type);\n  return null;\n} // ----------------------------------------------------------------------------\n\nfunction excludeInstance(type, propertyName, propertyValue) {\n  EXCLUDE_INSTANCE_MAP[type] = {\n    key: propertyName,\n    value: propertyValue\n  };\n} // ----------------------------------------------------------------------------\n\nfunction getSupportedTypes() {\n  return Object.keys(TYPE_HANDLERS);\n} // ----------------------------------------------------------------------------\n\nfunction clearTypeMapping() {\n  Object.keys(TYPE_HANDLERS).forEach(function (key) {\n    delete TYPE_HANDLERS[key];\n  });\n} // ----------------------------------------------------------------------------\n\nfunction updateRenderWindow(instance, props, context) {\n  return update('vtkRenderWindow', instance, props, context);\n} // ----------------------------------------------------------------------------\n\nfunction clearAllOneTimeUpdaters() {\n  Object.keys(ONE_TIME_INSTANCE_TRACKERS).forEach(function (key) {\n    delete ONE_TIME_INSTANCE_TRACKERS[key];\n  });\n} // ----------------------------------------------------------------------------\n\nfunction clearOneTimeUpdaters() {\n  for (var _len = arguments.length, ids = new Array(_len), _key = 0; _key < _len; _key++) {\n    ids[_key] = arguments[_key];\n  }\n  if (ids.length === 0) {\n    return clearAllOneTimeUpdaters();\n  }\n  var array = ids; // allow an array passed as a single arg.\n\n  if (array.length === 1 && Array.isArray(array[0])) {\n    array = array[0];\n  }\n  array.forEach(function (instanceId) {\n    delete ONE_TIME_INSTANCE_TRACKERS[instanceId];\n  });\n  return array;\n} // ----------------------------------------------------------------------------\n\nfunction notSkippedInstance(call) {\n  if (call[1].length === 1) {\n    return SKIPPED_INSTANCE_IDS.indexOf(call[1][0]) === -1;\n  }\n  var keep = false;\n  for (var i = 0; i < call[1].length; i++) {\n    keep = keep || SKIPPED_INSTANCE_IDS.indexOf(call[1][i]) === -1;\n  }\n  return keep;\n} // ----------------------------------------------------------------------------\n// Updater functions\n// ----------------------------------------------------------------------------\n\nfunction genericUpdater(instance, state, context) {\n  context.start(); // -> start(generic-updater)\n  // First update our own properties\n\n  instance.set(state.properties); // Now handle dependencies\n\n  if (state.dependencies) {\n    state.dependencies.forEach(function (childState) {\n      var id = childState.id,\n        type = childState.type;\n      if (EXCLUDE_INSTANCE_MAP[type]) {\n        var _EXCLUDE_INSTANCE_MAP = EXCLUDE_INSTANCE_MAP[type],\n          key = _EXCLUDE_INSTANCE_MAP.key,\n          value = _EXCLUDE_INSTANCE_MAP.value;\n        if (!key || childState.properties[key] === value) {\n          SKIPPED_INSTANCE_IDS.push(WRAP_ID(id));\n          return;\n        }\n      }\n      var childInstance = context.getInstance(id);\n      if (!childInstance) {\n        childInstance = build(type, {\n          managedInstanceId: id\n        });\n        context.registerInstance(id, childInstance);\n      }\n      update(type, childInstance, childState, context);\n    });\n  }\n  if (state.calls) {\n    state.calls.filter(notSkippedInstance).forEach(function (call) {\n      // DEBUG console.log('==>', call[0], extractCallArgs(context, call[1]));\n      instance[call[0]].apply(null, extractCallArgs(context, call[1]));\n    });\n  } // if some arrays need to be be fetch\n\n  var dependencies = [];\n  if (state.arrays) {\n    var arraysToBind = [];\n    var promises = Object.values(state.arrays).map(function (arrayMetadata) {\n      context.start(); // -> start(arrays)\n\n      return context.getArray(arrayMetadata.hash, arrayMetadata.dataType, context).then(createNewArrayHandler(instance, arrayMetadata, arraysToBind)).catch(function (error) {\n        console.log('Error fetching array', JSON.stringify(arrayMetadata), error);\n      }).finally(context.end); // -> end(arrays)\n    });\n\n    context.start(); // -> start(arraysToBind)\n\n    dependencies.push(Promise.all(promises).then(function () {\n      // Since some arrays are getting updated, we should modify our dataset\n      if (arraysToBind.length) {\n        instance.modified();\n      }\n      bindArrays(arraysToBind);\n      return true;\n    }).catch(function (error) {\n      console.error('Error in array handling for state', JSON.stringify(state), error);\n    }).finally(context.end) // -> end(arraysToBind)\n    );\n  }\n\n  context.end(); // -> end(generic-updater)\n\n  return Promise.all(dependencies);\n} // ----------------------------------------------------------------------------\n\nfunction oneTimeGenericUpdater(instance, state, context) {\n  if (!ONE_TIME_INSTANCE_TRACKERS[state.id]) {\n    genericUpdater(instance, state, context);\n  }\n  ONE_TIME_INSTANCE_TRACKERS[state.id] = true;\n} // ----------------------------------------------------------------------------\n\nfunction rendererUpdater(instance, state, context) {\n  // Don't do start/end on the context here because we don't need to hold up\n  // rendering for the book-keeping we do after the genericUpdater finishes.\n  // First allow generic update process to happen as usual\n  genericUpdater(instance, state, context); // Any view props that were removed in the previous phase, genericUpdater(...),\n  // may have left orphaned children in our instance cache.  Below is where those\n  // refs can be tracked in the first place, and then later removed as necessary\n  // to allow garbage collection.\n  // In some cases, seemingly with 'vtkColorTransferFunction', the server side\n  // object id may be conserved even though the actor and mapper containing or\n  // using it were deleted.  In this case we must not unregister an instance\n  // which is depended upon by an incoming actor just because it was also\n  // depended upon by an outgoing one.\n\n  var allActorsDeps = new Set(); // Here we gather the list of dependencies (instance ids) for each view prop and\n  // store them on the instance, in case that view prop is later removed.\n\n  if (state.dependencies) {\n    state.dependencies.forEach(function (childState) {\n      var viewPropInstance = context.getInstance(childState.id);\n      if (viewPropInstance) {\n        var flattenedDepIds = extractDependencyIds(childState);\n        viewPropInstance.set({\n          flattenedDepIds: flattenedDepIds\n        }, true);\n        flattenedDepIds.forEach(function (depId) {\n          return allActorsDeps.add(depId);\n        });\n      }\n    });\n  } // Look for 'removeViewProp' calls and clean up references to dependencies of\n  // those view props.\n\n  var unregisterCandidates = new Set();\n  if (state.calls) {\n    state.calls.filter(notSkippedInstance).filter(function (call) {\n      return call[0] === 'removeViewProp';\n    }).forEach(function (call) {\n      // extract any ids associated with a 'removeViewProp' call (though really there\n      // should just be a single one), and use them to build a flat list of all\n      // representation dependency ids which we can then use our synchronizer context\n      // to unregister\n      extractInstanceIds(call[1]).forEach(function (vpId) {\n        var deps = context.getInstance(vpId).get('flattenedDepIds').flattenedDepIds;\n        if (deps) {\n          // Consider each dependency for un-registering\n          deps.forEach(function (depId) {\n            return unregisterCandidates.add(depId);\n          });\n        } // Consider the viewProp itself for un-registering\n\n        unregisterCandidates.add(vpId);\n      });\n    });\n  } // Now unregister any instances that are no longer needed\n\n  var idsToUnregister = _toConsumableArray(unregisterCandidates).filter(function (depId) {\n    return !allActorsDeps.has(depId);\n  });\n  idsToUnregister.forEach(function (depId) {\n    return context.unregisterInstance(depId);\n  });\n} // ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowUpdater(instance, state, context) {\n  // For each renderer we may be removing from this render window, we should first\n  // remove all of the renderer's view props, then have the render window re-render\n  // itself.  This will clear the screen, at which point we can go about the normal\n  // updater process.\n  if (state.calls) {\n    state.calls.filter(notSkippedInstance).filter(function (call) {\n      return call[0] === 'removeRenderer';\n    }).forEach(function (call) {\n      extractInstanceIds(call[1]).forEach(function (renId) {\n        var renderer = context.getInstance(renId); // Take brief detour through the view props to unregister the dependencies\n        // of each one\n\n        var viewProps = renderer.getViewProps();\n        viewProps.forEach(function (viewProp) {\n          var deps = viewProp.get('flattenedDepIds').flattenedDepIds;\n          if (deps) {\n            deps.forEach(function (depId) {\n              return context.unregisterInstance(depId);\n            });\n          }\n          context.unregisterInstance(context.getInstanceId(viewProp));\n        });\n      });\n    });\n  }\n  instance.render(); // Now just do normal update process\n\n  genericUpdater(instance, state, context); // Manage any associated behaviors\n\n  BehaviorManager.applyBehaviors(instance, state, context);\n} // ----------------------------------------------------------------------------\n\nfunction colorTransferFunctionUpdater(instance, state, context) {\n  context.start(); // -> start(colorTransferFunctionUpdater)\n\n  if (!state.properties.nodes) {\n    instance.set(state.properties);\n  } else {\n    var nodes = state.properties.nodes.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 6),\n        x = _ref2[0],\n        r = _ref2[1],\n        g = _ref2[2],\n        b = _ref2[3],\n        midpoint = _ref2[4],\n        sharpness = _ref2[5];\n      return {\n        x: x,\n        r: r,\n        g: g,\n        b: b,\n        midpoint: midpoint,\n        sharpness: sharpness\n      };\n    });\n    instance.set(_objectSpread(_objectSpread({}, state.properties), {}, {\n      nodes: nodes\n    }), true);\n  }\n  context.end(); // -> end(colorTransferFunctionUpdater)\n}\n\nfunction piecewiseFunctionUpdater(instance, state, context) {\n  context.start(); // -> start(piecewiseFunctionUpdater)\n\n  if (!state.properties.nodes) {\n    instance.set(state.properties);\n  } else {\n    var nodes = state.properties.nodes.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 4),\n        x = _ref4[0],\n        y = _ref4[1],\n        midpoint = _ref4[2],\n        sharpness = _ref4[3];\n      return {\n        x: x,\n        y: y,\n        midpoint: midpoint,\n        sharpness: sharpness\n      };\n    });\n    instance.set(_objectSpread(_objectSpread({}, state.properties), {}, {\n      nodes: nodes\n    }), true);\n    instance.sortAndUpdateRange();\n  } // instance.modified();\n\n  context.end(); // -> end(piecewiseFunctionUpdater)\n} // ----------------------------------------------------------------------------\n\nfunction removeUnavailableArrays(fields, availableNames) {\n  var namesToDelete = [];\n  var size = fields.getNumberOfArrays();\n  for (var i = 0; i < size; i++) {\n    var array = fields.getArray(i);\n    var name = array.getName();\n    if (!availableNames.has(name)) {\n      namesToDelete.push(name);\n    }\n  }\n  for (var _i = 0; _i < namesToDelete.length; _i++) {\n    fields.removeArray(namesToDelete[_i]);\n  }\n}\n/**\n * Get a unique string suitable for use as state.arrays key.\n * @param {object} arrayMeta\n * @returns {string} array key\n */\n\nfunction getArrayKey(arrayMeta) {\n  // Two arrays can have exactly the same hash so try to distinquish with name.\n  var namePart = arrayMeta.name ? \"_\".concat(arrayMeta.name) : '';\n  return \"\".concat(arrayMeta.hash, \"_\").concat(arrayMeta.dataType).concat(namePart);\n}\nfunction createDataSetUpdate() {\n  var piecesToFetch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return function (instance, state, context) {\n    context.start(); // -> start(dataset-update)\n    // Make sure we provide container for std arrays\n\n    var localProperties = _objectSpread({}, state.properties);\n    if (!state.arrays) {\n      state.arrays = {};\n    } // Array members\n    // => convert old format to generic state.arrays\n\n    for (var i = 0; i < piecesToFetch.length; i++) {\n      var key = piecesToFetch[i];\n      if (state.properties[key]) {\n        var arrayMeta = state.properties[key];\n        arrayMeta.registration = \"set\".concat(capitalize(key));\n        var arrayKey = getArrayKey(arrayMeta);\n        state.arrays[arrayKey] = arrayMeta;\n        delete localProperties[key];\n      }\n    } // Extract dataset fields\n\n    var fieldsArrays = state.properties.fields || [];\n    for (var _i2 = 0; _i2 < fieldsArrays.length; _i2++) {\n      var _arrayMeta = fieldsArrays[_i2];\n      var _arrayKey = getArrayKey(_arrayMeta);\n      state.arrays[_arrayKey] = _arrayMeta;\n    }\n    delete localProperties.fields; // Reset any pre-existing fields array\n\n    var arrayToKeep = {\n      pointData: new Set(),\n      cellData: new Set(),\n      fieldData: new Set()\n    };\n    fieldsArrays.forEach(function (_ref5) {\n      var location = _ref5.location,\n        name = _ref5.name;\n      arrayToKeep[location].add(name);\n    });\n    removeUnavailableArrays(instance.getPointData(), arrayToKeep.pointData);\n    removeUnavailableArrays(instance.getCellData(), arrayToKeep.cellData); // Generic handling\n\n    var cleanState = _objectSpread({}, state);\n    cleanState.properties = localProperties;\n    var res = genericUpdater(instance, cleanState, context); // Finish what we started\n\n    context.end(); // -> end(dataset-update)\n\n    return res;\n  };\n}\nvar polydataUpdater = createDataSetUpdate(['points', 'polys', 'verts', 'lines', 'strips']);\nvar imageDataUpdater = createDataSetUpdate([]); // ----------------------------------------------------------------------------\n// Construct the type mapping\n// ----------------------------------------------------------------------------\n\nfunction setTypeMapping(type) {\n  var buildFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var updateFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : genericUpdater;\n  if (!build && !update) {\n    delete TYPE_HANDLERS[type];\n    return;\n  }\n  TYPE_HANDLERS[type] = {\n    build: buildFn,\n    update: updateFn\n  };\n} // ----------------------------------------------------------------------------\n\nvar DEFAULT_ALIASES = {\n  vtkMapper: ['vtkOpenGLPolyDataMapper', 'vtkCompositePolyDataMapper2', 'vtkDataSetMapper'],\n  vtkProperty: ['vtkOpenGLProperty'],\n  vtkRenderer: ['vtkOpenGLRenderer'],\n  vtkCamera: ['vtkOpenGLCamera'],\n  vtkColorTransferFunction: ['vtkPVDiscretizableColorTransferFunction'],\n  vtkActor: ['vtkOpenGLActor', 'vtkPVLODActor'],\n  vtkLight: ['vtkOpenGLLight', 'vtkPVLight'],\n  vtkTexture: ['vtkOpenGLTexture'],\n  vtkImageMapper: ['vtkOpenGLImageSliceMapper'],\n  vtkVolumeMapper: ['vtkFixedPointVolumeRayCastMapper']\n}; // ----------------------------------------------------------------------------\n\nvar DEFAULT_MAPPING = {\n  vtkAxesActor: {\n    build: vtkAxesActor.newInstance,\n    update: genericUpdater\n  },\n  vtkRenderWindow: {\n    build: vtkRenderWindow.newInstance,\n    update: vtkRenderWindowUpdater\n  },\n  vtkRenderer: {\n    build: vtkRenderer.newInstance,\n    update: rendererUpdater\n  },\n  vtkLookupTable: {\n    build: vtkLookupTable.newInstance,\n    update: genericUpdater\n  },\n  vtkCamera: {\n    build: vtkCamera.newInstance,\n    update: oneTimeGenericUpdater\n  },\n  vtkPolyData: {\n    build: vtkPolyData.newInstance,\n    update: polydataUpdater\n  },\n  vtkImageData: {\n    build: vtkImageData.newInstance,\n    update: imageDataUpdater\n  },\n  vtkMapper: {\n    build: vtkMapper.newInstance,\n    update: genericUpdater\n  },\n  vtkGlyph3DMapper: {\n    build: vtkGlyph3DMapper.newInstance,\n    update: genericUpdater\n  },\n  vtkProperty: {\n    build: vtkProperty.newInstance,\n    update: genericUpdater\n  },\n  vtkActor: {\n    build: vtkActor.newInstance,\n    update: genericUpdater\n  },\n  vtkLight: {\n    build: vtkLight.newInstance,\n    update: genericUpdater\n  },\n  vtkColorTransferFunction: {\n    build: vtkColorTransferFunction.newInstance,\n    update: colorTransferFunctionUpdater\n  },\n  vtkTexture: {\n    build: vtkTexture.newInstance,\n    update: genericUpdater\n  },\n  vtkVolume: {\n    build: vtkVolume.newInstance,\n    update: genericUpdater\n  },\n  vtkVolumeMapper: {\n    build: vtkVolumeMapper.newInstance,\n    update: genericUpdater\n  },\n  vtkVolumeProperty: {\n    build: vtkVolumeProperty.newInstance,\n    update: genericUpdater\n  },\n  vtkImageSlice: {\n    build: vtkImageSlice.newInstance,\n    update: genericUpdater\n  },\n  vtkImageMapper: {\n    build: vtkImageMapper.newInstance,\n    update: genericUpdater\n  },\n  vtkImageProperty: {\n    build: vtkImageProperty.newInstance,\n    update: genericUpdater\n  },\n  vtkPiecewiseFunction: {\n    build: vtkPiecewiseFunction.newInstance,\n    update: piecewiseFunctionUpdater\n  },\n  vtkCubeAxesActor: {\n    build: vtkCubeAxesActor.newInstance,\n    update: genericUpdater\n  },\n  vtkScalarBarActor: {\n    build: vtkScalarBarActor.newInstance,\n    update: genericUpdater\n  }\n}; // ----------------------------------------------------------------------------\n\nfunction setDefaultMapping() {\n  var reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  if (reset) {\n    clearTypeMapping();\n  }\n  Object.keys(DEFAULT_MAPPING).forEach(function (type) {\n    var mapping = DEFAULT_MAPPING[type];\n    setTypeMapping(type, mapping.build, mapping.update);\n  });\n} // ----------------------------------------------------------------------------\n\nfunction applyDefaultAliases() {\n  // Add aliases\n  Object.keys(DEFAULT_ALIASES).forEach(function (name) {\n    var aliases = DEFAULT_ALIASES[name];\n    aliases.forEach(function (alias) {\n      TYPE_HANDLERS[alias] = TYPE_HANDLERS[name];\n    });\n  });\n} // ----------------------------------------------------------------------------\n\nfunction alwaysUpdateCamera() {\n  setTypeMapping('vtkCamera', vtkCamera.newInstance);\n  applyDefaultAliases();\n} // ----------------------------------------------------------------------------\n\nsetDefaultMapping();\napplyDefaultAliases(); // ----------------------------------------------------------------------------\n// Avoid handling any lights at the moment\n// => vtk seems fine and PV could be fine as well but not tested so keeping PV exclude\n\nEXCLUDE_INSTANCE_MAP.vtkPVLight = {}; // ----------------------------------------------------------------------------\n// Publicly exposed methods\n// ----------------------------------------------------------------------------\n\nvar vtkObjectManager = {\n  build: build,\n  update: update,\n  genericUpdater: genericUpdater,\n  oneTimeGenericUpdater: oneTimeGenericUpdater,\n  setTypeMapping: setTypeMapping,\n  clearTypeMapping: clearTypeMapping,\n  getSupportedTypes: getSupportedTypes,\n  clearOneTimeUpdaters: clearOneTimeUpdaters,\n  updateRenderWindow: updateRenderWindow,\n  excludeInstance: excludeInstance,\n  setDefaultMapping: setDefaultMapping,\n  applyDefaultAliases: applyDefaultAliases,\n  alwaysUpdateCamera: alwaysUpdateCamera\n};\nexport { vtkObjectManager as default };","map":{"version":3,"names":["_defineProperty","_toConsumableArray","_slicedToArray","capitalize","vtkActor","vtkCamera","vtkColorTransferFunction","vtkDataArray","vtkPoints","vtkCellArray","vtkGlyph3DMapper","vtkLight","vtkLookupTable","vtkMapper","vtkPolyData","vtkImageData","vtkProperty","vtkRenderer","vtkRenderWindow","vtkTexture","vtkVolume","vtkVolumeMapper","vtkVolumeProperty","vtkImageSlice","vtkImageMapper","vtkImageProperty","vtkPiecewiseFunction","vtkCubeAxesActor","vtkScalarBarActor","vtkAxesActor","BehaviorManager","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","TYPE_HANDLERS","WRAPPED_ID_RE","WRAP_ID","id","concat","ONE_TIME_INSTANCE_TRACKERS","SKIPPED_INSTANCE_IDS","EXCLUDE_INSTANCE_MAP","DATA_ARRAY_MAPPER","extractCallArgs","synchronizerContext","argList","map","arg","m","exec","getInstance","extractInstanceIds","extractDependencyIds","state","depList","undefined","dependencies","childState","bindArrays","arraysToBind","_arraysToBind$shift","shift","_arraysToBind$shift2","fn","args","createNewArrayHandler","instance","arrayMetadata","values","regMethod","registration","location","getReferenceByName","previousArray","getArray","name","substring","getData","setData","numberOfComponents","vtkClass","array","newInstance","update","type","props","context","Promise","reject","Error","handler","build","initialProps","console","log","excludeInstance","propertyName","propertyValue","value","getSupportedTypes","clearTypeMapping","updateRenderWindow","clearAllOneTimeUpdaters","clearOneTimeUpdaters","_len","ids","Array","_key","isArray","instanceId","notSkippedInstance","call","indexOf","keep","genericUpdater","start","set","properties","_EXCLUDE_INSTANCE_MAP","childInstance","managedInstanceId","registerInstance","calls","arrays","promises","hash","dataType","then","catch","error","JSON","stringify","finally","end","all","modified","oneTimeGenericUpdater","rendererUpdater","allActorsDeps","Set","viewPropInstance","flattenedDepIds","depId","add","unregisterCandidates","vpId","deps","get","idsToUnregister","has","unregisterInstance","vtkRenderWindowUpdater","renId","renderer","viewProps","getViewProps","viewProp","getInstanceId","render","applyBehaviors","colorTransferFunctionUpdater","nodes","_ref","_ref2","x","r","g","b","midpoint","sharpness","piecewiseFunctionUpdater","_ref3","_ref4","y","sortAndUpdateRange","removeUnavailableArrays","fields","availableNames","namesToDelete","size","getNumberOfArrays","getName","_i","removeArray","getArrayKey","arrayMeta","namePart","createDataSetUpdate","piecesToFetch","localProperties","arrayKey","fieldsArrays","_i2","_arrayMeta","_arrayKey","arrayToKeep","pointData","cellData","fieldData","_ref5","getPointData","getCellData","cleanState","res","polydataUpdater","imageDataUpdater","setTypeMapping","buildFn","updateFn","DEFAULT_ALIASES","DEFAULT_MAPPING","setDefaultMapping","reset","mapping","applyDefaultAliases","aliases","alias","alwaysUpdateCamera","vtkPVLight","vtkObjectManager","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Misc/SynchronizableRenderWindow/ObjectManager.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { capitalize } from '../../../macros.js';\nimport vtkActor from '../../Core/Actor.js';\nimport vtkCamera from '../../Core/Camera.js';\nimport vtkColorTransferFunction from '../../Core/ColorTransferFunction.js';\nimport vtkDataArray from '../../../Common/Core/DataArray.js';\nimport vtkPoints from '../../../Common/Core/Points.js';\nimport vtkCellArray from '../../../Common/Core/CellArray.js';\nimport vtkGlyph3DMapper from '../../Core/Glyph3DMapper.js';\nimport vtkLight from '../../Core/Light.js';\nimport vtkLookupTable from '../../../Common/Core/LookupTable.js';\nimport vtkMapper from '../../Core/Mapper.js';\nimport vtkPolyData from '../../../Common/DataModel/PolyData.js';\nimport vtkImageData from '../../../Common/DataModel/ImageData.js';\nimport vtkProperty from '../../Core/Property.js';\nimport vtkRenderer from '../../Core/Renderer.js';\nimport vtkRenderWindow from '../../Core/RenderWindow.js';\nimport vtkTexture from '../../Core/Texture.js';\nimport vtkVolume from '../../Core/Volume.js';\nimport vtkVolumeMapper from '../../Core/VolumeMapper.js';\nimport vtkVolumeProperty from '../../Core/VolumeProperty.js';\nimport vtkImageSlice from '../../Core/ImageSlice.js';\nimport vtkImageMapper from '../../Core/ImageMapper.js';\nimport vtkImageProperty from '../../Core/ImageProperty.js';\nimport vtkPiecewiseFunction from '../../../Common/DataModel/PiecewiseFunction.js';\nimport vtkCubeAxesActor from '../../Core/CubeAxesActor.js';\nimport vtkScalarBarActor from '../../Core/ScalarBarActor.js';\nimport vtkAxesActor from '../../Core/AxesActor.js';\nimport BehaviorManager from './BehaviorManager.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// Some internal, module-level variables and methods\n// ----------------------------------------------------------------------------\n\nvar TYPE_HANDLERS = {};\nvar WRAPPED_ID_RE = /instance:\\${([^}]+)}/;\n\nvar WRAP_ID = function WRAP_ID(id) {\n  return \"instance:${\".concat(id, \"}\");\n};\n\nvar ONE_TIME_INSTANCE_TRACKERS = {};\nvar SKIPPED_INSTANCE_IDS = [];\nvar EXCLUDE_INSTANCE_MAP = {};\nvar DATA_ARRAY_MAPPER = {\n  vtkPoints: vtkPoints,\n  vtkCellArray: vtkCellArray,\n  vtkDataArray: vtkDataArray\n}; // ----------------------------------------------------------------------------\n\nfunction extractCallArgs(synchronizerContext, argList) {\n  return argList.map(function (arg) {\n    var m = WRAPPED_ID_RE.exec(arg);\n\n    if (m) {\n      return synchronizerContext.getInstance(m[1]);\n    }\n\n    return arg;\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction extractInstanceIds(argList) {\n  return argList.map(function (arg) {\n    return WRAPPED_ID_RE.exec(arg);\n  }).filter(function (m) {\n    return m;\n  }).map(function (m) {\n    return m[1];\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction extractDependencyIds(state) {\n  var depList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (state.dependencies) {\n    state.dependencies.forEach(function (childState) {\n      depList.push(childState.id);\n      extractDependencyIds(childState, depList);\n    });\n  }\n\n  return depList;\n} // ----------------------------------------------------------------------------\n\n\nfunction bindArrays(arraysToBind) {\n  while (arraysToBind.length) {\n    var _arraysToBind$shift = arraysToBind.shift(),\n        _arraysToBind$shift2 = _slicedToArray(_arraysToBind$shift, 2),\n        fn = _arraysToBind$shift2[0],\n        args = _arraysToBind$shift2[1];\n\n    fn.apply(void 0, _toConsumableArray(args));\n  }\n} // ----------------------------------------------------------------------------\n\n\nfunction createNewArrayHandler(instance, arrayMetadata, arraysToBind) {\n  return function (values) {\n    var regMethod = arrayMetadata.registration ? arrayMetadata.registration : 'addArray';\n    var location = arrayMetadata.location ? instance.getReferenceByName(arrayMetadata.location) : instance; // Try to prevent unncessary modified\n\n    var previousArray = null;\n\n    if (arrayMetadata.location) {\n      previousArray = instance.getReferenceByName(arrayMetadata.location).getArray(arrayMetadata.name);\n    } else {\n      previousArray = instance[\"get\".concat(regMethod.substring(3))]();\n    }\n\n    if (previousArray) {\n      if (previousArray.getData() !== values) {\n        arraysToBind.push([previousArray.setData, [values, arrayMetadata.numberOfComponents]]);\n      }\n\n      return previousArray;\n    }\n\n    var vtkClass = arrayMetadata.vtkClass ? arrayMetadata.vtkClass : 'vtkDataArray';\n    var array = DATA_ARRAY_MAPPER[vtkClass].newInstance(_objectSpread(_objectSpread({}, arrayMetadata), {}, {\n      values: values\n    }));\n    arraysToBind.push([location[regMethod], [array]]);\n    return array;\n  };\n} // ----------------------------------------------------------------------------\n// Static methods for export\n// ----------------------------------------------------------------------------\n\n\nfunction update(type, instance, props, context) {\n  if (!instance) {\n    return Promise.reject(new Error(\"No instance provided.\"));\n  }\n\n  var handler = TYPE_HANDLERS[type];\n\n  if (handler && handler.update) {\n    return handler.update(instance, props, context);\n  }\n\n  return Promise.reject(new Error(\"No updater for \".concat(type)));\n} // ----------------------------------------------------------------------------\n\n\nfunction build(type) {\n  var initialProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var handler = TYPE_HANDLERS[type];\n\n  if (handler && handler.build) {\n    // DEBUG console.log(`new ${type} - ${initialProps.managedInstanceId}`);\n    return handler.build(initialProps);\n  }\n\n  console.log('No builder for', type);\n  return null;\n} // ----------------------------------------------------------------------------\n\n\nfunction excludeInstance(type, propertyName, propertyValue) {\n  EXCLUDE_INSTANCE_MAP[type] = {\n    key: propertyName,\n    value: propertyValue\n  };\n} // ----------------------------------------------------------------------------\n\n\nfunction getSupportedTypes() {\n  return Object.keys(TYPE_HANDLERS);\n} // ----------------------------------------------------------------------------\n\n\nfunction clearTypeMapping() {\n  Object.keys(TYPE_HANDLERS).forEach(function (key) {\n    delete TYPE_HANDLERS[key];\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction updateRenderWindow(instance, props, context) {\n  return update('vtkRenderWindow', instance, props, context);\n} // ----------------------------------------------------------------------------\n\n\nfunction clearAllOneTimeUpdaters() {\n  Object.keys(ONE_TIME_INSTANCE_TRACKERS).forEach(function (key) {\n    delete ONE_TIME_INSTANCE_TRACKERS[key];\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction clearOneTimeUpdaters() {\n  for (var _len = arguments.length, ids = new Array(_len), _key = 0; _key < _len; _key++) {\n    ids[_key] = arguments[_key];\n  }\n\n  if (ids.length === 0) {\n    return clearAllOneTimeUpdaters();\n  }\n\n  var array = ids; // allow an array passed as a single arg.\n\n  if (array.length === 1 && Array.isArray(array[0])) {\n    array = array[0];\n  }\n\n  array.forEach(function (instanceId) {\n    delete ONE_TIME_INSTANCE_TRACKERS[instanceId];\n  });\n  return array;\n} // ----------------------------------------------------------------------------\n\n\nfunction notSkippedInstance(call) {\n  if (call[1].length === 1) {\n    return SKIPPED_INSTANCE_IDS.indexOf(call[1][0]) === -1;\n  }\n\n  var keep = false;\n\n  for (var i = 0; i < call[1].length; i++) {\n    keep = keep || SKIPPED_INSTANCE_IDS.indexOf(call[1][i]) === -1;\n  }\n\n  return keep;\n} // ----------------------------------------------------------------------------\n// Updater functions\n// ----------------------------------------------------------------------------\n\n\nfunction genericUpdater(instance, state, context) {\n  context.start(); // -> start(generic-updater)\n  // First update our own properties\n\n  instance.set(state.properties); // Now handle dependencies\n\n  if (state.dependencies) {\n    state.dependencies.forEach(function (childState) {\n      var id = childState.id,\n          type = childState.type;\n\n      if (EXCLUDE_INSTANCE_MAP[type]) {\n        var _EXCLUDE_INSTANCE_MAP = EXCLUDE_INSTANCE_MAP[type],\n            key = _EXCLUDE_INSTANCE_MAP.key,\n            value = _EXCLUDE_INSTANCE_MAP.value;\n\n        if (!key || childState.properties[key] === value) {\n          SKIPPED_INSTANCE_IDS.push(WRAP_ID(id));\n          return;\n        }\n      }\n\n      var childInstance = context.getInstance(id);\n\n      if (!childInstance) {\n        childInstance = build(type, {\n          managedInstanceId: id\n        });\n        context.registerInstance(id, childInstance);\n      }\n\n      update(type, childInstance, childState, context);\n    });\n  }\n\n  if (state.calls) {\n    state.calls.filter(notSkippedInstance).forEach(function (call) {\n      // DEBUG console.log('==>', call[0], extractCallArgs(context, call[1]));\n      instance[call[0]].apply(null, extractCallArgs(context, call[1]));\n    });\n  } // if some arrays need to be be fetch\n\n\n  var dependencies = [];\n\n  if (state.arrays) {\n    var arraysToBind = [];\n    var promises = Object.values(state.arrays).map(function (arrayMetadata) {\n      context.start(); // -> start(arrays)\n\n      return context.getArray(arrayMetadata.hash, arrayMetadata.dataType, context).then(createNewArrayHandler(instance, arrayMetadata, arraysToBind)).catch(function (error) {\n        console.log('Error fetching array', JSON.stringify(arrayMetadata), error);\n      }).finally(context.end); // -> end(arrays)\n    });\n    context.start(); // -> start(arraysToBind)\n\n    dependencies.push(Promise.all(promises).then(function () {\n      // Since some arrays are getting updated, we should modify our dataset\n      if (arraysToBind.length) {\n        instance.modified();\n      }\n\n      bindArrays(arraysToBind);\n      return true;\n    }).catch(function (error) {\n      console.error('Error in array handling for state', JSON.stringify(state), error);\n    }).finally(context.end) // -> end(arraysToBind)\n    );\n  }\n\n  context.end(); // -> end(generic-updater)\n\n  return Promise.all(dependencies);\n} // ----------------------------------------------------------------------------\n\n\nfunction oneTimeGenericUpdater(instance, state, context) {\n  if (!ONE_TIME_INSTANCE_TRACKERS[state.id]) {\n    genericUpdater(instance, state, context);\n  }\n\n  ONE_TIME_INSTANCE_TRACKERS[state.id] = true;\n} // ----------------------------------------------------------------------------\n\n\nfunction rendererUpdater(instance, state, context) {\n  // Don't do start/end on the context here because we don't need to hold up\n  // rendering for the book-keeping we do after the genericUpdater finishes.\n  // First allow generic update process to happen as usual\n  genericUpdater(instance, state, context); // Any view props that were removed in the previous phase, genericUpdater(...),\n  // may have left orphaned children in our instance cache.  Below is where those\n  // refs can be tracked in the first place, and then later removed as necessary\n  // to allow garbage collection.\n  // In some cases, seemingly with 'vtkColorTransferFunction', the server side\n  // object id may be conserved even though the actor and mapper containing or\n  // using it were deleted.  In this case we must not unregister an instance\n  // which is depended upon by an incoming actor just because it was also\n  // depended upon by an outgoing one.\n\n  var allActorsDeps = new Set(); // Here we gather the list of dependencies (instance ids) for each view prop and\n  // store them on the instance, in case that view prop is later removed.\n\n  if (state.dependencies) {\n    state.dependencies.forEach(function (childState) {\n      var viewPropInstance = context.getInstance(childState.id);\n\n      if (viewPropInstance) {\n        var flattenedDepIds = extractDependencyIds(childState);\n        viewPropInstance.set({\n          flattenedDepIds: flattenedDepIds\n        }, true);\n        flattenedDepIds.forEach(function (depId) {\n          return allActorsDeps.add(depId);\n        });\n      }\n    });\n  } // Look for 'removeViewProp' calls and clean up references to dependencies of\n  // those view props.\n\n\n  var unregisterCandidates = new Set();\n\n  if (state.calls) {\n    state.calls.filter(notSkippedInstance).filter(function (call) {\n      return call[0] === 'removeViewProp';\n    }).forEach(function (call) {\n      // extract any ids associated with a 'removeViewProp' call (though really there\n      // should just be a single one), and use them to build a flat list of all\n      // representation dependency ids which we can then use our synchronizer context\n      // to unregister\n      extractInstanceIds(call[1]).forEach(function (vpId) {\n        var deps = context.getInstance(vpId).get('flattenedDepIds').flattenedDepIds;\n\n        if (deps) {\n          // Consider each dependency for un-registering\n          deps.forEach(function (depId) {\n            return unregisterCandidates.add(depId);\n          });\n        } // Consider the viewProp itself for un-registering\n\n\n        unregisterCandidates.add(vpId);\n      });\n    });\n  } // Now unregister any instances that are no longer needed\n\n\n  var idsToUnregister = _toConsumableArray(unregisterCandidates).filter(function (depId) {\n    return !allActorsDeps.has(depId);\n  });\n\n  idsToUnregister.forEach(function (depId) {\n    return context.unregisterInstance(depId);\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction vtkRenderWindowUpdater(instance, state, context) {\n  // For each renderer we may be removing from this render window, we should first\n  // remove all of the renderer's view props, then have the render window re-render\n  // itself.  This will clear the screen, at which point we can go about the normal\n  // updater process.\n  if (state.calls) {\n    state.calls.filter(notSkippedInstance).filter(function (call) {\n      return call[0] === 'removeRenderer';\n    }).forEach(function (call) {\n      extractInstanceIds(call[1]).forEach(function (renId) {\n        var renderer = context.getInstance(renId); // Take brief detour through the view props to unregister the dependencies\n        // of each one\n\n        var viewProps = renderer.getViewProps();\n        viewProps.forEach(function (viewProp) {\n          var deps = viewProp.get('flattenedDepIds').flattenedDepIds;\n\n          if (deps) {\n            deps.forEach(function (depId) {\n              return context.unregisterInstance(depId);\n            });\n          }\n\n          context.unregisterInstance(context.getInstanceId(viewProp));\n        });\n      });\n    });\n  }\n\n  instance.render(); // Now just do normal update process\n\n  genericUpdater(instance, state, context); // Manage any associated behaviors\n\n  BehaviorManager.applyBehaviors(instance, state, context);\n} // ----------------------------------------------------------------------------\n\n\nfunction colorTransferFunctionUpdater(instance, state, context) {\n  context.start(); // -> start(colorTransferFunctionUpdater)\n\n  if (!state.properties.nodes) {\n    instance.set(state.properties);\n  } else {\n    var nodes = state.properties.nodes.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 6),\n          x = _ref2[0],\n          r = _ref2[1],\n          g = _ref2[2],\n          b = _ref2[3],\n          midpoint = _ref2[4],\n          sharpness = _ref2[5];\n\n      return {\n        x: x,\n        r: r,\n        g: g,\n        b: b,\n        midpoint: midpoint,\n        sharpness: sharpness\n      };\n    });\n    instance.set(_objectSpread(_objectSpread({}, state.properties), {}, {\n      nodes: nodes\n    }), true);\n  }\n\n  context.end(); // -> end(colorTransferFunctionUpdater)\n}\n\nfunction piecewiseFunctionUpdater(instance, state, context) {\n  context.start(); // -> start(piecewiseFunctionUpdater)\n\n  if (!state.properties.nodes) {\n    instance.set(state.properties);\n  } else {\n    var nodes = state.properties.nodes.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 4),\n          x = _ref4[0],\n          y = _ref4[1],\n          midpoint = _ref4[2],\n          sharpness = _ref4[3];\n\n      return {\n        x: x,\n        y: y,\n        midpoint: midpoint,\n        sharpness: sharpness\n      };\n    });\n    instance.set(_objectSpread(_objectSpread({}, state.properties), {}, {\n      nodes: nodes\n    }), true);\n    instance.sortAndUpdateRange();\n  } // instance.modified();\n\n\n  context.end(); // -> end(piecewiseFunctionUpdater)\n} // ----------------------------------------------------------------------------\n\n\nfunction removeUnavailableArrays(fields, availableNames) {\n  var namesToDelete = [];\n  var size = fields.getNumberOfArrays();\n\n  for (var i = 0; i < size; i++) {\n    var array = fields.getArray(i);\n    var name = array.getName();\n\n    if (!availableNames.has(name)) {\n      namesToDelete.push(name);\n    }\n  }\n\n  for (var _i = 0; _i < namesToDelete.length; _i++) {\n    fields.removeArray(namesToDelete[_i]);\n  }\n}\n/**\n * Get a unique string suitable for use as state.arrays key.\n * @param {object} arrayMeta\n * @returns {string} array key\n */\n\n\nfunction getArrayKey(arrayMeta) {\n  // Two arrays can have exactly the same hash so try to distinquish with name.\n  var namePart = arrayMeta.name ? \"_\".concat(arrayMeta.name) : '';\n  return \"\".concat(arrayMeta.hash, \"_\").concat(arrayMeta.dataType).concat(namePart);\n}\n\nfunction createDataSetUpdate() {\n  var piecesToFetch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return function (instance, state, context) {\n    context.start(); // -> start(dataset-update)\n    // Make sure we provide container for std arrays\n\n    var localProperties = _objectSpread({}, state.properties);\n\n    if (!state.arrays) {\n      state.arrays = {};\n    } // Array members\n    // => convert old format to generic state.arrays\n\n\n    for (var i = 0; i < piecesToFetch.length; i++) {\n      var key = piecesToFetch[i];\n\n      if (state.properties[key]) {\n        var arrayMeta = state.properties[key];\n        arrayMeta.registration = \"set\".concat(capitalize(key));\n        var arrayKey = getArrayKey(arrayMeta);\n        state.arrays[arrayKey] = arrayMeta;\n        delete localProperties[key];\n      }\n    } // Extract dataset fields\n\n\n    var fieldsArrays = state.properties.fields || [];\n\n    for (var _i2 = 0; _i2 < fieldsArrays.length; _i2++) {\n      var _arrayMeta = fieldsArrays[_i2];\n\n      var _arrayKey = getArrayKey(_arrayMeta);\n\n      state.arrays[_arrayKey] = _arrayMeta;\n    }\n\n    delete localProperties.fields; // Reset any pre-existing fields array\n\n    var arrayToKeep = {\n      pointData: new Set(),\n      cellData: new Set(),\n      fieldData: new Set()\n    };\n    fieldsArrays.forEach(function (_ref5) {\n      var location = _ref5.location,\n          name = _ref5.name;\n      arrayToKeep[location].add(name);\n    });\n    removeUnavailableArrays(instance.getPointData(), arrayToKeep.pointData);\n    removeUnavailableArrays(instance.getCellData(), arrayToKeep.cellData); // Generic handling\n\n    var cleanState = _objectSpread({}, state);\n\n    cleanState.properties = localProperties;\n    var res = genericUpdater(instance, cleanState, context); // Finish what we started\n\n    context.end(); // -> end(dataset-update)\n\n    return res;\n  };\n}\n\nvar polydataUpdater = createDataSetUpdate(['points', 'polys', 'verts', 'lines', 'strips']);\nvar imageDataUpdater = createDataSetUpdate([]); // ----------------------------------------------------------------------------\n// Construct the type mapping\n// ----------------------------------------------------------------------------\n\nfunction setTypeMapping(type) {\n  var buildFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var updateFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : genericUpdater;\n\n  if (!build && !update) {\n    delete TYPE_HANDLERS[type];\n    return;\n  }\n\n  TYPE_HANDLERS[type] = {\n    build: buildFn,\n    update: updateFn\n  };\n} // ----------------------------------------------------------------------------\n\n\nvar DEFAULT_ALIASES = {\n  vtkMapper: ['vtkOpenGLPolyDataMapper', 'vtkCompositePolyDataMapper2', 'vtkDataSetMapper'],\n  vtkProperty: ['vtkOpenGLProperty'],\n  vtkRenderer: ['vtkOpenGLRenderer'],\n  vtkCamera: ['vtkOpenGLCamera'],\n  vtkColorTransferFunction: ['vtkPVDiscretizableColorTransferFunction'],\n  vtkActor: ['vtkOpenGLActor', 'vtkPVLODActor'],\n  vtkLight: ['vtkOpenGLLight', 'vtkPVLight'],\n  vtkTexture: ['vtkOpenGLTexture'],\n  vtkImageMapper: ['vtkOpenGLImageSliceMapper'],\n  vtkVolumeMapper: ['vtkFixedPointVolumeRayCastMapper']\n}; // ----------------------------------------------------------------------------\n\nvar DEFAULT_MAPPING = {\n  vtkAxesActor: {\n    build: vtkAxesActor.newInstance,\n    update: genericUpdater\n  },\n  vtkRenderWindow: {\n    build: vtkRenderWindow.newInstance,\n    update: vtkRenderWindowUpdater\n  },\n  vtkRenderer: {\n    build: vtkRenderer.newInstance,\n    update: rendererUpdater\n  },\n  vtkLookupTable: {\n    build: vtkLookupTable.newInstance,\n    update: genericUpdater\n  },\n  vtkCamera: {\n    build: vtkCamera.newInstance,\n    update: oneTimeGenericUpdater\n  },\n  vtkPolyData: {\n    build: vtkPolyData.newInstance,\n    update: polydataUpdater\n  },\n  vtkImageData: {\n    build: vtkImageData.newInstance,\n    update: imageDataUpdater\n  },\n  vtkMapper: {\n    build: vtkMapper.newInstance,\n    update: genericUpdater\n  },\n  vtkGlyph3DMapper: {\n    build: vtkGlyph3DMapper.newInstance,\n    update: genericUpdater\n  },\n  vtkProperty: {\n    build: vtkProperty.newInstance,\n    update: genericUpdater\n  },\n  vtkActor: {\n    build: vtkActor.newInstance,\n    update: genericUpdater\n  },\n  vtkLight: {\n    build: vtkLight.newInstance,\n    update: genericUpdater\n  },\n  vtkColorTransferFunction: {\n    build: vtkColorTransferFunction.newInstance,\n    update: colorTransferFunctionUpdater\n  },\n  vtkTexture: {\n    build: vtkTexture.newInstance,\n    update: genericUpdater\n  },\n  vtkVolume: {\n    build: vtkVolume.newInstance,\n    update: genericUpdater\n  },\n  vtkVolumeMapper: {\n    build: vtkVolumeMapper.newInstance,\n    update: genericUpdater\n  },\n  vtkVolumeProperty: {\n    build: vtkVolumeProperty.newInstance,\n    update: genericUpdater\n  },\n  vtkImageSlice: {\n    build: vtkImageSlice.newInstance,\n    update: genericUpdater\n  },\n  vtkImageMapper: {\n    build: vtkImageMapper.newInstance,\n    update: genericUpdater\n  },\n  vtkImageProperty: {\n    build: vtkImageProperty.newInstance,\n    update: genericUpdater\n  },\n  vtkPiecewiseFunction: {\n    build: vtkPiecewiseFunction.newInstance,\n    update: piecewiseFunctionUpdater\n  },\n  vtkCubeAxesActor: {\n    build: vtkCubeAxesActor.newInstance,\n    update: genericUpdater\n  },\n  vtkScalarBarActor: {\n    build: vtkScalarBarActor.newInstance,\n    update: genericUpdater\n  }\n}; // ----------------------------------------------------------------------------\n\nfunction setDefaultMapping() {\n  var reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  if (reset) {\n    clearTypeMapping();\n  }\n\n  Object.keys(DEFAULT_MAPPING).forEach(function (type) {\n    var mapping = DEFAULT_MAPPING[type];\n    setTypeMapping(type, mapping.build, mapping.update);\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction applyDefaultAliases() {\n  // Add aliases\n  Object.keys(DEFAULT_ALIASES).forEach(function (name) {\n    var aliases = DEFAULT_ALIASES[name];\n    aliases.forEach(function (alias) {\n      TYPE_HANDLERS[alias] = TYPE_HANDLERS[name];\n    });\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction alwaysUpdateCamera() {\n  setTypeMapping('vtkCamera', vtkCamera.newInstance);\n  applyDefaultAliases();\n} // ----------------------------------------------------------------------------\n\n\nsetDefaultMapping();\napplyDefaultAliases(); // ----------------------------------------------------------------------------\n// Avoid handling any lights at the moment\n// => vtk seems fine and PV could be fine as well but not tested so keeping PV exclude\n\nEXCLUDE_INSTANCE_MAP.vtkPVLight = {}; // ----------------------------------------------------------------------------\n// Publicly exposed methods\n// ----------------------------------------------------------------------------\n\nvar vtkObjectManager = {\n  build: build,\n  update: update,\n  genericUpdater: genericUpdater,\n  oneTimeGenericUpdater: oneTimeGenericUpdater,\n  setTypeMapping: setTypeMapping,\n  clearTypeMapping: clearTypeMapping,\n  getSupportedTypes: getSupportedTypes,\n  clearOneTimeUpdaters: clearOneTimeUpdaters,\n  updateRenderWindow: updateRenderWindow,\n  excludeInstance: excludeInstance,\n  setDefaultMapping: setDefaultMapping,\n  applyDefaultAliases: applyDefaultAliases,\n  alwaysUpdateCamera: alwaysUpdateCamera\n};\n\nexport { vtkObjectManager as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { ImageBorderMode, InterpolationMode } from './Constants.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar vtkInterpolationInfo = {\n  pointer: null,\n  extent: [0, -1, 0, -1, 0, -1],\n  increments: [0, 0, 0],\n  scalarType: null,\n  // dataType\n  dataTypeSize: 1,\n  // BYTES_PER_ELEMENT\n  numberOfComponents: 1,\n  borderMode: ImageBorderMode.CLAMP,\n  interpolationMode: InterpolationMode.LINEAR,\n  extraInfo: null\n};\nvar vtkInterpolationWeights = _objectSpread(_objectSpread({}, vtkInterpolationInfo), {}, {\n  positions: [0, 0, 0],\n  weights: null,\n  weightExtent: [0, -1, 0, -1, 0, -1],\n  kernelSize: [1, 1, 1],\n  workspace: null,\n  lastY: null,\n  lastZ: null\n});\nfunction vtkInterpolationMathFloor(x) {\n  var integer = Math.floor(x);\n  return {\n    floored: integer,\n    error: x - integer\n  };\n}\nfunction vtkInterpolationMathRound(x) {\n  return Math.round(x);\n} //----------------------------------------------------------------------------\n// Perform a clamp to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathClamp(a, b, c) {\n  var clamp = a <= c ? a : c;\n  clamp -= b;\n  clamp = clamp >= 0 ? clamp : 0;\n  return clamp;\n} //----------------------------------------------------------------------------\n// Perform a wrap to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathWrap(a, b, c) {\n  var range = c - b + 1;\n  var wrap = a - b;\n  wrap %= range; // required for some % implementations\n\n  wrap = wrap >= 0 ? wrap : wrap + range;\n  return wrap;\n} //----------------------------------------------------------------------------\n// Perform a mirror to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathMirror(a, b, c) {\n  var range = c - b;\n  var ifzero = range === 0 ? 1 : 0;\n  var range2 = 2 * range + ifzero;\n  var mirror = a - b;\n  mirror = mirror >= 0 ? mirror : -mirror;\n  mirror %= range2;\n  mirror = mirror <= range ? mirror : range2 - mirror;\n  return mirror;\n}\nvar InterpolationInfo = {\n  vtkInterpolationInfo: vtkInterpolationInfo,\n  vtkInterpolationWeights: vtkInterpolationWeights,\n  vtkInterpolationMathFloor: vtkInterpolationMathFloor,\n  vtkInterpolationMathRound: vtkInterpolationMathRound,\n  vtkInterpolationMathClamp: vtkInterpolationMathClamp,\n  vtkInterpolationMathWrap: vtkInterpolationMathWrap,\n  vtkInterpolationMathMirror: vtkInterpolationMathMirror\n};\nexport { InterpolationInfo as default, vtkInterpolationInfo, vtkInterpolationMathClamp, vtkInterpolationMathFloor, vtkInterpolationMathMirror, vtkInterpolationMathRound, vtkInterpolationMathWrap, vtkInterpolationWeights };","map":{"version":3,"names":["_defineProperty","ImageBorderMode","InterpolationMode","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkInterpolationInfo","pointer","extent","increments","scalarType","dataTypeSize","numberOfComponents","borderMode","CLAMP","interpolationMode","LINEAR","extraInfo","vtkInterpolationWeights","positions","weights","weightExtent","kernelSize","workspace","lastY","lastZ","vtkInterpolationMathFloor","x","integer","Math","floor","floored","error","vtkInterpolationMathRound","round","vtkInterpolationMathClamp","a","b","c","clamp","vtkInterpolationMathWrap","range","wrap","vtkInterpolationMathMirror","ifzero","range2","mirror","InterpolationInfo","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Imaging/Core/AbstractImageInterpolator/InterpolationInfo.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { ImageBorderMode, InterpolationMode } from './Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkInterpolationInfo = {\n  pointer: null,\n  extent: [0, -1, 0, -1, 0, -1],\n  increments: [0, 0, 0],\n  scalarType: null,\n  // dataType\n  dataTypeSize: 1,\n  // BYTES_PER_ELEMENT\n  numberOfComponents: 1,\n  borderMode: ImageBorderMode.CLAMP,\n  interpolationMode: InterpolationMode.LINEAR,\n  extraInfo: null\n};\nvar vtkInterpolationWeights = _objectSpread(_objectSpread({}, vtkInterpolationInfo), {}, {\n  positions: [0, 0, 0],\n  weights: null,\n  weightExtent: [0, -1, 0, -1, 0, -1],\n  kernelSize: [1, 1, 1],\n  workspace: null,\n  lastY: null,\n  lastZ: null\n});\nfunction vtkInterpolationMathFloor(x) {\n  var integer = Math.floor(x);\n  return {\n    floored: integer,\n    error: x - integer\n  };\n}\nfunction vtkInterpolationMathRound(x) {\n  return Math.round(x);\n} //----------------------------------------------------------------------------\n// Perform a clamp to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathClamp(a, b, c) {\n  var clamp = a <= c ? a : c;\n  clamp -= b;\n  clamp = clamp >= 0 ? clamp : 0;\n  return clamp;\n} //----------------------------------------------------------------------------\n// Perform a wrap to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathWrap(a, b, c) {\n  var range = c - b + 1;\n  var wrap = a - b;\n  wrap %= range; // required for some % implementations\n\n  wrap = wrap >= 0 ? wrap : wrap + range;\n  return wrap;\n} //----------------------------------------------------------------------------\n// Perform a mirror to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathMirror(a, b, c) {\n  var range = c - b;\n  var ifzero = range === 0 ? 1 : 0;\n  var range2 = 2 * range + ifzero;\n  var mirror = a - b;\n  mirror = mirror >= 0 ? mirror : -mirror;\n  mirror %= range2;\n  mirror = mirror <= range ? mirror : range2 - mirror;\n  return mirror;\n}\nvar InterpolationInfo = {\n  vtkInterpolationInfo: vtkInterpolationInfo,\n  vtkInterpolationWeights: vtkInterpolationWeights,\n  vtkInterpolationMathFloor: vtkInterpolationMathFloor,\n  vtkInterpolationMathRound: vtkInterpolationMathRound,\n  vtkInterpolationMathClamp: vtkInterpolationMathClamp,\n  vtkInterpolationMathWrap: vtkInterpolationMathWrap,\n  vtkInterpolationMathMirror: vtkInterpolationMathMirror\n};\n\nexport { InterpolationInfo as default, vtkInterpolationInfo, vtkInterpolationMathClamp, vtkInterpolationMathFloor, vtkInterpolationMathMirror, vtkInterpolationMathRound, vtkInterpolationMathWrap, vtkInterpolationWeights };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
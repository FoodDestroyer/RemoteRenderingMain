{"ast":null,"code":"var _jsxFileName = \"/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport vtkWSLinkClient from 'vtk.js/Sources/IO/Core/WSLinkClient';\nimport vtkImageStream from 'vtk.js/Sources/Imaging/Core/ImageStream';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VTKClient = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const client = vtkWSLinkClient.newInstance({\n      w3cwebsocket: window.WebSocket\n    });\n    const stream = vtkImageStream.newInstance();\n\n    // Configure WSLinkClient to connect to your server\n    client.begin({\n      serverBaseUrl: 'ws://localhost:7500'\n    });\n\n    // Attach the stream to the container\n    stream.setContainer(containerRef.current);\n\n    // Connect the stream to the WSLinkClient\n    stream.connect(client.getConnection());\n    return () => {\n      stream.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(VTKClient, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = VTKClient;\nexport default VTKClient;\nvar _c;\n$RefreshReg$(_c, \"VTKClient\");","map":{"version":3,"names":["React","useRef","useEffect","vtkWSLinkClient","vtkImageStream","jsxDEV","_jsxDEV","VTKClient","_s","containerRef","client","newInstance","w3cwebsocket","window","WebSocket","stream","begin","serverBaseUrl","setContainer","current","connect","getConnection","disconnect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport vtkWSLinkClient from 'vtk.js/Sources/IO/Core/WSLinkClient';\nimport vtkImageStream from 'vtk.js/Sources/Imaging/Core/ImageStream';\n\nconst VTKClient = () => {\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const client = vtkWSLinkClient.newInstance({ w3cwebsocket: window.WebSocket });\n    const stream = vtkImageStream.newInstance();\n\n    // Configure WSLinkClient to connect to your server\n    client.begin({ serverBaseUrl: 'ws://localhost:7500' });\n\n    // Attach the stream to the container\n    stream.setContainer(containerRef.current);\n\n    // Connect the stream to the WSLinkClient\n    stream.connect(client.getConnection());\n\n    return () => {\n      stream.disconnect();\n    };\n  }, []);\n\n  return <div ref={containerRef} />;\n};\n\nexport default VTKClient;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,eAAe,MAAM,qCAAqC;AACjE,OAAOC,cAAc,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEjCC,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAGP,eAAe,CAACQ,WAAW,CAAC;MAAEC,YAAY,EAAEC,MAAM,CAACC;IAAU,CAAC,CAAC;IAC9E,MAAMC,MAAM,GAAGX,cAAc,CAACO,WAAW,CAAC,CAAC;;IAE3C;IACAD,MAAM,CAACM,KAAK,CAAC;MAAEC,aAAa,EAAE;IAAsB,CAAC,CAAC;;IAEtD;IACAF,MAAM,CAACG,YAAY,CAACT,YAAY,CAACU,OAAO,CAAC;;IAEzC;IACAJ,MAAM,CAACK,OAAO,CAACV,MAAM,CAACW,aAAa,CAAC,CAAC,CAAC;IAEtC,OAAO,MAAM;MACXN,MAAM,CAACO,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhB,OAAA;IAAKiB,GAAG,EAAEd;EAAa;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAACnB,EAAA,CAtBID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
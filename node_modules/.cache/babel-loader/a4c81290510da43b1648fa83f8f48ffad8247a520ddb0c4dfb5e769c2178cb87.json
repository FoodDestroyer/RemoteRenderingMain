{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkCutter from '../../Filters/Core/Cutter.js';\nimport vtkImageMapper from '../../Rendering/Core/ImageMapper.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkPlane from '../../Common/DataModel/Plane.js';\nimport vtkAbstractRepresentationProxy from '../Core/AbstractRepresentationProxy.js';\n\n// vtkSlicedGeometryRepresentationProxy methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSlicedGeometryRepresentationProxy(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSlicedGeometryRepresentationProxy'); // Internals\n\n  model.plane = vtkPlane.newInstance();\n  model.cutter = vtkCutter.newInstance();\n  model.cutter.setCutFunction(model.plane);\n  model.mapper = vtkMapper.newInstance();\n  model.actor = vtkActor.newInstance();\n  model.property = model.actor.getProperty();\n  model.property.setLighting(false); // connect rendering pipeline\n\n  model.mapper.setInputConnection(model.cutter.getOutputPort());\n  model.actor.setMapper(model.mapper);\n  model.actors.push(model.actor); // Keep things updated\n\n  model.sourceDependencies.push(model.cutter); // API ----------------------------------------------------------------------\n\n  publicAPI.setSlice = function () {\n    var slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var stateModified = model.slice !== slice;\n    model.slice = slice;\n    var n = model.plane.getNormal();\n    var planeModified = model.plane.setOrigin(n[0] * slice, n[1] * slice, n[2] * slice);\n    if (planeModified || stateModified) {\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.setOffset = function () {\n    var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var stateModified = model.offset !== offset;\n    model.offset = offset;\n    var normal = model.plane.getNormal();\n    var actorModified = model.actor.setPosition(offset * normal[0], offset * normal[1], offset * normal[2]);\n    if (actorModified || stateModified) {\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.setSlicingMode = function (mode) {\n    if (model.slicingMode === mode || !mode) {\n      console.log('skip setSlicingMode', mode);\n      return;\n    }\n    model.slicingMode = mode;\n    switch (vtkImageMapper.SlicingMode[mode]) {\n      case vtkImageMapper.SlicingMode.X:\n        model.plane.setNormal(1, 0, 0);\n        break;\n      case vtkImageMapper.SlicingMode.Y:\n        model.plane.setNormal(0, 1, 0);\n        break;\n      case vtkImageMapper.SlicingMode.Z:\n        model.plane.setNormal(0, 0, 1);\n        break;\n      default:\n        return;\n    } // Reslice properly along that new axis\n\n    var alreadyModified = publicAPI.setSlice(model.slice);\n    alreadyModified = publicAPI.setOffset(model.offset) || alreadyModified; // Update pipeline\n\n    if (!alreadyModified) {\n      publicAPI.modified();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  slicingMode: vtkImageMapper.SlicingMode.NONE,\n  slice: 0,\n  offset: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkAbstractRepresentationProxy.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['slicingMode', 'slice', 'offset']); // Object specific methods\n\n  vtkSlicedGeometryRepresentationProxy(publicAPI, model); // Map proxy properties\n\n  macro.proxyPropertyState(publicAPI, model);\n  macro.proxyPropertyMapping(publicAPI, model, {\n    opacity: {\n      modelKey: 'property',\n      property: 'opacity'\n    },\n    visibility: {\n      modelKey: 'actor',\n      property: 'visibility'\n    },\n    color: {\n      modelKey: 'property',\n      property: 'diffuseColor'\n    },\n    useShadow: {\n      modelKey: 'property',\n      property: 'lighting'\n    },\n    useBounds: {\n      modelKey: 'actor',\n      property: 'useBounds'\n    }\n  });\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSlicedGeometryRepresentationProxy'); // ----------------------------------------------------------------------------\n\nvar vtkSlicedGeometryRepresentationProxy$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkSlicedGeometryRepresentationProxy$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkActor","vtkCutter","vtkImageMapper","vtkMapper","vtkPlane","vtkAbstractRepresentationProxy","vtkSlicedGeometryRepresentationProxy","publicAPI","model","classHierarchy","push","plane","newInstance","cutter","setCutFunction","mapper","actor","property","getProperty","setLighting","setInputConnection","getOutputPort","setMapper","actors","sourceDependencies","setSlice","slice","arguments","length","undefined","stateModified","n","getNormal","planeModified","setOrigin","modified","setOffset","offset","normal","actorModified","setPosition","setSlicingMode","mode","slicingMode","console","log","SlicingMode","X","setNormal","Y","Z","alreadyModified","DEFAULT_VALUES","NONE","extend","initialValues","Object","assign","get","proxyPropertyState","proxyPropertyMapping","opacity","modelKey","visibility","color","useShadow","useBounds","vtkSlicedGeometryRepresentationProxy$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Proxy/Representations/SlicedGeometryRepresentationProxy.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkCutter from '../../Filters/Core/Cutter.js';\nimport vtkImageMapper from '../../Rendering/Core/ImageMapper.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkPlane from '../../Common/DataModel/Plane.js';\nimport vtkAbstractRepresentationProxy from '../Core/AbstractRepresentationProxy.js';\n\n// vtkSlicedGeometryRepresentationProxy methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSlicedGeometryRepresentationProxy(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSlicedGeometryRepresentationProxy'); // Internals\n\n  model.plane = vtkPlane.newInstance();\n  model.cutter = vtkCutter.newInstance();\n  model.cutter.setCutFunction(model.plane);\n  model.mapper = vtkMapper.newInstance();\n  model.actor = vtkActor.newInstance();\n  model.property = model.actor.getProperty();\n  model.property.setLighting(false); // connect rendering pipeline\n\n  model.mapper.setInputConnection(model.cutter.getOutputPort());\n  model.actor.setMapper(model.mapper);\n  model.actors.push(model.actor); // Keep things updated\n\n  model.sourceDependencies.push(model.cutter); // API ----------------------------------------------------------------------\n\n  publicAPI.setSlice = function () {\n    var slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var stateModified = model.slice !== slice;\n    model.slice = slice;\n    var n = model.plane.getNormal();\n    var planeModified = model.plane.setOrigin(n[0] * slice, n[1] * slice, n[2] * slice);\n\n    if (planeModified || stateModified) {\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.setOffset = function () {\n    var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var stateModified = model.offset !== offset;\n    model.offset = offset;\n    var normal = model.plane.getNormal();\n    var actorModified = model.actor.setPosition(offset * normal[0], offset * normal[1], offset * normal[2]);\n\n    if (actorModified || stateModified) {\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.setSlicingMode = function (mode) {\n    if (model.slicingMode === mode || !mode) {\n      console.log('skip setSlicingMode', mode);\n      return;\n    }\n\n    model.slicingMode = mode;\n\n    switch (vtkImageMapper.SlicingMode[mode]) {\n      case vtkImageMapper.SlicingMode.X:\n        model.plane.setNormal(1, 0, 0);\n        break;\n\n      case vtkImageMapper.SlicingMode.Y:\n        model.plane.setNormal(0, 1, 0);\n        break;\n\n      case vtkImageMapper.SlicingMode.Z:\n        model.plane.setNormal(0, 0, 1);\n        break;\n\n      default:\n        return;\n    } // Reslice properly along that new axis\n\n\n    var alreadyModified = publicAPI.setSlice(model.slice);\n    alreadyModified = publicAPI.setOffset(model.offset) || alreadyModified; // Update pipeline\n\n    if (!alreadyModified) {\n      publicAPI.modified();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  slicingMode: vtkImageMapper.SlicingMode.NONE,\n  slice: 0,\n  offset: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkAbstractRepresentationProxy.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['slicingMode', 'slice', 'offset']); // Object specific methods\n\n  vtkSlicedGeometryRepresentationProxy(publicAPI, model); // Map proxy properties\n\n  macro.proxyPropertyState(publicAPI, model);\n  macro.proxyPropertyMapping(publicAPI, model, {\n    opacity: {\n      modelKey: 'property',\n      property: 'opacity'\n    },\n    visibility: {\n      modelKey: 'actor',\n      property: 'visibility'\n    },\n    color: {\n      modelKey: 'property',\n      property: 'diffuseColor'\n    },\n    useShadow: {\n      modelKey: 'property',\n      property: 'lighting'\n    },\n    useBounds: {\n      modelKey: 'actor',\n      property: 'useBounds'\n    }\n  });\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSlicedGeometryRepresentationProxy'); // ----------------------------------------------------------------------------\n\nvar vtkSlicedGeometryRepresentationProxy$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkSlicedGeometryRepresentationProxy$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from '../../macros.js';\nimport { r as radiansFromDegrees } from '../Core/Math/index.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkCone methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCone(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCone');\n  publicAPI.evaluateFunction = function (x) {\n    var tanTheta = Math.tan(radiansFromDegrees(model.angle));\n    var retVal = x[1] * x[1] + x[2] * x[2] - x[0] * x[0] * tanTheta * tanTheta;\n    return retVal;\n  };\n  publicAPI.evaluateGradient = function (x) {\n    var tanTheta = Math.tan(radiansFromDegrees(model.angle));\n    var retVal = [-2.0 * x[0] * tanTheta * tanTheta, 2.0 * x[1], 2.0 * x[2]];\n    return retVal;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  angle: 15.0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['angle']);\n  vtkCone(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCone'); // ----------------------------------------------------------------------------\n\nvar vtkCone$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkCone$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","r","radiansFromDegrees","vtkCone","publicAPI","model","classHierarchy","push","evaluateFunction","x","tanTheta","Math","tan","angle","retVal","evaluateGradient","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","newInstance","vtkCone$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/Cone.js"],"sourcesContent":["import macro from '../../macros.js';\nimport { r as radiansFromDegrees } from '../Core/Math/index.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkCone methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCone(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCone');\n\n  publicAPI.evaluateFunction = function (x) {\n    var tanTheta = Math.tan(radiansFromDegrees(model.angle));\n    var retVal = x[1] * x[1] + x[2] * x[2] - x[0] * x[0] * tanTheta * tanTheta;\n    return retVal;\n  };\n\n  publicAPI.evaluateGradient = function (x) {\n    var tanTheta = Math.tan(radiansFromDegrees(model.angle));\n    var retVal = [-2.0 * x[0] * tanTheta * tanTheta, 2.0 * x[1], 2.0 * x[2]];\n    return retVal;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  angle: 15.0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['angle']);\n  vtkCone(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCone'); // ----------------------------------------------------------------------------\n\nvar vtkCone$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkCone$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,SAASC,CAAC,IAAIC,kBAAkB,QAAQ,uBAAuB;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAOA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACjC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,SAAS,CAAC;EAEpCH,SAAS,CAACI,gBAAgB,GAAG,UAAUC,CAAC,EAAE;IACxC,IAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACV,kBAAkB,CAACG,KAAK,CAACQ,KAAK,CAAC,CAAC;IACxD,IAAIC,MAAM,GAAGL,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGC,QAAQ,GAAGA,QAAQ;IAC1E,OAAOI,MAAM;EACf,CAAC;EAEDV,SAAS,CAACW,gBAAgB,GAAG,UAAUN,CAAC,EAAE;IACxC,IAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACV,kBAAkB,CAACG,KAAK,CAACQ,KAAK,CAAC,CAAC;IACxD,IAAIC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAGL,CAAC,CAAC,CAAC,CAAC,GAAGC,QAAQ,GAAGA,QAAQ,EAAE,GAAG,GAAGD,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,OAAOK,MAAM;EACf,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIE,cAAc,GAAG;EACnBH,KAAK,EAAE;AACT,CAAC,CAAC,CAAC;;AAEH,SAASI,MAAMA,CAACb,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIa,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAAClB,KAAK,EAAEW,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErDlB,KAAK,CAACwB,GAAG,CAACpB,SAAS,EAAEC,KAAK,CAAC;EAC3BL,KAAK,CAACyB,MAAM,CAACrB,SAAS,EAAEC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC;EACzCF,OAAO,CAACC,SAAS,EAAEC,KAAK,CAAC;AAC3B,CAAC,CAAC;;AAEF,IAAIqB,WAAW,GAAG1B,KAAK,CAAC0B,WAAW,CAACT,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;;AAExD,IAAIU,SAAS,GAAG;EACdD,WAAW,EAAEA,WAAW;EACxBT,MAAM,EAAEA;AACV,CAAC;AAED,SAASU,SAAS,IAAIC,OAAO,EAAEX,MAAM,EAAES,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { newInstance as newInstance$1, obj, get, setGet, event } from '../../macros.js';\nimport DataAccessHelper from '../Core/DataAccessHelper.js';\nimport vtkTexture from '../../Rendering/Core/Texture.js';\nimport '../Core/DataAccessHelper/LiteHttpDataAccessHelper.js';\n\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + gz\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n// ----------------------------------------------------------------------------\n// vtkMTLReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMTLReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMTLReader');\n  function imageReady() {\n    model.requestCount--;\n    if (model.requestCount === 0) {\n      publicAPI.invokeBusy(false);\n    }\n  }\n  function parseLine(line) {\n    if (line[0] === '#' || line.length === 0) {\n      return;\n    }\n    var tokens = line.split(/[ \\t]+/).map(function (s) {\n      return s.trim();\n    }).filter(function (s) {\n      return s.length;\n    });\n    if (tokens[0] === 'newmtl') {\n      tokens.shift();\n      model.currentMaterial = tokens.join(' ').trim();\n    } else if (model.currentMaterial) {\n      if (tokens.length < 2) {\n        return;\n      }\n      if (!model.materials[model.currentMaterial]) {\n        model.materials[model.currentMaterial] = {};\n      }\n      model.materials[model.currentMaterial][tokens[0]] = tokens.slice(1);\n      if (tokens[0] === 'map_Kd') {\n        var image = new Image();\n        image.onload = function () {\n          return setTimeout(imageReady, 0);\n        };\n        image.src = [model.baseURL, tokens[1]].join('/');\n        model.materials[model.currentMaterial].image = image;\n        model.requestCount++;\n      }\n    }\n  } // Create default dataAccessHelper if not available\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  } // Internal method to fetch Array\n\n  function fetchData(url, options) {\n    return model.dataAccessHelper.fetchText(publicAPI, url, options);\n  } // Set DataSet url\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (url.indexOf('.mtl') === -1 && !option.fullpath) {\n      model.baseURL = url;\n      model.url = \"\".concat(url, \"/index.mtl\");\n    } else {\n      model.url = url; // Remove the file in the URL\n\n      var path = url.split('/');\n      path.pop();\n      model.baseURL = path.join('/');\n    } // Fetch metadata\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n  publicAPI.loadData = function (option) {\n    return new Promise(function (resolve, reject) {\n      fetchData(model.url, option).then(function (content) {\n        publicAPI.parseAsText(content);\n        resolve();\n      }, function (err) {\n        reject();\n      });\n    });\n  };\n  publicAPI.parseAsText = function (content) {\n    publicAPI.modified();\n    model.materials = {};\n    content.split('\\n').forEach(parseLine);\n  }; // return Busy state\n\n  publicAPI.isBusy = function () {\n    return !!model.requestCount;\n  };\n  publicAPI.getMaterialNames = function () {\n    return Object.keys(model.materials);\n  };\n  publicAPI.getMaterial = function (name) {\n    return model.materials[name];\n  };\n  publicAPI.listImages = function () {\n    return Object.keys(model.materials).map(function (name) {\n      return model.materials[name].map_Kd;\n    }).filter(function (fileName) {\n      return !!fileName;\n    }).map(function (s) {\n      return s[0].trim();\n    });\n  };\n  publicAPI.setImageSrc = function (imagePath, src) {\n    return new Promise(function (resolve, reject) {\n      var selectedName = Object.keys(model.materials).find(function (name) {\n        return model.materials[name].map_Kd && model.materials[name].map_Kd[0].trim() === imagePath.trim();\n      });\n      var material = model.materials[selectedName];\n      if (material && material.image) {\n        material.image.src = src;\n        material.image.onload = function () {\n          return setTimeout(resolve, 0);\n        };\n      } else {\n        resolve();\n      }\n    });\n  };\n  publicAPI.applyMaterialToActor = function (name, actor) {\n    var material = model.materials[name];\n    if (material && actor) {\n      var white = [1, 1, 1];\n      var actorProp = {\n        ambientColor: material.Ka ? material.Ka.map(function (i) {\n          return Number(i);\n        }) : white,\n        specularColor: material.Ks ? material.Ks.map(function (i) {\n          return Number(i);\n        }) : white,\n        diffuseColor: material.Kd ? material.Kd.map(function (i) {\n          return Number(i);\n        }) : white,\n        opacity: material.d ? Number(material.d) : 1,\n        specularPower: material.Ns ? Number(material.Ns) : 1\n      };\n      var illum = Number(material.illum || 2);\n      ['ambient', 'diffuse', 'specular'].forEach(function (k, idx) {\n        actorProp[k] = idx <= illum ? 1.0 : 0.0;\n      });\n      if (material.image) {\n        var texture = vtkTexture.newInstance({\n          interpolate: model.interpolateTextures\n        });\n        texture.setImage(material.image);\n        actor.addTexture(texture);\n      }\n      actor.getProperty().set(actorProp);\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  numberOfOutputs: 1,\n  requestCount: 0,\n  materials: {},\n  interpolateTextures: true // baseURL: null,\n  // dataAccessHelper: null,\n  // url: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  get(publicAPI, model, ['url', 'baseURL']);\n  setGet(publicAPI, model, ['dataAccessHelper', 'interpolateTextures', 'splitGroup']);\n  event(publicAPI, model, 'busy'); // Object methods\n\n  vtkMTLReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkMTLReader'); // ----------------------------------------------------------------------------\n\nvar vtkMTLReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkMTLReader$1 as default, extend, newInstance };","map":{"version":3,"names":["newInstance","newInstance$1","obj","get","setGet","event","DataAccessHelper","vtkTexture","vtkMTLReader","publicAPI","model","classHierarchy","push","imageReady","requestCount","invokeBusy","parseLine","line","length","tokens","split","map","s","trim","filter","shift","currentMaterial","join","materials","slice","image","Image","onload","setTimeout","src","baseURL","dataAccessHelper","fetchData","url","options","fetchText","setUrl","option","arguments","undefined","indexOf","fullpath","concat","path","pop","loadData","Promise","resolve","reject","then","content","parseAsText","err","modified","forEach","isBusy","getMaterialNames","Object","keys","getMaterial","name","listImages","map_Kd","fileName","setImageSrc","imagePath","selectedName","find","material","applyMaterialToActor","actor","white","actorProp","ambientColor","Ka","i","Number","specularColor","Ks","diffuseColor","Kd","opacity","d","specularPower","Ns","illum","k","idx","texture","interpolate","interpolateTextures","setImage","addTexture","getProperty","set","DEFAULT_VALUES","numberOfOutputs","extend","initialValues","assign","vtkMTLReader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Misc/MTLReader.js"],"sourcesContent":["import { newInstance as newInstance$1, obj, get, setGet, event } from '../../macros.js';\nimport DataAccessHelper from '../Core/DataAccessHelper.js';\nimport vtkTexture from '../../Rendering/Core/Texture.js';\nimport '../Core/DataAccessHelper/LiteHttpDataAccessHelper.js';\n\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + gz\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n// ----------------------------------------------------------------------------\n// vtkMTLReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMTLReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMTLReader');\n\n  function imageReady() {\n    model.requestCount--;\n\n    if (model.requestCount === 0) {\n      publicAPI.invokeBusy(false);\n    }\n  }\n\n  function parseLine(line) {\n    if (line[0] === '#' || line.length === 0) {\n      return;\n    }\n\n    var tokens = line.split(/[ \\t]+/).map(function (s) {\n      return s.trim();\n    }).filter(function (s) {\n      return s.length;\n    });\n\n    if (tokens[0] === 'newmtl') {\n      tokens.shift();\n      model.currentMaterial = tokens.join(' ').trim();\n    } else if (model.currentMaterial) {\n      if (tokens.length < 2) {\n        return;\n      }\n\n      if (!model.materials[model.currentMaterial]) {\n        model.materials[model.currentMaterial] = {};\n      }\n\n      model.materials[model.currentMaterial][tokens[0]] = tokens.slice(1);\n\n      if (tokens[0] === 'map_Kd') {\n        var image = new Image();\n\n        image.onload = function () {\n          return setTimeout(imageReady, 0);\n        };\n\n        image.src = [model.baseURL, tokens[1]].join('/');\n        model.materials[model.currentMaterial].image = image;\n        model.requestCount++;\n      }\n    }\n  } // Create default dataAccessHelper if not available\n\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  } // Internal method to fetch Array\n\n\n  function fetchData(url, options) {\n    return model.dataAccessHelper.fetchText(publicAPI, url, options);\n  } // Set DataSet url\n\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (url.indexOf('.mtl') === -1 && !option.fullpath) {\n      model.baseURL = url;\n      model.url = \"\".concat(url, \"/index.mtl\");\n    } else {\n      model.url = url; // Remove the file in the URL\n\n      var path = url.split('/');\n      path.pop();\n      model.baseURL = path.join('/');\n    } // Fetch metadata\n\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n\n  publicAPI.loadData = function (option) {\n    return new Promise(function (resolve, reject) {\n      fetchData(model.url, option).then(function (content) {\n        publicAPI.parseAsText(content);\n        resolve();\n      }, function (err) {\n        reject();\n      });\n    });\n  };\n\n  publicAPI.parseAsText = function (content) {\n    publicAPI.modified();\n    model.materials = {};\n    content.split('\\n').forEach(parseLine);\n  }; // return Busy state\n\n\n  publicAPI.isBusy = function () {\n    return !!model.requestCount;\n  };\n\n  publicAPI.getMaterialNames = function () {\n    return Object.keys(model.materials);\n  };\n\n  publicAPI.getMaterial = function (name) {\n    return model.materials[name];\n  };\n\n  publicAPI.listImages = function () {\n    return Object.keys(model.materials).map(function (name) {\n      return model.materials[name].map_Kd;\n    }).filter(function (fileName) {\n      return !!fileName;\n    }).map(function (s) {\n      return s[0].trim();\n    });\n  };\n\n  publicAPI.setImageSrc = function (imagePath, src) {\n    return new Promise(function (resolve, reject) {\n      var selectedName = Object.keys(model.materials).find(function (name) {\n        return model.materials[name].map_Kd && model.materials[name].map_Kd[0].trim() === imagePath.trim();\n      });\n      var material = model.materials[selectedName];\n\n      if (material && material.image) {\n        material.image.src = src;\n\n        material.image.onload = function () {\n          return setTimeout(resolve, 0);\n        };\n      } else {\n        resolve();\n      }\n    });\n  };\n\n  publicAPI.applyMaterialToActor = function (name, actor) {\n    var material = model.materials[name];\n\n    if (material && actor) {\n      var white = [1, 1, 1];\n      var actorProp = {\n        ambientColor: material.Ka ? material.Ka.map(function (i) {\n          return Number(i);\n        }) : white,\n        specularColor: material.Ks ? material.Ks.map(function (i) {\n          return Number(i);\n        }) : white,\n        diffuseColor: material.Kd ? material.Kd.map(function (i) {\n          return Number(i);\n        }) : white,\n        opacity: material.d ? Number(material.d) : 1,\n        specularPower: material.Ns ? Number(material.Ns) : 1\n      };\n      var illum = Number(material.illum || 2);\n      ['ambient', 'diffuse', 'specular'].forEach(function (k, idx) {\n        actorProp[k] = idx <= illum ? 1.0 : 0.0;\n      });\n\n      if (material.image) {\n        var texture = vtkTexture.newInstance({\n          interpolate: model.interpolateTextures\n        });\n        texture.setImage(material.image);\n        actor.addTexture(texture);\n      }\n\n      actor.getProperty().set(actorProp);\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  numberOfOutputs: 1,\n  requestCount: 0,\n  materials: {},\n  interpolateTextures: true // baseURL: null,\n  // dataAccessHelper: null,\n  // url: null,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  get(publicAPI, model, ['url', 'baseURL']);\n  setGet(publicAPI, model, ['dataAccessHelper', 'interpolateTextures', 'splitGroup']);\n  event(publicAPI, model, 'busy'); // Object methods\n\n  vtkMTLReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkMTLReader'); // ----------------------------------------------------------------------------\n\nvar vtkMTLReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkMTLReader$1 as default, extend, newInstance };\n"],"mappings":"AAAA,SAASA,WAAW,IAAIC,aAAa,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AACvF,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,UAAU,MAAM,iCAAiC;AACxD,OAAO,sDAAsD;;AAE7D;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAYA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACtC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,cAAc,CAAC;EAEzC,SAASC,UAAUA,CAAA,EAAG;IACpBH,KAAK,CAACI,YAAY,EAAE;IAEpB,IAAIJ,KAAK,CAACI,YAAY,KAAK,CAAC,EAAE;MAC5BL,SAAS,CAACM,UAAU,CAAC,KAAK,CAAC;IAC7B;EACF;EAEA,SAASC,SAASA,CAACC,IAAI,EAAE;IACvB,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MACxC;IACF;IAEA,IAAIC,MAAM,GAAGF,IAAI,CAACG,KAAK,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;MACjD,OAAOA,CAAC,CAACC,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC,CAACC,MAAM,CAAC,UAAUF,CAAC,EAAE;MACrB,OAAOA,CAAC,CAACJ,MAAM;IACjB,CAAC,CAAC;IAEF,IAAIC,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC1BA,MAAM,CAACM,KAAK,CAAC,CAAC;MACdf,KAAK,CAACgB,eAAe,GAAGP,MAAM,CAACQ,IAAI,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC,CAAC;IACjD,CAAC,MAAM,IAAIb,KAAK,CAACgB,eAAe,EAAE;MAChC,IAAIP,MAAM,CAACD,MAAM,GAAG,CAAC,EAAE;QACrB;MACF;MAEA,IAAI,CAACR,KAAK,CAACkB,SAAS,CAAClB,KAAK,CAACgB,eAAe,CAAC,EAAE;QAC3ChB,KAAK,CAACkB,SAAS,CAAClB,KAAK,CAACgB,eAAe,CAAC,GAAG,CAAC,CAAC;MAC7C;MAEAhB,KAAK,CAACkB,SAAS,CAAClB,KAAK,CAACgB,eAAe,CAAC,CAACP,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGA,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC;MAEnE,IAAIV,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC1B,IAAIW,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;QAEvBD,KAAK,CAACE,MAAM,GAAG,YAAY;UACzB,OAAOC,UAAU,CAACpB,UAAU,EAAE,CAAC,CAAC;QAClC,CAAC;QAEDiB,KAAK,CAACI,GAAG,GAAG,CAACxB,KAAK,CAACyB,OAAO,EAAEhB,MAAM,CAAC,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,GAAG,CAAC;QAChDjB,KAAK,CAACkB,SAAS,CAAClB,KAAK,CAACgB,eAAe,CAAC,CAACI,KAAK,GAAGA,KAAK;QACpDpB,KAAK,CAACI,YAAY,EAAE;MACtB;IACF;EACF,CAAC,CAAC;;EAGF,IAAI,CAACJ,KAAK,CAAC0B,gBAAgB,EAAE;IAC3B1B,KAAK,CAAC0B,gBAAgB,GAAG9B,gBAAgB,CAACH,GAAG,CAAC,MAAM,CAAC;EACvD,CAAC,CAAC;;EAGF,SAASkC,SAASA,CAACC,GAAG,EAAEC,OAAO,EAAE;IAC/B,OAAO7B,KAAK,CAAC0B,gBAAgB,CAACI,SAAS,CAAC/B,SAAS,EAAE6B,GAAG,EAAEC,OAAO,CAAC;EAClE,CAAC,CAAC;;EAGF9B,SAAS,CAACgC,MAAM,GAAG,UAAUH,GAAG,EAAE;IAChC,IAAII,MAAM,GAAGC,SAAS,CAACzB,MAAM,GAAG,CAAC,IAAIyB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAEnF,IAAIL,GAAG,CAACO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAACH,MAAM,CAACI,QAAQ,EAAE;MAClDpC,KAAK,CAACyB,OAAO,GAAGG,GAAG;MACnB5B,KAAK,CAAC4B,GAAG,GAAG,EAAE,CAACS,MAAM,CAACT,GAAG,EAAE,YAAY,CAAC;IAC1C,CAAC,MAAM;MACL5B,KAAK,CAAC4B,GAAG,GAAGA,GAAG,CAAC,CAAC;;MAEjB,IAAIU,IAAI,GAAGV,GAAG,CAAClB,KAAK,CAAC,GAAG,CAAC;MACzB4B,IAAI,CAACC,GAAG,CAAC,CAAC;MACVvC,KAAK,CAACyB,OAAO,GAAGa,IAAI,CAACrB,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,CAAC;;IAGF,OAAOlB,SAAS,CAACyC,QAAQ,CAACR,MAAM,CAAC;EACnC,CAAC,CAAC,CAAC;;EAGHjC,SAAS,CAACyC,QAAQ,GAAG,UAAUR,MAAM,EAAE;IACrC,OAAO,IAAIS,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;MAC5ChB,SAAS,CAAC3B,KAAK,CAAC4B,GAAG,EAAEI,MAAM,CAAC,CAACY,IAAI,CAAC,UAAUC,OAAO,EAAE;QACnD9C,SAAS,CAAC+C,WAAW,CAACD,OAAO,CAAC;QAC9BH,OAAO,CAAC,CAAC;MACX,CAAC,EAAE,UAAUK,GAAG,EAAE;QAChBJ,MAAM,CAAC,CAAC;MACV,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED5C,SAAS,CAAC+C,WAAW,GAAG,UAAUD,OAAO,EAAE;IACzC9C,SAAS,CAACiD,QAAQ,CAAC,CAAC;IACpBhD,KAAK,CAACkB,SAAS,GAAG,CAAC,CAAC;IACpB2B,OAAO,CAACnC,KAAK,CAAC,IAAI,CAAC,CAACuC,OAAO,CAAC3C,SAAS,CAAC;EACxC,CAAC,CAAC,CAAC;;EAGHP,SAAS,CAACmD,MAAM,GAAG,YAAY;IAC7B,OAAO,CAAC,CAAClD,KAAK,CAACI,YAAY;EAC7B,CAAC;EAEDL,SAAS,CAACoD,gBAAgB,GAAG,YAAY;IACvC,OAAOC,MAAM,CAACC,IAAI,CAACrD,KAAK,CAACkB,SAAS,CAAC;EACrC,CAAC;EAEDnB,SAAS,CAACuD,WAAW,GAAG,UAAUC,IAAI,EAAE;IACtC,OAAOvD,KAAK,CAACkB,SAAS,CAACqC,IAAI,CAAC;EAC9B,CAAC;EAEDxD,SAAS,CAACyD,UAAU,GAAG,YAAY;IACjC,OAAOJ,MAAM,CAACC,IAAI,CAACrD,KAAK,CAACkB,SAAS,CAAC,CAACP,GAAG,CAAC,UAAU4C,IAAI,EAAE;MACtD,OAAOvD,KAAK,CAACkB,SAAS,CAACqC,IAAI,CAAC,CAACE,MAAM;IACrC,CAAC,CAAC,CAAC3C,MAAM,CAAC,UAAU4C,QAAQ,EAAE;MAC5B,OAAO,CAAC,CAACA,QAAQ;IACnB,CAAC,CAAC,CAAC/C,GAAG,CAAC,UAAUC,CAAC,EAAE;MAClB,OAAOA,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAEDd,SAAS,CAAC4D,WAAW,GAAG,UAAUC,SAAS,EAAEpC,GAAG,EAAE;IAChD,OAAO,IAAIiB,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;MAC5C,IAAIkB,YAAY,GAAGT,MAAM,CAACC,IAAI,CAACrD,KAAK,CAACkB,SAAS,CAAC,CAAC4C,IAAI,CAAC,UAAUP,IAAI,EAAE;QACnE,OAAOvD,KAAK,CAACkB,SAAS,CAACqC,IAAI,CAAC,CAACE,MAAM,IAAIzD,KAAK,CAACkB,SAAS,CAACqC,IAAI,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC5C,IAAI,CAAC,CAAC,KAAK+C,SAAS,CAAC/C,IAAI,CAAC,CAAC;MACpG,CAAC,CAAC;MACF,IAAIkD,QAAQ,GAAG/D,KAAK,CAACkB,SAAS,CAAC2C,YAAY,CAAC;MAE5C,IAAIE,QAAQ,IAAIA,QAAQ,CAAC3C,KAAK,EAAE;QAC9B2C,QAAQ,CAAC3C,KAAK,CAACI,GAAG,GAAGA,GAAG;QAExBuC,QAAQ,CAAC3C,KAAK,CAACE,MAAM,GAAG,YAAY;UAClC,OAAOC,UAAU,CAACmB,OAAO,EAAE,CAAC,CAAC;QAC/B,CAAC;MACH,CAAC,MAAM;QACLA,OAAO,CAAC,CAAC;MACX;IACF,CAAC,CAAC;EACJ,CAAC;EAED3C,SAAS,CAACiE,oBAAoB,GAAG,UAAUT,IAAI,EAAEU,KAAK,EAAE;IACtD,IAAIF,QAAQ,GAAG/D,KAAK,CAACkB,SAAS,CAACqC,IAAI,CAAC;IAEpC,IAAIQ,QAAQ,IAAIE,KAAK,EAAE;MACrB,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACrB,IAAIC,SAAS,GAAG;QACdC,YAAY,EAAEL,QAAQ,CAACM,EAAE,GAAGN,QAAQ,CAACM,EAAE,CAAC1D,GAAG,CAAC,UAAU2D,CAAC,EAAE;UACvD,OAAOC,MAAM,CAACD,CAAC,CAAC;QAClB,CAAC,CAAC,GAAGJ,KAAK;QACVM,aAAa,EAAET,QAAQ,CAACU,EAAE,GAAGV,QAAQ,CAACU,EAAE,CAAC9D,GAAG,CAAC,UAAU2D,CAAC,EAAE;UACxD,OAAOC,MAAM,CAACD,CAAC,CAAC;QAClB,CAAC,CAAC,GAAGJ,KAAK;QACVQ,YAAY,EAAEX,QAAQ,CAACY,EAAE,GAAGZ,QAAQ,CAACY,EAAE,CAAChE,GAAG,CAAC,UAAU2D,CAAC,EAAE;UACvD,OAAOC,MAAM,CAACD,CAAC,CAAC;QAClB,CAAC,CAAC,GAAGJ,KAAK;QACVU,OAAO,EAAEb,QAAQ,CAACc,CAAC,GAAGN,MAAM,CAACR,QAAQ,CAACc,CAAC,CAAC,GAAG,CAAC;QAC5CC,aAAa,EAAEf,QAAQ,CAACgB,EAAE,GAAGR,MAAM,CAACR,QAAQ,CAACgB,EAAE,CAAC,GAAG;MACrD,CAAC;MACD,IAAIC,KAAK,GAAGT,MAAM,CAACR,QAAQ,CAACiB,KAAK,IAAI,CAAC,CAAC;MACvC,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC/B,OAAO,CAAC,UAAUgC,CAAC,EAAEC,GAAG,EAAE;QAC3Df,SAAS,CAACc,CAAC,CAAC,GAAGC,GAAG,IAAIF,KAAK,GAAG,GAAG,GAAG,GAAG;MACzC,CAAC,CAAC;MAEF,IAAIjB,QAAQ,CAAC3C,KAAK,EAAE;QAClB,IAAI+D,OAAO,GAAGtF,UAAU,CAACP,WAAW,CAAC;UACnC8F,WAAW,EAAEpF,KAAK,CAACqF;QACrB,CAAC,CAAC;QACFF,OAAO,CAACG,QAAQ,CAACvB,QAAQ,CAAC3C,KAAK,CAAC;QAChC6C,KAAK,CAACsB,UAAU,CAACJ,OAAO,CAAC;MAC3B;MAEAlB,KAAK,CAACuB,WAAW,CAAC,CAAC,CAACC,GAAG,CAACtB,SAAS,CAAC;IACpC;EACF,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIuB,cAAc,GAAG;EACnBC,eAAe,EAAE,CAAC;EAClBvF,YAAY,EAAE,CAAC;EACfc,SAAS,EAAE,CAAC,CAAC;EACbmE,mBAAmB,EAAE,IAAI,CAAC;EAC1B;EACA;AAEF,CAAC,CAAC,CAAC;;AAEH,SAASO,MAAMA,CAAC7F,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAI6F,aAAa,GAAG5D,SAAS,CAACzB,MAAM,GAAG,CAAC,IAAIyB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FmB,MAAM,CAAC0C,MAAM,CAAC9F,KAAK,EAAE0F,cAAc,EAAEG,aAAa,CAAC,CAAC,CAAC;;EAErDrG,GAAG,CAACO,SAAS,EAAEC,KAAK,CAAC;EACrBP,GAAG,CAACM,SAAS,EAAEC,KAAK,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;EACzCN,MAAM,CAACK,SAAS,EAAEC,KAAK,EAAE,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,YAAY,CAAC,CAAC;EACnFL,KAAK,CAACI,SAAS,EAAEC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;;EAEjCF,YAAY,CAACC,SAAS,EAAEC,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF,IAAIV,WAAW,GAAGC,aAAa,CAACqG,MAAM,EAAE,cAAc,CAAC,CAAC,CAAC;;AAEzD,IAAIG,cAAc,GAAG;EACnBzG,WAAW,EAAEA,WAAW;EACxBsG,MAAM,EAAEA;AACV,CAAC;AAED,SAASG,cAAc,IAAIC,OAAO,EAAEJ,MAAM,EAAEtG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
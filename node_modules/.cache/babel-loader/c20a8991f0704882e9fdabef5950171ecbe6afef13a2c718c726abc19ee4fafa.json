{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { s as subtract, n as norm } from '../../Common/Core/Math/index.js';\nvar vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkLineSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLineSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLineSource');\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    var dataset = outData[0]; // Check input\n\n    var pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;\n    var pd = vtkPolyData.newInstance();\n    var v21 = [];\n    subtract(model.point2, model.point1, v21);\n    if (norm(v21) <= 0.0) {\n      vtkWarningMacro('Zero-length line definition');\n      return;\n    } // hand create a line with special scalars\n\n    var res = model.resolution;\n    var numPts = res + 1; // Points\n\n    var points = macro.newTypedArray(pointDataType, numPts * 3);\n    pd.getPoints().setData(points, 3); // Cells\n\n    var lines = new Uint32Array(numPts + 1);\n    pd.getLines().setData(lines, 1);\n    var idx = 0;\n    var t = 0.0;\n    for (var i = 0; i < res + 1; i++) {\n      t = i / res;\n      points[idx * 3] = model.point1[0] + t * v21[0];\n      points[idx * 3 + 1] = model.point1[1] + t * v21[1];\n      points[idx * 3 + 2] = model.point1[2] + t * v21[2];\n      idx++;\n    } // Generate line connectivity\n    //\n\n    idx = 0;\n    lines[0] = numPts;\n    for (var _i = 0; _i < numPts; _i++) {\n      lines[_i + 1] = _i;\n    } // Update output\n\n    outData[0] = pd;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  resolution: 10,\n  point1: [-1, 0, 0],\n  point2: [1, 0, 0],\n  pointType: 'Float64Array'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['resolution']);\n  macro.setGetArray(publicAPI, model, ['point1', 'point2'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkLineSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLineSource'); // ----------------------------------------------------------------------------\n\nvar vtkLineSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkLineSource$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkPolyData","s","subtract","n","norm","vtkWarningMacro","vtkLineSource","publicAPI","model","classHierarchy","push","requestData","inData","outData","deleted","dataset","pointDataType","getPoints","getDataType","pointType","pd","newInstance","v21","point2","point1","res","resolution","numPts","points","newTypedArray","setData","lines","Uint32Array","getLines","idx","t","i","_i","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","setGetArray","algo","vtkLineSource$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/Sources/LineSource.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { s as subtract, n as norm } from '../../Common/Core/Math/index.js';\n\nvar vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkLineSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLineSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLineSource');\n\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n\n    var dataset = outData[0]; // Check input\n\n    var pointDataType = dataset ? dataset.getPoints().getDataType() : model.pointType;\n    var pd = vtkPolyData.newInstance();\n    var v21 = [];\n    subtract(model.point2, model.point1, v21);\n\n    if (norm(v21) <= 0.0) {\n      vtkWarningMacro('Zero-length line definition');\n      return;\n    } // hand create a line with special scalars\n\n\n    var res = model.resolution;\n    var numPts = res + 1; // Points\n\n    var points = macro.newTypedArray(pointDataType, numPts * 3);\n    pd.getPoints().setData(points, 3); // Cells\n\n    var lines = new Uint32Array(numPts + 1);\n    pd.getLines().setData(lines, 1);\n    var idx = 0;\n    var t = 0.0;\n\n    for (var i = 0; i < res + 1; i++) {\n      t = i / res;\n      points[idx * 3] = model.point1[0] + t * v21[0];\n      points[idx * 3 + 1] = model.point1[1] + t * v21[1];\n      points[idx * 3 + 2] = model.point1[2] + t * v21[2];\n      idx++;\n    } // Generate line connectivity\n    //\n\n\n    idx = 0;\n    lines[0] = numPts;\n\n    for (var _i = 0; _i < numPts; _i++) {\n      lines[_i + 1] = _i;\n    } // Update output\n\n\n    outData[0] = pd;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  resolution: 10,\n  point1: [-1, 0, 0],\n  point2: [1, 0, 0],\n  pointType: 'Float64Array'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['resolution']);\n  macro.setGetArray(publicAPI, model, ['point1', 'point2'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkLineSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLineSource'); // ----------------------------------------------------------------------------\n\nvar vtkLineSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkLineSource$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
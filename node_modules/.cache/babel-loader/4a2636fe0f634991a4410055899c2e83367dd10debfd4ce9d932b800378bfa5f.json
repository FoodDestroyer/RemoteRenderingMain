{"ast":null,"code":"import macro from '../../macros.js';\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkSpline1D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSpline1D(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkSpline1D'); // --------------------------------------------------------------------------\n\n  publicAPI.computeCloseCoefficients = function (size, work, x, y) {\n    vtkErrorMacro(\"\".concat(model.classHierarchy.slice(-1)[0], \" should implement computeCloseCoefficients\"));\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.computeOpenCoefficients = function (size, work, x, y) {\n    vtkErrorMacro(\"\".concat(model.classHierarchy.slice(-1)[0], \" should implement computeOpenCoefficients\"));\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.getValue = function (intervalIndex, t) {\n    vtkErrorMacro(\"\".concat(model.classHierarchy.slice(-1)[0], \" should implement getValue\"));\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  vtkSpline1D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSpline1D'); // ----------------------------------------------------------------------------\n\nvar vtkSpline1D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkSpline1D$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkErrorMacro","vtkSpline1D","publicAPI","model","classHierarchy","push","computeCloseCoefficients","size","work","x","y","concat","slice","computeOpenCoefficients","getValue","intervalIndex","t","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","newInstance","vtkSpline1D$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/Spline1D.js"],"sourcesContent":["import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkSpline1D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSpline1D(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkSpline1D'); // --------------------------------------------------------------------------\n\n  publicAPI.computeCloseCoefficients = function (size, work, x, y) {\n    vtkErrorMacro(\"\".concat(model.classHierarchy.slice(-1)[0], \" should implement computeCloseCoefficients\"));\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.computeOpenCoefficients = function (size, work, x, y) {\n    vtkErrorMacro(\"\".concat(model.classHierarchy.slice(-1)[0], \" should implement computeOpenCoefficients\"));\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.getValue = function (intervalIndex, t) {\n    vtkErrorMacro(\"\".concat(model.classHierarchy.slice(-1)[0], \" should implement getValue\"));\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  vtkSpline1D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSpline1D'); // ----------------------------------------------------------------------------\n\nvar vtkSpline1D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkSpline1D$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,IAAIC,aAAa,GAAGD,KAAK,CAACC,aAAa,CAAC,CAAC;AACzC;AACA;;AAEA,SAASC,WAAWA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACrC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;;EAE1CH,SAAS,CAACI,wBAAwB,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAE;IAC/DV,aAAa,CAAC,EAAE,CAACW,MAAM,CAACR,KAAK,CAACC,cAAc,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,4CAA4C,CAAC,CAAC;EAC3G,CAAC,CAAC,CAAC;;EAGHV,SAAS,CAACW,uBAAuB,GAAG,UAAUN,IAAI,EAAEC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAE;IAC9DV,aAAa,CAAC,EAAE,CAACW,MAAM,CAACR,KAAK,CAACC,cAAc,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,2CAA2C,CAAC,CAAC;EAC1G,CAAC,CAAC,CAAC;;EAGHV,SAAS,CAACY,QAAQ,GAAG,UAAUC,aAAa,EAAEC,CAAC,EAAE;IAC/ChB,aAAa,CAAC,EAAE,CAACW,MAAM,CAACR,KAAK,CAACC,cAAc,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,4BAA4B,CAAC,CAAC;EAC3F,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIK,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;;AAEzB,SAASC,MAAMA,CAAChB,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIgB,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAACrB,KAAK,EAAEc,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErDpB,KAAK,CAAC0B,GAAG,CAACvB,SAAS,EAAEC,KAAK,CAAC;EAC3BF,WAAW,CAACC,SAAS,EAAEC,KAAK,CAAC;AAC/B,CAAC,CAAC;;AAEF,IAAIuB,WAAW,GAAG3B,KAAK,CAAC2B,WAAW,CAACR,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;;AAE5D,IAAIS,aAAa,GAAG;EAClBD,WAAW,EAAEA,WAAW;EACxBR,MAAM,EAAEA;AACV,CAAC;AAED,SAASS,aAAa,IAAIC,OAAO,EAAEV,MAAM,EAAEQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
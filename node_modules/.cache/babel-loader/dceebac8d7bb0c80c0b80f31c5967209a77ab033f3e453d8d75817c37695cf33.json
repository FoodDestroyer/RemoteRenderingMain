{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar INVALID_BOUNDS = [1, -1, 1, -1, 1, -1]; // ----------------------------------------------------------------------------\n// vtkPoints methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPoints(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPoints'); // Forwarding methods\n\n  publicAPI.getNumberOfPoints = publicAPI.getNumberOfTuples;\n  publicAPI.setNumberOfPoints = function (nbPoints) {\n    var dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    if (publicAPI.getNumberOfPoints() !== nbPoints) {\n      model.size = nbPoints * dimension;\n      model.values = macro.newTypedArray(model.dataType, model.size);\n      publicAPI.setNumberOfComponents(dimension);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.setPoint = function (idx) {\n    for (var _len = arguments.length, xyz = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      xyz[_key - 1] = arguments[_key];\n    }\n    publicAPI.setTuple(idx, xyz);\n  };\n  publicAPI.getPoint = publicAPI.getTuple;\n  publicAPI.insertNextPoint = function (x, y, z) {\n    return publicAPI.insertNextTuple([x, y, z]);\n  };\n  publicAPI.getBounds = function () {\n    if (publicAPI.getNumberOfComponents() === 3) {\n      var _xRange = publicAPI.getRange(0);\n      model.bounds[0] = _xRange[0];\n      model.bounds[1] = _xRange[1];\n      var _yRange = publicAPI.getRange(1);\n      model.bounds[2] = _yRange[0];\n      model.bounds[3] = _yRange[1];\n      var zRange = publicAPI.getRange(2);\n      model.bounds[4] = zRange[0];\n      model.bounds[5] = zRange[1];\n      return model.bounds;\n    }\n    if (publicAPI.getNumberOfComponents() !== 2) {\n      vtkErrorMacro(\"getBounds called on an array with components of\\n        \".concat(publicAPI.getNumberOfComponents()));\n      return INVALID_BOUNDS;\n    }\n    var xRange = publicAPI.getRange(0);\n    model.bounds[0] = xRange[0];\n    model.bounds[1] = xRange[1];\n    var yRange = publicAPI.getRange(1);\n    model.bounds[2] = yRange[0];\n    model.bounds[3] = yRange[1];\n    model.bounds[4] = 0;\n    model.bounds[5] = 0;\n    return model.bounds;\n  }; // Trigger the computation of bounds\n\n  publicAPI.computeBounds = publicAPI.getBounds; // Initialize\n\n  publicAPI.setNumberOfComponents(model.numberOfComponents < 2 ? 3 : model.numberOfComponents);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  empty: true,\n  numberOfComponents: 3,\n  dataType: VtkDataTypes.FLOAT,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkDataArray.extend(publicAPI, model, initialValues);\n  vtkPoints(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPoints'); // ----------------------------------------------------------------------------\n\nvar vtkPoints$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkPoints$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkDataArray","VtkDataTypes","vtkErrorMacro","INVALID_BOUNDS","vtkPoints","publicAPI","model","classHierarchy","push","getNumberOfPoints","getNumberOfTuples","setNumberOfPoints","nbPoints","dimension","arguments","length","undefined","size","values","newTypedArray","dataType","setNumberOfComponents","modified","setPoint","idx","_len","xyz","Array","_key","setTuple","getPoint","getTuple","insertNextPoint","x","y","z","insertNextTuple","getBounds","getNumberOfComponents","_xRange","getRange","bounds","_yRange","zRange","concat","xRange","yRange","computeBounds","numberOfComponents","DEFAULT_VALUES","empty","FLOAT","extend","initialValues","Object","assign","newInstance","vtkPoints$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/Core/Points.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar INVALID_BOUNDS = [1, -1, 1, -1, 1, -1]; // ----------------------------------------------------------------------------\n// vtkPoints methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPoints(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPoints'); // Forwarding methods\n\n  publicAPI.getNumberOfPoints = publicAPI.getNumberOfTuples;\n\n  publicAPI.setNumberOfPoints = function (nbPoints) {\n    var dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n    if (publicAPI.getNumberOfPoints() !== nbPoints) {\n      model.size = nbPoints * dimension;\n      model.values = macro.newTypedArray(model.dataType, model.size);\n      publicAPI.setNumberOfComponents(dimension);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setPoint = function (idx) {\n    for (var _len = arguments.length, xyz = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      xyz[_key - 1] = arguments[_key];\n    }\n\n    publicAPI.setTuple(idx, xyz);\n  };\n\n  publicAPI.getPoint = publicAPI.getTuple;\n\n  publicAPI.insertNextPoint = function (x, y, z) {\n    return publicAPI.insertNextTuple([x, y, z]);\n  };\n\n  publicAPI.getBounds = function () {\n    if (publicAPI.getNumberOfComponents() === 3) {\n      var _xRange = publicAPI.getRange(0);\n\n      model.bounds[0] = _xRange[0];\n      model.bounds[1] = _xRange[1];\n\n      var _yRange = publicAPI.getRange(1);\n\n      model.bounds[2] = _yRange[0];\n      model.bounds[3] = _yRange[1];\n      var zRange = publicAPI.getRange(2);\n      model.bounds[4] = zRange[0];\n      model.bounds[5] = zRange[1];\n      return model.bounds;\n    }\n\n    if (publicAPI.getNumberOfComponents() !== 2) {\n      vtkErrorMacro(\"getBounds called on an array with components of\\n        \".concat(publicAPI.getNumberOfComponents()));\n      return INVALID_BOUNDS;\n    }\n\n    var xRange = publicAPI.getRange(0);\n    model.bounds[0] = xRange[0];\n    model.bounds[1] = xRange[1];\n    var yRange = publicAPI.getRange(1);\n    model.bounds[2] = yRange[0];\n    model.bounds[3] = yRange[1];\n    model.bounds[4] = 0;\n    model.bounds[5] = 0;\n    return model.bounds;\n  }; // Trigger the computation of bounds\n\n\n  publicAPI.computeBounds = publicAPI.getBounds; // Initialize\n\n  publicAPI.setNumberOfComponents(model.numberOfComponents < 2 ? 3 : model.numberOfComponents);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  empty: true,\n  numberOfComponents: 3,\n  dataType: VtkDataTypes.FLOAT,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkDataArray.extend(publicAPI, model, initialValues);\n  vtkPoints(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPoints'); // ----------------------------------------------------------------------------\n\nvar vtkPoints$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPoints$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
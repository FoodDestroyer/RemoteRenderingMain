{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkSpline1D from './Spline1D.js';\nimport { BoundaryCondition } from './Spline1D/Constants.js';\nvar VTK_EPSILON = 0.0001; // ----------------------------------------------------------------------------\n// vtkKochanekSpline1D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkKochanekSpline1D(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkKochanekSpline1D'); // --------------------------------------------------------------------------\n\n  publicAPI.computeCloseCoefficients = function (size, work, x, y) {\n    if (!model.coefficients || model.coefficients.length !== 4 * size) {\n      model.coefficients = new Float32Array(4 * size);\n    }\n    var N = size - 1;\n    for (var i = 1; i < N; i++) {\n      var _cs = y[i] - y[i - 1];\n      var _cd = y[i + 1] - y[i];\n      var _ds = _cs * ((1 - model.tension) * (1 - model.continuity) * (1 + model.bias)) + _cd * ((1 - model.tension) * (1 + model.continuity) * (1 - model.bias));\n      var _dd = _cs * ((1 - model.tension) * (1 + model.continuity) * (1 + model.bias)) + _cd * ((1 - model.tension) * (1 - model.continuity) * (1 - model.bias)); // adjust deriviatives for non uniform spacing between nodes\n\n      var _n = x[i + 1] - x[i];\n      var _n2 = x[i] - x[i - 1];\n      _ds *= _n2 / (_n2 + _n);\n      _dd *= _n / (_n2 + _n);\n      model.coefficients[4 * i + 0] = y[i];\n      model.coefficients[4 * i + 1] = _dd;\n      model.coefficients[4 * i + 2] = _ds;\n    } // Calculate the deriviatives at the end points\n\n    model.coefficients[4 * 0 + 0] = y[0];\n    model.coefficients[4 * N + 0] = y[N];\n    model.coefficients[4 * N + 1] = 0;\n    model.coefficients[4 * N + 2] = 0;\n    model.coefficients[4 * N + 3] = 0; // The curve is continuous and closed at P0=Pn\n\n    var cs = y[N] - y[N - 1];\n    var cd = y[1] - y[0];\n    var ds = cs * ((1 - model.tension) * (1 - model.continuity) * (1 + model.bias)) + cd * ((1 - model.tension) * (1 + model.continuity) * (1 - model.bias));\n    var dd = cs * ((1 - model.tension) * (1 + model.continuity) * (1 + model.bias)) + cd * ((1 - model.tension) * (1 - model.continuity) * (1 - model.bias)); // adjust deriviatives for non uniform spacing between nodes\n\n    var n1 = x[1] - x[0];\n    var n0 = x[N] - x[N - 1];\n    ds *= n0 / (n0 + n1);\n    dd *= n1 / (n0 + n1);\n    model.coefficients[4 * 0 + 1] = dd;\n    model.coefficients[4 * 0 + 2] = ds;\n    model.coefficients[4 * N + 1] = dd;\n    model.coefficients[4 * N + 2] = ds;\n    for (var _i = 0; _i < N; _i++) {\n      //\n      // c0    = P ;    c1    = DD ;\n      //   i      i       i       i\n      //\n      // c1    = P   ;  c2    = DS   ;\n      //   i+1    i+1     i+1     i+1\n      //\n      // c2  = -3P  + 3P    - 2DD  - DS   ;\n      //   i      i     i+1      i     i+1\n      //\n      // c3  =  2P  - 2P    +  DD  + DS   ;\n      //   i      i     i+1      i     i+1\n      //\n      model.coefficients[4 * _i + 2] = -3 * y[_i] + 3 * y[_i + 1] + -2 * model.coefficients[4 * _i + 1] + -1 * model.coefficients[4 * (_i + 1) + 2];\n      model.coefficients[4 * _i + 3] = 2 * y[_i] + -2 * y[_i + 1] + 1 * model.coefficients[4 * _i + 1] + 1 * model.coefficients[4 * (_i + 1) + 2];\n    }\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.computeOpenCoefficients = function (size, work, x, y) {\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    if (!model.coefficients || model.coefficients.length !== 4 * size) {\n      model.coefficients = new Float32Array(4 * size);\n    }\n    var N = size - 1;\n    for (var i = 1; i < N; i++) {\n      var cs = y[i] - y[i - 1];\n      var cd = y[i + 1] - y[i];\n      var ds = cs * ((1 - model.tension) * (1 - model.continuity) * (1 + model.bias)) + cd * ((1 - model.tension) * (1 + model.continuity) * (1 - model.bias));\n      var dd = cs * ((1 - model.tension) * (1 + model.continuity) * (1 + model.bias)) + cd * ((1 - model.tension) * (1 - model.continuity) * (1 - model.bias)); // adjust deriviatives for non uniform spacing between nodes\n\n      var n1 = x[i + 1] - x[i];\n      var n0 = x[i] - x[i - 1];\n      ds *= n0 / (n0 + n1);\n      dd *= n1 / (n0 + n1);\n      model.coefficients[4 * i + 0] = y[i];\n      model.coefficients[4 * i + 1] = dd;\n      model.coefficients[4 * i + 2] = ds;\n    }\n    model.coefficients[4 * 0 + 0] = y[0];\n    model.coefficients[4 * N + 0] = y[N]; // Calculate the deriviatives at the end points\n\n    switch (options.leftConstraint) {\n      // desired slope at leftmost point is leftValue\n      case BoundaryCondition.DERIVATIVE:\n        model.coefficients[4 * 0 + 1] = options.leftValue;\n        break;\n      case BoundaryCondition.SECOND_DERIVATIVE:\n        // desired second derivative at leftmost point is leftValue\n        model.coefficients[4 * 0 + 1] = (6 * (y[1] - y[0]) - 2 * model.coefficients[4 * 1 + 2] - options.leftValue) / 4;\n        break;\n      case BoundaryCondition.SECOND_DERIVATIVE_INTERIOR_POINT:\n        // desired second derivative at leftmost point is leftValue\n        // times second derivative at first interior point\n        if (Math.abs(options.leftValue + 2) > VTK_EPSILON) {\n          model.coefficients[4 * 0 + 1] = (3 * (1 + options.leftValue) * (y[1] - y[0]) - (1 + 2 * options.leftValue) * model.coefficients[4 * 1 + 2]) / (2 + options.leftValue);\n        } else {\n          model.coefficients[4 * 0 + 1] = 0.0;\n        }\n        break;\n      case BoundaryCondition.DEFAULT:\n      default:\n        // desired slope at leftmost point is derivative from two points\n        model.coefficients[4 * 0 + 1] = y[2] - y[0];\n        break;\n    }\n    switch (options.rightConstraint) {\n      case BoundaryCondition.DERIVATIVE:\n        // desired slope at rightmost point is leftValue\n        model.coefficients[4 * N + 2] = options.leftValue;\n        break;\n      case BoundaryCondition.SECOND_DERIVATIVE:\n        // desired second derivative at rightmost point is leftValue\n        model.coefficients[4 * N + 2] = (6 * (y[N] - y[N - 1]) - 2 * model.coefficients[4 * (N - 1) + 1] + options.leftValue) / 4.0;\n        break;\n      case BoundaryCondition.SECOND_DERIVATIVE_INTERIOR_POINT:\n        // desired second derivative at rightmost point is leftValue\n        // times second derivative at last interior point\n        if (Math.abs(options.leftValue + 2) > VTK_EPSILON) {\n          model.coefficients[4 * N + 2] = (3 * (1 + options.leftValue) * (y[N] - y[N - 1]) - (1 + 2 * options.leftValue) * model.coefficients[4 * (N - 1) + 1]) / (2 + options.leftValue);\n        } else {\n          model.coefficients[4 * N + 2] = 0.0;\n        }\n        break;\n      case BoundaryCondition.DEFAULT:\n      default:\n        // desired slope at rightmost point is rightValue\n        model.coefficients[4 * N + 2] = y[N] - y[N - 2];\n        break;\n    }\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      //\n      // c0    = P ;    c1    = DD ;\n      //   i      i       i       i\n      //\n      // c1    = P   ;  c2    = DS   ;\n      //   i+1    i+1     i+1     i+1\n      //\n      // c2  = -3P  + 3P    - 2DD  - DS   ;\n      //   i      i     i+1      i     i+1\n      //\n      // c3  =  2P  - 2P    +  DD  + DS   ;\n      //   i      i     i+1      i     i+1\n      //\n      model.coefficients[4 * _i2 + 2] = -3 * y[_i2] + 3 * y[_i2 + 1] + -2 * model.coefficients[4 * _i2 + 1] + -1 * model.coefficients[4 * (_i2 + 1) + 2];\n      model.coefficients[4 * _i2 + 3] = 2 * y[_i2] + -2 * y[_i2 + 1] + 1 * model.coefficients[4 * _i2 + 1] + 1 * model.coefficients[4 * (_i2 + 1) + 2];\n    }\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.getValue = function (intervalIndex, t) {\n    var t2 = t * t;\n    var t3 = t * t * t;\n    return model.coefficients[4 * intervalIndex + 3] * t3 + model.coefficients[4 * intervalIndex + 2] * t2 + model.coefficients[4 * intervalIndex + 1] * t + model.coefficients[4 * intervalIndex + 0];\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  tension: 0,\n  bias: 0,\n  continuity: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkSpline1D.extend(publicAPI, model, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  vtkKochanekSpline1D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkKochanekSpline1D'); // ----------------------------------------------------------------------------\n\nvar vtkKochanekSpline1D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkKochanekSpline1D$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkSpline1D","BoundaryCondition","VTK_EPSILON","vtkKochanekSpline1D","publicAPI","model","classHierarchy","push","computeCloseCoefficients","size","work","x","y","coefficients","length","Float32Array","N","i","_cs","_cd","_ds","tension","continuity","bias","_dd","_n","_n2","cs","cd","ds","dd","n1","n0","_i","computeOpenCoefficients","options","arguments","undefined","leftConstraint","DERIVATIVE","leftValue","SECOND_DERIVATIVE","SECOND_DERIVATIVE_INTERIOR_POINT","Math","abs","DEFAULT","rightConstraint","_i2","getValue","intervalIndex","t","t2","t3","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","newInstance","vtkKochanekSpline1D$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/KochanekSpline1D.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkSpline1D from './Spline1D.js';\nimport { BoundaryCondition } from './Spline1D/Constants.js';\n\nvar VTK_EPSILON = 0.0001; // ----------------------------------------------------------------------------\n// vtkKochanekSpline1D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkKochanekSpline1D(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkKochanekSpline1D'); // --------------------------------------------------------------------------\n\n  publicAPI.computeCloseCoefficients = function (size, work, x, y) {\n    if (!model.coefficients || model.coefficients.length !== 4 * size) {\n      model.coefficients = new Float32Array(4 * size);\n    }\n\n    var N = size - 1;\n\n    for (var i = 1; i < N; i++) {\n      var _cs = y[i] - y[i - 1];\n\n      var _cd = y[i + 1] - y[i];\n\n      var _ds = _cs * ((1 - model.tension) * (1 - model.continuity) * (1 + model.bias)) + _cd * ((1 - model.tension) * (1 + model.continuity) * (1 - model.bias));\n\n      var _dd = _cs * ((1 - model.tension) * (1 + model.continuity) * (1 + model.bias)) + _cd * ((1 - model.tension) * (1 - model.continuity) * (1 - model.bias)); // adjust deriviatives for non uniform spacing between nodes\n\n\n      var _n = x[i + 1] - x[i];\n\n      var _n2 = x[i] - x[i - 1];\n\n      _ds *= _n2 / (_n2 + _n);\n      _dd *= _n / (_n2 + _n);\n      model.coefficients[4 * i + 0] = y[i];\n      model.coefficients[4 * i + 1] = _dd;\n      model.coefficients[4 * i + 2] = _ds;\n    } // Calculate the deriviatives at the end points\n\n\n    model.coefficients[4 * 0 + 0] = y[0];\n    model.coefficients[4 * N + 0] = y[N];\n    model.coefficients[4 * N + 1] = 0;\n    model.coefficients[4 * N + 2] = 0;\n    model.coefficients[4 * N + 3] = 0; // The curve is continuous and closed at P0=Pn\n\n    var cs = y[N] - y[N - 1];\n    var cd = y[1] - y[0];\n    var ds = cs * ((1 - model.tension) * (1 - model.continuity) * (1 + model.bias)) + cd * ((1 - model.tension) * (1 + model.continuity) * (1 - model.bias));\n    var dd = cs * ((1 - model.tension) * (1 + model.continuity) * (1 + model.bias)) + cd * ((1 - model.tension) * (1 - model.continuity) * (1 - model.bias)); // adjust deriviatives for non uniform spacing between nodes\n\n    var n1 = x[1] - x[0];\n    var n0 = x[N] - x[N - 1];\n    ds *= n0 / (n0 + n1);\n    dd *= n1 / (n0 + n1);\n    model.coefficients[4 * 0 + 1] = dd;\n    model.coefficients[4 * 0 + 2] = ds;\n    model.coefficients[4 * N + 1] = dd;\n    model.coefficients[4 * N + 2] = ds;\n\n    for (var _i = 0; _i < N; _i++) {\n      //\n      // c0    = P ;    c1    = DD ;\n      //   i      i       i       i\n      //\n      // c1    = P   ;  c2    = DS   ;\n      //   i+1    i+1     i+1     i+1\n      //\n      // c2  = -3P  + 3P    - 2DD  - DS   ;\n      //   i      i     i+1      i     i+1\n      //\n      // c3  =  2P  - 2P    +  DD  + DS   ;\n      //   i      i     i+1      i     i+1\n      //\n      model.coefficients[4 * _i + 2] = -3 * y[_i] + 3 * y[_i + 1] + -2 * model.coefficients[4 * _i + 1] + -1 * model.coefficients[4 * (_i + 1) + 2];\n      model.coefficients[4 * _i + 3] = 2 * y[_i] + -2 * y[_i + 1] + 1 * model.coefficients[4 * _i + 1] + 1 * model.coefficients[4 * (_i + 1) + 2];\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.computeOpenCoefficients = function (size, work, x, y) {\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    if (!model.coefficients || model.coefficients.length !== 4 * size) {\n      model.coefficients = new Float32Array(4 * size);\n    }\n\n    var N = size - 1;\n\n    for (var i = 1; i < N; i++) {\n      var cs = y[i] - y[i - 1];\n      var cd = y[i + 1] - y[i];\n      var ds = cs * ((1 - model.tension) * (1 - model.continuity) * (1 + model.bias)) + cd * ((1 - model.tension) * (1 + model.continuity) * (1 - model.bias));\n      var dd = cs * ((1 - model.tension) * (1 + model.continuity) * (1 + model.bias)) + cd * ((1 - model.tension) * (1 - model.continuity) * (1 - model.bias)); // adjust deriviatives for non uniform spacing between nodes\n\n      var n1 = x[i + 1] - x[i];\n      var n0 = x[i] - x[i - 1];\n      ds *= n0 / (n0 + n1);\n      dd *= n1 / (n0 + n1);\n      model.coefficients[4 * i + 0] = y[i];\n      model.coefficients[4 * i + 1] = dd;\n      model.coefficients[4 * i + 2] = ds;\n    }\n\n    model.coefficients[4 * 0 + 0] = y[0];\n    model.coefficients[4 * N + 0] = y[N]; // Calculate the deriviatives at the end points\n\n    switch (options.leftConstraint) {\n      // desired slope at leftmost point is leftValue\n      case BoundaryCondition.DERIVATIVE:\n        model.coefficients[4 * 0 + 1] = options.leftValue;\n        break;\n\n      case BoundaryCondition.SECOND_DERIVATIVE:\n        // desired second derivative at leftmost point is leftValue\n        model.coefficients[4 * 0 + 1] = (6 * (y[1] - y[0]) - 2 * model.coefficients[4 * 1 + 2] - options.leftValue) / 4;\n        break;\n\n      case BoundaryCondition.SECOND_DERIVATIVE_INTERIOR_POINT:\n        // desired second derivative at leftmost point is leftValue\n        // times second derivative at first interior point\n        if (Math.abs(options.leftValue + 2) > VTK_EPSILON) {\n          model.coefficients[4 * 0 + 1] = (3 * (1 + options.leftValue) * (y[1] - y[0]) - (1 + 2 * options.leftValue) * model.coefficients[4 * 1 + 2]) / (2 + options.leftValue);\n        } else {\n          model.coefficients[4 * 0 + 1] = 0.0;\n        }\n\n        break;\n\n      case BoundaryCondition.DEFAULT:\n      default:\n        // desired slope at leftmost point is derivative from two points\n        model.coefficients[4 * 0 + 1] = y[2] - y[0];\n        break;\n    }\n\n    switch (options.rightConstraint) {\n      case BoundaryCondition.DERIVATIVE:\n        // desired slope at rightmost point is leftValue\n        model.coefficients[4 * N + 2] = options.leftValue;\n        break;\n\n      case BoundaryCondition.SECOND_DERIVATIVE:\n        // desired second derivative at rightmost point is leftValue\n        model.coefficients[4 * N + 2] = (6 * (y[N] - y[N - 1]) - 2 * model.coefficients[4 * (N - 1) + 1] + options.leftValue) / 4.0;\n        break;\n\n      case BoundaryCondition.SECOND_DERIVATIVE_INTERIOR_POINT:\n        // desired second derivative at rightmost point is leftValue\n        // times second derivative at last interior point\n        if (Math.abs(options.leftValue + 2) > VTK_EPSILON) {\n          model.coefficients[4 * N + 2] = (3 * (1 + options.leftValue) * (y[N] - y[N - 1]) - (1 + 2 * options.leftValue) * model.coefficients[4 * (N - 1) + 1]) / (2 + options.leftValue);\n        } else {\n          model.coefficients[4 * N + 2] = 0.0;\n        }\n\n        break;\n\n      case BoundaryCondition.DEFAULT:\n      default:\n        // desired slope at rightmost point is rightValue\n        model.coefficients[4 * N + 2] = y[N] - y[N - 2];\n        break;\n    }\n\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      //\n      // c0    = P ;    c1    = DD ;\n      //   i      i       i       i\n      //\n      // c1    = P   ;  c2    = DS   ;\n      //   i+1    i+1     i+1     i+1\n      //\n      // c2  = -3P  + 3P    - 2DD  - DS   ;\n      //   i      i     i+1      i     i+1\n      //\n      // c3  =  2P  - 2P    +  DD  + DS   ;\n      //   i      i     i+1      i     i+1\n      //\n      model.coefficients[4 * _i2 + 2] = -3 * y[_i2] + 3 * y[_i2 + 1] + -2 * model.coefficients[4 * _i2 + 1] + -1 * model.coefficients[4 * (_i2 + 1) + 2];\n      model.coefficients[4 * _i2 + 3] = 2 * y[_i2] + -2 * y[_i2 + 1] + 1 * model.coefficients[4 * _i2 + 1] + 1 * model.coefficients[4 * (_i2 + 1) + 2];\n    }\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.getValue = function (intervalIndex, t) {\n    var t2 = t * t;\n    var t3 = t * t * t;\n    return model.coefficients[4 * intervalIndex + 3] * t3 + model.coefficients[4 * intervalIndex + 2] * t2 + model.coefficients[4 * intervalIndex + 1] * t + model.coefficients[4 * intervalIndex + 0];\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  tension: 0,\n  bias: 0,\n  continuity: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkSpline1D.extend(publicAPI, model, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  vtkKochanekSpline1D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkKochanekSpline1D'); // ----------------------------------------------------------------------------\n\nvar vtkKochanekSpline1D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkKochanekSpline1D$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkInteractorStyleTrackballCamera from './InteractorStyleTrackballCamera.js';\nimport { r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport { States } from '../../Rendering/Core/InteractorStyle/Constants.js';\n\n// vtkInteractorStyleImage methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleImage(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleImage'); // Public API methods\n\n  publicAPI.superHandleMouseMove = publicAPI.handleMouseMove;\n  publicAPI.handleMouseMove = function (callData) {\n    var pos = callData.position;\n    var renderer = callData.pokedRenderer;\n    switch (model.state) {\n      case States.IS_WINDOW_LEVEL:\n        publicAPI.windowLevel(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n      case States.IS_SLICE:\n        publicAPI.slice(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n    }\n    publicAPI.superHandleMouseMove(callData);\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.superHandleLeftButtonPress = publicAPI.handleLeftButtonPress;\n  publicAPI.handleLeftButtonPress = function (callData) {\n    var pos = callData.position;\n    if (!callData.shiftKey && !callData.controlKey) {\n      model.windowLevelStartPosition[0] = pos.x;\n      model.windowLevelStartPosition[1] = pos.y; // Get the last (the topmost) image\n\n      publicAPI.setCurrentImageNumber(model.currentImageNumber);\n      var property = model.currentImageProperty;\n      if (property) {\n        model.windowLevelInitial[0] = property.getColorWindow();\n        model.windowLevelInitial[1] = property.getColorLevel();\n      }\n      publicAPI.startWindowLevel();\n    } else if (model.interactionMode === 'IMAGE3D' && callData.shiftKey) {\n      // If ctrl+shift or alt+shift is held down, dolly the camera\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startDolly();\n      } else {\n        // If shift is held down, rotate\n        publicAPI.startRotate();\n      }\n    } else if (model.interactionMode === 'IMAGE_SLICING' && callData.controlKey) {\n      // If ctrl is held down in slicing mode, slice the image\n      model.lastSlicePosition = pos.y;\n      publicAPI.startSlice();\n    } else {\n      // The rest of the button + key combinations remain the same\n      publicAPI.superHandleLeftButtonPress(callData);\n    }\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.superHandleLeftButtonRelease = publicAPI.handleLeftButtonRelease;\n  publicAPI.handleLeftButtonRelease = function () {\n    switch (model.state) {\n      case States.IS_WINDOW_LEVEL:\n        publicAPI.endWindowLevel();\n        break;\n      case States.IS_SLICE:\n        publicAPI.endSlice();\n        break;\n      default:\n        publicAPI.superHandleLeftButtonRelease();\n        break;\n    }\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleStartMouseWheel = function () {\n    publicAPI.startSlice();\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleEndMouseWheel = function () {\n    publicAPI.endSlice();\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleMouseWheel = function (callData) {\n    var camera = callData.pokedRenderer.getActiveCamera();\n    var distance = camera.getDistance();\n    distance += callData.spinY; // clamp the distance to the clipping range\n\n    var range = camera.getClippingRange();\n    if (distance < range[0]) {\n      distance = range[0];\n    }\n    if (distance > range[1]) {\n      distance = range[1];\n    }\n    camera.setDistance(distance);\n    var props = callData.pokedRenderer.getViewProps().filter(function (prop) {\n      return prop.isA('vtkImageSlice');\n    });\n    props.forEach(function (prop) {\n      if (prop.getMapper().isA('vtkImageResliceMapper')) {\n        var p = prop.getMapper().getSlicePlane();\n        if (p) {\n          p.push(callData.spinY);\n          p.modified();\n          prop.getMapper().modified();\n        }\n      }\n    });\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.windowLevel = function (renderer, position) {\n    model.windowLevelCurrentPosition[0] = position.x;\n    model.windowLevelCurrentPosition[1] = position.y;\n    var rwi = model._interactor;\n    if (model.currentImageProperty) {\n      var size = rwi.getView().getViewportSize(renderer);\n      var mWindow = model.windowLevelInitial[0];\n      var level = model.windowLevelInitial[1]; // Compute normalized delta\n\n      var dx = (model.windowLevelCurrentPosition[0] - model.windowLevelStartPosition[0]) * 4.0 / size[0];\n      var dy = (model.windowLevelStartPosition[1] - model.windowLevelCurrentPosition[1]) * 4.0 / size[1]; // Scale by current values\n\n      if (Math.abs(mWindow) > 0.01) {\n        dx *= mWindow;\n      } else {\n        dx *= mWindow < 0 ? -0.01 : 0.01;\n      }\n      if (Math.abs(level) > 0.01) {\n        dy *= level;\n      } else {\n        dy *= level < 0 ? -0.01 : 0.01;\n      } // Abs so that direction does not flip\n\n      if (mWindow < 0.0) {\n        dx *= -1;\n      }\n      if (level < 0.0) {\n        dy *= -1;\n      } // Compute new mWindow level\n\n      var newWindow = dx + mWindow;\n      var newLevel = level - dy;\n      if (newWindow < 0.01) {\n        newWindow = 0.01;\n      }\n      model.currentImageProperty.setColorWindow(newWindow);\n      model.currentImageProperty.setColorLevel(newLevel);\n    }\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.slice = function (renderer, position) {\n    var rwi = model._interactor;\n    var dy = position.y - model.lastSlicePosition;\n    var camera = renderer.getActiveCamera();\n    var range = camera.getClippingRange();\n    var distance = camera.getDistance(); // scale the interaction by the height of the viewport\n\n    var viewportHeight = 0.0;\n    if (camera.getParallelProjection()) {\n      viewportHeight = 2.0 * camera.getParallelScale();\n    } else {\n      var angle = radiansFromDegrees(camera.getViewAngle());\n      viewportHeight = 2.0 * distance * Math.tan(0.5 * angle);\n    }\n    var size = rwi.getView().getViewportSize(renderer);\n    var delta = dy * viewportHeight / size[1];\n    distance += delta; // clamp the distance to the clipping range\n\n    if (distance < range[0]) {\n      distance = range[0] + viewportHeight * 1e-3;\n    }\n    if (distance > range[1]) {\n      distance = range[1] - viewportHeight * 1e-3;\n    }\n    camera.setDistance(distance);\n    model.lastSlicePosition = position.y;\n  }; //----------------------------------------------------------------------------\n  // This is a way of dealing with images as if they were layers.\n  // It looks through the renderer's list of props and sets the\n  // interactor ivars from the Nth image that it finds.  You can\n  // also use negative numbers, i.e. -1 will return the last image,\n  // -2 will return the second-to-last image, etc.\n\n  publicAPI.setCurrentImageNumber = function (i) {\n    if (i === null) {\n      return;\n    }\n    var renderer = model._interactor.getCurrentRenderer();\n    if (!renderer) {\n      return;\n    }\n    model.currentImageNumber = i;\n    function propMatch(j, prop, targetIndex) {\n      return j === targetIndex && prop.getNestedPickable();\n    }\n    var props = renderer.getViewProps().filter(function (prop) {\n      return prop.isA('vtkImageSlice');\n    });\n    var targetIndex = i;\n    if (i < 0) {\n      targetIndex += props.length;\n    }\n    var imageProp = props.find(function (prop, index) {\n      return propMatch(index, prop, targetIndex);\n    });\n    if (imageProp) {\n      publicAPI.setCurrentImageProperty(imageProp.getProperty());\n    }\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.setCurrentImageProperty = function (imageProperty) {\n    model.currentImageProperty = imageProperty;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  windowLevelStartPosition: [0, 0],\n  windowLevelCurrentPosition: [0, 0],\n  lastSlicePosition: 0,\n  windowLevelInitial: [1.0, 0.5],\n  // currentImageProperty: null,\n  currentImageNumber: -1,\n  interactionMode: 'IMAGE2D',\n  xViewRightVector: [0, 1, 0],\n  xViewUpVector: [0, 0, -1],\n  yViewRightVector: [1, 0, 0],\n  yViewUpVector: [0, 0, -1],\n  zViewRightVector: [1, 0, 0],\n  zViewUpVector: [0, 1, 0]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkInteractorStyleTrackballCamera.extend(publicAPI, model, initialValues); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['interactionMode']);\n  macro.get(publicAPI, model, ['currentImageProperty']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkInteractorStyleImage(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkInteractorStyleImage'); // ----------------------------------------------------------------------------\n\nvar vtkInteractorStyleImage$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkInteractorStyleImage$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkInteractorStyleTrackballCamera","r","radiansFromDegrees","States","vtkInteractorStyleImage","publicAPI","model","classHierarchy","push","superHandleMouseMove","handleMouseMove","callData","pos","position","renderer","pokedRenderer","state","IS_WINDOW_LEVEL","windowLevel","invokeInteractionEvent","type","IS_SLICE","slice","superHandleLeftButtonPress","handleLeftButtonPress","shiftKey","controlKey","windowLevelStartPosition","x","y","setCurrentImageNumber","currentImageNumber","property","currentImageProperty","windowLevelInitial","getColorWindow","getColorLevel","startWindowLevel","interactionMode","altKey","startDolly","startRotate","lastSlicePosition","startSlice","superHandleLeftButtonRelease","handleLeftButtonRelease","endWindowLevel","endSlice","handleStartMouseWheel","handleEndMouseWheel","handleMouseWheel","camera","getActiveCamera","distance","getDistance","spinY","range","getClippingRange","setDistance","props","getViewProps","filter","prop","isA","forEach","getMapper","p","getSlicePlane","modified","windowLevelCurrentPosition","rwi","_interactor","size","getView","getViewportSize","mWindow","level","dx","dy","Math","abs","newWindow","newLevel","setColorWindow","setColorLevel","viewportHeight","getParallelProjection","getParallelScale","angle","getViewAngle","tan","delta","i","getCurrentRenderer","propMatch","j","targetIndex","getNestedPickable","length","imageProp","find","index","setCurrentImageProperty","getProperty","imageProperty","DEFAULT_VALUES","xViewRightVector","xViewUpVector","yViewRightVector","yViewUpVector","zViewRightVector","zViewUpVector","extend","initialValues","arguments","undefined","Object","assign","setGet","get","newInstance","vtkInteractorStyleImage$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleImage.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkInteractorStyleTrackballCamera from './InteractorStyleTrackballCamera.js';\nimport { r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport { States } from '../../Rendering/Core/InteractorStyle/Constants.js';\n\n// vtkInteractorStyleImage methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleImage(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleImage'); // Public API methods\n\n  publicAPI.superHandleMouseMove = publicAPI.handleMouseMove;\n\n  publicAPI.handleMouseMove = function (callData) {\n    var pos = callData.position;\n    var renderer = callData.pokedRenderer;\n\n    switch (model.state) {\n      case States.IS_WINDOW_LEVEL:\n        publicAPI.windowLevel(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n\n      case States.IS_SLICE:\n        publicAPI.slice(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n    }\n\n    publicAPI.superHandleMouseMove(callData);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.superHandleLeftButtonPress = publicAPI.handleLeftButtonPress;\n\n  publicAPI.handleLeftButtonPress = function (callData) {\n    var pos = callData.position;\n\n    if (!callData.shiftKey && !callData.controlKey) {\n      model.windowLevelStartPosition[0] = pos.x;\n      model.windowLevelStartPosition[1] = pos.y; // Get the last (the topmost) image\n\n      publicAPI.setCurrentImageNumber(model.currentImageNumber);\n      var property = model.currentImageProperty;\n\n      if (property) {\n        model.windowLevelInitial[0] = property.getColorWindow();\n        model.windowLevelInitial[1] = property.getColorLevel();\n      }\n\n      publicAPI.startWindowLevel();\n    } else if (model.interactionMode === 'IMAGE3D' && callData.shiftKey) {\n      // If ctrl+shift or alt+shift is held down, dolly the camera\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startDolly();\n      } else {\n        // If shift is held down, rotate\n        publicAPI.startRotate();\n      }\n    } else if (model.interactionMode === 'IMAGE_SLICING' && callData.controlKey) {\n      // If ctrl is held down in slicing mode, slice the image\n      model.lastSlicePosition = pos.y;\n      publicAPI.startSlice();\n    } else {\n      // The rest of the button + key combinations remain the same\n      publicAPI.superHandleLeftButtonPress(callData);\n    }\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.superHandleLeftButtonRelease = publicAPI.handleLeftButtonRelease;\n\n  publicAPI.handleLeftButtonRelease = function () {\n    switch (model.state) {\n      case States.IS_WINDOW_LEVEL:\n        publicAPI.endWindowLevel();\n        break;\n\n      case States.IS_SLICE:\n        publicAPI.endSlice();\n        break;\n\n      default:\n        publicAPI.superHandleLeftButtonRelease();\n        break;\n    }\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleStartMouseWheel = function () {\n    publicAPI.startSlice();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndMouseWheel = function () {\n    publicAPI.endSlice();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseWheel = function (callData) {\n    var camera = callData.pokedRenderer.getActiveCamera();\n    var distance = camera.getDistance();\n    distance += callData.spinY; // clamp the distance to the clipping range\n\n    var range = camera.getClippingRange();\n\n    if (distance < range[0]) {\n      distance = range[0];\n    }\n\n    if (distance > range[1]) {\n      distance = range[1];\n    }\n\n    camera.setDistance(distance);\n    var props = callData.pokedRenderer.getViewProps().filter(function (prop) {\n      return prop.isA('vtkImageSlice');\n    });\n    props.forEach(function (prop) {\n      if (prop.getMapper().isA('vtkImageResliceMapper')) {\n        var p = prop.getMapper().getSlicePlane();\n\n        if (p) {\n          p.push(callData.spinY);\n          p.modified();\n          prop.getMapper().modified();\n        }\n      }\n    });\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.windowLevel = function (renderer, position) {\n    model.windowLevelCurrentPosition[0] = position.x;\n    model.windowLevelCurrentPosition[1] = position.y;\n    var rwi = model._interactor;\n\n    if (model.currentImageProperty) {\n      var size = rwi.getView().getViewportSize(renderer);\n      var mWindow = model.windowLevelInitial[0];\n      var level = model.windowLevelInitial[1]; // Compute normalized delta\n\n      var dx = (model.windowLevelCurrentPosition[0] - model.windowLevelStartPosition[0]) * 4.0 / size[0];\n      var dy = (model.windowLevelStartPosition[1] - model.windowLevelCurrentPosition[1]) * 4.0 / size[1]; // Scale by current values\n\n      if (Math.abs(mWindow) > 0.01) {\n        dx *= mWindow;\n      } else {\n        dx *= mWindow < 0 ? -0.01 : 0.01;\n      }\n\n      if (Math.abs(level) > 0.01) {\n        dy *= level;\n      } else {\n        dy *= level < 0 ? -0.01 : 0.01;\n      } // Abs so that direction does not flip\n\n\n      if (mWindow < 0.0) {\n        dx *= -1;\n      }\n\n      if (level < 0.0) {\n        dy *= -1;\n      } // Compute new mWindow level\n\n\n      var newWindow = dx + mWindow;\n      var newLevel = level - dy;\n\n      if (newWindow < 0.01) {\n        newWindow = 0.01;\n      }\n\n      model.currentImageProperty.setColorWindow(newWindow);\n      model.currentImageProperty.setColorLevel(newLevel);\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.slice = function (renderer, position) {\n    var rwi = model._interactor;\n    var dy = position.y - model.lastSlicePosition;\n    var camera = renderer.getActiveCamera();\n    var range = camera.getClippingRange();\n    var distance = camera.getDistance(); // scale the interaction by the height of the viewport\n\n    var viewportHeight = 0.0;\n\n    if (camera.getParallelProjection()) {\n      viewportHeight = 2.0 * camera.getParallelScale();\n    } else {\n      var angle = radiansFromDegrees(camera.getViewAngle());\n      viewportHeight = 2.0 * distance * Math.tan(0.5 * angle);\n    }\n\n    var size = rwi.getView().getViewportSize(renderer);\n    var delta = dy * viewportHeight / size[1];\n    distance += delta; // clamp the distance to the clipping range\n\n    if (distance < range[0]) {\n      distance = range[0] + viewportHeight * 1e-3;\n    }\n\n    if (distance > range[1]) {\n      distance = range[1] - viewportHeight * 1e-3;\n    }\n\n    camera.setDistance(distance);\n    model.lastSlicePosition = position.y;\n  }; //----------------------------------------------------------------------------\n  // This is a way of dealing with images as if they were layers.\n  // It looks through the renderer's list of props and sets the\n  // interactor ivars from the Nth image that it finds.  You can\n  // also use negative numbers, i.e. -1 will return the last image,\n  // -2 will return the second-to-last image, etc.\n\n\n  publicAPI.setCurrentImageNumber = function (i) {\n    if (i === null) {\n      return;\n    }\n\n    var renderer = model._interactor.getCurrentRenderer();\n\n    if (!renderer) {\n      return;\n    }\n\n    model.currentImageNumber = i;\n\n    function propMatch(j, prop, targetIndex) {\n      return j === targetIndex && prop.getNestedPickable();\n    }\n\n    var props = renderer.getViewProps().filter(function (prop) {\n      return prop.isA('vtkImageSlice');\n    });\n    var targetIndex = i;\n\n    if (i < 0) {\n      targetIndex += props.length;\n    }\n\n    var imageProp = props.find(function (prop, index) {\n      return propMatch(index, prop, targetIndex);\n    });\n\n    if (imageProp) {\n      publicAPI.setCurrentImageProperty(imageProp.getProperty());\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.setCurrentImageProperty = function (imageProperty) {\n    model.currentImageProperty = imageProperty;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  windowLevelStartPosition: [0, 0],\n  windowLevelCurrentPosition: [0, 0],\n  lastSlicePosition: 0,\n  windowLevelInitial: [1.0, 0.5],\n  // currentImageProperty: null,\n  currentImageNumber: -1,\n  interactionMode: 'IMAGE2D',\n  xViewRightVector: [0, 1, 0],\n  xViewUpVector: [0, 0, -1],\n  yViewRightVector: [1, 0, 0],\n  yViewUpVector: [0, 0, -1],\n  zViewRightVector: [1, 0, 0],\n  zViewUpVector: [0, 1, 0]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkInteractorStyleTrackballCamera.extend(publicAPI, model, initialValues); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['interactionMode']);\n  macro.get(publicAPI, model, ['currentImageProperty']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkInteractorStyleImage(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkInteractorStyleImage'); // ----------------------------------------------------------------------------\n\nvar vtkInteractorStyleImage$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkInteractorStyleImage$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from '../../macros.js';\nvar vtkErrorMacro = macro.vtkErrorMacro; // export const SHADER_TYPES = ['Vertex', 'Fragment', 'Geometry', 'Unknown'];\n// ----------------------------------------------------------------------------\n// vtkShader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShader');\n  publicAPI.compile = function () {\n    var stype = model.context.VERTEX_SHADER;\n    if (!model.source || !model.source.length || model.shaderType === 'Unknown') {\n      return false;\n    } // Ensure we delete the previous shader if necessary.\n\n    if (model.handle !== 0) {\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n    }\n    switch (model.shaderType) {\n      // case vtkShader::Geometry:\n      //   type = GL_GEOMETRY_SHADER;\n      //   break;\n      case 'Fragment':\n        stype = model.context.FRAGMENT_SHADER;\n        break;\n      case 'Vertex':\n      default:\n        stype = model.context.VERTEX_SHADER;\n        break;\n    }\n    model.handle = model.context.createShader(stype);\n    model.context.shaderSource(model.handle, model.source);\n    model.context.compileShader(model.handle);\n    var isCompiled = model.context.getShaderParameter(model.handle, model.context.COMPILE_STATUS);\n    if (!isCompiled) {\n      var lastError = model.context.getShaderInfoLog(model.handle);\n      vtkErrorMacro(\"Error compiling shader '\".concat(model.source, \"': \").concat(lastError));\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n      return false;\n    } // The shader compiled, store its handle and return success.\n\n    return true;\n  };\n  publicAPI.cleanup = function () {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n    model.dirty = true;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  shaderType: 'Unknown',\n  source: '',\n  error: '',\n  handle: 0,\n  dirty: false,\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['shaderType', 'source', 'error', 'handle', 'context']); // Object methods\n\n  vtkShader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkShader'); // ----------------------------------------------------------------------------\n\nvar vtkShader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkShader$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkErrorMacro","vtkShader","publicAPI","model","classHierarchy","push","compile","stype","context","VERTEX_SHADER","source","length","shaderType","handle","deleteShader","FRAGMENT_SHADER","createShader","shaderSource","compileShader","isCompiled","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","concat","cleanup","dirty","DEFAULT_VALUES","error","extend","initialValues","arguments","undefined","Object","assign","obj","setGet","newInstance","vtkShader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js"],"sourcesContent":["import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // export const SHADER_TYPES = ['Vertex', 'Fragment', 'Geometry', 'Unknown'];\n// ----------------------------------------------------------------------------\n// vtkShader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShader');\n\n  publicAPI.compile = function () {\n    var stype = model.context.VERTEX_SHADER;\n\n    if (!model.source || !model.source.length || model.shaderType === 'Unknown') {\n      return false;\n    } // Ensure we delete the previous shader if necessary.\n\n\n    if (model.handle !== 0) {\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n    }\n\n    switch (model.shaderType) {\n      // case vtkShader::Geometry:\n      //   type = GL_GEOMETRY_SHADER;\n      //   break;\n      case 'Fragment':\n        stype = model.context.FRAGMENT_SHADER;\n        break;\n\n      case 'Vertex':\n      default:\n        stype = model.context.VERTEX_SHADER;\n        break;\n    }\n\n    model.handle = model.context.createShader(stype);\n    model.context.shaderSource(model.handle, model.source);\n    model.context.compileShader(model.handle);\n    var isCompiled = model.context.getShaderParameter(model.handle, model.context.COMPILE_STATUS);\n\n    if (!isCompiled) {\n      var lastError = model.context.getShaderInfoLog(model.handle);\n      vtkErrorMacro(\"Error compiling shader '\".concat(model.source, \"': \").concat(lastError));\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n      return false;\n    } // The shader compiled, store its handle and return success.\n\n\n    return true;\n  };\n\n  publicAPI.cleanup = function () {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n    model.dirty = true;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  shaderType: 'Unknown',\n  source: '',\n  error: '',\n  handle: 0,\n  dirty: false,\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['shaderType', 'source', 'error', 'handle', 'context']); // Object methods\n\n  vtkShader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkShader'); // ----------------------------------------------------------------------------\n\nvar vtkShader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkShader$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
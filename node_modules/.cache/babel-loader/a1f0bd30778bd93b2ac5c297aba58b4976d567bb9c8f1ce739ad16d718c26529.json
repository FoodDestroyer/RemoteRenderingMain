{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkInteractorStyle from '../../Rendering/Core/InteractorStyle.js';\nimport vtkInteractorStyleConstants from '../../Rendering/Core/InteractorStyle/Constants.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport { Device, Input } from '../../Rendering/Core/RenderWindowInteractor/Constants.js';\nvar States = vtkInteractorStyleConstants.States;\n/* eslint-disable no-lonely-if */\n// ----------------------------------------------------------------------------\n// vtkInteractorStyleTrackballCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleTrackballCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleTrackballCamera'); // Public API methods\n\n  publicAPI.handleMouseMove = function (callData) {\n    var pos = callData.position;\n    var renderer = callData.pokedRenderer;\n    switch (model.state) {\n      case States.IS_ROTATE:\n        publicAPI.handleMouseRotate(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n      case States.IS_PAN:\n        publicAPI.handleMousePan(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n      case States.IS_DOLLY:\n        publicAPI.handleMouseDolly(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n      case States.IS_SPIN:\n        publicAPI.handleMouseSpin(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n    }\n    model.previousPosition = pos;\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleButton3D = function (ed) {\n    if (ed && ed.pressed && ed.device === Device.RightController && (ed.input === Input.Trigger || ed.input === Input.TrackPad)) {\n      publicAPI.startCameraPose();\n      return;\n    }\n    if (ed && !ed.pressed && ed.device === Device.RightController && (ed.input === Input.Trigger || ed.input === Input.TrackPad) && model.state === States.IS_CAMERA_POSE) {\n      publicAPI.endCameraPose(); // return;\n    }\n  };\n\n  publicAPI.handleMove3D = function (ed) {\n    switch (model.state) {\n      case States.IS_CAMERA_POSE:\n        publicAPI.updateCameraPose(ed);\n        break;\n    }\n  };\n  publicAPI.updateCameraPose = function (ed) {\n    // move the world in the direction of the\n    // controller\n    var camera = ed.pokedRenderer.getActiveCamera();\n    var oldTrans = camera.getPhysicalTranslation(); // look at the y axis to determine how fast / what direction to move\n\n    var speed = 0.5; // ed.gamepad.axes[1];\n    // 0.05 meters / frame movement\n\n    var pscale = speed * 0.05 * camera.getPhysicalScale(); // convert orientation to world coordinate direction\n\n    var dir = camera.physicalOrientationToWorldDirection([ed.orientation.x, ed.orientation.y, ed.orientation.z, ed.orientation.w]);\n    camera.setPhysicalTranslation(oldTrans[0] + dir[0] * pscale, oldTrans[1] + dir[1] * pscale, oldTrans[2] + dir[2] * pscale);\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleLeftButtonPress = function (callData) {\n    var pos = callData.position;\n    model.previousPosition = pos;\n    if (callData.shiftKey) {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startDolly();\n      } else {\n        publicAPI.startPan();\n      }\n    } else {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startSpin();\n      } else {\n        publicAPI.startRotate();\n      }\n    }\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleLeftButtonRelease = function () {\n    switch (model.state) {\n      case States.IS_DOLLY:\n        publicAPI.endDolly();\n        break;\n      case States.IS_PAN:\n        publicAPI.endPan();\n        break;\n      case States.IS_SPIN:\n        publicAPI.endSpin();\n        break;\n      case States.IS_ROTATE:\n        publicAPI.endRotate();\n        break;\n    }\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleStartMouseWheel = function () {\n    publicAPI.startDolly();\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleEndMouseWheel = function () {\n    publicAPI.endDolly();\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleStartPinch = function (callData) {\n    model.previousScale = callData.scale;\n    publicAPI.startDolly();\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleEndPinch = function () {\n    publicAPI.endDolly();\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleStartRotate = function (callData) {\n    model.previousRotation = callData.rotation;\n    publicAPI.startRotate();\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleEndRotate = function () {\n    publicAPI.endRotate();\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleStartPan = function (callData) {\n    model.previousTranslation = callData.translation;\n    publicAPI.startPan();\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleEndPan = function () {\n    publicAPI.endPan();\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handlePinch = function (callData) {\n    publicAPI.dollyByFactor(callData.pokedRenderer, callData.scale / model.previousScale);\n    model.previousScale = callData.scale;\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handlePan = function (callData) {\n    var camera = callData.pokedRenderer.getActiveCamera(); // Calculate the focal depth since we'll be using it a lot\n\n    var viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(callData.pokedRenderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n    var focalDepth = viewFocus[2];\n    var trans = callData.translation;\n    var lastTrans = model.previousTranslation;\n    var newPickPoint = publicAPI.computeDisplayToWorld(callData.pokedRenderer, viewFocus[0] + trans[0] - lastTrans[0], viewFocus[1] + trans[1] - lastTrans[1], focalDepth); // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n\n    var oldPickPoint = publicAPI.computeDisplayToWorld(callData.pokedRenderer, viewFocus[0], viewFocus[1], focalDepth); // Camera motion is reversed\n\n    var motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n    viewFocus = camera.getFocalPoint();\n    var viewPoint = camera.getPosition();\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n    if (model._interactor.getLightFollowCamera()) {\n      callData.pokedRenderer.updateLightsGeometryToFollowCamera();\n    }\n    camera.orthogonalizeViewUp();\n    model.previousTranslation = callData.translation;\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleRotate = function (callData) {\n    var camera = callData.pokedRenderer.getActiveCamera();\n    camera.roll(callData.rotation - model.previousRotation);\n    camera.orthogonalizeViewUp();\n    model.previousRotation = callData.rotation;\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleMouseRotate = function (renderer, position) {\n    if (!model.previousPosition) {\n      return;\n    }\n    var rwi = model._interactor;\n    var dx = position.x - model.previousPosition.x;\n    var dy = position.y - model.previousPosition.y;\n    var size = rwi.getView().getViewportSize(renderer);\n    var deltaElevation = -0.1;\n    var deltaAzimuth = -0.1;\n    if (size[0] && size[1]) {\n      deltaElevation = -20.0 / size[1];\n      deltaAzimuth = -20.0 / size[0];\n    }\n    var rxf = dx * deltaAzimuth * model.motionFactor;\n    var ryf = dy * deltaElevation * model.motionFactor;\n    var camera = renderer.getActiveCamera();\n    if (!Number.isNaN(rxf) && !Number.isNaN(ryf)) {\n      camera.azimuth(rxf);\n      camera.elevation(ryf);\n      camera.orthogonalizeViewUp();\n    }\n    if (model.autoAdjustCameraClippingRange) {\n      renderer.resetCameraClippingRange();\n    }\n    if (rwi.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleMouseSpin = function (renderer, position) {\n    if (!model.previousPosition) {\n      return;\n    }\n    var rwi = model._interactor;\n    var camera = renderer.getActiveCamera();\n    var center = rwi.getView().getViewportCenter(renderer);\n    var oldAngle = degreesFromRadians(Math.atan2(model.previousPosition.y - center[1], model.previousPosition.x - center[0]));\n    var newAngle = degreesFromRadians(Math.atan2(position.y - center[1], position.x - center[0])) - oldAngle;\n    if (!Number.isNaN(newAngle)) {\n      camera.roll(newAngle);\n      camera.orthogonalizeViewUp();\n    }\n  }; //--------------------------------------------------------------------------\n\n  publicAPI.handleMousePan = function (renderer, position) {\n    if (!model.previousPosition) {\n      return;\n    }\n    var camera = renderer.getActiveCamera(); // Calculate the focal depth since we'll be using it a lot\n\n    var viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n    var focalDepth = viewFocus[2];\n    var newPickPoint = publicAPI.computeDisplayToWorld(renderer, position.x, position.y, focalDepth); // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n\n    var oldPickPoint = publicAPI.computeDisplayToWorld(renderer, model.previousPosition.x, model.previousPosition.y, focalDepth); // Camera motion is reversed\n\n    var motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n    viewFocus = camera.getFocalPoint();\n    var viewPoint = camera.getPosition();\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleMouseDolly = function (renderer, position) {\n    if (!model.previousPosition) {\n      return;\n    }\n    var dy = position.y - model.previousPosition.y;\n    var rwi = model._interactor;\n    var center = rwi.getView().getViewportCenter(renderer);\n    var dyf = model.motionFactor * dy / center[1];\n    publicAPI.dollyByFactor(renderer, Math.pow(1.1, dyf));\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.handleMouseWheel = function (callData) {\n    var dyf = 1 - callData.spinY / model.zoomFactor;\n    publicAPI.dollyByFactor(callData.pokedRenderer, dyf);\n  }; //----------------------------------------------------------------------------\n\n  publicAPI.dollyByFactor = function (renderer, factor) {\n    if (Number.isNaN(factor)) {\n      return;\n    }\n    var camera = renderer.getActiveCamera();\n    if (camera.getParallelProjection()) {\n      camera.setParallelScale(camera.getParallelScale() / factor);\n    } else {\n      camera.dolly(factor);\n      if (model.autoAdjustCameraClippingRange) {\n        renderer.resetCameraClippingRange();\n      }\n    }\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  motionFactor: 10.0,\n  zoomFactor: 10.0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkInteractorStyle.extend(publicAPI, model, initialValues); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['motionFactor', 'zoomFactor']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkInteractorStyleTrackballCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkInteractorStyleTrackballCamera'); // ----------------------------------------------------------------------------\n\nvar vtkInteractorStyleTrackballCamera$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkInteractorStyleTrackballCamera$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkInteractorStyle","vtkInteractorStyleConstants","A","degreesFromRadians","Device","Input","States","vtkInteractorStyleTrackballCamera","publicAPI","model","classHierarchy","push","handleMouseMove","callData","pos","position","renderer","pokedRenderer","state","IS_ROTATE","handleMouseRotate","invokeInteractionEvent","type","IS_PAN","handleMousePan","IS_DOLLY","handleMouseDolly","IS_SPIN","handleMouseSpin","previousPosition","handleButton3D","ed","pressed","device","RightController","input","Trigger","TrackPad","startCameraPose","IS_CAMERA_POSE","endCameraPose","handleMove3D","updateCameraPose","camera","getActiveCamera","oldTrans","getPhysicalTranslation","speed","pscale","getPhysicalScale","dir","physicalOrientationToWorldDirection","orientation","x","y","z","w","setPhysicalTranslation","handleLeftButtonPress","shiftKey","controlKey","altKey","startDolly","startPan","startSpin","startRotate","handleLeftButtonRelease","endDolly","endPan","endSpin","endRotate","handleStartMouseWheel","handleEndMouseWheel","handleStartPinch","previousScale","scale","handleEndPinch","handleStartRotate","previousRotation","rotation","handleEndRotate","handleStartPan","previousTranslation","translation","handleEndPan","handlePinch","dollyByFactor","handlePan","viewFocus","getFocalPoint","computeWorldToDisplay","focalDepth","trans","lastTrans","newPickPoint","computeDisplayToWorld","oldPickPoint","motionVector","viewPoint","getPosition","setFocalPoint","setPosition","_interactor","getLightFollowCamera","updateLightsGeometryToFollowCamera","orthogonalizeViewUp","handleRotate","roll","rwi","dx","dy","size","getView","getViewportSize","deltaElevation","deltaAzimuth","rxf","motionFactor","ryf","Number","isNaN","azimuth","elevation","autoAdjustCameraClippingRange","resetCameraClippingRange","center","getViewportCenter","oldAngle","Math","atan2","newAngle","dyf","pow","handleMouseWheel","spinY","zoomFactor","factor","getParallelProjection","setParallelScale","getParallelScale","dolly","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","setGet","newInstance","vtkInteractorStyleTrackballCamera$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleTrackballCamera.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkInteractorStyle from '../../Rendering/Core/InteractorStyle.js';\nimport vtkInteractorStyleConstants from '../../Rendering/Core/InteractorStyle/Constants.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport { Device, Input } from '../../Rendering/Core/RenderWindowInteractor/Constants.js';\n\nvar States = vtkInteractorStyleConstants.States;\n/* eslint-disable no-lonely-if */\n// ----------------------------------------------------------------------------\n// vtkInteractorStyleTrackballCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleTrackballCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleTrackballCamera'); // Public API methods\n\n  publicAPI.handleMouseMove = function (callData) {\n    var pos = callData.position;\n    var renderer = callData.pokedRenderer;\n\n    switch (model.state) {\n      case States.IS_ROTATE:\n        publicAPI.handleMouseRotate(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n\n      case States.IS_PAN:\n        publicAPI.handleMousePan(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n\n      case States.IS_DOLLY:\n        publicAPI.handleMouseDolly(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n\n      case States.IS_SPIN:\n        publicAPI.handleMouseSpin(renderer, pos);\n        publicAPI.invokeInteractionEvent({\n          type: 'InteractionEvent'\n        });\n        break;\n    }\n\n    model.previousPosition = pos;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleButton3D = function (ed) {\n    if (ed && ed.pressed && ed.device === Device.RightController && (ed.input === Input.Trigger || ed.input === Input.TrackPad)) {\n      publicAPI.startCameraPose();\n      return;\n    }\n\n    if (ed && !ed.pressed && ed.device === Device.RightController && (ed.input === Input.Trigger || ed.input === Input.TrackPad) && model.state === States.IS_CAMERA_POSE) {\n      publicAPI.endCameraPose(); // return;\n    }\n  };\n\n  publicAPI.handleMove3D = function (ed) {\n    switch (model.state) {\n      case States.IS_CAMERA_POSE:\n        publicAPI.updateCameraPose(ed);\n        break;\n    }\n  };\n\n  publicAPI.updateCameraPose = function (ed) {\n    // move the world in the direction of the\n    // controller\n    var camera = ed.pokedRenderer.getActiveCamera();\n    var oldTrans = camera.getPhysicalTranslation(); // look at the y axis to determine how fast / what direction to move\n\n    var speed = 0.5; // ed.gamepad.axes[1];\n    // 0.05 meters / frame movement\n\n    var pscale = speed * 0.05 * camera.getPhysicalScale(); // convert orientation to world coordinate direction\n\n    var dir = camera.physicalOrientationToWorldDirection([ed.orientation.x, ed.orientation.y, ed.orientation.z, ed.orientation.w]);\n    camera.setPhysicalTranslation(oldTrans[0] + dir[0] * pscale, oldTrans[1] + dir[1] * pscale, oldTrans[2] + dir[2] * pscale);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleLeftButtonPress = function (callData) {\n    var pos = callData.position;\n    model.previousPosition = pos;\n\n    if (callData.shiftKey) {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startDolly();\n      } else {\n        publicAPI.startPan();\n      }\n    } else {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startSpin();\n      } else {\n        publicAPI.startRotate();\n      }\n    }\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleLeftButtonRelease = function () {\n    switch (model.state) {\n      case States.IS_DOLLY:\n        publicAPI.endDolly();\n        break;\n\n      case States.IS_PAN:\n        publicAPI.endPan();\n        break;\n\n      case States.IS_SPIN:\n        publicAPI.endSpin();\n        break;\n\n      case States.IS_ROTATE:\n        publicAPI.endRotate();\n        break;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleStartMouseWheel = function () {\n    publicAPI.startDolly();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndMouseWheel = function () {\n    publicAPI.endDolly();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleStartPinch = function (callData) {\n    model.previousScale = callData.scale;\n    publicAPI.startDolly();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndPinch = function () {\n    publicAPI.endDolly();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleStartRotate = function (callData) {\n    model.previousRotation = callData.rotation;\n    publicAPI.startRotate();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndRotate = function () {\n    publicAPI.endRotate();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleStartPan = function (callData) {\n    model.previousTranslation = callData.translation;\n    publicAPI.startPan();\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleEndPan = function () {\n    publicAPI.endPan();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handlePinch = function (callData) {\n    publicAPI.dollyByFactor(callData.pokedRenderer, callData.scale / model.previousScale);\n    model.previousScale = callData.scale;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handlePan = function (callData) {\n    var camera = callData.pokedRenderer.getActiveCamera(); // Calculate the focal depth since we'll be using it a lot\n\n    var viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(callData.pokedRenderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n    var focalDepth = viewFocus[2];\n    var trans = callData.translation;\n    var lastTrans = model.previousTranslation;\n    var newPickPoint = publicAPI.computeDisplayToWorld(callData.pokedRenderer, viewFocus[0] + trans[0] - lastTrans[0], viewFocus[1] + trans[1] - lastTrans[1], focalDepth); // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n\n    var oldPickPoint = publicAPI.computeDisplayToWorld(callData.pokedRenderer, viewFocus[0], viewFocus[1], focalDepth); // Camera motion is reversed\n\n    var motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n    viewFocus = camera.getFocalPoint();\n    var viewPoint = camera.getPosition();\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n\n    if (model._interactor.getLightFollowCamera()) {\n      callData.pokedRenderer.updateLightsGeometryToFollowCamera();\n    }\n\n    camera.orthogonalizeViewUp();\n    model.previousTranslation = callData.translation;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleRotate = function (callData) {\n    var camera = callData.pokedRenderer.getActiveCamera();\n    camera.roll(callData.rotation - model.previousRotation);\n    camera.orthogonalizeViewUp();\n    model.previousRotation = callData.rotation;\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseRotate = function (renderer, position) {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    var rwi = model._interactor;\n    var dx = position.x - model.previousPosition.x;\n    var dy = position.y - model.previousPosition.y;\n    var size = rwi.getView().getViewportSize(renderer);\n    var deltaElevation = -0.1;\n    var deltaAzimuth = -0.1;\n\n    if (size[0] && size[1]) {\n      deltaElevation = -20.0 / size[1];\n      deltaAzimuth = -20.0 / size[0];\n    }\n\n    var rxf = dx * deltaAzimuth * model.motionFactor;\n    var ryf = dy * deltaElevation * model.motionFactor;\n    var camera = renderer.getActiveCamera();\n\n    if (!Number.isNaN(rxf) && !Number.isNaN(ryf)) {\n      camera.azimuth(rxf);\n      camera.elevation(ryf);\n      camera.orthogonalizeViewUp();\n    }\n\n    if (model.autoAdjustCameraClippingRange) {\n      renderer.resetCameraClippingRange();\n    }\n\n    if (rwi.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseSpin = function (renderer, position) {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    var rwi = model._interactor;\n    var camera = renderer.getActiveCamera();\n    var center = rwi.getView().getViewportCenter(renderer);\n    var oldAngle = degreesFromRadians(Math.atan2(model.previousPosition.y - center[1], model.previousPosition.x - center[0]));\n    var newAngle = degreesFromRadians(Math.atan2(position.y - center[1], position.x - center[0])) - oldAngle;\n\n    if (!Number.isNaN(newAngle)) {\n      camera.roll(newAngle);\n      camera.orthogonalizeViewUp();\n    }\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.handleMousePan = function (renderer, position) {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    var camera = renderer.getActiveCamera(); // Calculate the focal depth since we'll be using it a lot\n\n    var viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);\n    var focalDepth = viewFocus[2];\n    var newPickPoint = publicAPI.computeDisplayToWorld(renderer, position.x, position.y, focalDepth); // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n\n    var oldPickPoint = publicAPI.computeDisplayToWorld(renderer, model.previousPosition.x, model.previousPosition.y, focalDepth); // Camera motion is reversed\n\n    var motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n    viewFocus = camera.getFocalPoint();\n    var viewPoint = camera.getPosition();\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\n\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseDolly = function (renderer, position) {\n    if (!model.previousPosition) {\n      return;\n    }\n\n    var dy = position.y - model.previousPosition.y;\n    var rwi = model._interactor;\n    var center = rwi.getView().getViewportCenter(renderer);\n    var dyf = model.motionFactor * dy / center[1];\n    publicAPI.dollyByFactor(renderer, Math.pow(1.1, dyf));\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseWheel = function (callData) {\n    var dyf = 1 - callData.spinY / model.zoomFactor;\n    publicAPI.dollyByFactor(callData.pokedRenderer, dyf);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.dollyByFactor = function (renderer, factor) {\n    if (Number.isNaN(factor)) {\n      return;\n    }\n\n    var camera = renderer.getActiveCamera();\n\n    if (camera.getParallelProjection()) {\n      camera.setParallelScale(camera.getParallelScale() / factor);\n    } else {\n      camera.dolly(factor);\n\n      if (model.autoAdjustCameraClippingRange) {\n        renderer.resetCameraClippingRange();\n      }\n    }\n\n    if (model._interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  motionFactor: 10.0,\n  zoomFactor: 10.0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkInteractorStyle.extend(publicAPI, model, initialValues); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['motionFactor', 'zoomFactor']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkInteractorStyleTrackballCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkInteractorStyleTrackballCamera'); // ----------------------------------------------------------------------------\n\nvar vtkInteractorStyleTrackballCamera$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkInteractorStyleTrackballCamera$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAOC,kBAAkB,MAAM,yCAAyC;AACxE,OAAOC,2BAA2B,MAAM,mDAAmD;AAC3F,SAASC,CAAC,IAAIC,kBAAkB,QAAQ,iCAAiC;AACzE,SAASC,MAAM,EAAEC,KAAK,QAAQ,0DAA0D;AAExF,IAAIC,MAAM,GAAGL,2BAA2B,CAACK,MAAM;AAC/C;AACA;AACA;AACA;;AAEA,SAASC,iCAAiCA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC3D;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,mCAAmC,CAAC,CAAC,CAAC;;EAEhEH,SAAS,CAACI,eAAe,GAAG,UAAUC,QAAQ,EAAE;IAC9C,IAAIC,GAAG,GAAGD,QAAQ,CAACE,QAAQ;IAC3B,IAAIC,QAAQ,GAAGH,QAAQ,CAACI,aAAa;IAErC,QAAQR,KAAK,CAACS,KAAK;MACjB,KAAKZ,MAAM,CAACa,SAAS;QACnBX,SAAS,CAACY,iBAAiB,CAACJ,QAAQ,EAAEF,GAAG,CAAC;QAC1CN,SAAS,CAACa,sBAAsB,CAAC;UAC/BC,IAAI,EAAE;QACR,CAAC,CAAC;QACF;MAEF,KAAKhB,MAAM,CAACiB,MAAM;QAChBf,SAAS,CAACgB,cAAc,CAACR,QAAQ,EAAEF,GAAG,CAAC;QACvCN,SAAS,CAACa,sBAAsB,CAAC;UAC/BC,IAAI,EAAE;QACR,CAAC,CAAC;QACF;MAEF,KAAKhB,MAAM,CAACmB,QAAQ;QAClBjB,SAAS,CAACkB,gBAAgB,CAACV,QAAQ,EAAEF,GAAG,CAAC;QACzCN,SAAS,CAACa,sBAAsB,CAAC;UAC/BC,IAAI,EAAE;QACR,CAAC,CAAC;QACF;MAEF,KAAKhB,MAAM,CAACqB,OAAO;QACjBnB,SAAS,CAACoB,eAAe,CAACZ,QAAQ,EAAEF,GAAG,CAAC;QACxCN,SAAS,CAACa,sBAAsB,CAAC;UAC/BC,IAAI,EAAE;QACR,CAAC,CAAC;QACF;IACJ;IAEAb,KAAK,CAACoB,gBAAgB,GAAGf,GAAG;EAC9B,CAAC,CAAC,CAAC;;EAGHN,SAAS,CAACsB,cAAc,GAAG,UAAUC,EAAE,EAAE;IACvC,IAAIA,EAAE,IAAIA,EAAE,CAACC,OAAO,IAAID,EAAE,CAACE,MAAM,KAAK7B,MAAM,CAAC8B,eAAe,KAAKH,EAAE,CAACI,KAAK,KAAK9B,KAAK,CAAC+B,OAAO,IAAIL,EAAE,CAACI,KAAK,KAAK9B,KAAK,CAACgC,QAAQ,CAAC,EAAE;MAC3H7B,SAAS,CAAC8B,eAAe,CAAC,CAAC;MAC3B;IACF;IAEA,IAAIP,EAAE,IAAI,CAACA,EAAE,CAACC,OAAO,IAAID,EAAE,CAACE,MAAM,KAAK7B,MAAM,CAAC8B,eAAe,KAAKH,EAAE,CAACI,KAAK,KAAK9B,KAAK,CAAC+B,OAAO,IAAIL,EAAE,CAACI,KAAK,KAAK9B,KAAK,CAACgC,QAAQ,CAAC,IAAI5B,KAAK,CAACS,KAAK,KAAKZ,MAAM,CAACiC,cAAc,EAAE;MACrK/B,SAAS,CAACgC,aAAa,CAAC,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC;;EAEDhC,SAAS,CAACiC,YAAY,GAAG,UAAUV,EAAE,EAAE;IACrC,QAAQtB,KAAK,CAACS,KAAK;MACjB,KAAKZ,MAAM,CAACiC,cAAc;QACxB/B,SAAS,CAACkC,gBAAgB,CAACX,EAAE,CAAC;QAC9B;IACJ;EACF,CAAC;EAEDvB,SAAS,CAACkC,gBAAgB,GAAG,UAAUX,EAAE,EAAE;IACzC;IACA;IACA,IAAIY,MAAM,GAAGZ,EAAE,CAACd,aAAa,CAAC2B,eAAe,CAAC,CAAC;IAC/C,IAAIC,QAAQ,GAAGF,MAAM,CAACG,sBAAsB,CAAC,CAAC,CAAC,CAAC;;IAEhD,IAAIC,KAAK,GAAG,GAAG,CAAC,CAAC;IACjB;;IAEA,IAAIC,MAAM,GAAGD,KAAK,GAAG,IAAI,GAAGJ,MAAM,CAACM,gBAAgB,CAAC,CAAC,CAAC,CAAC;;IAEvD,IAAIC,GAAG,GAAGP,MAAM,CAACQ,mCAAmC,CAAC,CAACpB,EAAE,CAACqB,WAAW,CAACC,CAAC,EAAEtB,EAAE,CAACqB,WAAW,CAACE,CAAC,EAAEvB,EAAE,CAACqB,WAAW,CAACG,CAAC,EAAExB,EAAE,CAACqB,WAAW,CAACI,CAAC,CAAC,CAAC;IAC9Hb,MAAM,CAACc,sBAAsB,CAACZ,QAAQ,CAAC,CAAC,CAAC,GAAGK,GAAG,CAAC,CAAC,CAAC,GAAGF,MAAM,EAAEH,QAAQ,CAAC,CAAC,CAAC,GAAGK,GAAG,CAAC,CAAC,CAAC,GAAGF,MAAM,EAAEH,QAAQ,CAAC,CAAC,CAAC,GAAGK,GAAG,CAAC,CAAC,CAAC,GAAGF,MAAM,CAAC;EAC5H,CAAC,CAAC,CAAC;;EAGHxC,SAAS,CAACkD,qBAAqB,GAAG,UAAU7C,QAAQ,EAAE;IACpD,IAAIC,GAAG,GAAGD,QAAQ,CAACE,QAAQ;IAC3BN,KAAK,CAACoB,gBAAgB,GAAGf,GAAG;IAE5B,IAAID,QAAQ,CAAC8C,QAAQ,EAAE;MACrB,IAAI9C,QAAQ,CAAC+C,UAAU,IAAI/C,QAAQ,CAACgD,MAAM,EAAE;QAC1CrD,SAAS,CAACsD,UAAU,CAAC,CAAC;MACxB,CAAC,MAAM;QACLtD,SAAS,CAACuD,QAAQ,CAAC,CAAC;MACtB;IACF,CAAC,MAAM;MACL,IAAIlD,QAAQ,CAAC+C,UAAU,IAAI/C,QAAQ,CAACgD,MAAM,EAAE;QAC1CrD,SAAS,CAACwD,SAAS,CAAC,CAAC;MACvB,CAAC,MAAM;QACLxD,SAAS,CAACyD,WAAW,CAAC,CAAC;MACzB;IACF;EACF,CAAC,CAAC,CAAC;;EAGHzD,SAAS,CAAC0D,uBAAuB,GAAG,YAAY;IAC9C,QAAQzD,KAAK,CAACS,KAAK;MACjB,KAAKZ,MAAM,CAACmB,QAAQ;QAClBjB,SAAS,CAAC2D,QAAQ,CAAC,CAAC;QACpB;MAEF,KAAK7D,MAAM,CAACiB,MAAM;QAChBf,SAAS,CAAC4D,MAAM,CAAC,CAAC;QAClB;MAEF,KAAK9D,MAAM,CAACqB,OAAO;QACjBnB,SAAS,CAAC6D,OAAO,CAAC,CAAC;QACnB;MAEF,KAAK/D,MAAM,CAACa,SAAS;QACnBX,SAAS,CAAC8D,SAAS,CAAC,CAAC;QACrB;IACJ;EACF,CAAC,CAAC,CAAC;;EAGH9D,SAAS,CAAC+D,qBAAqB,GAAG,YAAY;IAC5C/D,SAAS,CAACsD,UAAU,CAAC,CAAC;EACxB,CAAC,CAAC,CAAC;;EAGHtD,SAAS,CAACgE,mBAAmB,GAAG,YAAY;IAC1ChE,SAAS,CAAC2D,QAAQ,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC;;EAGH3D,SAAS,CAACiE,gBAAgB,GAAG,UAAU5D,QAAQ,EAAE;IAC/CJ,KAAK,CAACiE,aAAa,GAAG7D,QAAQ,CAAC8D,KAAK;IACpCnE,SAAS,CAACsD,UAAU,CAAC,CAAC;EACxB,CAAC,CAAC,CAAC;;EAGHtD,SAAS,CAACoE,cAAc,GAAG,YAAY;IACrCpE,SAAS,CAAC2D,QAAQ,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC;;EAGH3D,SAAS,CAACqE,iBAAiB,GAAG,UAAUhE,QAAQ,EAAE;IAChDJ,KAAK,CAACqE,gBAAgB,GAAGjE,QAAQ,CAACkE,QAAQ;IAC1CvE,SAAS,CAACyD,WAAW,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC;;EAGHzD,SAAS,CAACwE,eAAe,GAAG,YAAY;IACtCxE,SAAS,CAAC8D,SAAS,CAAC,CAAC;EACvB,CAAC,CAAC,CAAC;;EAGH9D,SAAS,CAACyE,cAAc,GAAG,UAAUpE,QAAQ,EAAE;IAC7CJ,KAAK,CAACyE,mBAAmB,GAAGrE,QAAQ,CAACsE,WAAW;IAChD3E,SAAS,CAACuD,QAAQ,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC;;EAGHvD,SAAS,CAAC4E,YAAY,GAAG,YAAY;IACnC5E,SAAS,CAAC4D,MAAM,CAAC,CAAC;EACpB,CAAC,CAAC,CAAC;;EAGH5D,SAAS,CAAC6E,WAAW,GAAG,UAAUxE,QAAQ,EAAE;IAC1CL,SAAS,CAAC8E,aAAa,CAACzE,QAAQ,CAACI,aAAa,EAAEJ,QAAQ,CAAC8D,KAAK,GAAGlE,KAAK,CAACiE,aAAa,CAAC;IACrFjE,KAAK,CAACiE,aAAa,GAAG7D,QAAQ,CAAC8D,KAAK;EACtC,CAAC,CAAC,CAAC;;EAGHnE,SAAS,CAAC+E,SAAS,GAAG,UAAU1E,QAAQ,EAAE;IACxC,IAAI8B,MAAM,GAAG9B,QAAQ,CAACI,aAAa,CAAC2B,eAAe,CAAC,CAAC,CAAC,CAAC;;IAEvD,IAAI4C,SAAS,GAAG7C,MAAM,CAAC8C,aAAa,CAAC,CAAC;IACtCD,SAAS,GAAGhF,SAAS,CAACkF,qBAAqB,CAAC7E,QAAQ,CAACI,aAAa,EAAEuE,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7G,IAAIG,UAAU,GAAGH,SAAS,CAAC,CAAC,CAAC;IAC7B,IAAII,KAAK,GAAG/E,QAAQ,CAACsE,WAAW;IAChC,IAAIU,SAAS,GAAGpF,KAAK,CAACyE,mBAAmB;IACzC,IAAIY,YAAY,GAAGtF,SAAS,CAACuF,qBAAqB,CAAClF,QAAQ,CAACI,aAAa,EAAEuE,SAAS,CAAC,CAAC,CAAC,GAAGI,KAAK,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,EAAEL,SAAS,CAAC,CAAC,CAAC,GAAGI,KAAK,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,EAAEF,UAAU,CAAC,CAAC,CAAC;IACxK;;IAEA,IAAIK,YAAY,GAAGxF,SAAS,CAACuF,qBAAqB,CAAClF,QAAQ,CAACI,aAAa,EAAEuE,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEG,UAAU,CAAC,CAAC,CAAC;;IAEpH,IAAIM,YAAY,GAAG,EAAE;IACrBA,YAAY,CAAC,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC,CAAC;IACnDG,YAAY,CAAC,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC,CAAC;IACnDG,YAAY,CAAC,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC,CAAC;IACnDN,SAAS,GAAG7C,MAAM,CAAC8C,aAAa,CAAC,CAAC;IAClC,IAAIS,SAAS,GAAGvD,MAAM,CAACwD,WAAW,CAAC,CAAC;IACpCxD,MAAM,CAACyD,aAAa,CAACH,YAAY,CAAC,CAAC,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,EAAES,YAAY,CAAC,CAAC,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,EAAES,YAAY,CAAC,CAAC,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;IACpH7C,MAAM,CAAC0D,WAAW,CAACJ,YAAY,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,EAAED,YAAY,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,EAAED,YAAY,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,CAAC;IAElH,IAAIzF,KAAK,CAAC6F,WAAW,CAACC,oBAAoB,CAAC,CAAC,EAAE;MAC5C1F,QAAQ,CAACI,aAAa,CAACuF,kCAAkC,CAAC,CAAC;IAC7D;IAEA7D,MAAM,CAAC8D,mBAAmB,CAAC,CAAC;IAC5BhG,KAAK,CAACyE,mBAAmB,GAAGrE,QAAQ,CAACsE,WAAW;EAClD,CAAC,CAAC,CAAC;;EAGH3E,SAAS,CAACkG,YAAY,GAAG,UAAU7F,QAAQ,EAAE;IAC3C,IAAI8B,MAAM,GAAG9B,QAAQ,CAACI,aAAa,CAAC2B,eAAe,CAAC,CAAC;IACrDD,MAAM,CAACgE,IAAI,CAAC9F,QAAQ,CAACkE,QAAQ,GAAGtE,KAAK,CAACqE,gBAAgB,CAAC;IACvDnC,MAAM,CAAC8D,mBAAmB,CAAC,CAAC;IAC5BhG,KAAK,CAACqE,gBAAgB,GAAGjE,QAAQ,CAACkE,QAAQ;EAC5C,CAAC,CAAC,CAAC;;EAGHvE,SAAS,CAACY,iBAAiB,GAAG,UAAUJ,QAAQ,EAAED,QAAQ,EAAE;IAC1D,IAAI,CAACN,KAAK,CAACoB,gBAAgB,EAAE;MAC3B;IACF;IAEA,IAAI+E,GAAG,GAAGnG,KAAK,CAAC6F,WAAW;IAC3B,IAAIO,EAAE,GAAG9F,QAAQ,CAACsC,CAAC,GAAG5C,KAAK,CAACoB,gBAAgB,CAACwB,CAAC;IAC9C,IAAIyD,EAAE,GAAG/F,QAAQ,CAACuC,CAAC,GAAG7C,KAAK,CAACoB,gBAAgB,CAACyB,CAAC;IAC9C,IAAIyD,IAAI,GAAGH,GAAG,CAACI,OAAO,CAAC,CAAC,CAACC,eAAe,CAACjG,QAAQ,CAAC;IAClD,IAAIkG,cAAc,GAAG,CAAC,GAAG;IACzB,IAAIC,YAAY,GAAG,CAAC,GAAG;IAEvB,IAAIJ,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,EAAE;MACtBG,cAAc,GAAG,CAAC,IAAI,GAAGH,IAAI,CAAC,CAAC,CAAC;MAChCI,YAAY,GAAG,CAAC,IAAI,GAAGJ,IAAI,CAAC,CAAC,CAAC;IAChC;IAEA,IAAIK,GAAG,GAAGP,EAAE,GAAGM,YAAY,GAAG1G,KAAK,CAAC4G,YAAY;IAChD,IAAIC,GAAG,GAAGR,EAAE,GAAGI,cAAc,GAAGzG,KAAK,CAAC4G,YAAY;IAClD,IAAI1E,MAAM,GAAG3B,QAAQ,CAAC4B,eAAe,CAAC,CAAC;IAEvC,IAAI,CAAC2E,MAAM,CAACC,KAAK,CAACJ,GAAG,CAAC,IAAI,CAACG,MAAM,CAACC,KAAK,CAACF,GAAG,CAAC,EAAE;MAC5C3E,MAAM,CAAC8E,OAAO,CAACL,GAAG,CAAC;MACnBzE,MAAM,CAAC+E,SAAS,CAACJ,GAAG,CAAC;MACrB3E,MAAM,CAAC8D,mBAAmB,CAAC,CAAC;IAC9B;IAEA,IAAIhG,KAAK,CAACkH,6BAA6B,EAAE;MACvC3G,QAAQ,CAAC4G,wBAAwB,CAAC,CAAC;IACrC;IAEA,IAAIhB,GAAG,CAACL,oBAAoB,CAAC,CAAC,EAAE;MAC9BvF,QAAQ,CAACwF,kCAAkC,CAAC,CAAC;IAC/C;EACF,CAAC,CAAC,CAAC;;EAGHhG,SAAS,CAACoB,eAAe,GAAG,UAAUZ,QAAQ,EAAED,QAAQ,EAAE;IACxD,IAAI,CAACN,KAAK,CAACoB,gBAAgB,EAAE;MAC3B;IACF;IAEA,IAAI+E,GAAG,GAAGnG,KAAK,CAAC6F,WAAW;IAC3B,IAAI3D,MAAM,GAAG3B,QAAQ,CAAC4B,eAAe,CAAC,CAAC;IACvC,IAAIiF,MAAM,GAAGjB,GAAG,CAACI,OAAO,CAAC,CAAC,CAACc,iBAAiB,CAAC9G,QAAQ,CAAC;IACtD,IAAI+G,QAAQ,GAAG5H,kBAAkB,CAAC6H,IAAI,CAACC,KAAK,CAACxH,KAAK,CAACoB,gBAAgB,CAACyB,CAAC,GAAGuE,MAAM,CAAC,CAAC,CAAC,EAAEpH,KAAK,CAACoB,gBAAgB,CAACwB,CAAC,GAAGwE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACzH,IAAIK,QAAQ,GAAG/H,kBAAkB,CAAC6H,IAAI,CAACC,KAAK,CAAClH,QAAQ,CAACuC,CAAC,GAAGuE,MAAM,CAAC,CAAC,CAAC,EAAE9G,QAAQ,CAACsC,CAAC,GAAGwE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGE,QAAQ;IAExG,IAAI,CAACR,MAAM,CAACC,KAAK,CAACU,QAAQ,CAAC,EAAE;MAC3BvF,MAAM,CAACgE,IAAI,CAACuB,QAAQ,CAAC;MACrBvF,MAAM,CAAC8D,mBAAmB,CAAC,CAAC;IAC9B;EACF,CAAC,CAAC,CAAC;;EAGHjG,SAAS,CAACgB,cAAc,GAAG,UAAUR,QAAQ,EAAED,QAAQ,EAAE;IACvD,IAAI,CAACN,KAAK,CAACoB,gBAAgB,EAAE;MAC3B;IACF;IAEA,IAAIc,MAAM,GAAG3B,QAAQ,CAAC4B,eAAe,CAAC,CAAC,CAAC,CAAC;;IAEzC,IAAI4C,SAAS,GAAG7C,MAAM,CAAC8C,aAAa,CAAC,CAAC;IACtCD,SAAS,GAAGhF,SAAS,CAACkF,qBAAqB,CAAC1E,QAAQ,EAAEwE,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;IAC/F,IAAIG,UAAU,GAAGH,SAAS,CAAC,CAAC,CAAC;IAC7B,IAAIM,YAAY,GAAGtF,SAAS,CAACuF,qBAAqB,CAAC/E,QAAQ,EAAED,QAAQ,CAACsC,CAAC,EAAEtC,QAAQ,CAACuC,CAAC,EAAEqC,UAAU,CAAC,CAAC,CAAC;IAClG;;IAEA,IAAIK,YAAY,GAAGxF,SAAS,CAACuF,qBAAqB,CAAC/E,QAAQ,EAAEP,KAAK,CAACoB,gBAAgB,CAACwB,CAAC,EAAE5C,KAAK,CAACoB,gBAAgB,CAACyB,CAAC,EAAEqC,UAAU,CAAC,CAAC,CAAC;;IAE9H,IAAIM,YAAY,GAAG,EAAE;IACrBA,YAAY,CAAC,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC,CAAC;IACnDG,YAAY,CAAC,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC,CAAC;IACnDG,YAAY,CAAC,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC,CAAC;IACnDN,SAAS,GAAG7C,MAAM,CAAC8C,aAAa,CAAC,CAAC;IAClC,IAAIS,SAAS,GAAGvD,MAAM,CAACwD,WAAW,CAAC,CAAC;IACpCxD,MAAM,CAACyD,aAAa,CAACH,YAAY,CAAC,CAAC,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,EAAES,YAAY,CAAC,CAAC,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,EAAES,YAAY,CAAC,CAAC,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;IACpH7C,MAAM,CAAC0D,WAAW,CAACJ,YAAY,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,EAAED,YAAY,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,EAAED,YAAY,CAAC,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,CAAC;IAElH,IAAIzF,KAAK,CAAC6F,WAAW,CAACC,oBAAoB,CAAC,CAAC,EAAE;MAC5CvF,QAAQ,CAACwF,kCAAkC,CAAC,CAAC;IAC/C;EACF,CAAC,CAAC,CAAC;;EAGHhG,SAAS,CAACkB,gBAAgB,GAAG,UAAUV,QAAQ,EAAED,QAAQ,EAAE;IACzD,IAAI,CAACN,KAAK,CAACoB,gBAAgB,EAAE;MAC3B;IACF;IAEA,IAAIiF,EAAE,GAAG/F,QAAQ,CAACuC,CAAC,GAAG7C,KAAK,CAACoB,gBAAgB,CAACyB,CAAC;IAC9C,IAAIsD,GAAG,GAAGnG,KAAK,CAAC6F,WAAW;IAC3B,IAAIuB,MAAM,GAAGjB,GAAG,CAACI,OAAO,CAAC,CAAC,CAACc,iBAAiB,CAAC9G,QAAQ,CAAC;IACtD,IAAImH,GAAG,GAAG1H,KAAK,CAAC4G,YAAY,GAAGP,EAAE,GAAGe,MAAM,CAAC,CAAC,CAAC;IAC7CrH,SAAS,CAAC8E,aAAa,CAACtE,QAAQ,EAAEgH,IAAI,CAACI,GAAG,CAAC,GAAG,EAAED,GAAG,CAAC,CAAC;EACvD,CAAC,CAAC,CAAC;;EAGH3H,SAAS,CAAC6H,gBAAgB,GAAG,UAAUxH,QAAQ,EAAE;IAC/C,IAAIsH,GAAG,GAAG,CAAC,GAAGtH,QAAQ,CAACyH,KAAK,GAAG7H,KAAK,CAAC8H,UAAU;IAC/C/H,SAAS,CAAC8E,aAAa,CAACzE,QAAQ,CAACI,aAAa,EAAEkH,GAAG,CAAC;EACtD,CAAC,CAAC,CAAC;;EAGH3H,SAAS,CAAC8E,aAAa,GAAG,UAAUtE,QAAQ,EAAEwH,MAAM,EAAE;IACpD,IAAIjB,MAAM,CAACC,KAAK,CAACgB,MAAM,CAAC,EAAE;MACxB;IACF;IAEA,IAAI7F,MAAM,GAAG3B,QAAQ,CAAC4B,eAAe,CAAC,CAAC;IAEvC,IAAID,MAAM,CAAC8F,qBAAqB,CAAC,CAAC,EAAE;MAClC9F,MAAM,CAAC+F,gBAAgB,CAAC/F,MAAM,CAACgG,gBAAgB,CAAC,CAAC,GAAGH,MAAM,CAAC;IAC7D,CAAC,MAAM;MACL7F,MAAM,CAACiG,KAAK,CAACJ,MAAM,CAAC;MAEpB,IAAI/H,KAAK,CAACkH,6BAA6B,EAAE;QACvC3G,QAAQ,CAAC4G,wBAAwB,CAAC,CAAC;MACrC;IACF;IAEA,IAAInH,KAAK,CAAC6F,WAAW,CAACC,oBAAoB,CAAC,CAAC,EAAE;MAC5CvF,QAAQ,CAACwF,kCAAkC,CAAC,CAAC;IAC/C;EACF,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIqC,cAAc,GAAG;EACnBxB,YAAY,EAAE,IAAI;EAClBkB,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;;AAEH,SAASO,MAAMA,CAACtI,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIsI,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAAC3I,KAAK,EAAEoI,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErD/I,kBAAkB,CAAC8I,MAAM,CAACtI,SAAS,EAAEC,KAAK,EAAEsI,aAAa,CAAC,CAAC,CAAC;;EAE5DhJ,KAAK,CAACsJ,MAAM,CAAC7I,SAAS,EAAEC,KAAK,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;EAChE;;EAEAF,iCAAiC,CAACC,SAAS,EAAEC,KAAK,CAAC;AACrD,CAAC,CAAC;;AAEF,IAAI6I,WAAW,GAAGvJ,KAAK,CAACuJ,WAAW,CAACR,MAAM,EAAE,mCAAmC,CAAC,CAAC,CAAC;;AAElF,IAAIS,mCAAmC,GAAG;EACxCD,WAAW,EAAEA,WAAW;EACxBR,MAAM,EAAEA;AACV,CAAC;AAED,SAASS,mCAAmC,IAAIC,OAAO,EAAEV,MAAM,EAAEQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
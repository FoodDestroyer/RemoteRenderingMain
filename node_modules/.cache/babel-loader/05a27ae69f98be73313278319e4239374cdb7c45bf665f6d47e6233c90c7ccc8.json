{"ast":null,"code":"import macro from '../../macros.js';\nimport { l as normalize, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport { vec3 } from 'gl-matrix';\nvar LIGHT_TYPES = ['HeadLight', 'CameraLight', 'SceneLight']; // ----------------------------------------------------------------------------\n// vtkLight methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLight(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLight');\n  var tmpVec = new Float64Array(3);\n  publicAPI.getTransformedPosition = function () {\n    if (model.transformMatrix) {\n      vec3.transformMat4(tmpVec, model.position, model.transformMatrix);\n    } else {\n      vec3.set(tmpVec, model.position[0], model.position[1], model.position[2]);\n    }\n    return tmpVec;\n  };\n  publicAPI.getTransformedFocalPoint = function () {\n    if (model.transformMatrix) {\n      vec3.transformMat4(tmpVec, model.focalPoint, model.transformMatrix);\n    } else {\n      vec3.set(tmpVec, model.focalPoint[0], model.focalPoint[1], model.focalPoint[2]);\n    }\n    return tmpVec;\n  };\n  publicAPI.getDirection = function () {\n    if (model.directionMTime < model.mtime) {\n      vec3.sub(model.direction, model.focalPoint, model.position);\n      normalize(model.direction);\n      model.directionMTime = model.mtime;\n    }\n    return model.direction;\n  }; // Sets the direction from a vec3 instead of a focal point\n\n  publicAPI.setDirection = function (directionVector) {\n    var newFocalPoint = new Float64Array(3);\n    vec3.sub(newFocalPoint, model.position, directionVector);\n    model.focalPoint = newFocalPoint;\n  };\n  publicAPI.setDirectionAngle = function (elevation, azimuth) {\n    var elevationRadians = radiansFromDegrees(elevation);\n    var azimuthRadians = radiansFromDegrees(azimuth);\n    publicAPI.setPosition(Math.cos(elevationRadians) * Math.sin(azimuthRadians), Math.sin(elevationRadians), Math.cos(elevationRadians) * Math.cos(azimuthRadians));\n    publicAPI.setFocalPoint(0, 0, 0);\n    publicAPI.setPositional(0);\n  };\n  publicAPI.setLightTypeToHeadLight = function () {\n    publicAPI.setLightType('HeadLight');\n  };\n  publicAPI.setLightTypeToCameraLight = function () {\n    publicAPI.setLightType('CameraLight');\n  };\n  publicAPI.setLightTypeToSceneLight = function () {\n    publicAPI.setTransformMatrix(null);\n    publicAPI.setLightType('SceneLight');\n  };\n  publicAPI.lightTypeIsHeadLight = function () {\n    return model.lightType === 'HeadLight';\n  };\n  publicAPI.lightTypeIsSceneLight = function () {\n    return model.lightType === 'SceneLight';\n  };\n  publicAPI.lightTypeIsCameraLight = function () {\n    return model.lightType === 'CameraLight';\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  switch: true,\n  intensity: 1,\n  color: [1, 1, 1],\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  positional: false,\n  exponent: 1,\n  coneAngle: 30,\n  coneFalloff: 5,\n  attenuationValues: [1, 0, 0],\n  transformMatrix: null,\n  lightType: 'SceneLight',\n  shadowAttenuation: 1,\n  direction: [0, 0, 0],\n  directionMTime: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['intensity', 'switch', 'positional', 'exponent', 'coneAngle', 'coneFalloff', 'transformMatrix', 'lightType', 'shadowAttenuation', 'attenuationValues']);\n  macro.setGetArray(publicAPI, model, ['color', 'position', 'focalPoint', 'attenuationValues'], 3); // Object methods\n\n  vtkLight(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLight'); // ----------------------------------------------------------------------------\n\nvar vtkLight$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  LIGHT_TYPES: LIGHT_TYPES\n};\nexport { LIGHT_TYPES, vtkLight$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","l","normalize","r","radiansFromDegrees","vec3","LIGHT_TYPES","vtkLight","publicAPI","model","classHierarchy","push","tmpVec","Float64Array","getTransformedPosition","transformMatrix","transformMat4","position","set","getTransformedFocalPoint","focalPoint","getDirection","directionMTime","mtime","sub","direction","setDirection","directionVector","newFocalPoint","setDirectionAngle","elevation","azimuth","elevationRadians","azimuthRadians","setPosition","Math","cos","sin","setFocalPoint","setPositional","setLightTypeToHeadLight","setLightType","setLightTypeToCameraLight","setLightTypeToSceneLight","setTransformMatrix","lightTypeIsHeadLight","lightType","lightTypeIsSceneLight","lightTypeIsCameraLight","DEFAULT_VALUES","switch","intensity","color","positional","exponent","coneAngle","coneFalloff","attenuationValues","shadowAttenuation","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","setGetArray","newInstance","vtkLight$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/Light.js"],"sourcesContent":["import macro from '../../macros.js';\nimport { l as normalize, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport { vec3 } from 'gl-matrix';\n\nvar LIGHT_TYPES = ['HeadLight', 'CameraLight', 'SceneLight']; // ----------------------------------------------------------------------------\n// vtkLight methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLight(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLight');\n  var tmpVec = new Float64Array(3);\n\n  publicAPI.getTransformedPosition = function () {\n    if (model.transformMatrix) {\n      vec3.transformMat4(tmpVec, model.position, model.transformMatrix);\n    } else {\n      vec3.set(tmpVec, model.position[0], model.position[1], model.position[2]);\n    }\n\n    return tmpVec;\n  };\n\n  publicAPI.getTransformedFocalPoint = function () {\n    if (model.transformMatrix) {\n      vec3.transformMat4(tmpVec, model.focalPoint, model.transformMatrix);\n    } else {\n      vec3.set(tmpVec, model.focalPoint[0], model.focalPoint[1], model.focalPoint[2]);\n    }\n\n    return tmpVec;\n  };\n\n  publicAPI.getDirection = function () {\n    if (model.directionMTime < model.mtime) {\n      vec3.sub(model.direction, model.focalPoint, model.position);\n      normalize(model.direction);\n      model.directionMTime = model.mtime;\n    }\n\n    return model.direction;\n  }; // Sets the direction from a vec3 instead of a focal point\n\n\n  publicAPI.setDirection = function (directionVector) {\n    var newFocalPoint = new Float64Array(3);\n    vec3.sub(newFocalPoint, model.position, directionVector);\n    model.focalPoint = newFocalPoint;\n  };\n\n  publicAPI.setDirectionAngle = function (elevation, azimuth) {\n    var elevationRadians = radiansFromDegrees(elevation);\n    var azimuthRadians = radiansFromDegrees(azimuth);\n    publicAPI.setPosition(Math.cos(elevationRadians) * Math.sin(azimuthRadians), Math.sin(elevationRadians), Math.cos(elevationRadians) * Math.cos(azimuthRadians));\n    publicAPI.setFocalPoint(0, 0, 0);\n    publicAPI.setPositional(0);\n  };\n\n  publicAPI.setLightTypeToHeadLight = function () {\n    publicAPI.setLightType('HeadLight');\n  };\n\n  publicAPI.setLightTypeToCameraLight = function () {\n    publicAPI.setLightType('CameraLight');\n  };\n\n  publicAPI.setLightTypeToSceneLight = function () {\n    publicAPI.setTransformMatrix(null);\n    publicAPI.setLightType('SceneLight');\n  };\n\n  publicAPI.lightTypeIsHeadLight = function () {\n    return model.lightType === 'HeadLight';\n  };\n\n  publicAPI.lightTypeIsSceneLight = function () {\n    return model.lightType === 'SceneLight';\n  };\n\n  publicAPI.lightTypeIsCameraLight = function () {\n    return model.lightType === 'CameraLight';\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  switch: true,\n  intensity: 1,\n  color: [1, 1, 1],\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  positional: false,\n  exponent: 1,\n  coneAngle: 30,\n  coneFalloff: 5,\n  attenuationValues: [1, 0, 0],\n  transformMatrix: null,\n  lightType: 'SceneLight',\n  shadowAttenuation: 1,\n  direction: [0, 0, 0],\n  directionMTime: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['intensity', 'switch', 'positional', 'exponent', 'coneAngle', 'coneFalloff', 'transformMatrix', 'lightType', 'shadowAttenuation', 'attenuationValues']);\n  macro.setGetArray(publicAPI, model, ['color', 'position', 'focalPoint', 'attenuationValues'], 3); // Object methods\n\n  vtkLight(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLight'); // ----------------------------------------------------------------------------\n\nvar vtkLight$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  LIGHT_TYPES: LIGHT_TYPES\n};\n\nexport { LIGHT_TYPES, vtkLight$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
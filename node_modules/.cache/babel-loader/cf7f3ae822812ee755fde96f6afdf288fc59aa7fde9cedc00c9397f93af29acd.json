{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { newInstance as newInstance$1, obj, setGet, vtkErrorMacro as vtkErrorMacro$1, newTypedArray } from '../../macros.js';\nimport { j as cross, l as normalize } from '../../Common/Core/Math/index.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUIndexBuffer from './IndexBuffer.js';\nimport vtkWebGPUTypes from './Types.js';\nimport Constants from './BufferManager/Constants.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar BufferUsage = Constants.BufferUsage;\nvar vtkErrorMacro = vtkErrorMacro$1;\nvar VtkDataTypes = vtkDataArray.VtkDataTypes; // the webgpu constants all show up as undefined\n\n/* eslint-disable no-undef */\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {};\nfunction _getFormatForDataArray(dataArray) {\n  var format;\n  switch (dataArray.getDataType()) {\n    case VtkDataTypes.UNSIGNED_CHAR:\n      format = 'uint8';\n      break;\n    case VtkDataTypes.FLOAT:\n      format = 'float32';\n      break;\n    case VtkDataTypes.UNSIGNED_INT:\n      format = 'uint32';\n      break;\n    case VtkDataTypes.INT:\n      format = 'sint32';\n      break;\n    case VtkDataTypes.DOUBLE:\n      format = 'float32';\n      break;\n    case VtkDataTypes.UNSIGNED_SHORT:\n      format = 'uint16';\n      break;\n    case VtkDataTypes.SHORT:\n      format = 'sin16';\n      break;\n    default:\n      format = 'float32';\n      break;\n  }\n  switch (dataArray.getNumberOfComponents()) {\n    case 2:\n      format += 'x2';\n      break;\n    case 3:\n      // only 32bit types support x3\n      if (!format.includes('32')) {\n        vtkErrorMacro(\"unsupported x3 type for \".concat(format));\n      }\n      format += 'x3';\n      break;\n    case 4:\n      format += 'x4';\n      break;\n  }\n  return format;\n}\nfunction packArray(indexBuffer, inArrayData, numComp, outputType, options) {\n  var result = {};\n  var flatSize = indexBuffer.getFlatSize();\n  if (!flatSize) {\n    return result;\n  } // setup shift and scale\n\n  var shift = [0.0, 0.0, 0.0, 0.0];\n  if (options.shift) {\n    if (options.shift.length) {\n      shift = options.shift;\n    } else {\n      shift.fill(options.shift);\n    }\n  }\n  var scale = [1.0, 1.0, 1.0, 1.0];\n  if (options.scale) {\n    if (options.scale.length) {\n      scale = options.scale;\n    } else {\n      scale.fill(options.scale);\n    }\n  }\n  var packExtra = Object.prototype.hasOwnProperty.call(options, 'packExtra') ? options.packExtra : false;\n  var addAPoint;\n  var vboidx = 0;\n  var stride = numComp + (packExtra ? 1 : 0);\n  var packedVBO = newTypedArray(outputType, flatSize * stride); // pick the right function based on point versus cell data\n\n  var flatIdMap = indexBuffer.getFlatIdToPointId();\n  if (options.cellData) {\n    flatIdMap = indexBuffer.getFlatIdToCellId();\n  } // add data based on number of components\n\n  if (numComp === 1) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n    };\n  } else if (numComp === 2) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n    };\n  } else if (numComp === 3 && !packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n    };\n  } else if (numComp === 3 && packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * 1.0 + shift[3];\n    };\n  } else if (numComp === 4) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * inArrayData[i + 3] + shift[3];\n    };\n  } // for each entry in the flat array process it\n\n  for (var index = 0; index < flatSize; index++) {\n    var inArrayId = numComp * flatIdMap[index];\n    addAPoint(inArrayId);\n  }\n  result.nativeArray = packedVBO;\n  return result;\n}\nfunction getNormal(pointData, i0, i1, i2) {\n  var v1 = [pointData[i2 * 3] - pointData[i1 * 3], pointData[i2 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i2 * 3 + 2] - pointData[i1 * 3 + 2]];\n  var v2 = [pointData[i0 * 3] - pointData[i1 * 3], pointData[i0 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i0 * 3 + 2] - pointData[i1 * 3 + 2]];\n  var result = [];\n  cross(v1, v2, result);\n  normalize(result);\n  return result;\n}\nfunction generateNormals(cellArray, pointArray) {\n  var pointData = pointArray.getData();\n  var cellArrayData = cellArray.getData();\n  if (!cellArrayData || !pointData) {\n    return null;\n  } // return a cellArray of normals\n\n  var packedVBO = new Int8Array(cellArray.getNumberOfCells() * 4);\n  var size = cellArrayData.length;\n  var vboidx = 0;\n  for (var index = 0; index < size;) {\n    var normal = getNormal(pointData, cellArrayData[index + 1], cellArrayData[index + 2], cellArrayData[index + 3]);\n    packedVBO[vboidx++] = 127 * normal[0];\n    packedVBO[vboidx++] = 127 * normal[1];\n    packedVBO[vboidx++] = 127 * normal[2];\n    packedVBO[vboidx++] = 127;\n    index += cellArrayData[index] + 1;\n  }\n  return packedVBO;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBufferManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBufferManager');\n  function _createBuffer(req) {\n    // if a dataArray is provided set the nativeArray\n    if (req.dataArray && !req.nativeArray) {\n      req.nativeArray = req.dataArray.getData();\n    }\n    var buffer;\n    var gpuUsage; // handle index buffers\n\n    if (req.usage === BufferUsage.Index) {\n      // todo change to FlattenedIndex to be more clear\n      buffer = vtkWebGPUIndexBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n      /* eslint-disable no-bitwise */\n\n      gpuUsage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.buildIndexBuffer(req);\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setArrayInformation([{\n        format: req.format\n      }]);\n    } // create one if not done already\n\n    if (!buffer) {\n      buffer = vtkWebGPUBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n    } // handle uniform buffers\n\n    if (req.usage === BufferUsage.UniformArray) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle storage buffers\n\n    if (req.usage === BufferUsage.Storage) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle textures\n\n    if (req.usage === BufferUsage.Texture) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.COPY_SRC;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // all of the below types that have gpuUsage = VERTEX require format\n    // to be provided.\n    // handle point data\n\n    if (req.usage === BufferUsage.PointArray) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      var arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      var result = packArray(req.indexBuffer, req.dataArray.getData(), req.dataArray.getNumberOfComponents(), arrayType, {\n        packExtra: req.packExtra,\n        shift: req.shift,\n        scale: req.scale,\n        cellData: req.cellData,\n        cellOffset: req.cellOffset\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: req.cellData ? 'flat' : 'perspective'\n      }]);\n    } // handle normals from points, snorm8x4\n\n    if (req.usage === BufferUsage.NormalsFromPoints) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      var _arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      var normals = generateNormals(req.cells, req.dataArray);\n      var _result = packArray(req.indexBuffer, normals, 4, _arrayType, {\n        cellData: true\n      });\n      buffer.createAndWrite(_result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: 'flat'\n      }]);\n    }\n    if (req.usage === BufferUsage.RawVertex) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format\n      }]);\n    }\n    buffer.setSourceTime(req.time);\n    return buffer;\n  } // is the buffer already present?\n\n  publicAPI.hasBuffer = function (hash) {\n    return model.device.hasCachedObject(hash);\n  };\n  publicAPI.getBuffer = function (req) {\n    // if we have a source the get/create/cache the buffer\n    if (req.hash) {\n      return model.device.getCachedObject(req.hash, _createBuffer, req);\n    }\n    return _createBuffer(req);\n  };\n  publicAPI.getBufferForPointArray = function (dataArray, indexBuffer) {\n    var format = _getFormatForDataArray(dataArray);\n    var buffRequest = {\n      hash: \"\".concat(dataArray.getMTime(), \"I\").concat(indexBuffer.getMTime()).concat(format),\n      usage: BufferUsage.PointArray,\n      format: format,\n      dataArray: dataArray,\n      indexBuffer: indexBuffer\n    };\n    return publicAPI.getBuffer(buffRequest);\n  };\n  publicAPI.getFullScreenQuadBuffer = function () {\n    if (model.fullScreenQuadBuffer) {\n      return model.fullScreenQuadBuffer;\n    }\n    model.fullScreenQuadBuffer = vtkWebGPUBuffer.newInstance();\n    model.fullScreenQuadBuffer.setDevice(model.device); // prettier-ignore\n\n    var array = new Float32Array([-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0]);\n    model.fullScreenQuadBuffer.createAndWrite(array, GPUBufferUsage.VERTEX);\n    model.fullScreenQuadBuffer.setStrideInBytes(12);\n    model.fullScreenQuadBuffer.setArrayInformation([{\n      offset: 0,\n      format: 'float32x3'\n    }]);\n    return model.fullScreenQuadBuffer;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  device: null,\n  fullScreenQuadBuffer: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  obj(publicAPI, model);\n  setGet(publicAPI, model, ['device']);\n  vtkWebGPUBufferManager(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUBufferManager$1 = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\nexport { STATIC, vtkWebGPUBufferManager$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","newInstance","newInstance$1","obj","setGet","vtkErrorMacro","vtkErrorMacro$1","newTypedArray","j","cross","l","normalize","vtkDataArray","vtkWebGPUBuffer","vtkWebGPUIndexBuffer","vtkWebGPUTypes","Constants","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","BufferUsage","VtkDataTypes","STATIC","_getFormatForDataArray","dataArray","format","getDataType","UNSIGNED_CHAR","FLOAT","UNSIGNED_INT","INT","DOUBLE","UNSIGNED_SHORT","SHORT","getNumberOfComponents","includes","concat","packArray","indexBuffer","inArrayData","numComp","outputType","options","result","flatSize","getFlatSize","shift","fill","scale","packExtra","prototype","hasOwnProperty","call","addAPoint","vboidx","stride","packedVBO","flatIdMap","getFlatIdToPointId","cellData","getFlatIdToCellId","addAPointFunc","index","inArrayId","nativeArray","getNormal","pointData","i0","i1","i2","v1","v2","generateNormals","cellArray","pointArray","getData","cellArrayData","Int8Array","getNumberOfCells","size","normal","vtkWebGPUBufferManager","publicAPI","model","classHierarchy","_createBuffer","req","buffer","gpuUsage","usage","Index","label","setDevice","device","GPUBufferUsage","INDEX","COPY_DST","buildIndexBuffer","createAndWrite","setArrayInformation","UniformArray","UNIFORM","Storage","STORAGE","Texture","COPY_SRC","PointArray","VERTEX","arrayType","getNativeTypeFromBufferFormat","cellOffset","setStrideInBytes","getByteStrideFromBufferFormat","offset","interpolation","NormalsFromPoints","_arrayType","normals","cells","_result","RawVertex","setSourceTime","time","hasBuffer","hash","hasCachedObject","getBuffer","getCachedObject","getBufferForPointArray","buffRequest","getMTime","getFullScreenQuadBuffer","fullScreenQuadBuffer","array","Float32Array","DEFAULT_VALUES","extend","initialValues","undefined","assign","vtkWebGPUBufferManager$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { newInstance as newInstance$1, obj, setGet, vtkErrorMacro as vtkErrorMacro$1, newTypedArray } from '../../macros.js';\nimport { j as cross, l as normalize } from '../../Common/Core/Math/index.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUIndexBuffer from './IndexBuffer.js';\nimport vtkWebGPUTypes from './Types.js';\nimport Constants from './BufferManager/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar BufferUsage = Constants.BufferUsage;\nvar vtkErrorMacro = vtkErrorMacro$1;\nvar VtkDataTypes = vtkDataArray.VtkDataTypes; // the webgpu constants all show up as undefined\n\n/* eslint-disable no-undef */\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {};\n\nfunction _getFormatForDataArray(dataArray) {\n  var format;\n\n  switch (dataArray.getDataType()) {\n    case VtkDataTypes.UNSIGNED_CHAR:\n      format = 'uint8';\n      break;\n\n    case VtkDataTypes.FLOAT:\n      format = 'float32';\n      break;\n\n    case VtkDataTypes.UNSIGNED_INT:\n      format = 'uint32';\n      break;\n\n    case VtkDataTypes.INT:\n      format = 'sint32';\n      break;\n\n    case VtkDataTypes.DOUBLE:\n      format = 'float32';\n      break;\n\n    case VtkDataTypes.UNSIGNED_SHORT:\n      format = 'uint16';\n      break;\n\n    case VtkDataTypes.SHORT:\n      format = 'sin16';\n      break;\n\n    default:\n      format = 'float32';\n      break;\n  }\n\n  switch (dataArray.getNumberOfComponents()) {\n    case 2:\n      format += 'x2';\n      break;\n\n    case 3:\n      // only 32bit types support x3\n      if (!format.includes('32')) {\n        vtkErrorMacro(\"unsupported x3 type for \".concat(format));\n      }\n\n      format += 'x3';\n      break;\n\n    case 4:\n      format += 'x4';\n      break;\n  }\n\n  return format;\n}\n\nfunction packArray(indexBuffer, inArrayData, numComp, outputType, options) {\n  var result = {};\n  var flatSize = indexBuffer.getFlatSize();\n\n  if (!flatSize) {\n    return result;\n  } // setup shift and scale\n\n\n  var shift = [0.0, 0.0, 0.0, 0.0];\n\n  if (options.shift) {\n    if (options.shift.length) {\n      shift = options.shift;\n    } else {\n      shift.fill(options.shift);\n    }\n  }\n\n  var scale = [1.0, 1.0, 1.0, 1.0];\n\n  if (options.scale) {\n    if (options.scale.length) {\n      scale = options.scale;\n    } else {\n      scale.fill(options.scale);\n    }\n  }\n\n  var packExtra = Object.prototype.hasOwnProperty.call(options, 'packExtra') ? options.packExtra : false;\n  var addAPoint;\n  var vboidx = 0;\n  var stride = numComp + (packExtra ? 1 : 0);\n  var packedVBO = newTypedArray(outputType, flatSize * stride); // pick the right function based on point versus cell data\n\n  var flatIdMap = indexBuffer.getFlatIdToPointId();\n\n  if (options.cellData) {\n    flatIdMap = indexBuffer.getFlatIdToCellId();\n  } // add data based on number of components\n\n\n  if (numComp === 1) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n    };\n  } else if (numComp === 2) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n    };\n  } else if (numComp === 3 && !packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n    };\n  } else if (numComp === 3 && packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * 1.0 + shift[3];\n    };\n  } else if (numComp === 4) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * inArrayData[i + 3] + shift[3];\n    };\n  } // for each entry in the flat array process it\n\n\n  for (var index = 0; index < flatSize; index++) {\n    var inArrayId = numComp * flatIdMap[index];\n    addAPoint(inArrayId);\n  }\n\n  result.nativeArray = packedVBO;\n  return result;\n}\n\nfunction getNormal(pointData, i0, i1, i2) {\n  var v1 = [pointData[i2 * 3] - pointData[i1 * 3], pointData[i2 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i2 * 3 + 2] - pointData[i1 * 3 + 2]];\n  var v2 = [pointData[i0 * 3] - pointData[i1 * 3], pointData[i0 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i0 * 3 + 2] - pointData[i1 * 3 + 2]];\n  var result = [];\n  cross(v1, v2, result);\n  normalize(result);\n  return result;\n}\n\nfunction generateNormals(cellArray, pointArray) {\n  var pointData = pointArray.getData();\n  var cellArrayData = cellArray.getData();\n\n  if (!cellArrayData || !pointData) {\n    return null;\n  } // return a cellArray of normals\n\n\n  var packedVBO = new Int8Array(cellArray.getNumberOfCells() * 4);\n  var size = cellArrayData.length;\n  var vboidx = 0;\n\n  for (var index = 0; index < size;) {\n    var normal = getNormal(pointData, cellArrayData[index + 1], cellArrayData[index + 2], cellArrayData[index + 3]);\n    packedVBO[vboidx++] = 127 * normal[0];\n    packedVBO[vboidx++] = 127 * normal[1];\n    packedVBO[vboidx++] = 127 * normal[2];\n    packedVBO[vboidx++] = 127;\n    index += cellArrayData[index] + 1;\n  }\n\n  return packedVBO;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUBufferManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBufferManager');\n\n  function _createBuffer(req) {\n    // if a dataArray is provided set the nativeArray\n    if (req.dataArray && !req.nativeArray) {\n      req.nativeArray = req.dataArray.getData();\n    }\n\n    var buffer;\n    var gpuUsage; // handle index buffers\n\n    if (req.usage === BufferUsage.Index) {\n      // todo change to FlattenedIndex to be more clear\n      buffer = vtkWebGPUIndexBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n      /* eslint-disable no-bitwise */\n\n      gpuUsage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.buildIndexBuffer(req);\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setArrayInformation([{\n        format: req.format\n      }]);\n    } // create one if not done already\n\n\n    if (!buffer) {\n      buffer = vtkWebGPUBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n    } // handle uniform buffers\n\n\n    if (req.usage === BufferUsage.UniformArray) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle storage buffers\n\n\n    if (req.usage === BufferUsage.Storage) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle textures\n\n\n    if (req.usage === BufferUsage.Texture) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.COPY_SRC;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // all of the below types that have gpuUsage = VERTEX require format\n    // to be provided.\n    // handle point data\n\n\n    if (req.usage === BufferUsage.PointArray) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      var arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      var result = packArray(req.indexBuffer, req.dataArray.getData(), req.dataArray.getNumberOfComponents(), arrayType, {\n        packExtra: req.packExtra,\n        shift: req.shift,\n        scale: req.scale,\n        cellData: req.cellData,\n        cellOffset: req.cellOffset\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: req.cellData ? 'flat' : 'perspective'\n      }]);\n    } // handle normals from points, snorm8x4\n\n\n    if (req.usage === BufferUsage.NormalsFromPoints) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n\n      var _arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n\n      var normals = generateNormals(req.cells, req.dataArray);\n\n      var _result = packArray(req.indexBuffer, normals, 4, _arrayType, {\n        cellData: true\n      });\n\n      buffer.createAndWrite(_result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: 'flat'\n      }]);\n    }\n\n    if (req.usage === BufferUsage.RawVertex) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format\n      }]);\n    }\n\n    buffer.setSourceTime(req.time);\n    return buffer;\n  } // is the buffer already present?\n\n\n  publicAPI.hasBuffer = function (hash) {\n    return model.device.hasCachedObject(hash);\n  };\n\n  publicAPI.getBuffer = function (req) {\n    // if we have a source the get/create/cache the buffer\n    if (req.hash) {\n      return model.device.getCachedObject(req.hash, _createBuffer, req);\n    }\n\n    return _createBuffer(req);\n  };\n\n  publicAPI.getBufferForPointArray = function (dataArray, indexBuffer) {\n    var format = _getFormatForDataArray(dataArray);\n\n    var buffRequest = {\n      hash: \"\".concat(dataArray.getMTime(), \"I\").concat(indexBuffer.getMTime()).concat(format),\n      usage: BufferUsage.PointArray,\n      format: format,\n      dataArray: dataArray,\n      indexBuffer: indexBuffer\n    };\n    return publicAPI.getBuffer(buffRequest);\n  };\n\n  publicAPI.getFullScreenQuadBuffer = function () {\n    if (model.fullScreenQuadBuffer) {\n      return model.fullScreenQuadBuffer;\n    }\n\n    model.fullScreenQuadBuffer = vtkWebGPUBuffer.newInstance();\n    model.fullScreenQuadBuffer.setDevice(model.device); // prettier-ignore\n\n    var array = new Float32Array([-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0]);\n    model.fullScreenQuadBuffer.createAndWrite(array, GPUBufferUsage.VERTEX);\n    model.fullScreenQuadBuffer.setStrideInBytes(12);\n    model.fullScreenQuadBuffer.setArrayInformation([{\n      offset: 0,\n      format: 'float32x3'\n    }]);\n    return model.fullScreenQuadBuffer;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  fullScreenQuadBuffer: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  obj(publicAPI, model);\n  setGet(publicAPI, model, ['device']);\n  vtkWebGPUBufferManager(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUBufferManager$1 = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\n\nexport { STATIC, vtkWebGPUBufferManager$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
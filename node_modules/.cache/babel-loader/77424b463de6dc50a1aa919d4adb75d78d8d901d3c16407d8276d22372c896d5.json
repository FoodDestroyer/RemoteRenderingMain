{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkCellArray from '../../Common/Core/CellArray.js';\nimport vtkPoints from '../../Common/Core/Points.js';\n\n// vtkCursor3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCursor3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCursor3D'); // Public API methods\n\n  publicAPI.setModelBounds = function (bounds) {\n    if (!Array.isArray(bounds) || bounds.length < 6) {\n      return;\n    }\n    if (model.modelBounds[0] === bounds[0] && model.modelBounds[1] === bounds[1] && model.modelBounds[2] === bounds[2] && model.modelBounds[3] === bounds[3] && model.modelBounds[4] === bounds[4] && model.modelBounds[5] === bounds[5]) {\n      return;\n    }\n    publicAPI.modified(); // Doing type convert, make sure it is a number array.\n    // Without correct coversion, the array may contains string which cause\n    // the wrapping and clampping works incorrectly.\n\n    model.modelBounds = bounds.map(function (v) {\n      return Number(v);\n    });\n    for (var i = 0; i < 3; ++i) {\n      model.modelBounds[2 * i] = Math.min(model.modelBounds[2 * i], model.modelBounds[2 * i + 1]);\n    }\n  };\n  publicAPI.setFocalPoint = function (points) {\n    if (!Array.isArray(points) || points.length < 3) {\n      return;\n    }\n    if (points[0] === model.focalPoint[0] && points[1] === model.focalPoint[1] && points[2] === model.focalPoint[2]) {\n      return;\n    }\n    publicAPI.modified();\n    var v = [];\n    for (var i = 0; i < 3; i++) {\n      v[i] = points[i] - model.focalPoint[i];\n      model.focalPoint[i] = Number(points[i]);\n      if (model.translationMode) {\n        model.modelBounds[2 * i] += v[i];\n        model.modelBounds[2 * i + 1] += v[i];\n      } // wrap\n      else if (model.wrap) {\n        model.focalPoint[i] = model.modelBounds[2 * i] + (model.focalPoint[i] - model.modelBounds[2 * i]) * 1.0 % ((model.modelBounds[2 * i + 1] - model.modelBounds[2 * i]) * 1.0);\n      } // clamp\n      else {\n        if (points[i] < model.modelBounds[2 * i]) {\n          model.focalPoint[i] = model.modelBounds[2 * i];\n        }\n        if (points[i] > model.modelBounds[2 * i + 1]) {\n          model.focalPoint[i] = model.modelBounds[2 * i + 1];\n        }\n      }\n    }\n  };\n  publicAPI.setAll = function (flag) {\n    publicAPI.setOutline(flag);\n    publicAPI.setAxes(flag);\n    publicAPI.setXShadows(flag);\n    publicAPI.setYShadows(flag);\n    publicAPI.setZShadows(flag);\n  };\n  publicAPI.allOn = function () {\n    publicAPI.setAll(true);\n  };\n  publicAPI.allOff = function () {\n    publicAPI.setAll(false);\n  };\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    var numPts = 0;\n    var numLines = 0; // Check bounding box and origin\n\n    if (model.wrap) {\n      for (var i = 0; i < model.focalPoint.length; ++i) {\n        model.focalPoint[i] = model.modelBounds[2 * i] + (model.focalPoint[i] - model.modelBounds[2 * i]) * 1.0 % (model.modelBounds[2 * i + 1] - model.modelBounds[2 * i]);\n      }\n    } else {\n      for (var _i = 0; _i < model.focalPoint.length; ++_i) {\n        model.focalPoint[_i] = Math.max(model.focalPoint[_i], model.modelBounds[2 * _i]);\n        model.focalPoint[_i] = Math.min(model.focalPoint[_i], model.modelBounds[2 * _i + 1]);\n      }\n    } // allocate storage\n\n    if (model.axes) {\n      numPts += 6;\n      numLines += 3;\n    }\n    if (model.outline) {\n      numPts += 8;\n      numLines += 12;\n    }\n    if (model.xShadows) {\n      numPts += 8;\n      numLines += 4;\n    }\n    if (model.yShadows) {\n      numPts += 8;\n      numLines += 4;\n    }\n    if (model.zShadows) {\n      numPts += 8;\n      numLines += 4;\n    }\n    if (numPts === 0) {\n      return;\n    }\n    var polyData = vtkPolyData.newInstance();\n    var newPts = vtkPoints.newInstance({\n      size: numPts * 3\n    }); //  vtkCellArray is a supporting object that explicitly represents cell\n    //  connectivity. The cell array structure is a raw integer list\n    //  of the form: (n,id1,id2,...,idn, n,id1,id2,...,idn, ...)\n    //  where n is the number of points in the cell, and id is a zero-offset index\n    //  into an associated point list.\n\n    var newLines = vtkCellArray.newInstance({\n      size: numLines * (2 + 1)\n    });\n    var pid = 0;\n    var cid = 0; // Create axes\n\n    if (model.axes) {\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n      newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n      newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n      ++pid;\n      newLines.getData()[cid * 3 + 0] = 2;\n      newLines.getData()[cid * 3 + 1] = pid - 2;\n      newLines.getData()[cid * 3 + 2] = pid - 1;\n      ++cid;\n      newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n      ++pid;\n      newLines.getData()[cid * 3 + 0] = 2;\n      newLines.getData()[cid * 3 + 1] = pid - 2;\n      newLines.getData()[cid * 3 + 2] = pid - 1;\n      ++cid;\n      newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n      newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n      newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      ++pid;\n      newLines.getData()[cid * 3 + 0] = 2;\n      newLines.getData()[cid * 3 + 1] = pid - 2;\n      newLines.getData()[cid * 3 + 2] = pid - 1;\n      ++cid;\n    } // create outline\n\n    if (model.outline) {\n      // first traid\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      var corner024 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      var corner124 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      var corner034 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      var corner025 = pid;\n      ++pid;\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner024;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner124;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner024;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner034;\n      newLines.getData()[(cid + 2) * 3 + 0] = 2;\n      newLines.getData()[(cid + 2) * 3 + 1] = corner024;\n      newLines.getData()[(cid + 2) * 3 + 2] = corner025;\n      cid += 3; // second triad\n\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      var corner135 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      var corner035 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      var corner125 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      var corner134 = pid;\n      ++pid;\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner135;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner035;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner135;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner125;\n      newLines.getData()[(cid + 2) * 3 + 0] = 2;\n      newLines.getData()[(cid + 2) * 3 + 1] = corner135;\n      newLines.getData()[(cid + 2) * 3 + 2] = corner134;\n      cid += 3; // Fill in remaining lines\n      // vtk.js do not support checking repeating insertion\n\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner124;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner134;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner124;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner125;\n      cid += 2;\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner034;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner134;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner034;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner035;\n      cid += 2;\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner025;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner125;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner025;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner035;\n      cid += 2;\n    } // create x-shadows\n\n    if (model.xShadows) {\n      for (var _i2 = 0; _i2 < 2; ++_i2) {\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[_i2];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n        newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[_i2];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n        newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[_i2];\n        newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[_i2];\n        newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n      }\n    } // create y-shadows\n\n    if (model.yShadows) {\n      for (var _i3 = 0; _i3 < 2; ++_i3) {\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[_i3 + 2];\n        newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[_i3 + 2];\n        newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n        newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[_i3 + 2];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[_i3 + 2];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n      }\n    } // create z-shadows\n\n    if (model.zShadows) {\n      for (var _i4 = 0; _i4 < 2; ++_i4) {\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n        newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[_i4 + 4];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n        newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[_i4 + 4];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n        newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[_i4 + 4];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[_i4 + 4];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n      }\n    }\n    var pts = vtkPoints.newInstance({\n      size: 3\n    });\n    pts.getData()[0] = model.focalPoint[0];\n    pts.getData()[1] = model.focalPoint[1];\n    pts.getData()[2] = model.focalPoint[2]; // update ourseleves\n\n    model.focus = vtkPolyData.newInstance();\n    model.focus.setPoints(pts);\n    polyData.setPoints(newPts);\n    polyData.setLines(newLines);\n    outData[0] = polyData;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  focus: null,\n  modelBounds: [-1.0, 1.0, -1.0, 1.0, -1.0, 1.0],\n  focalPoint: [0.0, 0.0, 0.0],\n  outline: true,\n  axes: true,\n  xShadows: true,\n  yShadows: true,\n  zShadows: true,\n  wrap: false,\n  translationMode: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n  // Cursor3D\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['focus']);\n  macro.getArray(publicAPI, model, ['modelBounds'], 6);\n  macro.getArray(publicAPI, model, ['focalPoint'], 3);\n  macro.setGet(publicAPI, model, ['outline']);\n  macro.setGet(publicAPI, model, ['axes']);\n  macro.setGet(publicAPI, model, ['xShadows']);\n  macro.setGet(publicAPI, model, ['yShadows']);\n  macro.setGet(publicAPI, model, ['zShadows']);\n  macro.setGet(publicAPI, model, ['wrap']);\n  macro.setGet(publicAPI, model, ['translationMode']);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkCursor3D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCursor3D'); // ----------------------------------------------------------------------------\n\nvar vtkCursor3D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkCursor3D$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkPolyData","vtkCellArray","vtkPoints","vtkCursor3D","publicAPI","model","classHierarchy","push","setModelBounds","bounds","Array","isArray","length","modelBounds","modified","map","v","Number","i","Math","min","setFocalPoint","points","focalPoint","translationMode","wrap","setAll","flag","setOutline","setAxes","setXShadows","setYShadows","setZShadows","allOn","allOff","requestData","inData","outData","deleted","numPts","numLines","_i","max","axes","outline","xShadows","yShadows","zShadows","polyData","newInstance","newPts","size","newLines","pid","cid","getData","corner024","corner124","corner034","corner025","corner135","corner035","corner125","corner134","_i2","_i3","_i4","pts","focus","setPoints","setLines","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","get","getArray","setGet","algo","vtkCursor3D$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/Sources/Cursor3D.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkCellArray from '../../Common/Core/CellArray.js';\nimport vtkPoints from '../../Common/Core/Points.js';\n\n// vtkCursor3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCursor3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCursor3D'); // Public API methods\n\n  publicAPI.setModelBounds = function (bounds) {\n    if (!Array.isArray(bounds) || bounds.length < 6) {\n      return;\n    }\n\n    if (model.modelBounds[0] === bounds[0] && model.modelBounds[1] === bounds[1] && model.modelBounds[2] === bounds[2] && model.modelBounds[3] === bounds[3] && model.modelBounds[4] === bounds[4] && model.modelBounds[5] === bounds[5]) {\n      return;\n    }\n\n    publicAPI.modified(); // Doing type convert, make sure it is a number array.\n    // Without correct coversion, the array may contains string which cause\n    // the wrapping and clampping works incorrectly.\n\n    model.modelBounds = bounds.map(function (v) {\n      return Number(v);\n    });\n\n    for (var i = 0; i < 3; ++i) {\n      model.modelBounds[2 * i] = Math.min(model.modelBounds[2 * i], model.modelBounds[2 * i + 1]);\n    }\n  };\n\n  publicAPI.setFocalPoint = function (points) {\n    if (!Array.isArray(points) || points.length < 3) {\n      return;\n    }\n\n    if (points[0] === model.focalPoint[0] && points[1] === model.focalPoint[1] && points[2] === model.focalPoint[2]) {\n      return;\n    }\n\n    publicAPI.modified();\n    var v = [];\n\n    for (var i = 0; i < 3; i++) {\n      v[i] = points[i] - model.focalPoint[i];\n      model.focalPoint[i] = Number(points[i]);\n\n      if (model.translationMode) {\n        model.modelBounds[2 * i] += v[i];\n        model.modelBounds[2 * i + 1] += v[i];\n      } // wrap\n      else if (model.wrap) {\n        model.focalPoint[i] = model.modelBounds[2 * i] + (model.focalPoint[i] - model.modelBounds[2 * i]) * 1.0 % ((model.modelBounds[2 * i + 1] - model.modelBounds[2 * i]) * 1.0);\n      } // clamp\n      else {\n        if (points[i] < model.modelBounds[2 * i]) {\n          model.focalPoint[i] = model.modelBounds[2 * i];\n        }\n\n        if (points[i] > model.modelBounds[2 * i + 1]) {\n          model.focalPoint[i] = model.modelBounds[2 * i + 1];\n        }\n      }\n    }\n  };\n\n  publicAPI.setAll = function (flag) {\n    publicAPI.setOutline(flag);\n    publicAPI.setAxes(flag);\n    publicAPI.setXShadows(flag);\n    publicAPI.setYShadows(flag);\n    publicAPI.setZShadows(flag);\n  };\n\n  publicAPI.allOn = function () {\n    publicAPI.setAll(true);\n  };\n\n  publicAPI.allOff = function () {\n    publicAPI.setAll(false);\n  };\n\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n\n    var numPts = 0;\n    var numLines = 0; // Check bounding box and origin\n\n    if (model.wrap) {\n      for (var i = 0; i < model.focalPoint.length; ++i) {\n        model.focalPoint[i] = model.modelBounds[2 * i] + (model.focalPoint[i] - model.modelBounds[2 * i]) * 1.0 % (model.modelBounds[2 * i + 1] - model.modelBounds[2 * i]);\n      }\n    } else {\n      for (var _i = 0; _i < model.focalPoint.length; ++_i) {\n        model.focalPoint[_i] = Math.max(model.focalPoint[_i], model.modelBounds[2 * _i]);\n        model.focalPoint[_i] = Math.min(model.focalPoint[_i], model.modelBounds[2 * _i + 1]);\n      }\n    } // allocate storage\n\n\n    if (model.axes) {\n      numPts += 6;\n      numLines += 3;\n    }\n\n    if (model.outline) {\n      numPts += 8;\n      numLines += 12;\n    }\n\n    if (model.xShadows) {\n      numPts += 8;\n      numLines += 4;\n    }\n\n    if (model.yShadows) {\n      numPts += 8;\n      numLines += 4;\n    }\n\n    if (model.zShadows) {\n      numPts += 8;\n      numLines += 4;\n    }\n\n    if (numPts === 0) {\n      return;\n    }\n\n    var polyData = vtkPolyData.newInstance();\n    var newPts = vtkPoints.newInstance({\n      size: numPts * 3\n    }); //  vtkCellArray is a supporting object that explicitly represents cell\n    //  connectivity. The cell array structure is a raw integer list\n    //  of the form: (n,id1,id2,...,idn, n,id1,id2,...,idn, ...)\n    //  where n is the number of points in the cell, and id is a zero-offset index\n    //  into an associated point list.\n\n    var newLines = vtkCellArray.newInstance({\n      size: numLines * (2 + 1)\n    });\n    var pid = 0;\n    var cid = 0; // Create axes\n\n    if (model.axes) {\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n      newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n      newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n      ++pid;\n      newLines.getData()[cid * 3 + 0] = 2;\n      newLines.getData()[cid * 3 + 1] = pid - 2;\n      newLines.getData()[cid * 3 + 2] = pid - 1;\n      ++cid;\n      newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n      ++pid;\n      newLines.getData()[cid * 3 + 0] = 2;\n      newLines.getData()[cid * 3 + 1] = pid - 2;\n      newLines.getData()[cid * 3 + 2] = pid - 1;\n      ++cid;\n      newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n      newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n      newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      ++pid;\n      newLines.getData()[cid * 3 + 0] = 2;\n      newLines.getData()[cid * 3 + 1] = pid - 2;\n      newLines.getData()[cid * 3 + 2] = pid - 1;\n      ++cid;\n    } // create outline\n\n\n    if (model.outline) {\n      // first traid\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      var corner024 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      var corner124 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      var corner034 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      var corner025 = pid;\n      ++pid;\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner024;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner124;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner024;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner034;\n      newLines.getData()[(cid + 2) * 3 + 0] = 2;\n      newLines.getData()[(cid + 2) * 3 + 1] = corner024;\n      newLines.getData()[(cid + 2) * 3 + 2] = corner025;\n      cid += 3; // second triad\n\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      var corner135 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      var corner035 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n      var corner125 = pid;\n      ++pid;\n      newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n      newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n      newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n      var corner134 = pid;\n      ++pid;\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner135;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner035;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner135;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner125;\n      newLines.getData()[(cid + 2) * 3 + 0] = 2;\n      newLines.getData()[(cid + 2) * 3 + 1] = corner135;\n      newLines.getData()[(cid + 2) * 3 + 2] = corner134;\n      cid += 3; // Fill in remaining lines\n      // vtk.js do not support checking repeating insertion\n\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner124;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner134;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner124;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner125;\n      cid += 2;\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner034;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner134;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner034;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner035;\n      cid += 2;\n      newLines.getData()[(cid + 0) * 3 + 0] = 2;\n      newLines.getData()[(cid + 0) * 3 + 1] = corner025;\n      newLines.getData()[(cid + 0) * 3 + 2] = corner125;\n      newLines.getData()[(cid + 1) * 3 + 0] = 2;\n      newLines.getData()[(cid + 1) * 3 + 1] = corner025;\n      newLines.getData()[(cid + 1) * 3 + 2] = corner035;\n      cid += 2;\n    } // create x-shadows\n\n\n    if (model.xShadows) {\n      for (var _i2 = 0; _i2 < 2; ++_i2) {\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[_i2];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n        newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[_i2];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n        newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[_i2];\n        newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[_i2];\n        newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n      }\n    } // create y-shadows\n\n\n    if (model.yShadows) {\n      for (var _i3 = 0; _i3 < 2; ++_i3) {\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[_i3 + 2];\n        newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[_i3 + 2];\n        newPts.getData()[pid * 3 + 2] = model.focalPoint[2];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n        newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[_i3 + 2];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[4];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[_i3 + 2];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[5];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n      }\n    } // create z-shadows\n\n\n    if (model.zShadows) {\n      for (var _i4 = 0; _i4 < 2; ++_i4) {\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[0];\n        newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[_i4 + 4];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.modelBounds[1];\n        newPts.getData()[pid * 3 + 1] = model.focalPoint[1];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[_i4 + 4];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n        newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[2];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[_i4 + 4];\n        ++pid;\n        newPts.getData()[pid * 3 + 0] = model.focalPoint[0];\n        newPts.getData()[pid * 3 + 1] = model.modelBounds[3];\n        newPts.getData()[pid * 3 + 2] = model.modelBounds[_i4 + 4];\n        ++pid;\n        newLines.getData()[cid * 3 + 0] = 2;\n        newLines.getData()[cid * 3 + 1] = pid - 2;\n        newLines.getData()[cid * 3 + 2] = pid - 1;\n        ++cid;\n      }\n    }\n\n    var pts = vtkPoints.newInstance({\n      size: 3\n    });\n    pts.getData()[0] = model.focalPoint[0];\n    pts.getData()[1] = model.focalPoint[1];\n    pts.getData()[2] = model.focalPoint[2]; // update ourseleves\n\n    model.focus = vtkPolyData.newInstance();\n    model.focus.setPoints(pts);\n    polyData.setPoints(newPts);\n    polyData.setLines(newLines);\n    outData[0] = polyData;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  focus: null,\n  modelBounds: [-1.0, 1.0, -1.0, 1.0, -1.0, 1.0],\n  focalPoint: [0.0, 0.0, 0.0],\n  outline: true,\n  axes: true,\n  xShadows: true,\n  yShadows: true,\n  zShadows: true,\n  wrap: false,\n  translationMode: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n  // Cursor3D\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['focus']);\n  macro.getArray(publicAPI, model, ['modelBounds'], 6);\n  macro.getArray(publicAPI, model, ['focalPoint'], 3);\n  macro.setGet(publicAPI, model, ['outline']);\n  macro.setGet(publicAPI, model, ['axes']);\n  macro.setGet(publicAPI, model, ['xShadows']);\n  macro.setGet(publicAPI, model, ['yShadows']);\n  macro.setGet(publicAPI, model, ['zShadows']);\n  macro.setGet(publicAPI, model, ['wrap']);\n  macro.setGet(publicAPI, model, ['translationMode']);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkCursor3D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCursor3D'); // ----------------------------------------------------------------------------\n\nvar vtkCursor3D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkCursor3D$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
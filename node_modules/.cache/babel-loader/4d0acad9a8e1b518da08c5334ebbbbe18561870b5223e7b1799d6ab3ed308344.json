{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkImageSliceFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSliceFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSliceFilter');\n  publicAPI.requestData = function (inData, outData) {\n    // implement requestData\n    var input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    var scalars = input.getPointData().getScalars();\n    if (!scalars) {\n      vtkErrorMacro('No scalars from input');\n      return;\n    }\n    var datasetDefinition = input.get('extent', 'spacing', 'origin');\n    datasetDefinition.extent[4] = model.sliceIndex;\n    datasetDefinition.extent[5] = datasetDefinition.extent[4];\n    var numberOfComponents = scalars.getNumberOfComponents();\n    var sliceSize = (datasetDefinition.extent[1] - datasetDefinition.extent[0] + 1) * (datasetDefinition.extent[3] - datasetDefinition.extent[2] + 1) * numberOfComponents;\n    var offset = sliceSize * model.sliceIndex;\n    var sliceRawArray = scalars.getData().slice(offset, offset + sliceSize);\n    var sliceArray = vtkDataArray.newInstance({\n      name: scalars.getName(),\n      numberOfComponents: numberOfComponents,\n      values: sliceRawArray\n    });\n    var output = vtkImageData.newInstance(datasetDefinition);\n    output.getPointData().setScalars(sliceArray);\n    outData[0] = output;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  sliceIndex: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['sliceIndex', 'orientation']); // Object specific methods\n\n  vtkImageSliceFilter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageSliceFilter'); // ----------------------------------------------------------------------------\n\nvar vtkImageSliceFilter$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkImageSliceFilter$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkImageData","vtkDataArray","vtkErrorMacro","vtkImageSliceFilter","publicAPI","model","classHierarchy","push","requestData","inData","outData","input","scalars","getPointData","getScalars","datasetDefinition","get","extent","sliceIndex","numberOfComponents","getNumberOfComponents","sliceSize","offset","sliceRawArray","getData","slice","sliceArray","newInstance","name","getName","values","output","setScalars","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","algo","setGet","vtkImageSliceFilter$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/General/ImageSliceFilter.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkImageSliceFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSliceFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSliceFilter');\n\n  publicAPI.requestData = function (inData, outData) {\n    // implement requestData\n    var input = inData[0];\n\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n\n    var scalars = input.getPointData().getScalars();\n\n    if (!scalars) {\n      vtkErrorMacro('No scalars from input');\n      return;\n    }\n\n    var datasetDefinition = input.get('extent', 'spacing', 'origin');\n    datasetDefinition.extent[4] = model.sliceIndex;\n    datasetDefinition.extent[5] = datasetDefinition.extent[4];\n    var numberOfComponents = scalars.getNumberOfComponents();\n    var sliceSize = (datasetDefinition.extent[1] - datasetDefinition.extent[0] + 1) * (datasetDefinition.extent[3] - datasetDefinition.extent[2] + 1) * numberOfComponents;\n    var offset = sliceSize * model.sliceIndex;\n    var sliceRawArray = scalars.getData().slice(offset, offset + sliceSize);\n    var sliceArray = vtkDataArray.newInstance({\n      name: scalars.getName(),\n      numberOfComponents: numberOfComponents,\n      values: sliceRawArray\n    });\n    var output = vtkImageData.newInstance(datasetDefinition);\n    output.getPointData().setScalars(sliceArray);\n    outData[0] = output;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  sliceIndex: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['sliceIndex', 'orientation']); // Object specific methods\n\n  vtkImageSliceFilter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageSliceFilter'); // ----------------------------------------------------------------------------\n\nvar vtkImageSliceFilter$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkImageSliceFilter$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,YAAY,MAAM,gCAAgC;AAEzD,IAAIC,aAAa,GAAGH,KAAK,CAACG,aAAa,CAAC,CAAC;AACzC;AACA;;AAEA,SAASC,mBAAmBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC7C;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,qBAAqB,CAAC;EAEhDH,SAAS,CAACI,WAAW,GAAG,UAAUC,MAAM,EAAEC,OAAO,EAAE;IACjD;IACA,IAAIC,KAAK,GAAGF,MAAM,CAAC,CAAC,CAAC;IAErB,IAAI,CAACE,KAAK,EAAE;MACVT,aAAa,CAAC,0BAA0B,CAAC;MACzC;IACF;IAEA,IAAIU,OAAO,GAAGD,KAAK,CAACE,YAAY,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IAE/C,IAAI,CAACF,OAAO,EAAE;MACZV,aAAa,CAAC,uBAAuB,CAAC;MACtC;IACF;IAEA,IAAIa,iBAAiB,GAAGJ,KAAK,CAACK,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;IAChED,iBAAiB,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGZ,KAAK,CAACa,UAAU;IAC9CH,iBAAiB,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,iBAAiB,CAACE,MAAM,CAAC,CAAC,CAAC;IACzD,IAAIE,kBAAkB,GAAGP,OAAO,CAACQ,qBAAqB,CAAC,CAAC;IACxD,IAAIC,SAAS,GAAG,CAACN,iBAAiB,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,iBAAiB,CAACE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAKF,iBAAiB,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,iBAAiB,CAACE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGE,kBAAkB;IACtK,IAAIG,MAAM,GAAGD,SAAS,GAAGhB,KAAK,CAACa,UAAU;IACzC,IAAIK,aAAa,GAAGX,OAAO,CAACY,OAAO,CAAC,CAAC,CAACC,KAAK,CAACH,MAAM,EAAEA,MAAM,GAAGD,SAAS,CAAC;IACvE,IAAIK,UAAU,GAAGzB,YAAY,CAAC0B,WAAW,CAAC;MACxCC,IAAI,EAAEhB,OAAO,CAACiB,OAAO,CAAC,CAAC;MACvBV,kBAAkB,EAAEA,kBAAkB;MACtCW,MAAM,EAAEP;IACV,CAAC,CAAC;IACF,IAAIQ,MAAM,GAAG/B,YAAY,CAAC2B,WAAW,CAACZ,iBAAiB,CAAC;IACxDgB,MAAM,CAAClB,YAAY,CAAC,CAAC,CAACmB,UAAU,CAACN,UAAU,CAAC;IAC5ChB,OAAO,CAAC,CAAC,CAAC,GAAGqB,MAAM;EACrB,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIE,cAAc,GAAG;EACnBf,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;;AAEH,SAASgB,MAAMA,CAAC9B,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAI8B,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAACnC,KAAK,EAAE4B,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErDpC,KAAK,CAAC0C,GAAG,CAACrC,SAAS,EAAEC,KAAK,CAAC,CAAC,CAAC;;EAE7BN,KAAK,CAAC2C,IAAI,CAACtC,SAAS,EAAEC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EAClCN,KAAK,CAAC4C,MAAM,CAACvC,SAAS,EAAEC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;;EAE/DF,mBAAmB,CAACC,SAAS,EAAEC,KAAK,CAAC;AACvC,CAAC,CAAC;;AAEF,IAAIsB,WAAW,GAAG5B,KAAK,CAAC4B,WAAW,CAACO,MAAM,EAAE,qBAAqB,CAAC,CAAC,CAAC;;AAEpE,IAAIU,qBAAqB,GAAG;EAC1BjB,WAAW,EAAEA,WAAW;EACxBO,MAAM,EAAEA;AACV,CAAC;AAED,SAASU,qBAAqB,IAAIC,OAAO,EAAEX,MAAM,EAAEP,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
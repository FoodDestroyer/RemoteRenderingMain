{"ast":null,"code":"import macro from '../../macros.js';\n\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkAbstractMapper');\n  publicAPI.update = function () {\n    publicAPI.getInputData();\n  };\n  publicAPI.addClippingPlane = function (plane) {\n    if (!plane.isA('vtkPlane')) {\n      return false;\n    }\n    if (!model.clippingPlanes.includes(plane)) {\n      model.clippingPlanes.push(plane);\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getNumberOfClippingPlanes = function () {\n    return model.clippingPlanes.length;\n  };\n  publicAPI.removeAllClippingPlanes = function () {\n    if (model.clippingPlanes.length === 0) {\n      return false;\n    }\n    model.clippingPlanes.length = 0;\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.removeClippingPlane = function (clippingPlane) {\n    var i = model.clippingPlanes.indexOf(clippingPlane);\n    if (i === -1) {\n      return false;\n    }\n    model.clippingPlanes.splice(i, 1);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.getClippingPlanes = function () {\n    return model.clippingPlanes;\n  };\n  publicAPI.setClippingPlanes = function (planes) {\n    if (!planes) {\n      return;\n    }\n    if (!Array.isArray(planes)) {\n      publicAPI.addClippingPlane(planes);\n    } else {\n      var nbPlanes = planes.length;\n      for (var i = 0; i < nbPlanes && i < 6; i++) {\n        publicAPI.addClippingPlane(planes[i]);\n      }\n    }\n  };\n  publicAPI.getClippingPlaneInDataCoords = function (propMatrix, i, hnormal) {\n    var clipPlanes = model.clippingPlanes;\n    var mat = propMatrix;\n    if (clipPlanes) {\n      var n = clipPlanes.length;\n      if (i >= 0 && i < n) {\n        // Get the plane\n        var plane = clipPlanes[i];\n        var normal = plane.getNormal();\n        var origin = plane.getOrigin(); // Compute the plane equation\n\n        var v1 = normal[0];\n        var v2 = normal[1];\n        var v3 = normal[2];\n        var v4 = -(v1 * origin[0] + v2 * origin[1] + v3 * origin[2]); // Transform normal from world to data coords\n\n        hnormal[0] = v1 * mat[0] + v2 * mat[4] + v3 * mat[8] + v4 * mat[12];\n        hnormal[1] = v1 * mat[1] + v2 * mat[5] + v3 * mat[9] + v4 * mat[13];\n        hnormal[2] = v1 * mat[2] + v2 * mat[6] + v3 * mat[10] + v4 * mat[14];\n        hnormal[3] = v1 * mat[3] + v2 * mat[7] + v3 * mat[11] + v4 * mat[15];\n        return;\n      }\n    }\n    macro.vtkErrorMacro(\"Clipping plane index \".concat(i, \" is out of range.\"));\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  clippingPlanes: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 0);\n  if (!model.clippingPlanes) {\n    model.clippingPlanes = [];\n  }\n  vtkAbstractMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar vtkAbstractMapper$1 = {\n  extend: extend\n};\nexport { vtkAbstractMapper$1 as default, extend };","map":{"version":3,"names":["macro","vtkAbstractMapper","publicAPI","model","classHierarchy","push","update","getInputData","addClippingPlane","plane","isA","clippingPlanes","includes","modified","getNumberOfClippingPlanes","length","removeAllClippingPlanes","removeClippingPlane","clippingPlane","i","indexOf","splice","getClippingPlanes","setClippingPlanes","planes","Array","isArray","nbPlanes","getClippingPlaneInDataCoords","propMatrix","hnormal","clipPlanes","mat","n","normal","getNormal","origin","getOrigin","v1","v2","v3","v4","vtkErrorMacro","concat","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","algo","vtkAbstractMapper$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js"],"sourcesContent":["import macro from '../../macros.js';\n\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkAbstractMapper');\n\n  publicAPI.update = function () {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.addClippingPlane = function (plane) {\n    if (!plane.isA('vtkPlane')) {\n      return false;\n    }\n\n    if (!model.clippingPlanes.includes(plane)) {\n      model.clippingPlanes.push(plane);\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getNumberOfClippingPlanes = function () {\n    return model.clippingPlanes.length;\n  };\n\n  publicAPI.removeAllClippingPlanes = function () {\n    if (model.clippingPlanes.length === 0) {\n      return false;\n    }\n\n    model.clippingPlanes.length = 0;\n    publicAPI.modified();\n    return true;\n  };\n\n  publicAPI.removeClippingPlane = function (clippingPlane) {\n    var i = model.clippingPlanes.indexOf(clippingPlane);\n\n    if (i === -1) {\n      return false;\n    }\n\n    model.clippingPlanes.splice(i, 1);\n    publicAPI.modified();\n    return true;\n  };\n\n  publicAPI.getClippingPlanes = function () {\n    return model.clippingPlanes;\n  };\n\n  publicAPI.setClippingPlanes = function (planes) {\n    if (!planes) {\n      return;\n    }\n\n    if (!Array.isArray(planes)) {\n      publicAPI.addClippingPlane(planes);\n    } else {\n      var nbPlanes = planes.length;\n\n      for (var i = 0; i < nbPlanes && i < 6; i++) {\n        publicAPI.addClippingPlane(planes[i]);\n      }\n    }\n  };\n\n  publicAPI.getClippingPlaneInDataCoords = function (propMatrix, i, hnormal) {\n    var clipPlanes = model.clippingPlanes;\n    var mat = propMatrix;\n\n    if (clipPlanes) {\n      var n = clipPlanes.length;\n\n      if (i >= 0 && i < n) {\n        // Get the plane\n        var plane = clipPlanes[i];\n        var normal = plane.getNormal();\n        var origin = plane.getOrigin(); // Compute the plane equation\n\n        var v1 = normal[0];\n        var v2 = normal[1];\n        var v3 = normal[2];\n        var v4 = -(v1 * origin[0] + v2 * origin[1] + v3 * origin[2]); // Transform normal from world to data coords\n\n        hnormal[0] = v1 * mat[0] + v2 * mat[4] + v3 * mat[8] + v4 * mat[12];\n        hnormal[1] = v1 * mat[1] + v2 * mat[5] + v3 * mat[9] + v4 * mat[13];\n        hnormal[2] = v1 * mat[2] + v2 * mat[6] + v3 * mat[10] + v4 * mat[14];\n        hnormal[3] = v1 * mat[3] + v2 * mat[7] + v3 * mat[11] + v4 * mat[15];\n        return;\n      }\n    }\n\n    macro.vtkErrorMacro(\"Clipping plane index \".concat(i, \" is out of range.\"));\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  clippingPlanes: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 0);\n\n  if (!model.clippingPlanes) {\n    model.clippingPlanes = [];\n  }\n\n  vtkAbstractMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar vtkAbstractMapper$1 = {\n  extend: extend\n};\n\nexport { vtkAbstractMapper$1 as default, extend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { e as distance2BetweenPoints } from '../../Common/Core/Math/index.js';\nimport macro from '../../macros.js';\nimport generateState from './LineWidget/state.js';\nimport vtkAbstractWidgetFactory from '../Core/AbstractWidgetFactory.js';\nimport vtkArrowHandleRepresentation from '../Representations/ArrowHandleRepresentation.js';\nimport vtkPlanePointManipulator from '../Manipulators/PlaneManipulator.js';\nimport vtkPolyLineRepresentation from '../Representations/PolyLineRepresentation.js';\nimport widgetBehavior from './LineWidget/behavior.js';\nimport { Behavior } from '../Representations/WidgetRepresentation/Constants.js';\nimport { ViewTypes } from '../Core/WidgetManager/Constants.js';\nimport { getPoint, updateTextPosition } from './LineWidget/helpers.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// Factory\n// ----------------------------------------------------------------------------\n\nfunction vtkLineWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkLineWidget');\n  var superClass = _objectSpread({}, publicAPI); // --- Widget Requirement ---------------------------------------------------\n\n  model.methodsToLink = ['activeScaleFactor', 'activeColor', 'useActiveColor', 'glyphResolution', 'defaultScale', 'scaleInPixels'];\n  publicAPI.getRepresentationsForViewType = function (viewType) {\n    switch (viewType) {\n      case ViewTypes.DEFAULT:\n      case ViewTypes.GEOMETRY:\n      case ViewTypes.SLICE:\n      case ViewTypes.VOLUME:\n      default:\n        return [{\n          builder: vtkArrowHandleRepresentation,\n          labels: ['handle1'],\n          initialValues: {\n            /*\n             * This table sets the visibility of the handles' actors\n             * 1st actor is a displayActor, which hides a rendered object on the HTML layer.\n             * operating on its value allows to hide a handle to the user while still being\n             * able to detect its presence, so the user can move it. 2nd actor is a classic VTK\n             * actor which renders the object on the VTK scene\n             */\n            visibilityFlagArray: [false, false],\n            coincidentTopologyParameters: {\n              Point: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Line: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Polygon: {\n                factor: -3.0,\n                offset: -3.0\n              }\n            }\n          }\n        }, {\n          builder: vtkArrowHandleRepresentation,\n          labels: ['handle2'],\n          initialValues: {\n            /*\n             * This table sets the visibility of the handles' actors\n             * 1st actor is a displayActor, which hides a rendered object on the HTML layer.\n             * operating on its value allows to hide a handle to the user while still being\n             * able to detect its presence, so the user can move it. 2nd actor is a classic VTK\n             * actor which renders the object on the VTK scene\n             */\n            visibilityFlagArray: [false, false],\n            coincidentTopologyParameters: {\n              Point: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Line: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Polygon: {\n                factor: -3.0,\n                offset: -3.0\n              }\n            }\n          }\n        }, {\n          builder: vtkArrowHandleRepresentation,\n          labels: ['moveHandle'],\n          initialValues: {\n            visibilityFlagArray: [false, false],\n            coincidentTopologyParameters: {\n              Point: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Line: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Polygon: {\n                factor: -3.0,\n                offset: -3.0\n              }\n            }\n          }\n        }, {\n          builder: vtkPolyLineRepresentation,\n          labels: ['handle1', 'handle2', 'moveHandle'],\n          initialValues: {\n            behavior: Behavior.HANDLE,\n            pickable: true\n          }\n        }];\n    }\n  }; // --- Public methods -------------------------------------------------------\n\n  publicAPI.getDistance = function () {\n    var p1 = getPoint(0, model.widgetState);\n    var p2 = getPoint(1, model.widgetState);\n    return p1 && p2 ? Math.sqrt(distance2BetweenPoints(p1, p2)) : 0;\n  };\n  publicAPI.setManipulator = function (manipulator) {\n    superClass.setManipulator(manipulator);\n    model.widgetState.getMoveHandle().setManipulator(manipulator);\n    model.widgetState.getHandle1().setManipulator(manipulator);\n    model.widgetState.getHandle2().setManipulator(manipulator);\n  }; // --------------------------------------------------------------------------\n  // initialization\n  // --------------------------------------------------------------------------\n\n  /**\n   * TBD: Why setting the move handle ?\n   */\n\n  model.widgetState.onBoundsChange(function (bounds) {\n    var center = [(bounds[0] + bounds[1]) * 0.5, (bounds[2] + bounds[3]) * 0.5, (bounds[4] + bounds[5]) * 0.5];\n    model.widgetState.getMoveHandle().setOrigin(center);\n  });\n  model.widgetState.getPositionOnLine().onModified(function () {\n    updateTextPosition(model);\n  }); // Default manipulator\n\n  publicAPI.setManipulator(model.manipulator || vtkPlanePointManipulator.newInstance({\n    useCameraNormal: true\n  }));\n} // ----------------------------------------------------------------------------\n\nvar defaultValues = function defaultValues(initialValues) {\n  return _objectSpread({\n    // manipulator: null,\n    behavior: widgetBehavior,\n    widgetState: generateState()\n  }, initialValues);\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  vtkAbstractWidgetFactory.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['manipulator']);\n  vtkLineWidget(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLineWidget'); // ----------------------------------------------------------------------------\n\nvar vtkLineWidget$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkLineWidget$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","e","distance2BetweenPoints","macro","generateState","vtkAbstractWidgetFactory","vtkArrowHandleRepresentation","vtkPlanePointManipulator","vtkPolyLineRepresentation","widgetBehavior","Behavior","ViewTypes","getPoint","updateTextPosition","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkLineWidget","publicAPI","model","classHierarchy","superClass","methodsToLink","getRepresentationsForViewType","viewType","DEFAULT","GEOMETRY","SLICE","VOLUME","builder","labels","initialValues","visibilityFlagArray","coincidentTopologyParameters","Point","factor","offset","Line","Polygon","behavior","HANDLE","pickable","getDistance","p1","widgetState","p2","Math","sqrt","setManipulator","manipulator","getMoveHandle","getHandle1","getHandle2","onBoundsChange","bounds","center","setOrigin","getPositionOnLine","onModified","newInstance","useCameraNormal","defaultValues","extend","undefined","assign","setGet","vtkLineWidget$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Widgets/Widgets3D/LineWidget.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { e as distance2BetweenPoints } from '../../Common/Core/Math/index.js';\nimport macro from '../../macros.js';\nimport generateState from './LineWidget/state.js';\nimport vtkAbstractWidgetFactory from '../Core/AbstractWidgetFactory.js';\nimport vtkArrowHandleRepresentation from '../Representations/ArrowHandleRepresentation.js';\nimport vtkPlanePointManipulator from '../Manipulators/PlaneManipulator.js';\nimport vtkPolyLineRepresentation from '../Representations/PolyLineRepresentation.js';\nimport widgetBehavior from './LineWidget/behavior.js';\nimport { Behavior } from '../Representations/WidgetRepresentation/Constants.js';\nimport { ViewTypes } from '../Core/WidgetManager/Constants.js';\nimport { getPoint, updateTextPosition } from './LineWidget/helpers.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// Factory\n// ----------------------------------------------------------------------------\n\nfunction vtkLineWidget(publicAPI, model) {\n  model.classHierarchy.push('vtkLineWidget');\n\n  var superClass = _objectSpread({}, publicAPI); // --- Widget Requirement ---------------------------------------------------\n\n\n  model.methodsToLink = ['activeScaleFactor', 'activeColor', 'useActiveColor', 'glyphResolution', 'defaultScale', 'scaleInPixels'];\n\n  publicAPI.getRepresentationsForViewType = function (viewType) {\n    switch (viewType) {\n      case ViewTypes.DEFAULT:\n      case ViewTypes.GEOMETRY:\n      case ViewTypes.SLICE:\n      case ViewTypes.VOLUME:\n      default:\n        return [{\n          builder: vtkArrowHandleRepresentation,\n          labels: ['handle1'],\n          initialValues: {\n            /*\n             * This table sets the visibility of the handles' actors\n             * 1st actor is a displayActor, which hides a rendered object on the HTML layer.\n             * operating on its value allows to hide a handle to the user while still being\n             * able to detect its presence, so the user can move it. 2nd actor is a classic VTK\n             * actor which renders the object on the VTK scene\n             */\n            visibilityFlagArray: [false, false],\n            coincidentTopologyParameters: {\n              Point: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Line: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Polygon: {\n                factor: -3.0,\n                offset: -3.0\n              }\n            }\n          }\n        }, {\n          builder: vtkArrowHandleRepresentation,\n          labels: ['handle2'],\n          initialValues: {\n            /*\n             * This table sets the visibility of the handles' actors\n             * 1st actor is a displayActor, which hides a rendered object on the HTML layer.\n             * operating on its value allows to hide a handle to the user while still being\n             * able to detect its presence, so the user can move it. 2nd actor is a classic VTK\n             * actor which renders the object on the VTK scene\n             */\n            visibilityFlagArray: [false, false],\n            coincidentTopologyParameters: {\n              Point: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Line: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Polygon: {\n                factor: -3.0,\n                offset: -3.0\n              }\n            }\n          }\n        }, {\n          builder: vtkArrowHandleRepresentation,\n          labels: ['moveHandle'],\n          initialValues: {\n            visibilityFlagArray: [false, false],\n            coincidentTopologyParameters: {\n              Point: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Line: {\n                factor: -1.0,\n                offset: -1.0\n              },\n              Polygon: {\n                factor: -3.0,\n                offset: -3.0\n              }\n            }\n          }\n        }, {\n          builder: vtkPolyLineRepresentation,\n          labels: ['handle1', 'handle2', 'moveHandle'],\n          initialValues: {\n            behavior: Behavior.HANDLE,\n            pickable: true\n          }\n        }];\n    }\n  }; // --- Public methods -------------------------------------------------------\n\n\n  publicAPI.getDistance = function () {\n    var p1 = getPoint(0, model.widgetState);\n    var p2 = getPoint(1, model.widgetState);\n    return p1 && p2 ? Math.sqrt(distance2BetweenPoints(p1, p2)) : 0;\n  };\n\n  publicAPI.setManipulator = function (manipulator) {\n    superClass.setManipulator(manipulator);\n    model.widgetState.getMoveHandle().setManipulator(manipulator);\n    model.widgetState.getHandle1().setManipulator(manipulator);\n    model.widgetState.getHandle2().setManipulator(manipulator);\n  }; // --------------------------------------------------------------------------\n  // initialization\n  // --------------------------------------------------------------------------\n\n  /**\n   * TBD: Why setting the move handle ?\n   */\n\n\n  model.widgetState.onBoundsChange(function (bounds) {\n    var center = [(bounds[0] + bounds[1]) * 0.5, (bounds[2] + bounds[3]) * 0.5, (bounds[4] + bounds[5]) * 0.5];\n    model.widgetState.getMoveHandle().setOrigin(center);\n  });\n  model.widgetState.getPositionOnLine().onModified(function () {\n    updateTextPosition(model);\n  }); // Default manipulator\n\n  publicAPI.setManipulator(model.manipulator || vtkPlanePointManipulator.newInstance({\n    useCameraNormal: true\n  }));\n} // ----------------------------------------------------------------------------\n\n\nvar defaultValues = function defaultValues(initialValues) {\n  return _objectSpread({\n    // manipulator: null,\n    behavior: widgetBehavior,\n    widgetState: generateState()\n  }, initialValues);\n}; // ----------------------------------------------------------------------------\n\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  vtkAbstractWidgetFactory.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['manipulator']);\n  vtkLineWidget(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLineWidget'); // ----------------------------------------------------------------------------\n\nvar vtkLineWidget$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkLineWidget$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
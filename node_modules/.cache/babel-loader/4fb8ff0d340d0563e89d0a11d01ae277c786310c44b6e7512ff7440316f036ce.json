{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkFieldData from './DataSetAttributes/FieldData.js';\nimport Constants from './DataSetAttributes/Constants.js';\nimport vtkDataArray from '../Core/DataArray.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar AttributeTypes = Constants.AttributeTypes,\n  AttributeCopyOperations = Constants.AttributeCopyOperations;\nvar vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkDataSetAttributes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSetAttributes(publicAPI, model) {\n  var attrTypes = ['Scalars', 'Vectors', 'Normals', 'TCoords', 'Tensors', 'GlobalIds', 'PedigreeIds'];\n  function cleanAttributeType(attType) {\n    // Given an integer or string, convert the result to one of the\n    // strings in the \"attrTypes\" array above or null (if\n    // no match is found)\n    var cleanAttType = attrTypes.find(function (ee) {\n      return AttributeTypes[ee.toUpperCase()] === attType || typeof attType !== 'number' && ee.toLowerCase() === attType.toLowerCase();\n    });\n    if (typeof cleanAttType === 'undefined') {\n      cleanAttType = null;\n    }\n    return cleanAttType;\n  } // Set our className\n\n  model.classHierarchy.push('vtkDataSetAttributes');\n  var superClass = _objectSpread({}, publicAPI);\n  publicAPI.checkNumberOfComponents = function (x) {\n    return true;\n  }; // TODO\n\n  publicAPI.setAttribute = function (arr, uncleanAttType) {\n    var attType = cleanAttributeType(uncleanAttType);\n    if (arr && attType.toUpperCase() === 'PEDIGREEIDS' && !arr.isA('vtkDataArray')) {\n      vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". The attribute must be a vtkDataArray.\"));\n      return -1;\n    }\n    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {\n      vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Incorrect number of components.\"));\n      return -1;\n    }\n    var currentAttribute = model[\"active\".concat(attType)];\n    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {\n      if (model.arrays[currentAttribute] === arr) {\n        return currentAttribute;\n      } // FIXME setting an array actually changes its index\n\n      publicAPI.removeArrayByIndex(currentAttribute);\n    }\n    if (arr) {\n      currentAttribute = publicAPI.addArray(arr);\n      model[\"active\".concat(attType)] = currentAttribute;\n    } else {\n      model[\"active\".concat(attType)] = -1;\n    }\n    publicAPI.modified();\n    return model[\"active\".concat(attType)];\n  };\n  publicAPI.getAttributes = function (arr) {\n    return attrTypes.filter(function (attrType) {\n      return publicAPI[\"get\".concat(attrType)]() === arr;\n    });\n  };\n  publicAPI.setActiveAttributeByName = function (arrayName, attType) {\n    return publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, attType);\n  };\n  publicAPI.setActiveAttributeByIndex = function (arrayIdx, uncleanAttType) {\n    var attType = cleanAttributeType(uncleanAttType);\n    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {\n      if (attType.toUpperCase() !== 'PEDIGREEIDS') {\n        var arr = publicAPI.getArrayByIndex(arrayIdx);\n        if (!arr.isA('vtkDataArray')) {\n          vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Only vtkDataArray subclasses can be set as active attributes.\"));\n          return -1;\n        }\n        if (!publicAPI.checkNumberOfComponents(arr, attType)) {\n          vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Incorrect number of components.\"));\n          return -1;\n        }\n      }\n      model[\"active\".concat(attType)] = arrayIdx;\n      publicAPI.modified();\n      return arrayIdx;\n    }\n    if (arrayIdx === -1) {\n      model[\"active\".concat(attType)] = arrayIdx;\n      publicAPI.modified();\n    }\n    return -1;\n  };\n  publicAPI.getActiveAttribute = function (attType) {\n    // Given an integer enum value or a string (with random capitalization),\n    // find the matching string in attrTypes.\n    var cleanAttType = cleanAttributeType(attType);\n    return publicAPI[\"get\".concat(cleanAttType)]();\n  }; // Override to allow proper handling of active attributes\n\n  publicAPI.removeAllArrays = function () {\n    attrTypes.forEach(function (attType) {\n      model[\"active\".concat(attType)] = -1;\n    });\n    superClass.removeAllArrays();\n  }; // Override to allow proper handling of active attributes\n\n  publicAPI.removeArrayByIndex = function (arrayIdx) {\n    if (arrayIdx !== -1) {\n      attrTypes.forEach(function (attType) {\n        if (arrayIdx === model[\"active\".concat(attType)]) {\n          model[\"active\".concat(attType)] = -1;\n        } else if (arrayIdx < model[\"active\".concat(attType)]) {\n          model[\"active\".concat(attType)] -= 1;\n        }\n      });\n    }\n    return superClass.removeArrayByIndex(arrayIdx);\n  };\n  attrTypes.forEach(function (value) {\n    var activeVal = \"active\".concat(value);\n    publicAPI[\"get\".concat(value)] = function () {\n      return publicAPI.getArrayByIndex(model[activeVal]);\n    };\n    publicAPI[\"set\".concat(value)] = function (da) {\n      return publicAPI.setAttribute(da, value);\n    };\n    publicAPI[\"setActive\".concat(value)] = function (arrayName) {\n      return publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, value);\n    };\n    publicAPI[\"copy\".concat(value, \"Off\")] = function () {\n      var attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = false;\n    };\n    publicAPI[\"copy\".concat(value, \"On\")] = function () {\n      var attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = true;\n    };\n  });\n  publicAPI.initializeAttributeCopyFlags = function () {\n    // Default to copying all attributes in every circumstance:\n    model.copyAttributeFlags = [];\n    Object.keys(AttributeCopyOperations).filter(function (op) {\n      return op !== 'ALLCOPY';\n    }).forEach(function (attCopyOp) {\n      model.copyAttributeFlags[AttributeCopyOperations[attCopyOp]] = Object.keys(AttributeTypes).filter(function (ty) {\n        return ty !== 'NUM_ATTRIBUTES';\n      }).reduce(function (a, b) {\n        a[AttributeTypes[b]] = true;\n        return a;\n      }, []);\n    }); // Override some operations where we don't want to copy:\n\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.GLOBALIDS] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][AttributeTypes.GLOBALIDS] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.PEDIGREEIDS] = false;\n  };\n  publicAPI.initialize = macro.chain(publicAPI.initialize, publicAPI.initializeAttributeCopyFlags); // Process dataArrays if any\n\n  if (model.dataArrays && Object.keys(model.dataArrays).length) {\n    Object.keys(model.dataArrays).forEach(function (name) {\n      if (!model.dataArrays[name].ref && model.dataArrays[name].type === 'vtkDataArray') {\n        publicAPI.addArray(vtkDataArray.newInstance(model.dataArrays[name]));\n      }\n    });\n  }\n  var superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = function (other, debug) {\n    superShallowCopy(other, debug);\n    model.arrays = other.getArrays().map(function (arr) {\n      var arrNew = arr.newClone();\n      arrNew.shallowCopy(arr, debug);\n      return {\n        data: arrNew\n      };\n    });\n  };\n  publicAPI.initializeAttributeCopyFlags();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  activeScalars: -1,\n  activeVectors: -1,\n  activeTensors: -1,\n  activeNormals: -1,\n  activeTCoords: -1,\n  activeGlobalIds: -1,\n  activePedigreeIds: -1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkFieldData.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['activeScalars', 'activeNormals', 'activeTCoords', 'activeVectors', 'activeTensors', 'activeGlobalIds', 'activePedigreeIds']);\n  if (!model.arrays) {\n    model.arrays = {};\n  } // Object specific methods\n\n  vtkDataSetAttributes(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkDataSetAttributes'); // ----------------------------------------------------------------------------\n\nvar vtkDataSetAttributes$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\nexport { vtkDataSetAttributes$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","vtkFieldData","Constants","vtkDataArray","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","AttributeTypes","AttributeCopyOperations","vtkWarningMacro","vtkDataSetAttributes","publicAPI","model","attrTypes","cleanAttributeType","attType","cleanAttType","find","ee","toUpperCase","toLowerCase","classHierarchy","superClass","checkNumberOfComponents","x","setAttribute","arr","uncleanAttType","isA","concat","currentAttribute","arrays","removeArrayByIndex","addArray","modified","getAttributes","attrType","setActiveAttributeByName","arrayName","setActiveAttributeByIndex","getArrayWithIndex","index","arrayIdx","getArrayByIndex","getActiveAttribute","removeAllArrays","value","activeVal","da","copyAttributeFlags","PASSDATA","initializeAttributeCopyFlags","op","attCopyOp","ty","reduce","a","b","COPYTUPLE","GLOBALIDS","INTERPOLATE","PEDIGREEIDS","initialize","chain","dataArrays","name","ref","type","newInstance","superShallowCopy","shallowCopy","other","debug","getArrays","map","arrNew","newClone","data","DEFAULT_VALUES","activeScalars","activeVectors","activeTensors","activeNormals","activeTCoords","activeGlobalIds","activePedigreeIds","extend","initialValues","undefined","assign","setGet","vtkDataSetAttributes$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkFieldData from './DataSetAttributes/FieldData.js';\nimport Constants from './DataSetAttributes/Constants.js';\nimport vtkDataArray from '../Core/DataArray.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar AttributeTypes = Constants.AttributeTypes,\n    AttributeCopyOperations = Constants.AttributeCopyOperations;\nvar vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkDataSetAttributes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSetAttributes(publicAPI, model) {\n  var attrTypes = ['Scalars', 'Vectors', 'Normals', 'TCoords', 'Tensors', 'GlobalIds', 'PedigreeIds'];\n\n  function cleanAttributeType(attType) {\n    // Given an integer or string, convert the result to one of the\n    // strings in the \"attrTypes\" array above or null (if\n    // no match is found)\n    var cleanAttType = attrTypes.find(function (ee) {\n      return AttributeTypes[ee.toUpperCase()] === attType || typeof attType !== 'number' && ee.toLowerCase() === attType.toLowerCase();\n    });\n\n    if (typeof cleanAttType === 'undefined') {\n      cleanAttType = null;\n    }\n\n    return cleanAttType;\n  } // Set our className\n\n\n  model.classHierarchy.push('vtkDataSetAttributes');\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.checkNumberOfComponents = function (x) {\n    return true;\n  }; // TODO\n\n\n  publicAPI.setAttribute = function (arr, uncleanAttType) {\n    var attType = cleanAttributeType(uncleanAttType);\n\n    if (arr && attType.toUpperCase() === 'PEDIGREEIDS' && !arr.isA('vtkDataArray')) {\n      vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". The attribute must be a vtkDataArray.\"));\n      return -1;\n    }\n\n    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {\n      vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Incorrect number of components.\"));\n      return -1;\n    }\n\n    var currentAttribute = model[\"active\".concat(attType)];\n\n    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {\n      if (model.arrays[currentAttribute] === arr) {\n        return currentAttribute;\n      } // FIXME setting an array actually changes its index\n\n\n      publicAPI.removeArrayByIndex(currentAttribute);\n    }\n\n    if (arr) {\n      currentAttribute = publicAPI.addArray(arr);\n      model[\"active\".concat(attType)] = currentAttribute;\n    } else {\n      model[\"active\".concat(attType)] = -1;\n    }\n\n    publicAPI.modified();\n    return model[\"active\".concat(attType)];\n  };\n\n  publicAPI.getAttributes = function (arr) {\n    return attrTypes.filter(function (attrType) {\n      return publicAPI[\"get\".concat(attrType)]() === arr;\n    });\n  };\n\n  publicAPI.setActiveAttributeByName = function (arrayName, attType) {\n    return publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, attType);\n  };\n\n  publicAPI.setActiveAttributeByIndex = function (arrayIdx, uncleanAttType) {\n    var attType = cleanAttributeType(uncleanAttType);\n\n    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {\n      if (attType.toUpperCase() !== 'PEDIGREEIDS') {\n        var arr = publicAPI.getArrayByIndex(arrayIdx);\n\n        if (!arr.isA('vtkDataArray')) {\n          vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Only vtkDataArray subclasses can be set as active attributes.\"));\n          return -1;\n        }\n\n        if (!publicAPI.checkNumberOfComponents(arr, attType)) {\n          vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Incorrect number of components.\"));\n          return -1;\n        }\n      }\n\n      model[\"active\".concat(attType)] = arrayIdx;\n      publicAPI.modified();\n      return arrayIdx;\n    }\n\n    if (arrayIdx === -1) {\n      model[\"active\".concat(attType)] = arrayIdx;\n      publicAPI.modified();\n    }\n\n    return -1;\n  };\n\n  publicAPI.getActiveAttribute = function (attType) {\n    // Given an integer enum value or a string (with random capitalization),\n    // find the matching string in attrTypes.\n    var cleanAttType = cleanAttributeType(attType);\n    return publicAPI[\"get\".concat(cleanAttType)]();\n  }; // Override to allow proper handling of active attributes\n\n\n  publicAPI.removeAllArrays = function () {\n    attrTypes.forEach(function (attType) {\n      model[\"active\".concat(attType)] = -1;\n    });\n    superClass.removeAllArrays();\n  }; // Override to allow proper handling of active attributes\n\n\n  publicAPI.removeArrayByIndex = function (arrayIdx) {\n    if (arrayIdx !== -1) {\n      attrTypes.forEach(function (attType) {\n        if (arrayIdx === model[\"active\".concat(attType)]) {\n          model[\"active\".concat(attType)] = -1;\n        } else if (arrayIdx < model[\"active\".concat(attType)]) {\n          model[\"active\".concat(attType)] -= 1;\n        }\n      });\n    }\n\n    return superClass.removeArrayByIndex(arrayIdx);\n  };\n\n  attrTypes.forEach(function (value) {\n    var activeVal = \"active\".concat(value);\n\n    publicAPI[\"get\".concat(value)] = function () {\n      return publicAPI.getArrayByIndex(model[activeVal]);\n    };\n\n    publicAPI[\"set\".concat(value)] = function (da) {\n      return publicAPI.setAttribute(da, value);\n    };\n\n    publicAPI[\"setActive\".concat(value)] = function (arrayName) {\n      return publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, value);\n    };\n\n    publicAPI[\"copy\".concat(value, \"Off\")] = function () {\n      var attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = false;\n    };\n\n    publicAPI[\"copy\".concat(value, \"On\")] = function () {\n      var attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = true;\n    };\n  });\n\n  publicAPI.initializeAttributeCopyFlags = function () {\n    // Default to copying all attributes in every circumstance:\n    model.copyAttributeFlags = [];\n    Object.keys(AttributeCopyOperations).filter(function (op) {\n      return op !== 'ALLCOPY';\n    }).forEach(function (attCopyOp) {\n      model.copyAttributeFlags[AttributeCopyOperations[attCopyOp]] = Object.keys(AttributeTypes).filter(function (ty) {\n        return ty !== 'NUM_ATTRIBUTES';\n      }).reduce(function (a, b) {\n        a[AttributeTypes[b]] = true;\n        return a;\n      }, []);\n    }); // Override some operations where we don't want to copy:\n\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.GLOBALIDS] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][AttributeTypes.GLOBALIDS] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.PEDIGREEIDS] = false;\n  };\n\n  publicAPI.initialize = macro.chain(publicAPI.initialize, publicAPI.initializeAttributeCopyFlags); // Process dataArrays if any\n\n  if (model.dataArrays && Object.keys(model.dataArrays).length) {\n    Object.keys(model.dataArrays).forEach(function (name) {\n      if (!model.dataArrays[name].ref && model.dataArrays[name].type === 'vtkDataArray') {\n        publicAPI.addArray(vtkDataArray.newInstance(model.dataArrays[name]));\n      }\n    });\n  }\n\n  var superShallowCopy = publicAPI.shallowCopy;\n\n  publicAPI.shallowCopy = function (other, debug) {\n    superShallowCopy(other, debug);\n    model.arrays = other.getArrays().map(function (arr) {\n      var arrNew = arr.newClone();\n      arrNew.shallowCopy(arr, debug);\n      return {\n        data: arrNew\n      };\n    });\n  };\n\n  publicAPI.initializeAttributeCopyFlags();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  activeScalars: -1,\n  activeVectors: -1,\n  activeTensors: -1,\n  activeNormals: -1,\n  activeTCoords: -1,\n  activeGlobalIds: -1,\n  activePedigreeIds: -1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkFieldData.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['activeScalars', 'activeNormals', 'activeTCoords', 'activeVectors', 'activeTensors', 'activeGlobalIds', 'activePedigreeIds']);\n\n  if (!model.arrays) {\n    model.arrays = {};\n  } // Object specific methods\n\n\n  vtkDataSetAttributes(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkDataSetAttributes'); // ----------------------------------------------------------------------------\n\nvar vtkDataSetAttributes$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkDataSetAttributes$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
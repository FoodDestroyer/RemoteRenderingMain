{"ast":null,"code":"import vtk from '../../vtk.js';\nimport macro from '../../macros.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkPoints from '../Core/Points.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkPointSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPointSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPointSet'); // Create empty points\n\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  } else {\n    model.points = vtk(model.points);\n  }\n  publicAPI.getNumberOfPoints = function () {\n    return model.points.getNumberOfPoints();\n  };\n  publicAPI.getBounds = function () {\n    return model.points.getBounds();\n  };\n  publicAPI.computeBounds = function () {\n    publicAPI.getBounds();\n  };\n  var superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = function (other) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    model.points = vtkPoints.newInstance();\n    model.points.shallowCopy(other.getPoints());\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {// points: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['points']); // Object specific methods\n\n  vtkPointSet(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPointSet'); // ----------------------------------------------------------------------------\n\nvar vtkPointSet$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkPointSet$1 as default, extend, newInstance };","map":{"version":3,"names":["vtk","macro","vtkDataSet","vtkPoints","vtkPointSet","publicAPI","model","classHierarchy","push","points","newInstance","getNumberOfPoints","getBounds","computeBounds","superShallowCopy","shallowCopy","other","debug","arguments","length","undefined","getPoints","DEFAULT_VALUES","extend","initialValues","Object","assign","setGet","vtkPointSet$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js"],"sourcesContent":["import vtk from '../../vtk.js';\nimport macro from '../../macros.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkPoints from '../Core/Points.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkPointSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPointSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPointSet'); // Create empty points\n\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  } else {\n    model.points = vtk(model.points);\n  }\n\n  publicAPI.getNumberOfPoints = function () {\n    return model.points.getNumberOfPoints();\n  };\n\n  publicAPI.getBounds = function () {\n    return model.points.getBounds();\n  };\n\n  publicAPI.computeBounds = function () {\n    publicAPI.getBounds();\n  };\n\n  var superShallowCopy = publicAPI.shallowCopy;\n\n  publicAPI.shallowCopy = function (other) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    model.points = vtkPoints.newInstance();\n    model.points.shallowCopy(other.getPoints());\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// points: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['points']); // Object specific methods\n\n  vtkPointSet(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPointSet'); // ----------------------------------------------------------------------------\n\nvar vtkPointSet$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPointSet$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAC9B,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,mBAAmB;;AAEzC;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAWA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACrC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;;EAE1C,IAAI,CAACF,KAAK,CAACG,MAAM,EAAE;IACjBH,KAAK,CAACG,MAAM,GAAGN,SAAS,CAACO,WAAW,CAAC,CAAC;EACxC,CAAC,MAAM;IACLJ,KAAK,CAACG,MAAM,GAAGT,GAAG,CAACM,KAAK,CAACG,MAAM,CAAC;EAClC;EAEAJ,SAAS,CAACM,iBAAiB,GAAG,YAAY;IACxC,OAAOL,KAAK,CAACG,MAAM,CAACE,iBAAiB,CAAC,CAAC;EACzC,CAAC;EAEDN,SAAS,CAACO,SAAS,GAAG,YAAY;IAChC,OAAON,KAAK,CAACG,MAAM,CAACG,SAAS,CAAC,CAAC;EACjC,CAAC;EAEDP,SAAS,CAACQ,aAAa,GAAG,YAAY;IACpCR,SAAS,CAACO,SAAS,CAAC,CAAC;EACvB,CAAC;EAED,IAAIE,gBAAgB,GAAGT,SAAS,CAACU,WAAW;EAE5CV,SAAS,CAACU,WAAW,GAAG,UAAUC,KAAK,EAAE;IACvC,IAAIC,KAAK,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;IACrFJ,gBAAgB,CAACE,KAAK,EAAEC,KAAK,CAAC;IAC9BX,KAAK,CAACG,MAAM,GAAGN,SAAS,CAACO,WAAW,CAAC,CAAC;IACtCJ,KAAK,CAACG,MAAM,CAACM,WAAW,CAACC,KAAK,CAACK,SAAS,CAAC,CAAC,CAAC;EAC7C,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIC,cAAc,GAAG,CAAC;AAAA,CACrB,CAAC,CAAC;;AAEH,SAASC,MAAMA,CAAClB,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIkB,aAAa,GAAGN,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FO,MAAM,CAACC,MAAM,CAACpB,KAAK,EAAEgB,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErDtB,UAAU,CAACqB,MAAM,CAAClB,SAAS,EAAEC,KAAK,EAAEkB,aAAa,CAAC;EAClDvB,KAAK,CAAC0B,MAAM,CAACtB,SAAS,EAAEC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5CF,WAAW,CAACC,SAAS,EAAEC,KAAK,CAAC;AAC/B,CAAC,CAAC;;AAEF,IAAII,WAAW,GAAGT,KAAK,CAACS,WAAW,CAACa,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;;AAE5D,IAAIK,aAAa,GAAG;EAClBlB,WAAW,EAAEA,WAAW;EACxBa,MAAM,EAAEA;AACV,CAAC;AAED,SAASK,aAAa,IAAIC,OAAO,EAAEN,MAAM,EAAEb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
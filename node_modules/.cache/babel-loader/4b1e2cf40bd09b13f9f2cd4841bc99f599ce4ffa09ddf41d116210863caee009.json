{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { d as dot } from '../Core/Math/index.js';\nimport { vec3 } from 'gl-matrix';\nimport vtkPlane from './Plane.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar INIT_BOUNDS = [Number.MAX_VALUE, -Number.MAX_VALUE,\n// X\nNumber.MAX_VALUE, -Number.MAX_VALUE,\n// Y\nNumber.MAX_VALUE, -Number.MAX_VALUE // Z\n]; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction _equals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\nfunction _isValid(bounds) {\n  return (bounds === null || bounds === void 0 ? void 0 : bounds.length) >= 6 && bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5];\n}\nfunction _setBounds(bounds, otherBounds) {\n  bounds[0] = otherBounds[0];\n  bounds[1] = otherBounds[1];\n  bounds[2] = otherBounds[2];\n  bounds[3] = otherBounds[3];\n  bounds[4] = otherBounds[4];\n  bounds[5] = otherBounds[5];\n  return bounds;\n}\nfunction _reset(bounds) {\n  return _setBounds(bounds, INIT_BOUNDS);\n}\nfunction _addPoint(bounds, x, y, z) {\n  var _bounds = _slicedToArray(bounds, 6),\n    xMin = _bounds[0],\n    xMax = _bounds[1],\n    yMin = _bounds[2],\n    yMax = _bounds[3],\n    zMin = _bounds[4],\n    zMax = _bounds[5];\n  bounds[0] = xMin < x ? xMin : x;\n  bounds[1] = xMax > x ? xMax : x;\n  bounds[2] = yMin < y ? yMin : y;\n  bounds[3] = yMax > y ? yMax : y;\n  bounds[4] = zMin < z ? zMin : z;\n  bounds[5] = zMax > z ? zMax : z;\n  return bounds;\n}\nfunction _addPoints(bounds, points) {\n  if (points.length === 0) {\n    return bounds;\n  }\n  if (Array.isArray(points[0])) {\n    for (var i = 0; i < points.length; ++i) {\n      _addPoint.apply(void 0, [bounds].concat(_toConsumableArray(points[i])));\n    }\n  } else {\n    for (var _i = 0; _i < points.length; _i += 3) {\n      _addPoint.apply(void 0, [bounds].concat(_toConsumableArray(points.slice(_i, _i + 3))));\n    }\n  }\n  return bounds;\n}\nfunction _addBounds(bounds, xMin, xMax, yMin, yMax, zMin, zMax) {\n  var _bounds2 = _slicedToArray(bounds, 6),\n    _xMin = _bounds2[0],\n    _xMax = _bounds2[1],\n    _yMin = _bounds2[2],\n    _yMax = _bounds2[3],\n    _zMin = _bounds2[4],\n    _zMax = _bounds2[5];\n  if (zMax === undefined) {\n    bounds[0] = Math.min(xMin[0], _xMin);\n    bounds[1] = Math.max(xMin[1], _xMax);\n    bounds[2] = Math.min(xMin[2], _yMin);\n    bounds[3] = Math.max(xMin[3], _yMax);\n    bounds[4] = Math.min(xMin[4], _zMin);\n    bounds[5] = Math.max(xMin[5], _zMax);\n  } else {\n    bounds[0] = Math.min(xMin, _xMin);\n    bounds[1] = Math.max(xMax, _xMax);\n    bounds[2] = Math.min(yMin, _yMin);\n    bounds[3] = Math.max(yMax, _yMax);\n    bounds[4] = Math.min(zMin, _zMin);\n    bounds[5] = Math.max(zMax, _zMax);\n  }\n  return bounds;\n}\nfunction _setMinPoint(bounds, x, y, z) {\n  var _bounds3 = _slicedToArray(bounds, 6),\n    xMin = _bounds3[0],\n    xMax = _bounds3[1],\n    yMin = _bounds3[2],\n    yMax = _bounds3[3],\n    zMin = _bounds3[4],\n    zMax = _bounds3[5];\n  bounds[0] = x;\n  bounds[1] = x > xMax ? x : xMax;\n  bounds[2] = y;\n  bounds[3] = y > yMax ? y : yMax;\n  bounds[4] = z;\n  bounds[5] = z > zMax ? z : zMax;\n  return xMin !== x || yMin !== y || zMin !== z;\n}\nfunction _setMaxPoint(bounds, x, y, z) {\n  var _bounds4 = _slicedToArray(bounds, 6),\n    xMin = _bounds4[0],\n    xMax = _bounds4[1],\n    yMin = _bounds4[2],\n    yMax = _bounds4[3],\n    zMin = _bounds4[4],\n    zMax = _bounds4[5];\n  bounds[0] = x < xMin ? x : xMin;\n  bounds[1] = x;\n  bounds[2] = y < yMin ? y : yMin;\n  bounds[3] = y;\n  bounds[4] = z < zMin ? z : zMin;\n  bounds[5] = z;\n  return xMax !== x || yMax !== y || zMax !== z;\n}\nfunction _inflate(bounds, delta) {\n  bounds[0] -= delta;\n  bounds[1] += delta;\n  bounds[2] -= delta;\n  bounds[3] += delta;\n  bounds[4] -= delta;\n  bounds[5] += delta;\n  return bounds;\n}\nfunction _scale(bounds, sx, sy, sz) {\n  if (!_isValid(bounds)) {\n    return false;\n  }\n  if (sx >= 0.0) {\n    bounds[0] *= sx;\n    bounds[1] *= sx;\n  } else {\n    bounds[0] = sx * bounds[1];\n    bounds[1] = sx * bounds[0];\n  }\n  if (sy >= 0.0) {\n    bounds[2] *= sy;\n    bounds[3] *= sy;\n  } else {\n    bounds[2] = sy * bounds[3];\n    bounds[3] = sy * bounds[2];\n  }\n  if (sz >= 0.0) {\n    bounds[4] *= sz;\n    bounds[5] *= sz;\n  } else {\n    bounds[4] = sz * bounds[5];\n    bounds[5] = sz * bounds[4];\n  }\n  return true;\n}\nfunction _getCenter(bounds) {\n  return [0.5 * (bounds[0] + bounds[1]), 0.5 * (bounds[2] + bounds[3]), 0.5 * (bounds[4] + bounds[5])];\n}\nfunction scaleAboutCenter(bounds, sx, sy, sz) {\n  if (!_isValid(bounds)) {\n    return false;\n  }\n  var center = _getCenter(bounds);\n  bounds[0] -= center[0];\n  bounds[1] -= center[0];\n  bounds[2] -= center[1];\n  bounds[3] -= center[1];\n  bounds[4] -= center[2];\n  bounds[5] -= center[2];\n  _scale(bounds, sx, sy, sz);\n  bounds[0] += center[0];\n  bounds[1] += center[0];\n  bounds[2] += center[1];\n  bounds[3] += center[1];\n  bounds[4] += center[2];\n  bounds[5] += center[2];\n  return true;\n}\nfunction _getLength(bounds, index) {\n  return bounds[index * 2 + 1] - bounds[index * 2];\n}\nfunction _getLengths(bounds) {\n  return [_getLength(bounds, 0), _getLength(bounds, 1), _getLength(bounds, 2)];\n}\nfunction _getXRange(bounds) {\n  return bounds.slice(0, 2);\n}\nfunction _getYRange(bounds) {\n  return bounds.slice(2, 4);\n}\nfunction _getZRange(bounds) {\n  return bounds.slice(4, 6);\n}\nfunction _getMaxLength(bounds) {\n  var l = _getLengths(bounds);\n  if (l[0] > l[1]) {\n    if (l[0] > l[2]) {\n      return l[0];\n    }\n    return l[2];\n  }\n  if (l[1] > l[2]) {\n    return l[1];\n  }\n  return l[2];\n}\nfunction _getDiagonalLength(bounds) {\n  if (_isValid(bounds)) {\n    var l = _getLengths(bounds);\n    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);\n  }\n  return null;\n}\nfunction _getMinPoint(bounds) {\n  return [bounds[0], bounds[2], bounds[4]];\n}\nfunction _getMaxPoint(bounds) {\n  return [bounds[1], bounds[3], bounds[5]];\n}\nfunction oppositeSign(a, b) {\n  return a <= 0 && b >= 0 || a >= 0 && b <= 0;\n}\nfunction _getCorners(bounds, corners) {\n  var count = 0;\n  for (var ix = 0; ix < 2; ix++) {\n    for (var iy = 2; iy < 4; iy++) {\n      for (var iz = 4; iz < 6; iz++) {\n        corners[count++] = [bounds[ix], bounds[iy], bounds[iz]];\n      }\n    }\n  }\n  return corners;\n} // Computes the two corners with minimal and miximal coordinates\n\nfunction _computeCornerPoints(bounds, point1, point2) {\n  point1[0] = bounds[0];\n  point1[1] = bounds[2];\n  point1[2] = bounds[4];\n  point2[0] = bounds[1];\n  point2[1] = bounds[3];\n  point2[2] = bounds[5];\n  return point1;\n}\nfunction _transformBounds(bounds, transform) {\n  var out = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var corners = _getCorners(bounds, []);\n  for (var i = 0; i < corners.length; ++i) {\n    vec3.transformMat4(corners[i], corners[i], transform);\n  }\n  _reset(out);\n  return _addPoints(out, corners);\n}\nfunction _computeScale(bounds) {\n  var scale3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  scale3[0] = 0.5 * (bounds[1] - bounds[0]);\n  scale3[1] = 0.5 * (bounds[3] - bounds[2]);\n  scale3[2] = 0.5 * (bounds[5] - bounds[4]);\n  return scale3;\n}\nfunction _computeLocalBounds(points, u, v, w) {\n  var bounds = [].concat(INIT_BOUNDS);\n  var pointsData = points.getData();\n  for (var i = 0; i < pointsData.length; i += 3) {\n    var point = [pointsData[i], pointsData[i + 1], pointsData[i + 2]];\n    var du = dot(point, u);\n    bounds[0] = Math.min(du, bounds[0]);\n    bounds[1] = Math.max(du, bounds[1]);\n    var dv = dot(point, v);\n    bounds[2] = Math.min(dv, bounds[2]);\n    bounds[3] = Math.max(dv, bounds[3]);\n    var dw = dot(point, w);\n    bounds[4] = Math.min(dw, bounds[4]);\n    bounds[5] = Math.max(dw, bounds[5]);\n  }\n  return bounds;\n} // The method returns a non-zero value if the bounding box is hit.\n\nfunction _intersectBox(bounds, origin, dir, coord, tolerance) {\n  var inside = true;\n  var quadrant = [];\n  var whichPlane = 0;\n  var maxT = [];\n  var candidatePlane = [0.0, 0.0, 0.0];\n  var RIGHT = 0;\n  var LEFT = 1;\n  var MIDDLE = 2; // First find closest planes\n\n  for (var i = 0; i < 3; i++) {\n    if (origin[i] < bounds[2 * i]) {\n      quadrant[i] = LEFT;\n      candidatePlane[i] = bounds[2 * i];\n      inside = false;\n    } else if (origin[i] > bounds[2 * i + 1]) {\n      quadrant[i] = RIGHT;\n      candidatePlane[i] = bounds[2 * i + 1];\n      inside = false;\n    } else {\n      quadrant[i] = MIDDLE;\n    }\n  } // Check whether origin of ray is inside bbox\n\n  if (inside) {\n    coord[0] = origin[0];\n    coord[1] = origin[1];\n    coord[2] = origin[2];\n    tolerance[0] = 0;\n    return 1;\n  } // Calculate parametric distance to plane\n\n  for (var _i2 = 0; _i2 < 3; _i2++) {\n    if (quadrant[_i2] !== MIDDLE && dir[_i2] !== 0.0) {\n      maxT[_i2] = (candidatePlane[_i2] - origin[_i2]) / dir[_i2];\n    } else {\n      maxT[_i2] = -1.0;\n    }\n  } // Find the largest parametric value of intersection\n\n  for (var _i3 = 0; _i3 < 3; _i3++) {\n    if (maxT[whichPlane] < maxT[_i3]) {\n      whichPlane = _i3;\n    }\n  } // Check for valie intersection along line\n\n  if (maxT[whichPlane] > 1.0 || maxT[whichPlane] < 0.0) {\n    return 0;\n  }\n  tolerance[0] = maxT[whichPlane]; // Intersection point along line is okay. Check bbox.\n\n  for (var _i4 = 0; _i4 < 3; _i4++) {\n    if (whichPlane !== _i4) {\n      coord[_i4] = origin[_i4] + maxT[whichPlane] * dir[_i4];\n      if (coord[_i4] < bounds[2 * _i4] || coord[_i4] > bounds[2 * _i4 + 1]) {\n        return 0;\n      }\n    } else {\n      coord[_i4] = candidatePlane[_i4];\n    }\n  }\n  return 1;\n} // Plane intersection with box\n\nfunction _intersectPlane(bounds, origin, normal) {\n  var p = [];\n  var d = 0;\n  var sign = 1;\n  var firstOne = 1; // Evaluate the eight points. If there is a sign change, there is an intersection\n\n  for (var z = 4; z <= 5; ++z) {\n    p[2] = bounds[z];\n    for (var y = 2; y <= 3; ++y) {\n      p[1] = bounds[y];\n      for (var x = 0; x <= 1; ++x) {\n        p[0] = bounds[x];\n        d = vtkPlane.evaluate(normal, origin, p);\n        if (firstOne) {\n          sign = d >= 0 ? 1 : -1;\n          firstOne = 0;\n        }\n        if (d === 0.0 || sign > 0 && d < 0.0 || sign < 0 && d > 0.0) {\n          return 1;\n        }\n      }\n    }\n  }\n  return 0; // no intersection\n}\n\nfunction _intersect(bounds, bBounds) {\n  if (!(_isValid(bounds) && _isValid(bBounds))) {\n    return false;\n  }\n  var newBounds = [0, 0, 0, 0, 0, 0];\n  var intersection;\n  for (var i = 0; i < 3; i++) {\n    intersection = false;\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2] = bBounds[i * 2];\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2] = bounds[i * 2];\n    }\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bBounds[2 * i + 1];\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bounds[i * 2 + 1];\n    }\n    if (!intersection) {\n      return false;\n    }\n  } // OK they did intersect - set the box to be the result\n\n  bounds[0] = newBounds[0];\n  bounds[1] = newBounds[1];\n  bounds[2] = newBounds[2];\n  bounds[3] = newBounds[3];\n  bounds[4] = newBounds[4];\n  bounds[5] = newBounds[5];\n  return true;\n}\nfunction _intersects(bounds, bBounds) {\n  if (!(_isValid(bounds) && _isValid(bBounds))) {\n    return false;\n  }\n  /* eslint-disable no-continue */\n\n  for (var i = 0; i < 3; i++) {\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\n      continue;\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\n      continue;\n    }\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\n      continue;\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\n      continue;\n    }\n    return false;\n  }\n  /* eslint-enable no-continue */\n\n  return true;\n}\nfunction _containsPoint(bounds, x, y, z) {\n  if (x < bounds[0] || x > bounds[1]) {\n    return false;\n  }\n  if (y < bounds[2] || y > bounds[3]) {\n    return false;\n  }\n  if (z < bounds[4] || z > bounds[5]) {\n    return false;\n  }\n  return true;\n}\nfunction contains(bounds, otherBounds) {\n  // if either box is not valid or they don't intersect\n  if (!_intersects(bounds, otherBounds)) {\n    return false;\n  }\n  if (!_containsPoint.apply(void 0, [bounds].concat(_toConsumableArray(_getMinPoint(otherBounds))))) {\n    return false;\n  }\n  if (!_containsPoint.apply(void 0, [bounds].concat(_toConsumableArray(_getMaxPoint(otherBounds))))) {\n    return false;\n  }\n  return true;\n}\n/**\n * Returns true if plane intersects bounding box.\n * If so, the box is cut by the plane\n * @param {array} origin\n * @param {array} normal\n */\n\nfunction _cutWithPlane(bounds, origin, normal) {\n  // Index[0..2] represents the order of traversing the corners of a cube\n  // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively\n  var index = [[0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 4, 5, 2, 3, 6, 7], [0, 2, 4, 6, 1, 3, 5, 7]]; // stores the signed distance to a plane\n\n  var d = [0, 0, 0, 0, 0, 0, 0, 0];\n  var idx = 0;\n  for (var ix = 0; ix < 2; ix++) {\n    for (var iy = 2; iy < 4; iy++) {\n      for (var iz = 4; iz < 6; iz++) {\n        var x = [bounds[ix], bounds[iy], bounds[iz]];\n        d[idx++] = vtkPlane.evaluate(normal, origin, x);\n      }\n    }\n  }\n  var dir = 2;\n  while (dir--) {\n    // in each direction, we test if the vertices of two orthogonal faces\n    // are on either side of the plane\n    if (oppositeSign(d[index[dir][0]], d[index[dir][4]]) && oppositeSign(d[index[dir][1]], d[index[dir][5]]) && oppositeSign(d[index[dir][2]], d[index[dir][6]]) && oppositeSign(d[index[dir][3]], d[index[dir][7]])) {\n      break;\n    }\n  }\n  if (dir < 0) {\n    return false;\n  }\n  var sign = Math.sign(normal[dir]);\n  var size = Math.abs((bounds[dir * 2 + 1] - bounds[dir * 2]) * normal[dir]);\n  var t = sign > 0 ? 1 : 0;\n  /* eslint-disable no-continue */\n\n  for (var i = 0; i < 4; i++) {\n    if (size === 0) {\n      continue; // shouldn't happen\n    }\n\n    var ti = Math.abs(d[index[dir][i]]) / size;\n    if (sign > 0 && ti < t) {\n      t = ti;\n    }\n    if (sign < 0 && ti > t) {\n      t = ti;\n    }\n  }\n  /* eslint-enable no-continue */\n\n  var bound = (1.0 - t) * bounds[dir * 2] + t * bounds[dir * 2 + 1];\n  if (sign > 0) {\n    bounds[dir * 2] = bound;\n  } else {\n    bounds[dir * 2 + 1] = bound;\n  }\n  return true;\n} // ----------------------------------------------------------------------------\n\nvar BoundingBox = /*#__PURE__*/function () {\n  function BoundingBox(refBounds) {\n    _classCallCheck(this, BoundingBox);\n    this.bounds = refBounds;\n    if (!this.bounds) {\n      this.bounds = new Float64Array(INIT_BOUNDS);\n    }\n  }\n  _createClass(BoundingBox, [{\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.bounds;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(otherBounds) {\n      return _equals(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return _isValid(this.bounds);\n    }\n  }, {\n    key: \"setBounds\",\n    value: function setBounds(otherBounds) {\n      return _setBounds(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      return _reset(this.bounds);\n    }\n  }, {\n    key: \"addPoint\",\n    value: function addPoint() {\n      for (var _len = arguments.length, xyz = new Array(_len), _key = 0; _key < _len; _key++) {\n        xyz[_key] = arguments[_key];\n      }\n      return _addPoint.apply(void 0, [this.bounds].concat(xyz));\n    }\n  }, {\n    key: \"addPoints\",\n    value: function addPoints(points) {\n      return _addPoints(this.bounds, points);\n    }\n  }, {\n    key: \"addBounds\",\n    value: function addBounds(xMin, xMax, yMin, yMax, zMin, zMax) {\n      return _addBounds(this.bounds, xMin, xMax, yMin, yMax, zMin, zMax);\n    }\n  }, {\n    key: \"setMinPoint\",\n    value: function setMinPoint(x, y, z) {\n      return _setMinPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"setMaxPoint\",\n    value: function setMaxPoint(x, y, z) {\n      return _setMaxPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"inflate\",\n    value: function inflate(delta) {\n      return _inflate(this.bounds, delta);\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(sx, sy, sz) {\n      return _scale(this.bounds, sx, sy, sz);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return _getCenter(this.bounds);\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength(index) {\n      return _getLength(this.bounds, index);\n    }\n  }, {\n    key: \"getLengths\",\n    value: function getLengths() {\n      return _getLengths(this.bounds);\n    }\n  }, {\n    key: \"getMaxLength\",\n    value: function getMaxLength() {\n      return _getMaxLength(this.bounds);\n    }\n  }, {\n    key: \"getDiagonalLength\",\n    value: function getDiagonalLength() {\n      return _getDiagonalLength(this.bounds);\n    }\n  }, {\n    key: \"getMinPoint\",\n    value: function getMinPoint() {\n      return _getMinPoint(this.bounds);\n    }\n  }, {\n    key: \"getMaxPoint\",\n    value: function getMaxPoint() {\n      return _getMaxPoint(this.bounds);\n    }\n  }, {\n    key: \"getXRange\",\n    value: function getXRange() {\n      return _getXRange(this.bounds);\n    }\n  }, {\n    key: \"getYRange\",\n    value: function getYRange() {\n      return _getYRange(this.bounds);\n    }\n  }, {\n    key: \"getZRange\",\n    value: function getZRange() {\n      return _getZRange(this.bounds);\n    }\n  }, {\n    key: \"getCorners\",\n    value: function getCorners(corners) {\n      return _getCorners(this.bounds, corners);\n    }\n  }, {\n    key: \"computeCornerPoints\",\n    value: function computeCornerPoints(point1, point2) {\n      return _computeCornerPoints(this.bounds, point1, point2);\n    }\n  }, {\n    key: \"computeLocalBounds\",\n    value: function computeLocalBounds(u, v, w) {\n      return _computeLocalBounds(this.bounds, u, v, w);\n    }\n  }, {\n    key: \"transformBounds\",\n    value: function transformBounds(transform) {\n      var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return _transformBounds(this.bounds, transform, out);\n    }\n  }, {\n    key: \"computeScale3\",\n    value: function computeScale3(scale3) {\n      return _computeScale(this.bounds, scale3);\n    }\n  }, {\n    key: \"cutWithPlane\",\n    value: function cutWithPlane(origin, normal) {\n      return _cutWithPlane(this.bounds, origin, normal);\n    }\n  }, {\n    key: \"intersectBox\",\n    value: function intersectBox(origin, dir, coord, tolerance) {\n      return _intersectBox(this.bounds, origin, dir, coord, tolerance);\n    }\n  }, {\n    key: \"intersectPlane\",\n    value: function intersectPlane(origin, normal) {\n      return _intersectPlane(this.bounds, origin, normal);\n    }\n  }, {\n    key: \"intersect\",\n    value: function intersect(otherBounds) {\n      return _intersect(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(otherBounds) {\n      return _intersects(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(x, y, z) {\n      return _containsPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(otherBounds) {\n      return _intersects(this.bounds, otherBounds);\n    }\n  }]);\n  return BoundingBox;\n}();\nfunction newInstance(initialValues) {\n  var bounds = initialValues && initialValues.bounds;\n  return new BoundingBox(bounds);\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {\n  equals: _equals,\n  isValid: _isValid,\n  setBounds: _setBounds,\n  reset: _reset,\n  addPoint: _addPoint,\n  addPoints: _addPoints,\n  addBounds: _addBounds,\n  setMinPoint: _setMinPoint,\n  setMaxPoint: _setMaxPoint,\n  inflate: _inflate,\n  scale: _scale,\n  scaleAboutCenter: scaleAboutCenter,\n  getCenter: _getCenter,\n  getLength: _getLength,\n  getLengths: _getLengths,\n  getMaxLength: _getMaxLength,\n  getDiagonalLength: _getDiagonalLength,\n  getMinPoint: _getMinPoint,\n  getMaxPoint: _getMaxPoint,\n  getXRange: _getXRange,\n  getYRange: _getYRange,\n  getZRange: _getZRange,\n  getCorners: _getCorners,\n  computeCornerPoints: _computeCornerPoints,\n  computeLocalBounds: _computeLocalBounds,\n  transformBounds: _transformBounds,\n  computeScale3: _computeScale,\n  cutWithPlane: _cutWithPlane,\n  intersectBox: _intersectBox,\n  intersectPlane: _intersectPlane,\n  intersect: _intersect,\n  intersects: _intersects,\n  containsPoint: _containsPoint,\n  contains: contains,\n  INIT_BOUNDS: INIT_BOUNDS\n};\nvar vtkBoundingBox = _objectSpread({\n  newInstance: newInstance\n}, STATIC);\nexport { STATIC, _addBounds as addBounds, _addPoint as addPoint, _addPoints as addPoints, _computeCornerPoints as computeCornerPoints, _computeLocalBounds as computeLocalBounds, _computeScale as computeScale3, contains, _containsPoint as containsPoint, _cutWithPlane as cutWithPlane, vtkBoundingBox as default, _equals as equals, _getCenter as getCenter, _getCorners as getCorners, _getDiagonalLength as getDiagonalLength, _getLength as getLength, _getLengths as getLengths, _getMaxLength as getMaxLength, _getMaxPoint as getMaxPoint, _getMinPoint as getMinPoint, _getXRange as getXRange, _getYRange as getYRange, _getZRange as getZRange, _inflate as inflate, _intersect as intersect, _intersectBox as intersectBox, _intersectPlane as intersectPlane, _intersects as intersects, _isValid as isValid, _reset as reset, _scale as scale, scaleAboutCenter, _setBounds as setBounds, _setMaxPoint as setMaxPoint, _setMinPoint as setMinPoint, _transformBounds as transformBounds };","map":{"version":3,"names":["_defineProperty","_classCallCheck","_createClass","_toConsumableArray","_slicedToArray","d","dot","vec3","vtkPlane","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","INIT_BOUNDS","Number","MAX_VALUE","_equals","a","b","_isValid","bounds","_setBounds","otherBounds","_reset","_addPoint","x","y","z","_bounds","xMin","xMax","yMin","yMax","zMin","zMax","_addPoints","points","Array","isArray","concat","_i","slice","_addBounds","_bounds2","_xMin","_xMax","_yMin","_yMax","_zMin","_zMax","undefined","Math","min","max","_setMinPoint","_bounds3","_setMaxPoint","_bounds4","_inflate","delta","_scale","sx","sy","sz","_getCenter","scaleAboutCenter","center","_getLength","index","_getLengths","_getXRange","_getYRange","_getZRange","_getMaxLength","l","_getDiagonalLength","sqrt","_getMinPoint","_getMaxPoint","oppositeSign","_getCorners","corners","count","ix","iy","iz","_computeCornerPoints","point1","point2","_transformBounds","transform","out","transformMat4","_computeScale","scale3","_computeLocalBounds","u","v","w","pointsData","getData","point","du","dv","dw","_intersectBox","origin","dir","coord","tolerance","inside","quadrant","whichPlane","maxT","candidatePlane","RIGHT","LEFT","MIDDLE","_i2","_i3","_i4","_intersectPlane","normal","p","sign","firstOne","evaluate","_intersect","bBounds","newBounds","intersection","_intersects","_containsPoint","contains","_cutWithPlane","idx","size","abs","t","ti","bound","BoundingBox","refBounds","Float64Array","value","getBounds","equals","isValid","setBounds","reset","addPoint","_len","xyz","_key","addPoints","addBounds","setMinPoint","setMaxPoint","inflate","scale","getCenter","getLength","getLengths","getMaxLength","getDiagonalLength","getMinPoint","getMaxPoint","getXRange","getYRange","getZRange","getCorners","computeCornerPoints","computeLocalBounds","transformBounds","computeScale3","cutWithPlane","intersectBox","intersectPlane","intersect","intersects","containsPoint","newInstance","initialValues","STATIC","vtkBoundingBox","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { d as dot } from '../Core/Math/index.js';\nimport { vec3 } from 'gl-matrix';\nimport vtkPlane from './Plane.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar INIT_BOUNDS = [Number.MAX_VALUE, -Number.MAX_VALUE, // X\nNumber.MAX_VALUE, -Number.MAX_VALUE, // Y\nNumber.MAX_VALUE, -Number.MAX_VALUE // Z\n]; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction _equals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\nfunction _isValid(bounds) {\n  return (bounds === null || bounds === void 0 ? void 0 : bounds.length) >= 6 && bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5];\n}\n\nfunction _setBounds(bounds, otherBounds) {\n  bounds[0] = otherBounds[0];\n  bounds[1] = otherBounds[1];\n  bounds[2] = otherBounds[2];\n  bounds[3] = otherBounds[3];\n  bounds[4] = otherBounds[4];\n  bounds[5] = otherBounds[5];\n  return bounds;\n}\n\nfunction _reset(bounds) {\n  return _setBounds(bounds, INIT_BOUNDS);\n}\n\nfunction _addPoint(bounds, x, y, z) {\n  var _bounds = _slicedToArray(bounds, 6),\n      xMin = _bounds[0],\n      xMax = _bounds[1],\n      yMin = _bounds[2],\n      yMax = _bounds[3],\n      zMin = _bounds[4],\n      zMax = _bounds[5];\n\n  bounds[0] = xMin < x ? xMin : x;\n  bounds[1] = xMax > x ? xMax : x;\n  bounds[2] = yMin < y ? yMin : y;\n  bounds[3] = yMax > y ? yMax : y;\n  bounds[4] = zMin < z ? zMin : z;\n  bounds[5] = zMax > z ? zMax : z;\n  return bounds;\n}\n\nfunction _addPoints(bounds, points) {\n  if (points.length === 0) {\n    return bounds;\n  }\n\n  if (Array.isArray(points[0])) {\n    for (var i = 0; i < points.length; ++i) {\n      _addPoint.apply(void 0, [bounds].concat(_toConsumableArray(points[i])));\n    }\n  } else {\n    for (var _i = 0; _i < points.length; _i += 3) {\n      _addPoint.apply(void 0, [bounds].concat(_toConsumableArray(points.slice(_i, _i + 3))));\n    }\n  }\n\n  return bounds;\n}\n\nfunction _addBounds(bounds, xMin, xMax, yMin, yMax, zMin, zMax) {\n  var _bounds2 = _slicedToArray(bounds, 6),\n      _xMin = _bounds2[0],\n      _xMax = _bounds2[1],\n      _yMin = _bounds2[2],\n      _yMax = _bounds2[3],\n      _zMin = _bounds2[4],\n      _zMax = _bounds2[5];\n\n  if (zMax === undefined) {\n    bounds[0] = Math.min(xMin[0], _xMin);\n    bounds[1] = Math.max(xMin[1], _xMax);\n    bounds[2] = Math.min(xMin[2], _yMin);\n    bounds[3] = Math.max(xMin[3], _yMax);\n    bounds[4] = Math.min(xMin[4], _zMin);\n    bounds[5] = Math.max(xMin[5], _zMax);\n  } else {\n    bounds[0] = Math.min(xMin, _xMin);\n    bounds[1] = Math.max(xMax, _xMax);\n    bounds[2] = Math.min(yMin, _yMin);\n    bounds[3] = Math.max(yMax, _yMax);\n    bounds[4] = Math.min(zMin, _zMin);\n    bounds[5] = Math.max(zMax, _zMax);\n  }\n\n  return bounds;\n}\n\nfunction _setMinPoint(bounds, x, y, z) {\n  var _bounds3 = _slicedToArray(bounds, 6),\n      xMin = _bounds3[0],\n      xMax = _bounds3[1],\n      yMin = _bounds3[2],\n      yMax = _bounds3[3],\n      zMin = _bounds3[4],\n      zMax = _bounds3[5];\n\n  bounds[0] = x;\n  bounds[1] = x > xMax ? x : xMax;\n  bounds[2] = y;\n  bounds[3] = y > yMax ? y : yMax;\n  bounds[4] = z;\n  bounds[5] = z > zMax ? z : zMax;\n  return xMin !== x || yMin !== y || zMin !== z;\n}\n\nfunction _setMaxPoint(bounds, x, y, z) {\n  var _bounds4 = _slicedToArray(bounds, 6),\n      xMin = _bounds4[0],\n      xMax = _bounds4[1],\n      yMin = _bounds4[2],\n      yMax = _bounds4[3],\n      zMin = _bounds4[4],\n      zMax = _bounds4[5];\n\n  bounds[0] = x < xMin ? x : xMin;\n  bounds[1] = x;\n  bounds[2] = y < yMin ? y : yMin;\n  bounds[3] = y;\n  bounds[4] = z < zMin ? z : zMin;\n  bounds[5] = z;\n  return xMax !== x || yMax !== y || zMax !== z;\n}\n\nfunction _inflate(bounds, delta) {\n  bounds[0] -= delta;\n  bounds[1] += delta;\n  bounds[2] -= delta;\n  bounds[3] += delta;\n  bounds[4] -= delta;\n  bounds[5] += delta;\n  return bounds;\n}\n\nfunction _scale(bounds, sx, sy, sz) {\n  if (!_isValid(bounds)) {\n    return false;\n  }\n\n  if (sx >= 0.0) {\n    bounds[0] *= sx;\n    bounds[1] *= sx;\n  } else {\n    bounds[0] = sx * bounds[1];\n    bounds[1] = sx * bounds[0];\n  }\n\n  if (sy >= 0.0) {\n    bounds[2] *= sy;\n    bounds[3] *= sy;\n  } else {\n    bounds[2] = sy * bounds[3];\n    bounds[3] = sy * bounds[2];\n  }\n\n  if (sz >= 0.0) {\n    bounds[4] *= sz;\n    bounds[5] *= sz;\n  } else {\n    bounds[4] = sz * bounds[5];\n    bounds[5] = sz * bounds[4];\n  }\n\n  return true;\n}\n\nfunction _getCenter(bounds) {\n  return [0.5 * (bounds[0] + bounds[1]), 0.5 * (bounds[2] + bounds[3]), 0.5 * (bounds[4] + bounds[5])];\n}\nfunction scaleAboutCenter(bounds, sx, sy, sz) {\n  if (!_isValid(bounds)) {\n    return false;\n  }\n\n  var center = _getCenter(bounds);\n\n  bounds[0] -= center[0];\n  bounds[1] -= center[0];\n  bounds[2] -= center[1];\n  bounds[3] -= center[1];\n  bounds[4] -= center[2];\n  bounds[5] -= center[2];\n\n  _scale(bounds, sx, sy, sz);\n\n  bounds[0] += center[0];\n  bounds[1] += center[0];\n  bounds[2] += center[1];\n  bounds[3] += center[1];\n  bounds[4] += center[2];\n  bounds[5] += center[2];\n  return true;\n}\n\nfunction _getLength(bounds, index) {\n  return bounds[index * 2 + 1] - bounds[index * 2];\n}\n\nfunction _getLengths(bounds) {\n  return [_getLength(bounds, 0), _getLength(bounds, 1), _getLength(bounds, 2)];\n}\n\nfunction _getXRange(bounds) {\n  return bounds.slice(0, 2);\n}\n\nfunction _getYRange(bounds) {\n  return bounds.slice(2, 4);\n}\n\nfunction _getZRange(bounds) {\n  return bounds.slice(4, 6);\n}\n\nfunction _getMaxLength(bounds) {\n  var l = _getLengths(bounds);\n\n  if (l[0] > l[1]) {\n    if (l[0] > l[2]) {\n      return l[0];\n    }\n\n    return l[2];\n  }\n\n  if (l[1] > l[2]) {\n    return l[1];\n  }\n\n  return l[2];\n}\n\nfunction _getDiagonalLength(bounds) {\n  if (_isValid(bounds)) {\n    var l = _getLengths(bounds);\n\n    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);\n  }\n\n  return null;\n}\n\nfunction _getMinPoint(bounds) {\n  return [bounds[0], bounds[2], bounds[4]];\n}\n\nfunction _getMaxPoint(bounds) {\n  return [bounds[1], bounds[3], bounds[5]];\n}\n\nfunction oppositeSign(a, b) {\n  return a <= 0 && b >= 0 || a >= 0 && b <= 0;\n}\n\nfunction _getCorners(bounds, corners) {\n  var count = 0;\n\n  for (var ix = 0; ix < 2; ix++) {\n    for (var iy = 2; iy < 4; iy++) {\n      for (var iz = 4; iz < 6; iz++) {\n        corners[count++] = [bounds[ix], bounds[iy], bounds[iz]];\n      }\n    }\n  }\n\n  return corners;\n} // Computes the two corners with minimal and miximal coordinates\n\nfunction _computeCornerPoints(bounds, point1, point2) {\n  point1[0] = bounds[0];\n  point1[1] = bounds[2];\n  point1[2] = bounds[4];\n  point2[0] = bounds[1];\n  point2[1] = bounds[3];\n  point2[2] = bounds[5];\n  return point1;\n}\n\nfunction _transformBounds(bounds, transform) {\n  var out = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  var corners = _getCorners(bounds, []);\n\n  for (var i = 0; i < corners.length; ++i) {\n    vec3.transformMat4(corners[i], corners[i], transform);\n  }\n\n  _reset(out);\n\n  return _addPoints(out, corners);\n}\n\nfunction _computeScale(bounds) {\n  var scale3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  scale3[0] = 0.5 * (bounds[1] - bounds[0]);\n  scale3[1] = 0.5 * (bounds[3] - bounds[2]);\n  scale3[2] = 0.5 * (bounds[5] - bounds[4]);\n  return scale3;\n}\n\nfunction _computeLocalBounds(points, u, v, w) {\n  var bounds = [].concat(INIT_BOUNDS);\n  var pointsData = points.getData();\n\n  for (var i = 0; i < pointsData.length; i += 3) {\n    var point = [pointsData[i], pointsData[i + 1], pointsData[i + 2]];\n    var du = dot(point, u);\n    bounds[0] = Math.min(du, bounds[0]);\n    bounds[1] = Math.max(du, bounds[1]);\n    var dv = dot(point, v);\n    bounds[2] = Math.min(dv, bounds[2]);\n    bounds[3] = Math.max(dv, bounds[3]);\n    var dw = dot(point, w);\n    bounds[4] = Math.min(dw, bounds[4]);\n    bounds[5] = Math.max(dw, bounds[5]);\n  }\n\n  return bounds;\n} // The method returns a non-zero value if the bounding box is hit.\n\nfunction _intersectBox(bounds, origin, dir, coord, tolerance) {\n  var inside = true;\n  var quadrant = [];\n  var whichPlane = 0;\n  var maxT = [];\n  var candidatePlane = [0.0, 0.0, 0.0];\n  var RIGHT = 0;\n  var LEFT = 1;\n  var MIDDLE = 2; // First find closest planes\n\n  for (var i = 0; i < 3; i++) {\n    if (origin[i] < bounds[2 * i]) {\n      quadrant[i] = LEFT;\n      candidatePlane[i] = bounds[2 * i];\n      inside = false;\n    } else if (origin[i] > bounds[2 * i + 1]) {\n      quadrant[i] = RIGHT;\n      candidatePlane[i] = bounds[2 * i + 1];\n      inside = false;\n    } else {\n      quadrant[i] = MIDDLE;\n    }\n  } // Check whether origin of ray is inside bbox\n\n\n  if (inside) {\n    coord[0] = origin[0];\n    coord[1] = origin[1];\n    coord[2] = origin[2];\n    tolerance[0] = 0;\n    return 1;\n  } // Calculate parametric distance to plane\n\n\n  for (var _i2 = 0; _i2 < 3; _i2++) {\n    if (quadrant[_i2] !== MIDDLE && dir[_i2] !== 0.0) {\n      maxT[_i2] = (candidatePlane[_i2] - origin[_i2]) / dir[_i2];\n    } else {\n      maxT[_i2] = -1.0;\n    }\n  } // Find the largest parametric value of intersection\n\n\n  for (var _i3 = 0; _i3 < 3; _i3++) {\n    if (maxT[whichPlane] < maxT[_i3]) {\n      whichPlane = _i3;\n    }\n  } // Check for valie intersection along line\n\n\n  if (maxT[whichPlane] > 1.0 || maxT[whichPlane] < 0.0) {\n    return 0;\n  }\n\n  tolerance[0] = maxT[whichPlane]; // Intersection point along line is okay. Check bbox.\n\n  for (var _i4 = 0; _i4 < 3; _i4++) {\n    if (whichPlane !== _i4) {\n      coord[_i4] = origin[_i4] + maxT[whichPlane] * dir[_i4];\n\n      if (coord[_i4] < bounds[2 * _i4] || coord[_i4] > bounds[2 * _i4 + 1]) {\n        return 0;\n      }\n    } else {\n      coord[_i4] = candidatePlane[_i4];\n    }\n  }\n\n  return 1;\n} // Plane intersection with box\n\nfunction _intersectPlane(bounds, origin, normal) {\n  var p = [];\n  var d = 0;\n  var sign = 1;\n  var firstOne = 1; // Evaluate the eight points. If there is a sign change, there is an intersection\n\n  for (var z = 4; z <= 5; ++z) {\n    p[2] = bounds[z];\n\n    for (var y = 2; y <= 3; ++y) {\n      p[1] = bounds[y];\n\n      for (var x = 0; x <= 1; ++x) {\n        p[0] = bounds[x];\n        d = vtkPlane.evaluate(normal, origin, p);\n\n        if (firstOne) {\n          sign = d >= 0 ? 1 : -1;\n          firstOne = 0;\n        }\n\n        if (d === 0.0 || sign > 0 && d < 0.0 || sign < 0 && d > 0.0) {\n          return 1;\n        }\n      }\n    }\n  }\n\n  return 0; // no intersection\n}\n\nfunction _intersect(bounds, bBounds) {\n  if (!(_isValid(bounds) && _isValid(bBounds))) {\n    return false;\n  }\n\n  var newBounds = [0, 0, 0, 0, 0, 0];\n  var intersection;\n\n  for (var i = 0; i < 3; i++) {\n    intersection = false;\n\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2] = bBounds[i * 2];\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2] = bounds[i * 2];\n    }\n\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bBounds[2 * i + 1];\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bounds[i * 2 + 1];\n    }\n\n    if (!intersection) {\n      return false;\n    }\n  } // OK they did intersect - set the box to be the result\n\n\n  bounds[0] = newBounds[0];\n  bounds[1] = newBounds[1];\n  bounds[2] = newBounds[2];\n  bounds[3] = newBounds[3];\n  bounds[4] = newBounds[4];\n  bounds[5] = newBounds[5];\n  return true;\n}\n\nfunction _intersects(bounds, bBounds) {\n  if (!(_isValid(bounds) && _isValid(bBounds))) {\n    return false;\n  }\n  /* eslint-disable no-continue */\n\n\n  for (var i = 0; i < 3; i++) {\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\n      continue;\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\n      continue;\n    }\n\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\n      continue;\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\n      continue;\n    }\n\n    return false;\n  }\n  /* eslint-enable no-continue */\n\n\n  return true;\n}\n\nfunction _containsPoint(bounds, x, y, z) {\n  if (x < bounds[0] || x > bounds[1]) {\n    return false;\n  }\n\n  if (y < bounds[2] || y > bounds[3]) {\n    return false;\n  }\n\n  if (z < bounds[4] || z > bounds[5]) {\n    return false;\n  }\n\n  return true;\n}\nfunction contains(bounds, otherBounds) {\n  // if either box is not valid or they don't intersect\n  if (!_intersects(bounds, otherBounds)) {\n    return false;\n  }\n\n  if (!_containsPoint.apply(void 0, [bounds].concat(_toConsumableArray(_getMinPoint(otherBounds))))) {\n    return false;\n  }\n\n  if (!_containsPoint.apply(void 0, [bounds].concat(_toConsumableArray(_getMaxPoint(otherBounds))))) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Returns true if plane intersects bounding box.\n * If so, the box is cut by the plane\n * @param {array} origin\n * @param {array} normal\n */\n\nfunction _cutWithPlane(bounds, origin, normal) {\n  // Index[0..2] represents the order of traversing the corners of a cube\n  // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively\n  var index = [[0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 4, 5, 2, 3, 6, 7], [0, 2, 4, 6, 1, 3, 5, 7]]; // stores the signed distance to a plane\n\n  var d = [0, 0, 0, 0, 0, 0, 0, 0];\n  var idx = 0;\n\n  for (var ix = 0; ix < 2; ix++) {\n    for (var iy = 2; iy < 4; iy++) {\n      for (var iz = 4; iz < 6; iz++) {\n        var x = [bounds[ix], bounds[iy], bounds[iz]];\n        d[idx++] = vtkPlane.evaluate(normal, origin, x);\n      }\n    }\n  }\n\n  var dir = 2;\n\n  while (dir--) {\n    // in each direction, we test if the vertices of two orthogonal faces\n    // are on either side of the plane\n    if (oppositeSign(d[index[dir][0]], d[index[dir][4]]) && oppositeSign(d[index[dir][1]], d[index[dir][5]]) && oppositeSign(d[index[dir][2]], d[index[dir][6]]) && oppositeSign(d[index[dir][3]], d[index[dir][7]])) {\n      break;\n    }\n  }\n\n  if (dir < 0) {\n    return false;\n  }\n\n  var sign = Math.sign(normal[dir]);\n  var size = Math.abs((bounds[dir * 2 + 1] - bounds[dir * 2]) * normal[dir]);\n  var t = sign > 0 ? 1 : 0;\n  /* eslint-disable no-continue */\n\n  for (var i = 0; i < 4; i++) {\n    if (size === 0) {\n      continue; // shouldn't happen\n    }\n\n    var ti = Math.abs(d[index[dir][i]]) / size;\n\n    if (sign > 0 && ti < t) {\n      t = ti;\n    }\n\n    if (sign < 0 && ti > t) {\n      t = ti;\n    }\n  }\n  /* eslint-enable no-continue */\n\n\n  var bound = (1.0 - t) * bounds[dir * 2] + t * bounds[dir * 2 + 1];\n\n  if (sign > 0) {\n    bounds[dir * 2] = bound;\n  } else {\n    bounds[dir * 2 + 1] = bound;\n  }\n\n  return true;\n} // ----------------------------------------------------------------------------\n\nvar BoundingBox = /*#__PURE__*/function () {\n  function BoundingBox(refBounds) {\n    _classCallCheck(this, BoundingBox);\n\n    this.bounds = refBounds;\n\n    if (!this.bounds) {\n      this.bounds = new Float64Array(INIT_BOUNDS);\n    }\n  }\n\n  _createClass(BoundingBox, [{\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.bounds;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(otherBounds) {\n      return _equals(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return _isValid(this.bounds);\n    }\n  }, {\n    key: \"setBounds\",\n    value: function setBounds(otherBounds) {\n      return _setBounds(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      return _reset(this.bounds);\n    }\n  }, {\n    key: \"addPoint\",\n    value: function addPoint() {\n      for (var _len = arguments.length, xyz = new Array(_len), _key = 0; _key < _len; _key++) {\n        xyz[_key] = arguments[_key];\n      }\n\n      return _addPoint.apply(void 0, [this.bounds].concat(xyz));\n    }\n  }, {\n    key: \"addPoints\",\n    value: function addPoints(points) {\n      return _addPoints(this.bounds, points);\n    }\n  }, {\n    key: \"addBounds\",\n    value: function addBounds(xMin, xMax, yMin, yMax, zMin, zMax) {\n      return _addBounds(this.bounds, xMin, xMax, yMin, yMax, zMin, zMax);\n    }\n  }, {\n    key: \"setMinPoint\",\n    value: function setMinPoint(x, y, z) {\n      return _setMinPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"setMaxPoint\",\n    value: function setMaxPoint(x, y, z) {\n      return _setMaxPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"inflate\",\n    value: function inflate(delta) {\n      return _inflate(this.bounds, delta);\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(sx, sy, sz) {\n      return _scale(this.bounds, sx, sy, sz);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return _getCenter(this.bounds);\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength(index) {\n      return _getLength(this.bounds, index);\n    }\n  }, {\n    key: \"getLengths\",\n    value: function getLengths() {\n      return _getLengths(this.bounds);\n    }\n  }, {\n    key: \"getMaxLength\",\n    value: function getMaxLength() {\n      return _getMaxLength(this.bounds);\n    }\n  }, {\n    key: \"getDiagonalLength\",\n    value: function getDiagonalLength() {\n      return _getDiagonalLength(this.bounds);\n    }\n  }, {\n    key: \"getMinPoint\",\n    value: function getMinPoint() {\n      return _getMinPoint(this.bounds);\n    }\n  }, {\n    key: \"getMaxPoint\",\n    value: function getMaxPoint() {\n      return _getMaxPoint(this.bounds);\n    }\n  }, {\n    key: \"getXRange\",\n    value: function getXRange() {\n      return _getXRange(this.bounds);\n    }\n  }, {\n    key: \"getYRange\",\n    value: function getYRange() {\n      return _getYRange(this.bounds);\n    }\n  }, {\n    key: \"getZRange\",\n    value: function getZRange() {\n      return _getZRange(this.bounds);\n    }\n  }, {\n    key: \"getCorners\",\n    value: function getCorners(corners) {\n      return _getCorners(this.bounds, corners);\n    }\n  }, {\n    key: \"computeCornerPoints\",\n    value: function computeCornerPoints(point1, point2) {\n      return _computeCornerPoints(this.bounds, point1, point2);\n    }\n  }, {\n    key: \"computeLocalBounds\",\n    value: function computeLocalBounds(u, v, w) {\n      return _computeLocalBounds(this.bounds, u, v, w);\n    }\n  }, {\n    key: \"transformBounds\",\n    value: function transformBounds(transform) {\n      var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return _transformBounds(this.bounds, transform, out);\n    }\n  }, {\n    key: \"computeScale3\",\n    value: function computeScale3(scale3) {\n      return _computeScale(this.bounds, scale3);\n    }\n  }, {\n    key: \"cutWithPlane\",\n    value: function cutWithPlane(origin, normal) {\n      return _cutWithPlane(this.bounds, origin, normal);\n    }\n  }, {\n    key: \"intersectBox\",\n    value: function intersectBox(origin, dir, coord, tolerance) {\n      return _intersectBox(this.bounds, origin, dir, coord, tolerance);\n    }\n  }, {\n    key: \"intersectPlane\",\n    value: function intersectPlane(origin, normal) {\n      return _intersectPlane(this.bounds, origin, normal);\n    }\n  }, {\n    key: \"intersect\",\n    value: function intersect(otherBounds) {\n      return _intersect(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(otherBounds) {\n      return _intersects(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(x, y, z) {\n      return _containsPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(otherBounds) {\n      return _intersects(this.bounds, otherBounds);\n    }\n  }]);\n\n  return BoundingBox;\n}();\n\nfunction newInstance(initialValues) {\n  var bounds = initialValues && initialValues.bounds;\n  return new BoundingBox(bounds);\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  equals: _equals,\n  isValid: _isValid,\n  setBounds: _setBounds,\n  reset: _reset,\n  addPoint: _addPoint,\n  addPoints: _addPoints,\n  addBounds: _addBounds,\n  setMinPoint: _setMinPoint,\n  setMaxPoint: _setMaxPoint,\n  inflate: _inflate,\n  scale: _scale,\n  scaleAboutCenter: scaleAboutCenter,\n  getCenter: _getCenter,\n  getLength: _getLength,\n  getLengths: _getLengths,\n  getMaxLength: _getMaxLength,\n  getDiagonalLength: _getDiagonalLength,\n  getMinPoint: _getMinPoint,\n  getMaxPoint: _getMaxPoint,\n  getXRange: _getXRange,\n  getYRange: _getYRange,\n  getZRange: _getZRange,\n  getCorners: _getCorners,\n  computeCornerPoints: _computeCornerPoints,\n  computeLocalBounds: _computeLocalBounds,\n  transformBounds: _transformBounds,\n  computeScale3: _computeScale,\n  cutWithPlane: _cutWithPlane,\n  intersectBox: _intersectBox,\n  intersectPlane: _intersectPlane,\n  intersect: _intersect,\n  intersects: _intersects,\n  containsPoint: _containsPoint,\n  contains: contains,\n  INIT_BOUNDS: INIT_BOUNDS\n};\nvar vtkBoundingBox = _objectSpread({\n  newInstance: newInstance\n}, STATIC);\n\nexport { STATIC, _addBounds as addBounds, _addPoint as addPoint, _addPoints as addPoints, _computeCornerPoints as computeCornerPoints, _computeLocalBounds as computeLocalBounds, _computeScale as computeScale3, contains, _containsPoint as containsPoint, _cutWithPlane as cutWithPlane, vtkBoundingBox as default, _equals as equals, _getCenter as getCenter, _getCorners as getCorners, _getDiagonalLength as getDiagonalLength, _getLength as getLength, _getLengths as getLengths, _getMaxLength as getMaxLength, _getMaxPoint as getMaxPoint, _getMinPoint as getMinPoint, _getXRange as getXRange, _getYRange as getYRange, _getZRange as getZRange, _inflate as inflate, _intersect as intersect, _intersectBox as intersectBox, _intersectPlane as intersectPlane, _intersects as intersects, _isValid as isValid, _reset as reset, _scale as scale, scaleAboutCenter, _setBounds as setBounds, _setMaxPoint as setMaxPoint, _setMinPoint as setMinPoint, _transformBounds as transformBounds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
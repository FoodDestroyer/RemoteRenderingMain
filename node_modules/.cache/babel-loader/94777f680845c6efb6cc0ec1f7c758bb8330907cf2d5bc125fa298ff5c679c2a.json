{"ast":null,"code":"import macro from '../../macros.js';\nvar vtkErrorMacro = macro.vtkErrorMacro; // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n// TODO:\n// - Support image stack\n// - Support slice orientation (see stack?)\n// - may need some data conversion\n// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n// ----------------------------------------------------------------------------\n// vtkImageDataToCornerstoneImage methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageDataToCornerstoneImage(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageDataToCornerstoneImage');\n  publicAPI.requestData = function (inData, outData) {\n    // implement requestData\n    var input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    } // Retrieve output and volume data\n    // const origin = input.getOrigin();\n\n    var spacing = input.getSpacing();\n    var dims = input.getDimensions();\n    var scalars = input.getPointData().getScalars();\n    var dataRange = scalars.getRange(0);\n    var rawData = scalars.getData(); // FIXME probably need to expand to RGBA\n\n    var pixelData = null;\n    if (dims[2] === 1) {\n      pixelData = !scalars.data ? rawData : scalars.data;\n    } else {\n      var offset = model.sliceIndex * dims[0] * dims[1] * rawData.BYTES_PER_ELEMENT;\n      pixelData = macro.newTypedArray(scalars.getDataType(), rawData.buffer, offset, dims[0] * dims[1]);\n    }\n    var cornerstoneImage = {\n      imageId: model.imageId,\n      color: scalars.getNumberOfComponents() > 1,\n      columnPixelSpacing: spacing[0],\n      columns: dims[0],\n      width: dims[0],\n      rowPixelSpacing: spacing[1],\n      rows: dims[1],\n      height: dims[1],\n      intercept: 0,\n      invert: false,\n      minPixelValue: dataRange[0],\n      maxPixelValue: dataRange[1],\n      sizeInBytes: pixelData.length * pixelData.BYTES_PER_ELEMENT,\n      slope: 1,\n      windowCenter: Math.round((dataRange[0] + dataRange[1]) / 2),\n      windowWidth: dataRange[1] - dataRange[0],\n      decodeTimeInMS: 0,\n      getPixelData: function getPixelData() {\n        return pixelData;\n      }\n    };\n    outData[0] = cornerstoneImage;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  imageId: 'default-image-id',\n  sliceIndex: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['imageId', 'sliceIndex']); // Object specific methods\n\n  macro.algo(publicAPI, model, 1, 1);\n  vtkImageDataToCornerstoneImage(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageDataToCornerstoneImage'); // ----------------------------------------------------------------------------\n\nvar vtkImageDataToCornerstoneImage$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkImageDataToCornerstoneImage$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkErrorMacro","vtkImageDataToCornerstoneImage","publicAPI","model","classHierarchy","push","requestData","inData","outData","input","spacing","getSpacing","dims","getDimensions","scalars","getPointData","getScalars","dataRange","getRange","rawData","getData","pixelData","data","offset","sliceIndex","BYTES_PER_ELEMENT","newTypedArray","getDataType","buffer","cornerstoneImage","imageId","color","getNumberOfComponents","columnPixelSpacing","columns","width","rowPixelSpacing","rows","height","intercept","invert","minPixelValue","maxPixelValue","sizeInBytes","length","slope","windowCenter","Math","round","windowWidth","decodeTimeInMS","getPixelData","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","algo","setGet","newInstance","vtkImageDataToCornerstoneImage$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/Cornerstone/ImageDataToCornerstoneImage.js"],"sourcesContent":["import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n// TODO:\n// - Support image stack\n// - Support slice orientation (see stack?)\n// - may need some data conversion\n// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n// ----------------------------------------------------------------------------\n// vtkImageDataToCornerstoneImage methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageDataToCornerstoneImage(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageDataToCornerstoneImage');\n\n  publicAPI.requestData = function (inData, outData) {\n    // implement requestData\n    var input = inData[0];\n\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    } // Retrieve output and volume data\n    // const origin = input.getOrigin();\n\n\n    var spacing = input.getSpacing();\n    var dims = input.getDimensions();\n    var scalars = input.getPointData().getScalars();\n    var dataRange = scalars.getRange(0);\n    var rawData = scalars.getData(); // FIXME probably need to expand to RGBA\n\n    var pixelData = null;\n\n    if (dims[2] === 1) {\n      pixelData = !scalars.data ? rawData : scalars.data;\n    } else {\n      var offset = model.sliceIndex * dims[0] * dims[1] * rawData.BYTES_PER_ELEMENT;\n      pixelData = macro.newTypedArray(scalars.getDataType(), rawData.buffer, offset, dims[0] * dims[1]);\n    }\n\n    var cornerstoneImage = {\n      imageId: model.imageId,\n      color: scalars.getNumberOfComponents() > 1,\n      columnPixelSpacing: spacing[0],\n      columns: dims[0],\n      width: dims[0],\n      rowPixelSpacing: spacing[1],\n      rows: dims[1],\n      height: dims[1],\n      intercept: 0,\n      invert: false,\n      minPixelValue: dataRange[0],\n      maxPixelValue: dataRange[1],\n      sizeInBytes: pixelData.length * pixelData.BYTES_PER_ELEMENT,\n      slope: 1,\n      windowCenter: Math.round((dataRange[0] + dataRange[1]) / 2),\n      windowWidth: dataRange[1] - dataRange[0],\n      decodeTimeInMS: 0,\n      getPixelData: function getPixelData() {\n        return pixelData;\n      }\n    };\n    outData[0] = cornerstoneImage;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  imageId: 'default-image-id',\n  sliceIndex: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['imageId', 'sliceIndex']); // Object specific methods\n\n  macro.algo(publicAPI, model, 1, 1);\n  vtkImageDataToCornerstoneImage(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageDataToCornerstoneImage'); // ----------------------------------------------------------------------------\n\nvar vtkImageDataToCornerstoneImage$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkImageDataToCornerstoneImage$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
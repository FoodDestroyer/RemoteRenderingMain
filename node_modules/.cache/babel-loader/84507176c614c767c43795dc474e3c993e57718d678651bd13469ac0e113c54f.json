{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkSpline1D from './Spline1D.js';\nimport { BoundaryCondition } from './Spline1D/Constants.js';\nvar VTK_EPSILON = 0.0001; // ----------------------------------------------------------------------------\n// vtkCardinalSpline1D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCardinalSpline1D(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkCardinalSpline1D'); // --------------------------------------------------------------------------\n\n  publicAPI.computeCloseCoefficients = function (size, work, x, y) {\n    if (!model.coefficients || model.coefficients.length !== 4 * size) {\n      model.coefficients = new Float32Array(4 * size);\n    }\n    var N = size - 1;\n    for (var k = 1; k < N; k++) {\n      var _xlk = x[k] - x[k - 1];\n      var _xlkp = x[k + 1] - x[k];\n      model.coefficients[4 * k + 0] = _xlkp;\n      model.coefficients[4 * k + 1] = 2 * (_xlkp + _xlk);\n      model.coefficients[4 * k + 2] = _xlk;\n      work[k] = 3.0 * (_xlkp * (y[k] - y[k - 1]) / _xlk + _xlk * (y[k + 1] - y[k]) / _xlkp);\n    }\n    var xlk = x[N] - x[N - 1];\n    var xlkp = x[1] - x[0];\n    model.coefficients[4 * N + 0] = xlkp;\n    model.coefficients[4 * N + 1] = 2 * (xlkp + xlk);\n    model.coefficients[4 * N + 2] = xlk;\n    work[N] = 3 * (xlkp * (y[N] - y[N - 1]) / xlk + xlk * (y[1] - y[0]) / xlkp);\n    var aN = model.coefficients[4 * N + 0];\n    var bN = model.coefficients[4 * N + 1];\n    var cN = model.coefficients[4 * N + 2];\n    var dN = work[N]; // solve resulting set of equations.\n\n    model.coefficients[4 * 0 + 2] = 0;\n    work[0] = 0;\n    model.coefficients[4 * 0 + 3] = 1;\n    for (var _k = 1; _k <= N; _k++) {\n      model.coefficients[4 * _k + 1] -= model.coefficients[4 * _k + 0] * model.coefficients[4 * (_k - 1) + 2];\n      model.coefficients[4 * _k + 2] = model.coefficients[4 * _k + 2] / model.coefficients[4 * _k + 1];\n      work[_k] = (work[_k] - model.coefficients[4 * _k + 0] * work[_k - 1]) / model.coefficients[4 * _k + 1];\n      model.coefficients[4 * _k + 3] = -model.coefficients[4 * _k + 0] * model.coefficients[4 * (_k - 1) + 3] / model.coefficients[4 * _k + 1];\n    }\n    model.coefficients[4 * N + 0] = 1;\n    model.coefficients[4 * N + 1] = 0;\n    for (var _k2 = N - 1; _k2 > 0; _k2--) {\n      model.coefficients[4 * _k2 + 0] = model.coefficients[4 * _k2 + 3] - model.coefficients[4 * _k2 + 2] * model.coefficients[4 * (_k2 + 1) + 0];\n      model.coefficients[4 * _k2 + 1] = work[_k2] - model.coefficients[4 * _k2 + 2] * model.coefficients[4 * (_k2 + 1) + 1];\n    }\n    work[0] = (dN - cN * model.coefficients[4 * 1 + 1] - aN * model.coefficients[4 * (N - 1) + 1]) / (bN + cN * model.coefficients[4 * 1 + 0] + aN * model.coefficients[4 * (N - 1) + 0]);\n    work[N] = work[0];\n    for (var _k3 = 1; _k3 < N; _k3++) {\n      work[_k3] = model.coefficients[4 * _k3 + 0] * work[N] + model.coefficients[4 * _k3 + 1];\n    } // the column vector work now contains the first\n    // derivative of the spline function at each joint.\n    // compute the coefficients of the cubic between\n    // each pair of joints.\n\n    for (var _k4 = 0; _k4 < N; _k4++) {\n      var b = x[_k4 + 1] - x[_k4];\n      model.coefficients[4 * _k4 + 0] = y[_k4];\n      model.coefficients[4 * _k4 + 1] = work[_k4];\n      model.coefficients[4 * _k4 + 2] = 3 * (y[_k4 + 1] - y[_k4]) / (b * b) - (work[_k4 + 1] + 2 * work[_k4]) / b;\n      model.coefficients[4 * _k4 + 3] = 2 * (y[_k4] - y[_k4 + 1]) / (b * b * b) + (work[_k4 + 1] + work[_k4]) / (b * b);\n    } // the coefficients of a fictitious nth cubic\n    // are the same as the coefficients in the first interval\n\n    model.coefficients[4 * N + 0] = y[N];\n    model.coefficients[4 * N + 1] = work[N];\n    model.coefficients[4 * N + 2] = model.coefficients[4 * 0 + 2];\n    model.coefficients[4 * N + 3] = model.coefficients[4 * 0 + 3];\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.computeOpenCoefficients = function (size, work, x, y) {\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    if (!model.coefficients || model.coefficients.length !== 4 * size) {\n      model.coefficients = new Float32Array(4 * size);\n    }\n    var N = size - 1; // develop constraint at leftmost point.\n\n    switch (options.leftConstraint) {\n      case BoundaryCondition.DERIVATIVE:\n        // desired slope at leftmost point is leftValue.\n        model.coefficients[4 * 0 + 1] = 1.0;\n        model.coefficients[4 * 0 + 2] = 0.0;\n        work[0] = options.leftValue;\n        break;\n      case BoundaryCondition.SECOND_DERIVATIVE:\n        // desired second derivative at leftmost point is leftValue.\n        model.coefficients[4 * 0 + 1] = 2.0;\n        model.coefficients[4 * 0 + 2] = 1.0;\n        work[0] = 3.0 * ((y[1] - y[0]) / (x[1] - x[0])) - 0.5 * (x[1] - x[0]) * options.leftValue;\n        break;\n      case BoundaryCondition.SECOND_DERIVATIVE_INTERIOR_POINT:\n        // desired second derivative at leftmost point is\n        // leftValue times second derivative at first interior point.\n        model.coefficients[4 * 0 + 1] = 2.0;\n        if (Math.abs(options.leftValue + 2) > VTK_EPSILON) {\n          model.coefficients[4 * 0 + 2] = 4.0 * ((0.5 + options.leftValue) / (2.0 + options.leftValue));\n          work[0] = 6.0 * ((1.0 + options.leftValue) / (2.0 + options.leftValue)) * ((y[1] - y[0]) / (x[1] - x[0]));\n        } else {\n          model.coefficients[4 * 0 + 2] = 0;\n          work[0] = 0;\n        }\n        break;\n      case BoundaryCondition.DEFAULT:\n      default:\n        // desired slope at leftmost point is derivative from two points\n        model.coefficients[4 * 0 + 1] = 1.0;\n        model.coefficients[4 * 0 + 2] = 0.0;\n        work[0] = y[2] - y[0];\n        break;\n    }\n    for (var k = 1; k < N; k++) {\n      var xlk = x[k] - x[k - 1];\n      var xlkp = x[k + 1] - x[k];\n      model.coefficients[4 * k + 0] = xlkp;\n      model.coefficients[4 * k + 1] = 2 * (xlkp + xlk);\n      model.coefficients[4 * k + 2] = xlk;\n      work[k] = 3.0 * (xlkp * (y[k] - y[k - 1]) / xlk + xlk * (y[k + 1] - y[k]) / xlkp);\n    } // develop constraint at rightmost point.\n\n    switch (options.rightConstraint) {\n      case BoundaryCondition.DERIVATIVE:\n        // desired slope at rightmost point is rightValue\n        model.coefficients[4 * N + 0] = 0.0;\n        model.coefficients[4 * N + 1] = 1.0;\n        work[N] = options.rightValue;\n        break;\n      case BoundaryCondition.SECOND_DERIVATIVE:\n        // desired second derivative at rightmost point is rightValue.\n        model.coefficients[4 * N + 0] = 1.0;\n        model.coefficients[4 * N + 1] = 2.0;\n        work[N] = 3.0 * ((y[N] - y[N - 1]) / (x[N] - x[N - 1])) + 0.5 * (x[N] - x[N - 1]) * options.rightValue;\n        break;\n      case BoundaryCondition.SECOND_DERIVATIVE_INTERIOR_POINT:\n        // desired second derivative at rightmost point is\n        // rightValue times second derivative at last interior point.\n        model.coefficients[4 * N + 1] = 2.0;\n        if (Math.abs(options.rightValue + 2) > VTK_EPSILON) {\n          model.coefficients[4 * N + 0] = 4.0 * ((0.5 + options.rightValue) / (2.0 + options.rightValue));\n          work[N] = 6.0 * ((1.0 + options.rightValue) / (2.0 + options.rightValue)) * ((y[N] - y[size - 2]) / (x[N] - x[size - 2]));\n        } else {\n          model.coefficients[4 * N + 0] = 0;\n          work[N] = 0;\n        }\n        break;\n      case BoundaryCondition.DEFAULT:\n      default:\n        // desired slope at rightmost point is derivative from two points\n        model.coefficients[4 * N + 0] = 0.0;\n        model.coefficients[4 * N + 1] = 1.0;\n        work[N] = y[N] - y[N - 2];\n        break;\n    } // solve resulting set of equations.\n\n    model.coefficients[4 * 0 + 2] /= model.coefficients[4 * 0 + 1];\n    work[0] /= model.coefficients[4 * N + 1];\n    model.coefficients[4 * N + 3] = 1;\n    for (var _k5 = 1; _k5 <= N; _k5++) {\n      model.coefficients[4 * _k5 + 1] -= model.coefficients[4 * _k5 + 0] * model.coefficients[4 * (_k5 - 1) + 2];\n      model.coefficients[4 * _k5 + 2] /= model.coefficients[4 * _k5 + 1];\n      work[_k5] = (work[_k5] - model.coefficients[4 * _k5 + 0] * work[_k5 - 1]) / model.coefficients[4 * _k5 + 1];\n    }\n    for (var _k6 = N - 1; _k6 >= 0; _k6--) {\n      work[_k6] -= model.coefficients[4 * _k6 + 2] * work[_k6 + 1];\n    } // the column vector work now contains the first\n    // derivative of the spline function at each joint.\n    // compute the coefficients of the cubic between\n    // each pair of joints.\n\n    for (var _k7 = 0; _k7 < N; _k7++) {\n      var b = x[_k7 + 1] - x[_k7];\n      model.coefficients[4 * _k7 + 0] = y[_k7];\n      model.coefficients[4 * _k7 + 1] = work[_k7];\n      model.coefficients[4 * _k7 + 2] = 3 * (y[_k7 + 1] - y[_k7]) / (b * b) - (work[_k7 + 1] + 2 * work[_k7]) / b;\n      model.coefficients[4 * _k7 + 3] = 2 * (y[_k7] - y[_k7 + 1]) / (b * b * b) + (work[_k7 + 1] + work[_k7]) / (b * b);\n    } // the coefficients of a fictitious nth cubic\n    // are the same as the coefficients in the first interval\n\n    model.coefficients[4 * N + 0] = y[N];\n    model.coefficients[4 * N + 1] = work[N];\n    model.coefficients[4 * N + 2] = model.coefficients[4 * 0 + 2];\n    model.coefficients[4 * N + 3] = model.coefficients[4 * 0 + 3];\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.getValue = function (intervalIndex, t) {\n    var t2 = t * t;\n    var t3 = t * t * t;\n    return model.coefficients[4 * intervalIndex + 3] * t3 + model.coefficients[4 * intervalIndex + 2] * t2 + model.coefficients[4 * intervalIndex + 1] * t + model.coefficients[4 * intervalIndex + 0];\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkSpline1D.extend(publicAPI, model, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  vtkCardinalSpline1D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCardinalSpline1D'); // ----------------------------------------------------------------------------\n\nvar vtkCardinalSpline1D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkCardinalSpline1D$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkSpline1D","BoundaryCondition","VTK_EPSILON","vtkCardinalSpline1D","publicAPI","model","classHierarchy","push","computeCloseCoefficients","size","work","x","y","coefficients","length","Float32Array","N","k","_xlk","_xlkp","xlk","xlkp","aN","bN","cN","dN","_k","_k2","_k3","_k4","b","computeOpenCoefficients","options","arguments","undefined","leftConstraint","DERIVATIVE","leftValue","SECOND_DERIVATIVE","SECOND_DERIVATIVE_INTERIOR_POINT","Math","abs","DEFAULT","rightConstraint","rightValue","_k5","_k6","_k7","getValue","intervalIndex","t","t2","t3","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","newInstance","vtkCardinalSpline1D$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/CardinalSpline1D.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkSpline1D from './Spline1D.js';\nimport { BoundaryCondition } from './Spline1D/Constants.js';\n\nvar VTK_EPSILON = 0.0001; // ----------------------------------------------------------------------------\n// vtkCardinalSpline1D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCardinalSpline1D(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkCardinalSpline1D'); // --------------------------------------------------------------------------\n\n  publicAPI.computeCloseCoefficients = function (size, work, x, y) {\n    if (!model.coefficients || model.coefficients.length !== 4 * size) {\n      model.coefficients = new Float32Array(4 * size);\n    }\n\n    var N = size - 1;\n\n    for (var k = 1; k < N; k++) {\n      var _xlk = x[k] - x[k - 1];\n\n      var _xlkp = x[k + 1] - x[k];\n\n      model.coefficients[4 * k + 0] = _xlkp;\n      model.coefficients[4 * k + 1] = 2 * (_xlkp + _xlk);\n      model.coefficients[4 * k + 2] = _xlk;\n      work[k] = 3.0 * (_xlkp * (y[k] - y[k - 1]) / _xlk + _xlk * (y[k + 1] - y[k]) / _xlkp);\n    }\n\n    var xlk = x[N] - x[N - 1];\n    var xlkp = x[1] - x[0];\n    model.coefficients[4 * N + 0] = xlkp;\n    model.coefficients[4 * N + 1] = 2 * (xlkp + xlk);\n    model.coefficients[4 * N + 2] = xlk;\n    work[N] = 3 * (xlkp * (y[N] - y[N - 1]) / xlk + xlk * (y[1] - y[0]) / xlkp);\n    var aN = model.coefficients[4 * N + 0];\n    var bN = model.coefficients[4 * N + 1];\n    var cN = model.coefficients[4 * N + 2];\n    var dN = work[N]; // solve resulting set of equations.\n\n    model.coefficients[4 * 0 + 2] = 0;\n    work[0] = 0;\n    model.coefficients[4 * 0 + 3] = 1;\n\n    for (var _k = 1; _k <= N; _k++) {\n      model.coefficients[4 * _k + 1] -= model.coefficients[4 * _k + 0] * model.coefficients[4 * (_k - 1) + 2];\n      model.coefficients[4 * _k + 2] = model.coefficients[4 * _k + 2] / model.coefficients[4 * _k + 1];\n      work[_k] = (work[_k] - model.coefficients[4 * _k + 0] * work[_k - 1]) / model.coefficients[4 * _k + 1];\n      model.coefficients[4 * _k + 3] = -model.coefficients[4 * _k + 0] * model.coefficients[4 * (_k - 1) + 3] / model.coefficients[4 * _k + 1];\n    }\n\n    model.coefficients[4 * N + 0] = 1;\n    model.coefficients[4 * N + 1] = 0;\n\n    for (var _k2 = N - 1; _k2 > 0; _k2--) {\n      model.coefficients[4 * _k2 + 0] = model.coefficients[4 * _k2 + 3] - model.coefficients[4 * _k2 + 2] * model.coefficients[4 * (_k2 + 1) + 0];\n      model.coefficients[4 * _k2 + 1] = work[_k2] - model.coefficients[4 * _k2 + 2] * model.coefficients[4 * (_k2 + 1) + 1];\n    }\n\n    work[0] = (dN - cN * model.coefficients[4 * 1 + 1] - aN * model.coefficients[4 * (N - 1) + 1]) / (bN + cN * model.coefficients[4 * 1 + 0] + aN * model.coefficients[4 * (N - 1) + 0]);\n    work[N] = work[0];\n\n    for (var _k3 = 1; _k3 < N; _k3++) {\n      work[_k3] = model.coefficients[4 * _k3 + 0] * work[N] + model.coefficients[4 * _k3 + 1];\n    } // the column vector work now contains the first\n    // derivative of the spline function at each joint.\n    // compute the coefficients of the cubic between\n    // each pair of joints.\n\n\n    for (var _k4 = 0; _k4 < N; _k4++) {\n      var b = x[_k4 + 1] - x[_k4];\n      model.coefficients[4 * _k4 + 0] = y[_k4];\n      model.coefficients[4 * _k4 + 1] = work[_k4];\n      model.coefficients[4 * _k4 + 2] = 3 * (y[_k4 + 1] - y[_k4]) / (b * b) - (work[_k4 + 1] + 2 * work[_k4]) / b;\n      model.coefficients[4 * _k4 + 3] = 2 * (y[_k4] - y[_k4 + 1]) / (b * b * b) + (work[_k4 + 1] + work[_k4]) / (b * b);\n    } // the coefficients of a fictitious nth cubic\n    // are the same as the coefficients in the first interval\n\n\n    model.coefficients[4 * N + 0] = y[N];\n    model.coefficients[4 * N + 1] = work[N];\n    model.coefficients[4 * N + 2] = model.coefficients[4 * 0 + 2];\n    model.coefficients[4 * N + 3] = model.coefficients[4 * 0 + 3];\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.computeOpenCoefficients = function (size, work, x, y) {\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    if (!model.coefficients || model.coefficients.length !== 4 * size) {\n      model.coefficients = new Float32Array(4 * size);\n    }\n\n    var N = size - 1; // develop constraint at leftmost point.\n\n    switch (options.leftConstraint) {\n      case BoundaryCondition.DERIVATIVE:\n        // desired slope at leftmost point is leftValue.\n        model.coefficients[4 * 0 + 1] = 1.0;\n        model.coefficients[4 * 0 + 2] = 0.0;\n        work[0] = options.leftValue;\n        break;\n\n      case BoundaryCondition.SECOND_DERIVATIVE:\n        // desired second derivative at leftmost point is leftValue.\n        model.coefficients[4 * 0 + 1] = 2.0;\n        model.coefficients[4 * 0 + 2] = 1.0;\n        work[0] = 3.0 * ((y[1] - y[0]) / (x[1] - x[0])) - 0.5 * (x[1] - x[0]) * options.leftValue;\n        break;\n\n      case BoundaryCondition.SECOND_DERIVATIVE_INTERIOR_POINT:\n        // desired second derivative at leftmost point is\n        // leftValue times second derivative at first interior point.\n        model.coefficients[4 * 0 + 1] = 2.0;\n\n        if (Math.abs(options.leftValue + 2) > VTK_EPSILON) {\n          model.coefficients[4 * 0 + 2] = 4.0 * ((0.5 + options.leftValue) / (2.0 + options.leftValue));\n          work[0] = 6.0 * ((1.0 + options.leftValue) / (2.0 + options.leftValue)) * ((y[1] - y[0]) / (x[1] - x[0]));\n        } else {\n          model.coefficients[4 * 0 + 2] = 0;\n          work[0] = 0;\n        }\n\n        break;\n\n      case BoundaryCondition.DEFAULT:\n      default:\n        // desired slope at leftmost point is derivative from two points\n        model.coefficients[4 * 0 + 1] = 1.0;\n        model.coefficients[4 * 0 + 2] = 0.0;\n        work[0] = y[2] - y[0];\n        break;\n    }\n\n    for (var k = 1; k < N; k++) {\n      var xlk = x[k] - x[k - 1];\n      var xlkp = x[k + 1] - x[k];\n      model.coefficients[4 * k + 0] = xlkp;\n      model.coefficients[4 * k + 1] = 2 * (xlkp + xlk);\n      model.coefficients[4 * k + 2] = xlk;\n      work[k] = 3.0 * (xlkp * (y[k] - y[k - 1]) / xlk + xlk * (y[k + 1] - y[k]) / xlkp);\n    } // develop constraint at rightmost point.\n\n\n    switch (options.rightConstraint) {\n      case BoundaryCondition.DERIVATIVE:\n        // desired slope at rightmost point is rightValue\n        model.coefficients[4 * N + 0] = 0.0;\n        model.coefficients[4 * N + 1] = 1.0;\n        work[N] = options.rightValue;\n        break;\n\n      case BoundaryCondition.SECOND_DERIVATIVE:\n        // desired second derivative at rightmost point is rightValue.\n        model.coefficients[4 * N + 0] = 1.0;\n        model.coefficients[4 * N + 1] = 2.0;\n        work[N] = 3.0 * ((y[N] - y[N - 1]) / (x[N] - x[N - 1])) + 0.5 * (x[N] - x[N - 1]) * options.rightValue;\n        break;\n\n      case BoundaryCondition.SECOND_DERIVATIVE_INTERIOR_POINT:\n        // desired second derivative at rightmost point is\n        // rightValue times second derivative at last interior point.\n        model.coefficients[4 * N + 1] = 2.0;\n\n        if (Math.abs(options.rightValue + 2) > VTK_EPSILON) {\n          model.coefficients[4 * N + 0] = 4.0 * ((0.5 + options.rightValue) / (2.0 + options.rightValue));\n          work[N] = 6.0 * ((1.0 + options.rightValue) / (2.0 + options.rightValue)) * ((y[N] - y[size - 2]) / (x[N] - x[size - 2]));\n        } else {\n          model.coefficients[4 * N + 0] = 0;\n          work[N] = 0;\n        }\n\n        break;\n\n      case BoundaryCondition.DEFAULT:\n      default:\n        // desired slope at rightmost point is derivative from two points\n        model.coefficients[4 * N + 0] = 0.0;\n        model.coefficients[4 * N + 1] = 1.0;\n        work[N] = y[N] - y[N - 2];\n        break;\n    } // solve resulting set of equations.\n\n\n    model.coefficients[4 * 0 + 2] /= model.coefficients[4 * 0 + 1];\n    work[0] /= model.coefficients[4 * N + 1];\n    model.coefficients[4 * N + 3] = 1;\n\n    for (var _k5 = 1; _k5 <= N; _k5++) {\n      model.coefficients[4 * _k5 + 1] -= model.coefficients[4 * _k5 + 0] * model.coefficients[4 * (_k5 - 1) + 2];\n      model.coefficients[4 * _k5 + 2] /= model.coefficients[4 * _k5 + 1];\n      work[_k5] = (work[_k5] - model.coefficients[4 * _k5 + 0] * work[_k5 - 1]) / model.coefficients[4 * _k5 + 1];\n    }\n\n    for (var _k6 = N - 1; _k6 >= 0; _k6--) {\n      work[_k6] -= model.coefficients[4 * _k6 + 2] * work[_k6 + 1];\n    } // the column vector work now contains the first\n    // derivative of the spline function at each joint.\n    // compute the coefficients of the cubic between\n    // each pair of joints.\n\n\n    for (var _k7 = 0; _k7 < N; _k7++) {\n      var b = x[_k7 + 1] - x[_k7];\n      model.coefficients[4 * _k7 + 0] = y[_k7];\n      model.coefficients[4 * _k7 + 1] = work[_k7];\n      model.coefficients[4 * _k7 + 2] = 3 * (y[_k7 + 1] - y[_k7]) / (b * b) - (work[_k7 + 1] + 2 * work[_k7]) / b;\n      model.coefficients[4 * _k7 + 3] = 2 * (y[_k7] - y[_k7 + 1]) / (b * b * b) + (work[_k7 + 1] + work[_k7]) / (b * b);\n    } // the coefficients of a fictitious nth cubic\n    // are the same as the coefficients in the first interval\n\n\n    model.coefficients[4 * N + 0] = y[N];\n    model.coefficients[4 * N + 1] = work[N];\n    model.coefficients[4 * N + 2] = model.coefficients[4 * 0 + 2];\n    model.coefficients[4 * N + 3] = model.coefficients[4 * 0 + 3];\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.getValue = function (intervalIndex, t) {\n    var t2 = t * t;\n    var t3 = t * t * t;\n    return model.coefficients[4 * intervalIndex + 3] * t3 + model.coefficients[4 * intervalIndex + 2] * t2 + model.coefficients[4 * intervalIndex + 1] * t + model.coefficients[4 * intervalIndex + 0];\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkSpline1D.extend(publicAPI, model, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  vtkCardinalSpline1D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCardinalSpline1D'); // ----------------------------------------------------------------------------\n\nvar vtkCardinalSpline1D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkCardinalSpline1D$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,iBAAiB,QAAQ,yBAAyB;AAE3D,IAAIC,WAAW,GAAG,MAAM,CAAC,CAAC;AAC1B;AACA;;AAEA,SAASC,mBAAmBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC7C;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;;EAElDH,SAAS,CAACI,wBAAwB,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAE;IAC/D,IAAI,CAACP,KAAK,CAACQ,YAAY,IAAIR,KAAK,CAACQ,YAAY,CAACC,MAAM,KAAK,CAAC,GAAGL,IAAI,EAAE;MACjEJ,KAAK,CAACQ,YAAY,GAAG,IAAIE,YAAY,CAAC,CAAC,GAAGN,IAAI,CAAC;IACjD;IAEA,IAAIO,CAAC,GAAGP,IAAI,GAAG,CAAC;IAEhB,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAE;MAC1B,IAAIC,IAAI,GAAGP,CAAC,CAACM,CAAC,CAAC,GAAGN,CAAC,CAACM,CAAC,GAAG,CAAC,CAAC;MAE1B,IAAIE,KAAK,GAAGR,CAAC,CAACM,CAAC,GAAG,CAAC,CAAC,GAAGN,CAAC,CAACM,CAAC,CAAC;MAE3BZ,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGI,CAAC,GAAG,CAAC,CAAC,GAAGE,KAAK;MACrCd,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIE,KAAK,GAAGD,IAAI,CAAC;MAClDb,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGI,CAAC,GAAG,CAAC,CAAC,GAAGC,IAAI;MACpCR,IAAI,CAACO,CAAC,CAAC,GAAG,GAAG,IAAIE,KAAK,IAAIP,CAAC,CAACK,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGC,IAAI,GAAGA,IAAI,IAAIN,CAAC,CAACK,CAAC,GAAG,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC;IACvF;IAEA,IAAIC,GAAG,GAAGT,CAAC,CAACK,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,GAAG,CAAC,CAAC;IACzB,IAAIK,IAAI,GAAGV,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IACtBN,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGK,IAAI;IACpChB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIK,IAAI,GAAGD,GAAG,CAAC;IAChDf,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGI,GAAG;IACnCV,IAAI,CAACM,CAAC,CAAC,GAAG,CAAC,IAAIK,IAAI,IAAIT,CAAC,CAACI,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGI,GAAG,GAAGA,GAAG,IAAIR,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGS,IAAI,CAAC;IAC3E,IAAIC,EAAE,GAAGjB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC;IACtC,IAAIO,EAAE,GAAGlB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC;IACtC,IAAIQ,EAAE,GAAGnB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC;IACtC,IAAIS,EAAE,GAAGf,IAAI,CAACM,CAAC,CAAC,CAAC,CAAC;;IAElBX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACjCH,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IACXL,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAEjC,KAAK,IAAIa,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAIV,CAAC,EAAEU,EAAE,EAAE,EAAE;MAC9BrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC,IAAIrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC,GAAGrB,KAAK,CAACQ,YAAY,CAAC,CAAC,IAAIa,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MACvGrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC,GAAGrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC,GAAGrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC;MAChGhB,IAAI,CAACgB,EAAE,CAAC,GAAG,CAAChB,IAAI,CAACgB,EAAE,CAAC,GAAGrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC,GAAGhB,IAAI,CAACgB,EAAE,GAAG,CAAC,CAAC,IAAIrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC;MACtGrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC,GAAG,CAACrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC,GAAGrB,KAAK,CAACQ,YAAY,CAAC,CAAC,IAAIa,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGrB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGa,EAAE,GAAG,CAAC,CAAC;IAC1I;IAEArB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACjCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAEjC,KAAK,IAAIW,GAAG,GAAGX,CAAC,GAAG,CAAC,EAAEW,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;MACpCtB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGc,GAAG,GAAG,CAAC,CAAC,GAAGtB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGc,GAAG,GAAG,CAAC,CAAC,GAAGtB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGc,GAAG,GAAG,CAAC,CAAC,GAAGtB,KAAK,CAACQ,YAAY,CAAC,CAAC,IAAIc,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3ItB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGc,GAAG,GAAG,CAAC,CAAC,GAAGjB,IAAI,CAACiB,GAAG,CAAC,GAAGtB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGc,GAAG,GAAG,CAAC,CAAC,GAAGtB,KAAK,CAACQ,YAAY,CAAC,CAAC,IAAIc,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACvH;IAEAjB,IAAI,CAAC,CAAC,CAAC,GAAG,CAACe,EAAE,GAAGD,EAAE,GAAGnB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGS,EAAE,GAAGjB,KAAK,CAACQ,YAAY,CAAC,CAAC,IAAIG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAKO,EAAE,GAAGC,EAAE,GAAGnB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGS,EAAE,GAAGjB,KAAK,CAACQ,YAAY,CAAC,CAAC,IAAIG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrLN,IAAI,CAACM,CAAC,CAAC,GAAGN,IAAI,CAAC,CAAC,CAAC;IAEjB,KAAK,IAAIkB,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGZ,CAAC,EAAEY,GAAG,EAAE,EAAE;MAChClB,IAAI,CAACkB,GAAG,CAAC,GAAGvB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGe,GAAG,GAAG,CAAC,CAAC,GAAGlB,IAAI,CAACM,CAAC,CAAC,GAAGX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGe,GAAG,GAAG,CAAC,CAAC;IACzF,CAAC,CAAC;IACF;IACA;IACA;;IAGA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGb,CAAC,EAAEa,GAAG,EAAE,EAAE;MAChC,IAAIC,CAAC,GAAGnB,CAAC,CAACkB,GAAG,GAAG,CAAC,CAAC,GAAGlB,CAAC,CAACkB,GAAG,CAAC;MAC3BxB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgB,GAAG,GAAG,CAAC,CAAC,GAAGjB,CAAC,CAACiB,GAAG,CAAC;MACxCxB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgB,GAAG,GAAG,CAAC,CAAC,GAAGnB,IAAI,CAACmB,GAAG,CAAC;MAC3CxB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgB,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIjB,CAAC,CAACiB,GAAG,GAAG,CAAC,CAAC,GAAGjB,CAAC,CAACiB,GAAG,CAAC,CAAC,IAAIC,CAAC,GAAGA,CAAC,CAAC,GAAG,CAACpB,IAAI,CAACmB,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGnB,IAAI,CAACmB,GAAG,CAAC,IAAIC,CAAC;MAC3GzB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgB,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIjB,CAAC,CAACiB,GAAG,CAAC,GAAGjB,CAAC,CAACiB,GAAG,GAAG,CAAC,CAAC,CAAC,IAAIC,CAAC,GAAGA,CAAC,GAAGA,CAAC,CAAC,GAAG,CAACpB,IAAI,CAACmB,GAAG,GAAG,CAAC,CAAC,GAAGnB,IAAI,CAACmB,GAAG,CAAC,KAAKC,CAAC,GAAGA,CAAC,CAAC;IACnH,CAAC,CAAC;IACF;;IAGAzB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC;IACpCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGN,IAAI,CAACM,CAAC,CAAC;IACvCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7DR,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC/D,CAAC,CAAC,CAAC;;EAGHT,SAAS,CAAC2B,uBAAuB,GAAG,UAAUtB,IAAI,EAAEC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAE;IAC9D,IAAIoB,OAAO,GAAGC,SAAS,CAACnB,MAAM,GAAG,CAAC,IAAImB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAEpF,IAAI,CAAC5B,KAAK,CAACQ,YAAY,IAAIR,KAAK,CAACQ,YAAY,CAACC,MAAM,KAAK,CAAC,GAAGL,IAAI,EAAE;MACjEJ,KAAK,CAACQ,YAAY,GAAG,IAAIE,YAAY,CAAC,CAAC,GAAGN,IAAI,CAAC;IACjD;IAEA,IAAIO,CAAC,GAAGP,IAAI,GAAG,CAAC,CAAC,CAAC;;IAElB,QAAQuB,OAAO,CAACG,cAAc;MAC5B,KAAKlC,iBAAiB,CAACmC,UAAU;QAC/B;QACA/B,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCR,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCH,IAAI,CAAC,CAAC,CAAC,GAAGsB,OAAO,CAACK,SAAS;QAC3B;MAEF,KAAKpC,iBAAiB,CAACqC,iBAAiB;QACtC;QACAjC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCR,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCH,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAACE,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGqB,OAAO,CAACK,SAAS;QACzF;MAEF,KAAKpC,iBAAiB,CAACsC,gCAAgC;QACrD;QACA;QACAlC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QAEnC,IAAI2B,IAAI,CAACC,GAAG,CAACT,OAAO,CAACK,SAAS,GAAG,CAAC,CAAC,GAAGnC,WAAW,EAAE;UACjDG,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAGmB,OAAO,CAACK,SAAS,KAAK,GAAG,GAAGL,OAAO,CAACK,SAAS,CAAC,CAAC;UAC7F3B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAGsB,OAAO,CAACK,SAAS,KAAK,GAAG,GAAGL,OAAO,CAACK,SAAS,CAAC,CAAC,IAAI,CAACzB,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3G,CAAC,MAAM;UACLN,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACjCH,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;QACb;QAEA;MAEF,KAAKT,iBAAiB,CAACyC,OAAO;MAC9B;QACE;QACArC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCR,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCH,IAAI,CAAC,CAAC,CAAC,GAAGE,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;QACrB;IACJ;IAEA,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAE;MAC1B,IAAIG,GAAG,GAAGT,CAAC,CAACM,CAAC,CAAC,GAAGN,CAAC,CAACM,CAAC,GAAG,CAAC,CAAC;MACzB,IAAII,IAAI,GAAGV,CAAC,CAACM,CAAC,GAAG,CAAC,CAAC,GAAGN,CAAC,CAACM,CAAC,CAAC;MAC1BZ,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGI,CAAC,GAAG,CAAC,CAAC,GAAGI,IAAI;MACpChB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAII,IAAI,GAAGD,GAAG,CAAC;MAChDf,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGI,CAAC,GAAG,CAAC,CAAC,GAAGG,GAAG;MACnCV,IAAI,CAACO,CAAC,CAAC,GAAG,GAAG,IAAII,IAAI,IAAIT,CAAC,CAACK,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGG,GAAG,GAAGA,GAAG,IAAIR,CAAC,CAACK,CAAC,GAAG,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC,CAAC,GAAGI,IAAI,CAAC;IACnF,CAAC,CAAC;;IAGF,QAAQW,OAAO,CAACW,eAAe;MAC7B,KAAK1C,iBAAiB,CAACmC,UAAU;QAC/B;QACA/B,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCN,IAAI,CAACM,CAAC,CAAC,GAAGgB,OAAO,CAACY,UAAU;QAC5B;MAEF,KAAK3C,iBAAiB,CAACqC,iBAAiB;QACtC;QACAjC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCN,IAAI,CAACM,CAAC,CAAC,GAAG,GAAG,IAAI,CAACJ,CAAC,CAACI,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,GAAG,CAAC,CAAC,KAAKL,CAAC,CAACK,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIL,CAAC,CAACK,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGgB,OAAO,CAACY,UAAU;QACtG;MAEF,KAAK3C,iBAAiB,CAACsC,gCAAgC;QACrD;QACA;QACAlC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QAEnC,IAAIwB,IAAI,CAACC,GAAG,CAACT,OAAO,CAACY,UAAU,GAAG,CAAC,CAAC,GAAG1C,WAAW,EAAE;UAClDG,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAGgB,OAAO,CAACY,UAAU,KAAK,GAAG,GAAGZ,OAAO,CAACY,UAAU,CAAC,CAAC;UAC/FlC,IAAI,CAACM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAGgB,OAAO,CAACY,UAAU,KAAK,GAAG,GAAGZ,OAAO,CAACY,UAAU,CAAC,CAAC,IAAI,CAAChC,CAAC,CAACI,CAAC,CAAC,GAAGJ,CAAC,CAACH,IAAI,GAAG,CAAC,CAAC,KAAKE,CAAC,CAACK,CAAC,CAAC,GAAGL,CAAC,CAACF,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QAC3H,CAAC,MAAM;UACLJ,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACjCN,IAAI,CAACM,CAAC,CAAC,GAAG,CAAC;QACb;QAEA;MAEF,KAAKf,iBAAiB,CAACyC,OAAO;MAC9B;QACE;QACArC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnCN,IAAI,CAACM,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,GAAG,CAAC,CAAC;QACzB;IACJ,CAAC,CAAC;;IAGFX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAIR,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9DH,IAAI,CAAC,CAAC,CAAC,IAAIL,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC;IACxCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAEjC,KAAK,IAAI6B,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAI7B,CAAC,EAAE6B,GAAG,EAAE,EAAE;MACjCxC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgC,GAAG,GAAG,CAAC,CAAC,IAAIxC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgC,GAAG,GAAG,CAAC,CAAC,GAAGxC,KAAK,CAACQ,YAAY,CAAC,CAAC,IAAIgC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1GxC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgC,GAAG,GAAG,CAAC,CAAC,IAAIxC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgC,GAAG,GAAG,CAAC,CAAC;MAClEnC,IAAI,CAACmC,GAAG,CAAC,GAAG,CAACnC,IAAI,CAACmC,GAAG,CAAC,GAAGxC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgC,GAAG,GAAG,CAAC,CAAC,GAAGnC,IAAI,CAACmC,GAAG,GAAG,CAAC,CAAC,IAAIxC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGgC,GAAG,GAAG,CAAC,CAAC;IAC7G;IAEA,KAAK,IAAIC,GAAG,GAAG9B,CAAC,GAAG,CAAC,EAAE8B,GAAG,IAAI,CAAC,EAAEA,GAAG,EAAE,EAAE;MACrCpC,IAAI,CAACoC,GAAG,CAAC,IAAIzC,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGiC,GAAG,GAAG,CAAC,CAAC,GAAGpC,IAAI,CAACoC,GAAG,GAAG,CAAC,CAAC;IAC9D,CAAC,CAAC;IACF;IACA;IACA;;IAGA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG/B,CAAC,EAAE+B,GAAG,EAAE,EAAE;MAChC,IAAIjB,CAAC,GAAGnB,CAAC,CAACoC,GAAG,GAAG,CAAC,CAAC,GAAGpC,CAAC,CAACoC,GAAG,CAAC;MAC3B1C,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGkC,GAAG,GAAG,CAAC,CAAC,GAAGnC,CAAC,CAACmC,GAAG,CAAC;MACxC1C,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGkC,GAAG,GAAG,CAAC,CAAC,GAAGrC,IAAI,CAACqC,GAAG,CAAC;MAC3C1C,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGkC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAInC,CAAC,CAACmC,GAAG,GAAG,CAAC,CAAC,GAAGnC,CAAC,CAACmC,GAAG,CAAC,CAAC,IAAIjB,CAAC,GAAGA,CAAC,CAAC,GAAG,CAACpB,IAAI,CAACqC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGrC,IAAI,CAACqC,GAAG,CAAC,IAAIjB,CAAC;MAC3GzB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGkC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAInC,CAAC,CAACmC,GAAG,CAAC,GAAGnC,CAAC,CAACmC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAIjB,CAAC,GAAGA,CAAC,GAAGA,CAAC,CAAC,GAAG,CAACpB,IAAI,CAACqC,GAAG,GAAG,CAAC,CAAC,GAAGrC,IAAI,CAACqC,GAAG,CAAC,KAAKjB,CAAC,GAAGA,CAAC,CAAC;IACnH,CAAC,CAAC;IACF;;IAGAzB,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC;IACpCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGN,IAAI,CAACM,CAAC,CAAC;IACvCX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7DR,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,CAAC,GAAGX,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC/D,CAAC,CAAC,CAAC;;EAGHT,SAAS,CAAC4C,QAAQ,GAAG,UAAUC,aAAa,EAAEC,CAAC,EAAE;IAC/C,IAAIC,EAAE,GAAGD,CAAC,GAAGA,CAAC;IACd,IAAIE,EAAE,GAAGF,CAAC,GAAGA,CAAC,GAAGA,CAAC;IAClB,OAAO7C,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGoC,aAAa,GAAG,CAAC,CAAC,GAAGG,EAAE,GAAG/C,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGoC,aAAa,GAAG,CAAC,CAAC,GAAGE,EAAE,GAAG9C,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGoC,aAAa,GAAG,CAAC,CAAC,GAAGC,CAAC,GAAG7C,KAAK,CAACQ,YAAY,CAAC,CAAC,GAAGoC,aAAa,GAAG,CAAC,CAAC;EACpM,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAII,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;;AAEzB,SAASC,MAAMA,CAAClD,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIkD,aAAa,GAAGtB,SAAS,CAACnB,MAAM,GAAG,CAAC,IAAImB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FuB,MAAM,CAACC,MAAM,CAACpD,KAAK,EAAEgD,cAAc,EAAEE,aAAa,CAAC;EACnDvD,WAAW,CAACsD,MAAM,CAAClD,SAAS,EAAEC,KAAK,EAAEkD,aAAa,CAAC,CAAC,CAAC;;EAErDxD,KAAK,CAAC2D,GAAG,CAACtD,SAAS,EAAEC,KAAK,CAAC;EAC3BF,mBAAmB,CAACC,SAAS,EAAEC,KAAK,CAAC;AACvC,CAAC,CAAC;;AAEF,IAAIsD,WAAW,GAAG5D,KAAK,CAAC4D,WAAW,CAACL,MAAM,EAAE,qBAAqB,CAAC,CAAC,CAAC;;AAEpE,IAAIM,qBAAqB,GAAG;EAC1BD,WAAW,EAAEA,WAAW;EACxBL,MAAM,EAAEA;AACV,CAAC;AAED,SAASM,qBAAqB,IAAIC,OAAO,EAAEP,MAAM,EAAEK,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
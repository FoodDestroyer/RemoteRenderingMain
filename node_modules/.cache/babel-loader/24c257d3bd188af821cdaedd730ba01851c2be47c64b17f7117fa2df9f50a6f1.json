{"ast":null,"code":"var _jsxFileName = \"/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js\";\nimport React, { Component } from 'react';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\nimport vtkHttpSceneLoader from '@kitware/vtk.js/IO/Core/HttpSceneLoader';\nimport vtkVolumeController from '@kitware/vtk.js/Interaction/UI/VolumeController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RemoteRendering extends Component {\n  constructor(props) {\n    super(props);\n    this.fullScreenRenderer = null;\n  }\n  componentDidMount() {\n    // Create VTK.js full-screen renderer\n    const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance();\n    this.fullScreenRenderer = fullScreenRenderer;\n\n    // Initialize WebSocket connection to VTK server\n    const wsClient = vtkWSLinkClient.newInstance();\n    wsClient.setServerUrl('ws://localhost:7500/ws');\n    wsClient.begin();\n\n    // Create volume controller\n    const volumeController = vtkVolumeController.newInstance({\n      renderWindow: fullScreenRenderer.getRenderWindow(),\n      wsLink: wsClient,\n      useShadow: true\n    });\n\n    // Load the remote scene\n    const sceneLoader = vtkHttpSceneLoader.newInstance({\n      wsLink: wsClient\n    });\n    sceneLoader.setRenderer(fullScreenRenderer.getRenderer());\n    sceneLoader.setController(volumeController);\n    sceneLoader.loadScene();\n\n    // Set mouse interaction style\n    fullScreenRenderer.setInteractorStyle(null);\n\n    // Update the state to trigger re-render\n    this.setState({});\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"vtkContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default RemoteRendering;","map":{"version":3,"names":["React","Component","vtkFullScreenRenderWindow","vtkWSLinkClient","vtkHttpSceneLoader","vtkVolumeController","jsxDEV","_jsxDEV","RemoteRendering","constructor","props","fullScreenRenderer","componentDidMount","newInstance","wsClient","setServerUrl","begin","volumeController","renderWindow","getRenderWindow","wsLink","useShadow","sceneLoader","setRenderer","getRenderer","setController","loadScene","setInteractorStyle","setState","render","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js"],"sourcesContent":["import React, { Component } from 'react';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\nimport vtkHttpSceneLoader from '@kitware/vtk.js/IO/Core/HttpSceneLoader';\nimport vtkVolumeController from '@kitware/vtk.js/Interaction/UI/VolumeController';\n\nclass RemoteRendering extends Component {\n  constructor(props) {\n    super(props);\n    this.fullScreenRenderer = null;\n  }\n\n  componentDidMount() {\n    // Create VTK.js full-screen renderer\n    const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance();\n    this.fullScreenRenderer = fullScreenRenderer;\n\n    // Initialize WebSocket connection to VTK server\n    const wsClient = vtkWSLinkClient.newInstance();\n    wsClient.setServerUrl('ws://localhost:7500/ws');\n    wsClient.begin();\n\n    // Create volume controller\n    const volumeController = vtkVolumeController.newInstance({\n      renderWindow: fullScreenRenderer.getRenderWindow(),\n      wsLink: wsClient,\n      useShadow: true,\n    });\n\n    // Load the remote scene\n    const sceneLoader = vtkHttpSceneLoader.newInstance({ wsLink: wsClient });\n    sceneLoader.setRenderer(fullScreenRenderer.getRenderer());\n    sceneLoader.setController(volumeController);\n\n    sceneLoader.loadScene();\n\n    // Set mouse interaction style\n    fullScreenRenderer.setInteractorStyle(null);\n\n    // Update the state to trigger re-render\n    this.setState({});\n  }\n\n  render() {\n    return <div id=\"vtkContainer\" />;\n  }\n}\n\nexport default RemoteRendering;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,yBAAyB,MAAM,uDAAuD;AAC7F,OAAOC,eAAe,MAAM,sCAAsC;AAClE,OAAOC,kBAAkB,MAAM,yCAAyC;AACxE,OAAOC,mBAAmB,MAAM,iDAAiD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,MAAMC,eAAe,SAASP,SAAS,CAAC;EACtCQ,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAChC;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMD,kBAAkB,GAAGT,yBAAyB,CAACW,WAAW,CAAC,CAAC;IAClE,IAAI,CAACF,kBAAkB,GAAGA,kBAAkB;;IAE5C;IACA,MAAMG,QAAQ,GAAGX,eAAe,CAACU,WAAW,CAAC,CAAC;IAC9CC,QAAQ,CAACC,YAAY,CAAC,wBAAwB,CAAC;IAC/CD,QAAQ,CAACE,KAAK,CAAC,CAAC;;IAEhB;IACA,MAAMC,gBAAgB,GAAGZ,mBAAmB,CAACQ,WAAW,CAAC;MACvDK,YAAY,EAAEP,kBAAkB,CAACQ,eAAe,CAAC,CAAC;MAClDC,MAAM,EAAEN,QAAQ;MAChBO,SAAS,EAAE;IACb,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAW,GAAGlB,kBAAkB,CAACS,WAAW,CAAC;MAAEO,MAAM,EAAEN;IAAS,CAAC,CAAC;IACxEQ,WAAW,CAACC,WAAW,CAACZ,kBAAkB,CAACa,WAAW,CAAC,CAAC,CAAC;IACzDF,WAAW,CAACG,aAAa,CAACR,gBAAgB,CAAC;IAE3CK,WAAW,CAACI,SAAS,CAAC,CAAC;;IAEvB;IACAf,kBAAkB,CAACgB,kBAAkB,CAAC,IAAI,CAAC;;IAE3C;IACA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnB;EAEAC,MAAMA,CAAA,EAAG;IACP,oBAAOtB,OAAA;MAAKuB,EAAE,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClC;AACF;AAEA,eAAe1B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nvar vtkErrorMacro = macro.vtkErrorMacro; // prettier-ignore\n\nvar BOUNDS_MAP = [0, 2, 4,\n// pt 0\n1, 2, 4,\n// pt 1\n0, 3, 4,\n// pt 2\n1, 3, 4,\n// pt 3\n0, 2, 5,\n// pt 4\n1, 2, 5,\n// pt 5\n0, 3, 5,\n// pt 6\n1, 3, 5 // pt 7\n]; // prettier-ignore\n\nvar LINE_ARRAY = [2, 0, 1, 2, 2, 3, 2, 4, 5, 2, 6, 7, 2, 0, 2, 2, 1, 3, 2, 4, 6, 2, 5, 7, 2, 0, 4, 2, 1, 5, 2, 2, 6, 2, 3, 7]; // ----------------------------------------------------------------------------\n// vtkOutlineFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOutlineFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOutlineFilter');\n  publicAPI.requestData = function (inData, outData) {\n    // implement requestData\n    var input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    var bounds = input.getBounds();\n    var output = vtkPolyData.newInstance();\n    output.getPoints().setData(Float32Array.from(BOUNDS_MAP.map(function (idx) {\n      return bounds[idx];\n    })), 3);\n    output.getLines().setData(Uint16Array.from(LINE_ARRAY));\n    outData[0] = output;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1); // Object specific methods\n\n  vtkOutlineFilter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOutlineFilter'); // ----------------------------------------------------------------------------\n\nvar vtkOutlineFilter$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  BOUNDS_MAP: BOUNDS_MAP,\n  LINE_ARRAY: LINE_ARRAY\n};\nexport { BOUNDS_MAP, LINE_ARRAY, vtkOutlineFilter$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkPolyData","vtkErrorMacro","BOUNDS_MAP","LINE_ARRAY","vtkOutlineFilter","publicAPI","model","classHierarchy","push","requestData","inData","outData","input","bounds","getBounds","output","newInstance","getPoints","setData","Float32Array","from","map","idx","getLines","Uint16Array","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","algo","vtkOutlineFilter$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/General/OutlineFilter.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // prettier-ignore\n\nvar BOUNDS_MAP = [0, 2, 4, // pt 0\n1, 2, 4, // pt 1\n0, 3, 4, // pt 2\n1, 3, 4, // pt 3\n0, 2, 5, // pt 4\n1, 2, 5, // pt 5\n0, 3, 5, // pt 6\n1, 3, 5 // pt 7\n]; // prettier-ignore\n\nvar LINE_ARRAY = [2, 0, 1, 2, 2, 3, 2, 4, 5, 2, 6, 7, 2, 0, 2, 2, 1, 3, 2, 4, 6, 2, 5, 7, 2, 0, 4, 2, 1, 5, 2, 2, 6, 2, 3, 7]; // ----------------------------------------------------------------------------\n// vtkOutlineFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOutlineFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOutlineFilter');\n\n  publicAPI.requestData = function (inData, outData) {\n    // implement requestData\n    var input = inData[0];\n\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n\n    var bounds = input.getBounds();\n    var output = vtkPolyData.newInstance();\n    output.getPoints().setData(Float32Array.from(BOUNDS_MAP.map(function (idx) {\n      return bounds[idx];\n    })), 3);\n    output.getLines().setData(Uint16Array.from(LINE_ARRAY));\n    outData[0] = output;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1); // Object specific methods\n\n  vtkOutlineFilter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOutlineFilter'); // ----------------------------------------------------------------------------\n\nvar vtkOutlineFilter$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  BOUNDS_MAP: BOUNDS_MAP,\n  LINE_ARRAY: LINE_ARRAY\n};\n\nexport { BOUNDS_MAP, LINE_ARRAY, vtkOutlineFilter$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
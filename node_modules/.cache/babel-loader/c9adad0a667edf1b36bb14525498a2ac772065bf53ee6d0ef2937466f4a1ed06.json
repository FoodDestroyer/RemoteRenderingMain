{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\nimport Constants from './ImageResliceMapper/Constants.js';\nimport macro from '../../macros.js';\nimport vtkAbstractImageMapper from './AbstractImageMapper.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar SlabTypes = Constants.SlabTypes;\nvar staticOffsetAPI = CoincidentTopologyHelper.staticOffsetAPI,\n  otherStaticMethods = CoincidentTopologyHelper.otherStaticMethods; // ----------------------------------------------------------------------------\n// vtkImageResliceMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageResliceMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageResliceMapper');\n  publicAPI.getBounds = function () {\n    var bds = _toConsumableArray(vtkBoundingBox.INIT_BOUNDS);\n    var image = publicAPI.getInputData();\n    if (publicAPI.getSlicePolyData()) {\n      bds = publicAPI.getSlicePolyData().getBounds();\n    } else if (image) {\n      bds = image.getBounds();\n      if (publicAPI.getSlicePlane()) {\n        vtkBoundingBox.cutWithPlane(bds, publicAPI.getSlicePlane().getOrigin(), publicAPI.getSlicePlane().getNormal());\n      }\n    }\n    return bds;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  slabThickness: 0.0,\n  slabTrapezoidIntegration: 0,\n  slabType: SlabTypes.MEAN,\n  slicePlane: null,\n  slicePolyData: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkAbstractImageMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['slabThickness', 'slabTrapezoidIntegration', 'slabType', 'slicePlane', 'slicePolyData']);\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model); // Object methods\n\n  vtkImageResliceMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageResliceMapper'); // ----------------------------------------------------------------------------\n\nvar vtkImageResliceMapper$1 = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, staticOffsetAPI), otherStaticMethods);\nexport { vtkImageResliceMapper$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","_toConsumableArray","CoincidentTopologyHelper","Constants","macro","vtkAbstractImageMapper","vtkBoundingBox","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","SlabTypes","staticOffsetAPI","otherStaticMethods","vtkImageResliceMapper","publicAPI","model","classHierarchy","getBounds","bds","INIT_BOUNDS","image","getInputData","getSlicePolyData","getSlicePlane","cutWithPlane","getOrigin","getNormal","DEFAULT_VALUES","slabThickness","slabTrapezoidIntegration","slabType","MEAN","slicePlane","slicePolyData","extend","initialValues","undefined","assign","setGet","implementCoincidentTopologyMethods","newInstance","vtkImageResliceMapper$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/ImageResliceMapper.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\nimport Constants from './ImageResliceMapper/Constants.js';\nimport macro from '../../macros.js';\nimport vtkAbstractImageMapper from './AbstractImageMapper.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar SlabTypes = Constants.SlabTypes;\nvar staticOffsetAPI = CoincidentTopologyHelper.staticOffsetAPI,\n    otherStaticMethods = CoincidentTopologyHelper.otherStaticMethods; // ----------------------------------------------------------------------------\n// vtkImageResliceMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageResliceMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageResliceMapper');\n\n  publicAPI.getBounds = function () {\n    var bds = _toConsumableArray(vtkBoundingBox.INIT_BOUNDS);\n\n    var image = publicAPI.getInputData();\n\n    if (publicAPI.getSlicePolyData()) {\n      bds = publicAPI.getSlicePolyData().getBounds();\n    } else if (image) {\n      bds = image.getBounds();\n\n      if (publicAPI.getSlicePlane()) {\n        vtkBoundingBox.cutWithPlane(bds, publicAPI.getSlicePlane().getOrigin(), publicAPI.getSlicePlane().getNormal());\n      }\n    }\n\n    return bds;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  slabThickness: 0.0,\n  slabTrapezoidIntegration: 0,\n  slabType: SlabTypes.MEAN,\n  slicePlane: null,\n  slicePolyData: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkAbstractImageMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['slabThickness', 'slabTrapezoidIntegration', 'slabType', 'slicePlane', 'slicePolyData']);\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model); // Object methods\n\n  vtkImageResliceMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageResliceMapper'); // ----------------------------------------------------------------------------\n\nvar vtkImageResliceMapper$1 = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, staticOffsetAPI), otherStaticMethods);\n\nexport { vtkImageResliceMapper$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
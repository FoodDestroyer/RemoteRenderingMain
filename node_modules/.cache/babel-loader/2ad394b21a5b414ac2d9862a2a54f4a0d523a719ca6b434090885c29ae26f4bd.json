{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction generateCoordinates(origin, dimensions, spacing) {\n  var coordinates = new Float64Array(dimensions[0] * dimensions[1] * dimensions[2] * 3);\n  var offset = 0;\n  for (var k = 0; k < dimensions[2]; k++) {\n    var z = origin[2] + spacing[2] * k;\n    for (var j = 0; j < dimensions[1]; j++) {\n      var y = origin[1] + spacing[1] * j;\n      for (var i = 0; i < dimensions[0]; i++) {\n        var x = origin[0] + spacing[0] * i;\n        coordinates[offset++] = x;\n        coordinates[offset++] = y;\n        coordinates[offset++] = z;\n      }\n    }\n  }\n  return coordinates;\n} // ----------------------------------------------------------------------------\n// vtkSLICSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSLICSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSLICSource');\n  publicAPI.addCluster = function (centerX, centerY, centerZ, fnConst, fnDfDx, fnDfDy, fnDfDz) {\n    var id = model.clusters.length;\n    model.clusters.push(new Float64Array([centerX, centerY, centerZ, fnConst, fnDfDx, fnDfDy, fnDfDz]));\n    publicAPI.modified();\n    return id;\n  };\n  publicAPI.removeCluster = function (id) {\n    model.clusters.splice(id, 1);\n    publicAPI.modified();\n  };\n  publicAPI.removeAllClusters = function () {\n    model.clusters = [];\n    publicAPI.modified();\n  };\n  publicAPI.updateCluster = function (id, centerX, centerY, centerZ, fnConst, fnDfDx, fnDfDy, fnDfDz) {\n    if (!model.clusters[id]) {\n      model.clusters[id] = new Float64Array(7);\n    }\n    model.clusters[id][0] = centerX;\n    model.clusters[id][1] = centerY;\n    model.clusters[id][2] = centerZ;\n    model.clusters[id][3] = fnConst;\n    model.clusters[id][4] = fnDfDx;\n    model.clusters[id][5] = fnDfDy;\n    model.clusters[id][6] = fnDfDz;\n    publicAPI.modified();\n  };\n  publicAPI.getNumberOfClusters = function () {\n    return model.clusters.length;\n  };\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    var dataSize = model.dimensions[0] * model.dimensions[1] * model.dimensions[2];\n    var imageData = vtkImageData.newInstance();\n    imageData.setSpacing.apply(imageData, _toConsumableArray(model.spacing));\n    imageData.setExtent(0, model.dimensions[0] - 1, 0, model.dimensions[1] - 1, 0, model.dimensions[2] - 1);\n    imageData.setOrigin.apply(imageData, _toConsumableArray(model.origin)); // Pixel centers\n\n    var centers = generateCoordinates(model.origin, model.dimensions, model.spacing); // Fill clusterIdxValues\n\n    var nbBytes = (model.clusters.length < 256 ? 8 : 0) || (model.clusters.length < 65536 ? 16 : 32);\n    var clusterIdxValues = macro.newTypedArray(\"Uint\".concat(nbBytes, \"Array\"), dataSize);\n    var _loop = function _loop(i) {\n      var clusterDistance = Number.MAX_VALUE;\n      model.clusters.forEach(function (cluster, idx) {\n        var dist = (cluster[0] - centers[i * 3]) * (cluster[0] - centers[i * 3]) + (cluster[1] - centers[i * 3 + 1]) * (cluster[1] - centers[i * 3 + 1]) + (cluster[2] - centers[i * 3 + 2]) * (cluster[2] - centers[i * 3 + 2]);\n        if (dist < clusterDistance) {\n          clusterDistance = dist;\n          clusterIdxValues[i] = idx;\n        }\n      });\n    };\n    for (var i = 0; i < dataSize; i++) {\n      _loop(i);\n    }\n    var clusters = vtkDataArray.newInstance({\n      name: model.clusterArrayName,\n      numberOfComponents: 1,\n      values: clusterIdxValues\n    });\n    imageData.getPointData().addArray(clusters); // Fill scalarValues\n\n    var scalarValues = new Float32Array(dataSize);\n    for (var _i = 0; _i < dataSize; _i++) {\n      var cluster = model.clusters[clusterIdxValues[_i]];\n      scalarValues[_i] = cluster[3] + cluster[4] * (centers[_i * 3 + 0] - cluster[0]) + cluster[5] * (centers[_i * 3 + 1] - cluster[1]) + cluster[6] * (centers[_i * 3 + 2] - cluster[2]);\n    }\n    var scalars = vtkDataArray.newInstance({\n      name: model.scalarArrayName,\n      numberOfComponents: 1,\n      values: scalarValues\n    });\n    imageData.getPointData().addArray(scalars); // Update output\n\n    outData[0] = imageData;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  clusters: [],\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  dimensions: [10, 10, 10],\n  clusterArrayName: 'cluster',\n  scalarArrayName: 'field'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['clusterArrayName', 'scalarArrayName']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing', 'dimensions'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkSLICSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSLICSource'); // ----------------------------------------------------------------------------\n\nvar vtkSLICSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkSLICSource$1 as default, extend, newInstance };","map":{"version":3,"names":["_toConsumableArray","macro","vtkImageData","vtkDataArray","generateCoordinates","origin","dimensions","spacing","coordinates","Float64Array","offset","k","z","j","y","i","x","vtkSLICSource","publicAPI","model","classHierarchy","push","addCluster","centerX","centerY","centerZ","fnConst","fnDfDx","fnDfDy","fnDfDz","id","clusters","length","modified","removeCluster","splice","removeAllClusters","updateCluster","getNumberOfClusters","requestData","inData","outData","deleted","dataSize","imageData","newInstance","setSpacing","apply","setExtent","setOrigin","centers","nbBytes","clusterIdxValues","newTypedArray","concat","_loop","clusterDistance","Number","MAX_VALUE","forEach","cluster","idx","dist","name","clusterArrayName","numberOfComponents","values","getPointData","addArray","scalarValues","Float32Array","_i","scalars","scalarArrayName","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","setGet","setGetArray","algo","vtkSLICSource$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/Sources/SLICSource.js"],"sourcesContent":["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction generateCoordinates(origin, dimensions, spacing) {\n  var coordinates = new Float64Array(dimensions[0] * dimensions[1] * dimensions[2] * 3);\n  var offset = 0;\n\n  for (var k = 0; k < dimensions[2]; k++) {\n    var z = origin[2] + spacing[2] * k;\n\n    for (var j = 0; j < dimensions[1]; j++) {\n      var y = origin[1] + spacing[1] * j;\n\n      for (var i = 0; i < dimensions[0]; i++) {\n        var x = origin[0] + spacing[0] * i;\n        coordinates[offset++] = x;\n        coordinates[offset++] = y;\n        coordinates[offset++] = z;\n      }\n    }\n  }\n\n  return coordinates;\n} // ----------------------------------------------------------------------------\n// vtkSLICSource methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkSLICSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSLICSource');\n\n  publicAPI.addCluster = function (centerX, centerY, centerZ, fnConst, fnDfDx, fnDfDy, fnDfDz) {\n    var id = model.clusters.length;\n    model.clusters.push(new Float64Array([centerX, centerY, centerZ, fnConst, fnDfDx, fnDfDy, fnDfDz]));\n    publicAPI.modified();\n    return id;\n  };\n\n  publicAPI.removeCluster = function (id) {\n    model.clusters.splice(id, 1);\n    publicAPI.modified();\n  };\n\n  publicAPI.removeAllClusters = function () {\n    model.clusters = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.updateCluster = function (id, centerX, centerY, centerZ, fnConst, fnDfDx, fnDfDy, fnDfDz) {\n    if (!model.clusters[id]) {\n      model.clusters[id] = new Float64Array(7);\n    }\n\n    model.clusters[id][0] = centerX;\n    model.clusters[id][1] = centerY;\n    model.clusters[id][2] = centerZ;\n    model.clusters[id][3] = fnConst;\n    model.clusters[id][4] = fnDfDx;\n    model.clusters[id][5] = fnDfDy;\n    model.clusters[id][6] = fnDfDz;\n    publicAPI.modified();\n  };\n\n  publicAPI.getNumberOfClusters = function () {\n    return model.clusters.length;\n  };\n\n  publicAPI.requestData = function (inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n\n    var dataSize = model.dimensions[0] * model.dimensions[1] * model.dimensions[2];\n    var imageData = vtkImageData.newInstance();\n    imageData.setSpacing.apply(imageData, _toConsumableArray(model.spacing));\n    imageData.setExtent(0, model.dimensions[0] - 1, 0, model.dimensions[1] - 1, 0, model.dimensions[2] - 1);\n    imageData.setOrigin.apply(imageData, _toConsumableArray(model.origin)); // Pixel centers\n\n    var centers = generateCoordinates(model.origin, model.dimensions, model.spacing); // Fill clusterIdxValues\n\n    var nbBytes = (model.clusters.length < 256 ? 8 : 0) || (model.clusters.length < 65536 ? 16 : 32);\n    var clusterIdxValues = macro.newTypedArray(\"Uint\".concat(nbBytes, \"Array\"), dataSize);\n\n    var _loop = function _loop(i) {\n      var clusterDistance = Number.MAX_VALUE;\n      model.clusters.forEach(function (cluster, idx) {\n        var dist = (cluster[0] - centers[i * 3]) * (cluster[0] - centers[i * 3]) + (cluster[1] - centers[i * 3 + 1]) * (cluster[1] - centers[i * 3 + 1]) + (cluster[2] - centers[i * 3 + 2]) * (cluster[2] - centers[i * 3 + 2]);\n\n        if (dist < clusterDistance) {\n          clusterDistance = dist;\n          clusterIdxValues[i] = idx;\n        }\n      });\n    };\n\n    for (var i = 0; i < dataSize; i++) {\n      _loop(i);\n    }\n\n    var clusters = vtkDataArray.newInstance({\n      name: model.clusterArrayName,\n      numberOfComponents: 1,\n      values: clusterIdxValues\n    });\n    imageData.getPointData().addArray(clusters); // Fill scalarValues\n\n    var scalarValues = new Float32Array(dataSize);\n\n    for (var _i = 0; _i < dataSize; _i++) {\n      var cluster = model.clusters[clusterIdxValues[_i]];\n      scalarValues[_i] = cluster[3] + cluster[4] * (centers[_i * 3 + 0] - cluster[0]) + cluster[5] * (centers[_i * 3 + 1] - cluster[1]) + cluster[6] * (centers[_i * 3 + 2] - cluster[2]);\n    }\n\n    var scalars = vtkDataArray.newInstance({\n      name: model.scalarArrayName,\n      numberOfComponents: 1,\n      values: scalarValues\n    });\n    imageData.getPointData().addArray(scalars); // Update output\n\n    outData[0] = imageData;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  clusters: [],\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  dimensions: [10, 10, 10],\n  clusterArrayName: 'cluster',\n  scalarArrayName: 'field'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['clusterArrayName', 'scalarArrayName']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing', 'dimensions'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkSLICSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSLICSource'); // ----------------------------------------------------------------------------\n\nvar vtkSLICSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkSLICSource$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,0CAA0C;AACzE,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,YAAY,MAAM,gCAAgC;;AAEzD;AACA;;AAEA,SAASC,mBAAmBA,CAACC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAE;EACxD,IAAIC,WAAW,GAAG,IAAIC,YAAY,CAACH,UAAU,CAAC,CAAC,CAAC,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACrF,IAAII,MAAM,GAAG,CAAC;EAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,CAAC,CAAC,CAAC,EAAEK,CAAC,EAAE,EAAE;IACtC,IAAIC,CAAC,GAAGP,MAAM,CAAC,CAAC,CAAC,GAAGE,OAAO,CAAC,CAAC,CAAC,GAAGI,CAAC;IAElC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,UAAU,CAAC,CAAC,CAAC,EAAEO,CAAC,EAAE,EAAE;MACtC,IAAIC,CAAC,GAAGT,MAAM,CAAC,CAAC,CAAC,GAAGE,OAAO,CAAC,CAAC,CAAC,GAAGM,CAAC;MAElC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,UAAU,CAAC,CAAC,CAAC,EAAES,CAAC,EAAE,EAAE;QACtC,IAAIC,CAAC,GAAGX,MAAM,CAAC,CAAC,CAAC,GAAGE,OAAO,CAAC,CAAC,CAAC,GAAGQ,CAAC;QAClCP,WAAW,CAACE,MAAM,EAAE,CAAC,GAAGM,CAAC;QACzBR,WAAW,CAACE,MAAM,EAAE,CAAC,GAAGI,CAAC;QACzBN,WAAW,CAACE,MAAM,EAAE,CAAC,GAAGE,CAAC;MAC3B;IACF;EACF;EAEA,OAAOJ,WAAW;AACpB,CAAC,CAAC;AACF;AACA;;AAGA,SAASS,aAAaA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACvC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,eAAe,CAAC;EAE1CH,SAAS,CAACI,UAAU,GAAG,UAAUC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE;IAC3F,IAAIC,EAAE,GAAGX,KAAK,CAACY,QAAQ,CAACC,MAAM;IAC9Bb,KAAK,CAACY,QAAQ,CAACV,IAAI,CAAC,IAAIZ,YAAY,CAAC,CAACc,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAC,CAAC;IACnGX,SAAS,CAACe,QAAQ,CAAC,CAAC;IACpB,OAAOH,EAAE;EACX,CAAC;EAEDZ,SAAS,CAACgB,aAAa,GAAG,UAAUJ,EAAE,EAAE;IACtCX,KAAK,CAACY,QAAQ,CAACI,MAAM,CAACL,EAAE,EAAE,CAAC,CAAC;IAC5BZ,SAAS,CAACe,QAAQ,CAAC,CAAC;EACtB,CAAC;EAEDf,SAAS,CAACkB,iBAAiB,GAAG,YAAY;IACxCjB,KAAK,CAACY,QAAQ,GAAG,EAAE;IACnBb,SAAS,CAACe,QAAQ,CAAC,CAAC;EACtB,CAAC;EAEDf,SAAS,CAACmB,aAAa,GAAG,UAAUP,EAAE,EAAEP,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE;IAClG,IAAI,CAACV,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,EAAE;MACvBX,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,GAAG,IAAIrB,YAAY,CAAC,CAAC,CAAC;IAC1C;IAEAU,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGP,OAAO;IAC/BJ,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGN,OAAO;IAC/BL,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGL,OAAO;IAC/BN,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGJ,OAAO;IAC/BP,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGH,MAAM;IAC9BR,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGF,MAAM;IAC9BT,KAAK,CAACY,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGD,MAAM;IAC9BX,SAAS,CAACe,QAAQ,CAAC,CAAC;EACtB,CAAC;EAEDf,SAAS,CAACoB,mBAAmB,GAAG,YAAY;IAC1C,OAAOnB,KAAK,CAACY,QAAQ,CAACC,MAAM;EAC9B,CAAC;EAEDd,SAAS,CAACqB,WAAW,GAAG,UAAUC,MAAM,EAAEC,OAAO,EAAE;IACjD,IAAItB,KAAK,CAACuB,OAAO,EAAE;MACjB;IACF;IAEA,IAAIC,QAAQ,GAAGxB,KAAK,CAACb,UAAU,CAAC,CAAC,CAAC,GAAGa,KAAK,CAACb,UAAU,CAAC,CAAC,CAAC,GAAGa,KAAK,CAACb,UAAU,CAAC,CAAC,CAAC;IAC9E,IAAIsC,SAAS,GAAG1C,YAAY,CAAC2C,WAAW,CAAC,CAAC;IAC1CD,SAAS,CAACE,UAAU,CAACC,KAAK,CAACH,SAAS,EAAE5C,kBAAkB,CAACmB,KAAK,CAACZ,OAAO,CAAC,CAAC;IACxEqC,SAAS,CAACI,SAAS,CAAC,CAAC,EAAE7B,KAAK,CAACb,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAEa,KAAK,CAACb,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAEa,KAAK,CAACb,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACvGsC,SAAS,CAACK,SAAS,CAACF,KAAK,CAACH,SAAS,EAAE5C,kBAAkB,CAACmB,KAAK,CAACd,MAAM,CAAC,CAAC,CAAC,CAAC;;IAExE,IAAI6C,OAAO,GAAG9C,mBAAmB,CAACe,KAAK,CAACd,MAAM,EAAEc,KAAK,CAACb,UAAU,EAAEa,KAAK,CAACZ,OAAO,CAAC,CAAC,CAAC;;IAElF,IAAI4C,OAAO,GAAG,CAAChC,KAAK,CAACY,QAAQ,CAACC,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,MAAMb,KAAK,CAACY,QAAQ,CAACC,MAAM,GAAG,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;IAChG,IAAIoB,gBAAgB,GAAGnD,KAAK,CAACoD,aAAa,CAAC,MAAM,CAACC,MAAM,CAACH,OAAO,EAAE,OAAO,CAAC,EAAER,QAAQ,CAAC;IAErF,IAAIY,KAAK,GAAG,SAASA,KAAKA,CAACxC,CAAC,EAAE;MAC5B,IAAIyC,eAAe,GAAGC,MAAM,CAACC,SAAS;MACtCvC,KAAK,CAACY,QAAQ,CAAC4B,OAAO,CAAC,UAAUC,OAAO,EAAEC,GAAG,EAAE;QAC7C,IAAIC,IAAI,GAAG,CAACF,OAAO,CAAC,CAAC,CAAC,GAAGV,OAAO,CAACnC,CAAC,GAAG,CAAC,CAAC,KAAK6C,OAAO,CAAC,CAAC,CAAC,GAAGV,OAAO,CAACnC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC6C,OAAO,CAAC,CAAC,CAAC,GAAGV,OAAO,CAACnC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK6C,OAAO,CAAC,CAAC,CAAC,GAAGV,OAAO,CAACnC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC6C,OAAO,CAAC,CAAC,CAAC,GAAGV,OAAO,CAACnC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK6C,OAAO,CAAC,CAAC,CAAC,GAAGV,OAAO,CAACnC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAExN,IAAI+C,IAAI,GAAGN,eAAe,EAAE;UAC1BA,eAAe,GAAGM,IAAI;UACtBV,gBAAgB,CAACrC,CAAC,CAAC,GAAG8C,GAAG;QAC3B;MACF,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,IAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,QAAQ,EAAE5B,CAAC,EAAE,EAAE;MACjCwC,KAAK,CAACxC,CAAC,CAAC;IACV;IAEA,IAAIgB,QAAQ,GAAG5B,YAAY,CAAC0C,WAAW,CAAC;MACtCkB,IAAI,EAAE5C,KAAK,CAAC6C,gBAAgB;MAC5BC,kBAAkB,EAAE,CAAC;MACrBC,MAAM,EAAEd;IACV,CAAC,CAAC;IACFR,SAAS,CAACuB,YAAY,CAAC,CAAC,CAACC,QAAQ,CAACrC,QAAQ,CAAC,CAAC,CAAC;;IAE7C,IAAIsC,YAAY,GAAG,IAAIC,YAAY,CAAC3B,QAAQ,CAAC;IAE7C,KAAK,IAAI4B,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG5B,QAAQ,EAAE4B,EAAE,EAAE,EAAE;MACpC,IAAIX,OAAO,GAAGzC,KAAK,CAACY,QAAQ,CAACqB,gBAAgB,CAACmB,EAAE,CAAC,CAAC;MAClDF,YAAY,CAACE,EAAE,CAAC,GAAGX,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,IAAIV,OAAO,CAACqB,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGX,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,IAAIV,OAAO,CAACqB,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGX,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,IAAIV,OAAO,CAACqB,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGX,OAAO,CAAC,CAAC,CAAC,CAAC;IACrL;IAEA,IAAIY,OAAO,GAAGrE,YAAY,CAAC0C,WAAW,CAAC;MACrCkB,IAAI,EAAE5C,KAAK,CAACsD,eAAe;MAC3BR,kBAAkB,EAAE,CAAC;MACrBC,MAAM,EAAEG;IACV,CAAC,CAAC;IACFzB,SAAS,CAACuB,YAAY,CAAC,CAAC,CAACC,QAAQ,CAACI,OAAO,CAAC,CAAC,CAAC;;IAE5C/B,OAAO,CAAC,CAAC,CAAC,GAAGG,SAAS;EACxB,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAI8B,cAAc,GAAG;EACnB3C,QAAQ,EAAE,EAAE;EACZxB,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxBF,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACxB0D,gBAAgB,EAAE,SAAS;EAC3BS,eAAe,EAAE;AACnB,CAAC,CAAC,CAAC;;AAEH,SAASE,MAAMA,CAACzD,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIyD,aAAa,GAAGC,SAAS,CAAC7C,MAAM,GAAG,CAAC,IAAI6C,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FE,MAAM,CAACC,MAAM,CAAC7D,KAAK,EAAEuD,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErD3E,KAAK,CAACgF,GAAG,CAAC/D,SAAS,EAAEC,KAAK,CAAC;EAC3BlB,KAAK,CAACiF,MAAM,CAAChE,SAAS,EAAEC,KAAK,EAAE,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;EACvElB,KAAK,CAACkF,WAAW,CAACjE,SAAS,EAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC;EAC3ElB,KAAK,CAACmF,IAAI,CAAClE,SAAS,EAAEC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EAClCF,aAAa,CAACC,SAAS,EAAEC,KAAK,CAAC;AACjC,CAAC,CAAC;;AAEF,IAAI0B,WAAW,GAAG5C,KAAK,CAAC4C,WAAW,CAAC8B,MAAM,EAAE,eAAe,CAAC,CAAC,CAAC;;AAE9D,IAAIU,eAAe,GAAG;EACpBxC,WAAW,EAAEA,WAAW;EACxB8B,MAAM,EAAEA;AACV,CAAC;AAED,SAASU,eAAe,IAAIC,OAAO,EAAEX,MAAM,EAAE9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
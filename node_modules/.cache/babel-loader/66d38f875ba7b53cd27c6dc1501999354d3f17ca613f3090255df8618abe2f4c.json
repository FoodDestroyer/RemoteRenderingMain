{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\nimport SmartConnect from 'wslink/src/SmartConnect';\nimport vtkRemoteView from '@kitware/vtk.js/Rendering/Misc/RemoteView';\nvtkWSLinkClient.setSmartConnectClass(SmartConnect);\n\n// const VTKComponent = () => {\n//     useEffect(() => {\n//       document.body.style.padding = '0';\n//       document.body.style.margin = '0';\n//       document.body.style.overflow = 'hidden'; // Prevent scrolling\n\n//       const divRenderer = document.createElement('div');\n//       document.body.appendChild(divRenderer);\n\n//       divRenderer.style.position = 'fixed';\n//       divRenderer.style.top = '0';\n//       divRenderer.style.left = '0';\n//       divRenderer.style.width = '100vw';\n//       divRenderer.style.height = '100vh';\n//       divRenderer.style.overflow = 'hidden';\n\n//     const clientToConnect = vtkWSLinkClient.newInstance();\n\n//     // Error\n//     clientToConnect.onConnectionError((httpReq) => {\n//       const message =\n//         (httpReq && httpReq.response && httpReq.response.error) ||\n//         `Connection error`;\n//       console.error(message);\n//       console.log(httpReq);\n//     });\n\n//     // Close\n//     clientToConnect.onConnectionClose((httpReq) => {\n//       const message =\n//         (httpReq && httpReq.response && httpReq.response.error) ||\n//         `Connection close`;\n//       console.error(message);\n//       console.log(httpReq);\n//     });\n\n//     // hint: if you use the launcher.py and ws-proxy just leave out sessionURL\n//     // (it will be provided by the launcher)\n//     const config = {\n//       application: 'cone',\n//       sessionURL: 'ws://localhost:7500/ws',\n//     };\n\n//     // Connect\n//     clientToConnect\n//       .connect(config)\n//       .then((validClient) => {\n//         const viewStream = clientToConnect.getImageStream().createViewStream('-1');\n\n//         const view = vtkRemoteView.newInstance({\n//           rpcWheelEvent: 'viewport.mouse.zoom.wheel',\n//           viewStream,\n//         });\n//         const session = validClient.getConnection().getSession();\n//         view.setSession(session);\n//         view.setContainer(divRenderer);\n//         view.setInteractiveRatio(0.7); // the scaled image compared to the clients view resolution\n//         view.setInteractiveQuality(50); // jpeg quality\n\n//         window.addEventListener('resize', view.resize);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n\n//     return () => {\n//       // Clean up code if needed when the component unmounts\n//       // For example, you might want to remove the resize event listener and disconnect the client.\n//     };\n//   }, []); // Run the effect only once when the component mounts\n\n//   return null; // Since this component doesn't render anything, we return null\n// };\n\n// export default VTKComponent;\n\nconst VTKComponent = () => {\n  _s();\n  useEffect(() => {\n    document.body.style.padding = '0';\n    document.body.style.margin = '0';\n    document.body.style.overflow = 'hidden'; // Prevent scrolling\n\n    const divRenderer = document.createElement('div');\n    document.body.appendChild(divRenderer);\n    divRenderer.style.position = 'fixed';\n    divRenderer.style.top = '0';\n    divRenderer.style.left = '0';\n    divRenderer.style.width = '100vw';\n    divRenderer.style.height = '100vh';\n    divRenderer.style.overflow = 'hidden';\n    const clientToConnect = vtkWSLinkClient.newInstance();\n\n    // Error\n    clientToConnect.onConnectionError(httpReq => {\n      const message = httpReq && httpReq.response && httpReq.response.error || `Connection error`;\n      console.error(message);\n      console.log(httpReq);\n    });\n\n    // Close\n    clientToConnect.onConnectionClose(httpReq => {\n      const message = httpReq && httpReq.response && httpReq.response.error || `Connection close`;\n      console.error(message);\n      console.log(httpReq);\n    });\n\n    // hint: if you use the launcher.py and ws-proxy just leave out sessionURL\n    // (it will be provided by the launcher)\n    const config = {\n      application: 'cone',\n      sessionURL: 'ws://localhost:7500/ws'\n    };\n\n    // Connect\n    clientToConnect.connect(config).then(validClient => {\n      const viewStream = clientToConnect.getImageStream().createViewStream('-1');\n      const view = vtkRemoteView.newInstance({\n        rpcWheelInput: 'viewport.mouse.wheel',\n        viewStream\n      });\n      const session = validClient.getConnection().getSession();\n      view.setSession(session);\n      view.setContainer(divRenderer);\n      view.setInteractiveRatio(0.7); // the scaled image compared to the clients view resolution\n      view.setInteractiveQuality(50); // jpeg quality\n      view.setRPCWheelInput('viewport.mouse.wheel');\n      window.addEventListener('resize', view.resize);\n    }).catch(error => {\n      console.error(error);\n    });\n    return () => {\n      // Clean up code if needed when the component unmounts\n      // For example, you might want to remove the resize event listener and disconnect the client.\n    };\n  }, []); // Run the effect only once when the component mounts\n\n  return null; // Since this component doesn't render anything, we return null\n};\n_s(VTKComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VTKComponent;\nexport default VTKComponent;\nvar _c;\n$RefreshReg$(_c, \"VTKComponent\");","map":{"version":3,"names":["React","useEffect","vtkWSLinkClient","SmartConnect","vtkRemoteView","setSmartConnectClass","VTKComponent","_s","document","body","style","padding","margin","overflow","divRenderer","createElement","appendChild","position","top","left","width","height","clientToConnect","newInstance","onConnectionError","httpReq","message","response","error","console","log","onConnectionClose","config","application","sessionURL","connect","then","validClient","viewStream","getImageStream","createViewStream","view","rpcWheelInput","session","getConnection","getSession","setSession","setContainer","setInteractiveRatio","setInteractiveQuality","setRPCWheelInput","window","addEventListener","resize","catch","_c","$RefreshReg$"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\nimport SmartConnect from 'wslink/src/SmartConnect';\nimport vtkRemoteView from '@kitware/vtk.js/Rendering/Misc/RemoteView';\n\nvtkWSLinkClient.setSmartConnectClass(SmartConnect);\n\n// const VTKComponent = () => {\n//     useEffect(() => {\n//       document.body.style.padding = '0';\n//       document.body.style.margin = '0';\n//       document.body.style.overflow = 'hidden'; // Prevent scrolling\n  \n//       const divRenderer = document.createElement('div');\n//       document.body.appendChild(divRenderer);\n  \n//       divRenderer.style.position = 'fixed';\n//       divRenderer.style.top = '0';\n//       divRenderer.style.left = '0';\n//       divRenderer.style.width = '100vw';\n//       divRenderer.style.height = '100vh';\n//       divRenderer.style.overflow = 'hidden';\n\n//     const clientToConnect = vtkWSLinkClient.newInstance();\n\n//     // Error\n//     clientToConnect.onConnectionError((httpReq) => {\n//       const message =\n//         (httpReq && httpReq.response && httpReq.response.error) ||\n//         `Connection error`;\n//       console.error(message);\n//       console.log(httpReq);\n//     });\n\n//     // Close\n//     clientToConnect.onConnectionClose((httpReq) => {\n//       const message =\n//         (httpReq && httpReq.response && httpReq.response.error) ||\n//         `Connection close`;\n//       console.error(message);\n//       console.log(httpReq);\n//     });\n\n//     // hint: if you use the launcher.py and ws-proxy just leave out sessionURL\n//     // (it will be provided by the launcher)\n//     const config = {\n//       application: 'cone',\n//       sessionURL: 'ws://localhost:7500/ws',\n//     };\n\n//     // Connect\n//     clientToConnect\n//       .connect(config)\n//       .then((validClient) => {\n//         const viewStream = clientToConnect.getImageStream().createViewStream('-1');\n\n//         const view = vtkRemoteView.newInstance({\n//           rpcWheelEvent: 'viewport.mouse.zoom.wheel',\n//           viewStream,\n//         });\n//         const session = validClient.getConnection().getSession();\n//         view.setSession(session);\n//         view.setContainer(divRenderer);\n//         view.setInteractiveRatio(0.7); // the scaled image compared to the clients view resolution\n//         view.setInteractiveQuality(50); // jpeg quality\n\n//         window.addEventListener('resize', view.resize);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n\n//     return () => {\n//       // Clean up code if needed when the component unmounts\n//       // For example, you might want to remove the resize event listener and disconnect the client.\n//     };\n//   }, []); // Run the effect only once when the component mounts\n\n//   return null; // Since this component doesn't render anything, we return null\n// };\n\n// export default VTKComponent;\n\nconst VTKComponent = () => {\n    useEffect(() => {\n      document.body.style.padding = '0';\n      document.body.style.margin = '0';\n      document.body.style.overflow = 'hidden'; // Prevent scrolling\n  \n      const divRenderer = document.createElement('div');\n      document.body.appendChild(divRenderer);\n  \n      divRenderer.style.position = 'fixed';\n      divRenderer.style.top = '0';\n      divRenderer.style.left = '0';\n      divRenderer.style.width = '100vw';\n      divRenderer.style.height = '100vh';\n      divRenderer.style.overflow = 'hidden';\n  \n      const clientToConnect = vtkWSLinkClient.newInstance();\n  \n      // Error\n      clientToConnect.onConnectionError((httpReq) => {\n        const message =\n          (httpReq && httpReq.response && httpReq.response.error) ||\n          `Connection error`;\n        console.error(message);\n        console.log(httpReq);\n      });\n  \n      // Close\n      clientToConnect.onConnectionClose((httpReq) => {\n        const message =\n          (httpReq && httpReq.response && httpReq.response.error) ||\n          `Connection close`;\n        console.error(message);\n        console.log(httpReq);\n      });\n  \n      // hint: if you use the launcher.py and ws-proxy just leave out sessionURL\n      // (it will be provided by the launcher)\n      const config = {\n        application: 'cone',\n        sessionURL: 'ws://localhost:7500/ws',\n      };\n  \n      // Connect\n      clientToConnect\n        .connect(config)\n        .then((validClient) => {\n          const viewStream = clientToConnect.getImageStream().createViewStream('-1');\n  \n          const view = vtkRemoteView.newInstance({\n            rpcWheelInput: 'viewport.mouse.wheel',\n            viewStream,\n          });\n          const session = validClient.getConnection().getSession();\n          view.setSession(session);\n          view.setContainer(divRenderer);\n          view.setInteractiveRatio(0.7); // the scaled image compared to the clients view resolution\n          view.setInteractiveQuality(50); // jpeg quality\n          view.setRPCWheelInput('viewport.mouse.wheel');\n  \n          window.addEventListener('resize', view.resize);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n  \n      return () => {\n        // Clean up code if needed when the component unmounts\n        // For example, you might want to remove the resize event listener and disconnect the client.\n      };\n    }, []); // Run the effect only once when the component mounts\n  \n    return null; // Since this component doesn't render anything, we return null\n  };\n  \n  export default VTKComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
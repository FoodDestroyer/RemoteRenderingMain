{"ast":null,"code":"import { mat4 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkWebGPUCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUCamera');\n  publicAPI.getProjectionMatrix = function (outMat, aspect, cRange, windowCenter) {\n    mat4.identity(outMat);\n    if (model.renderable.getParallelProjection()) {\n      // set up a rectangular parallelipiped\n      var parallelScale = model.renderable.getParallelScale();\n      var width = parallelScale * aspect;\n      var height = parallelScale;\n      var xmin = (windowCenter[0] - 1.0) * width;\n      var xmax = (windowCenter[0] + 1.0) * width;\n      var ymin = (windowCenter[1] - 1.0) * height;\n      var ymax = (windowCenter[1] + 1.0) * height;\n      var xr = 1.0 / (xmax - xmin);\n      var yr = 1.0 / (ymax - ymin);\n      outMat[0] = 2.0 * xr;\n      outMat[5] = 2.0 * yr;\n      outMat[10] = 1.0 / (cRange[1] - cRange[0]);\n      outMat[12] = (xmax + xmin) * xr;\n      outMat[13] = (ymax + ymin) * yr;\n      outMat[14] = cRange[1] / (cRange[1] - cRange[0]);\n    } else {\n      var tmp = Math.tan(Math.PI * model.renderable.getViewAngle() / 360.0);\n      var _width;\n      var _height;\n      if (model.renderable.getUseHorizontalViewAngle() === true) {\n        _width = cRange[0] * tmp;\n        _height = cRange[0] * tmp / aspect;\n      } else {\n        _width = cRange[0] * tmp * aspect;\n        _height = cRange[0] * tmp;\n      }\n      var _xmin = (windowCenter[0] - 1.0) * _width;\n      var _xmax = (windowCenter[0] + 1.0) * _width;\n      var _ymin = (windowCenter[1] - 1.0) * _height;\n      var _ymax = (windowCenter[1] + 1.0) * _height;\n      outMat[0] = 2.0 * cRange[0] / (_xmax - _xmin);\n      outMat[5] = 2.0 * cRange[0] / (_ymax - _ymin);\n      outMat[12] = (_xmin + _xmax) / (_xmax - _xmin);\n      outMat[13] = (_ymin + _ymax) / (_ymax - _ymin);\n      outMat[10] = 0.0;\n      outMat[14] = cRange[0];\n      outMat[11] = -1.0;\n      outMat[15] = 0.0;\n    }\n  };\n  publicAPI.convertToOpenGLDepth = function (val) {\n    if (model.renderable.getParallelProjection()) {\n      return 1.0 - val;\n    }\n    var cRange = model.renderable.getClippingRangeByReference();\n    var zval = -cRange[0] / val;\n    zval = (cRange[0] + cRange[1]) / (cRange[1] - cRange[0]) + 2.0 * cRange[0] * cRange[1] / (zval * (cRange[1] - cRange[0]));\n    return 0.5 * zval + 0.5;\n  };\n  publicAPI.getKeyMatrices = function (webGPURenderer) {\n    // has the camera changed?\n    var ren = webGPURenderer.getRenderable();\n    var webGPURenderWindow = webGPURenderer.getParent();\n    if (Math.max(webGPURenderWindow.getMTime(), publicAPI.getMTime(), ren.getMTime(), model.renderable.getMTime(), webGPURenderer.getStabilizedTime()) > model.keyMatrixTime.getMTime()) {\n      var wcvc = model.renderable.getViewMatrix();\n      mat4.copy(model.keyMatrices.normalMatrix, wcvc); // zero out translation\n\n      model.keyMatrices.normalMatrix[3] = 0.0;\n      model.keyMatrices.normalMatrix[7] = 0.0;\n      model.keyMatrices.normalMatrix[11] = 0.0;\n      mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, wcvc);\n      var center = webGPURenderer.getStabilizedCenterByReference();\n      mat4.translate(model.keyMatrices.scvc, model.keyMatrices.wcvc, center);\n      var aspectRatio = webGPURenderer.getAspectRatio();\n      var cRange = model.renderable.getClippingRangeByReference();\n      publicAPI.getProjectionMatrix(model.keyMatrices.vcpc, aspectRatio, cRange, model.renderable.getWindowCenterByReference());\n      mat4.multiply(model.keyMatrices.scpc, model.keyMatrices.vcpc, model.keyMatrices.scvc);\n      mat4.invert(model.keyMatrices.pcsc, model.keyMatrices.scpc);\n      model.keyMatrixTime.modified();\n    }\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  keyMatrixTime: null,\n  keyMatrices: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime); // values always get set by the get method\n\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    vcpc: new Float64Array(16),\n    pcsc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    scpc: new Float64Array(16),\n    scvc: new Float64Array(16)\n  }; // Build VTK API\n\n  macro.setGet(publicAPI, model, ['keyMatrixTime']); // Object methods\n\n  vtkWebGPUCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkCamera', newInstance);\nexport { index as default, extend, newInstance };","map":{"version":3,"names":["mat4","macro","vtkViewNode","registerOverride","vtkWebGPUCamera","publicAPI","model","classHierarchy","push","getProjectionMatrix","outMat","aspect","cRange","windowCenter","identity","renderable","getParallelProjection","parallelScale","getParallelScale","width","height","xmin","xmax","ymin","ymax","xr","yr","tmp","Math","tan","PI","getViewAngle","_width","_height","getUseHorizontalViewAngle","_xmin","_xmax","_ymin","_ymax","convertToOpenGLDepth","val","getClippingRangeByReference","zval","getKeyMatrices","webGPURenderer","ren","getRenderable","webGPURenderWindow","getParent","max","getMTime","getStabilizedTime","keyMatrixTime","wcvc","getViewMatrix","copy","keyMatrices","normalMatrix","invert","transpose","center","getStabilizedCenterByReference","translate","scvc","aspectRatio","getAspectRatio","vcpc","getWindowCenterByReference","multiply","scpc","pcsc","modified","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","Float64Array","setGet","newInstance","index","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/WebGPU/Camera.js"],"sourcesContent":["import { mat4 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkWebGPUCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUCamera');\n\n  publicAPI.getProjectionMatrix = function (outMat, aspect, cRange, windowCenter) {\n    mat4.identity(outMat);\n\n    if (model.renderable.getParallelProjection()) {\n      // set up a rectangular parallelipiped\n      var parallelScale = model.renderable.getParallelScale();\n      var width = parallelScale * aspect;\n      var height = parallelScale;\n      var xmin = (windowCenter[0] - 1.0) * width;\n      var xmax = (windowCenter[0] + 1.0) * width;\n      var ymin = (windowCenter[1] - 1.0) * height;\n      var ymax = (windowCenter[1] + 1.0) * height;\n      var xr = 1.0 / (xmax - xmin);\n      var yr = 1.0 / (ymax - ymin);\n      outMat[0] = 2.0 * xr;\n      outMat[5] = 2.0 * yr;\n      outMat[10] = 1.0 / (cRange[1] - cRange[0]);\n      outMat[12] = (xmax + xmin) * xr;\n      outMat[13] = (ymax + ymin) * yr;\n      outMat[14] = cRange[1] / (cRange[1] - cRange[0]);\n    } else {\n      var tmp = Math.tan(Math.PI * model.renderable.getViewAngle() / 360.0);\n\n      var _width;\n\n      var _height;\n\n      if (model.renderable.getUseHorizontalViewAngle() === true) {\n        _width = cRange[0] * tmp;\n        _height = cRange[0] * tmp / aspect;\n      } else {\n        _width = cRange[0] * tmp * aspect;\n        _height = cRange[0] * tmp;\n      }\n\n      var _xmin = (windowCenter[0] - 1.0) * _width;\n\n      var _xmax = (windowCenter[0] + 1.0) * _width;\n\n      var _ymin = (windowCenter[1] - 1.0) * _height;\n\n      var _ymax = (windowCenter[1] + 1.0) * _height;\n\n      outMat[0] = 2.0 * cRange[0] / (_xmax - _xmin);\n      outMat[5] = 2.0 * cRange[0] / (_ymax - _ymin);\n      outMat[12] = (_xmin + _xmax) / (_xmax - _xmin);\n      outMat[13] = (_ymin + _ymax) / (_ymax - _ymin);\n      outMat[10] = 0.0;\n      outMat[14] = cRange[0];\n      outMat[11] = -1.0;\n      outMat[15] = 0.0;\n    }\n  };\n\n  publicAPI.convertToOpenGLDepth = function (val) {\n    if (model.renderable.getParallelProjection()) {\n      return 1.0 - val;\n    }\n\n    var cRange = model.renderable.getClippingRangeByReference();\n    var zval = -cRange[0] / val;\n    zval = (cRange[0] + cRange[1]) / (cRange[1] - cRange[0]) + 2.0 * cRange[0] * cRange[1] / (zval * (cRange[1] - cRange[0]));\n    return 0.5 * zval + 0.5;\n  };\n\n  publicAPI.getKeyMatrices = function (webGPURenderer) {\n    // has the camera changed?\n    var ren = webGPURenderer.getRenderable();\n    var webGPURenderWindow = webGPURenderer.getParent();\n\n    if (Math.max(webGPURenderWindow.getMTime(), publicAPI.getMTime(), ren.getMTime(), model.renderable.getMTime(), webGPURenderer.getStabilizedTime()) > model.keyMatrixTime.getMTime()) {\n      var wcvc = model.renderable.getViewMatrix();\n      mat4.copy(model.keyMatrices.normalMatrix, wcvc); // zero out translation\n\n      model.keyMatrices.normalMatrix[3] = 0.0;\n      model.keyMatrices.normalMatrix[7] = 0.0;\n      model.keyMatrices.normalMatrix[11] = 0.0;\n      mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, wcvc);\n      var center = webGPURenderer.getStabilizedCenterByReference();\n      mat4.translate(model.keyMatrices.scvc, model.keyMatrices.wcvc, center);\n      var aspectRatio = webGPURenderer.getAspectRatio();\n      var cRange = model.renderable.getClippingRangeByReference();\n      publicAPI.getProjectionMatrix(model.keyMatrices.vcpc, aspectRatio, cRange, model.renderable.getWindowCenterByReference());\n      mat4.multiply(model.keyMatrices.scpc, model.keyMatrices.vcpc, model.keyMatrices.scvc);\n      mat4.invert(model.keyMatrices.pcsc, model.keyMatrices.scpc);\n      model.keyMatrixTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  keyMatrixTime: null,\n  keyMatrices: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime); // values always get set by the get method\n\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    vcpc: new Float64Array(16),\n    pcsc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    scpc: new Float64Array(16),\n    scvc: new Float64Array(16)\n  }; // Build VTK API\n\n  macro.setGet(publicAPI, model, ['keyMatrixTime']); // Object methods\n\n  vtkWebGPUCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkCamera', newInstance);\n\nexport { index as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
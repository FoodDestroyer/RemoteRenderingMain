{"ast":null,"code":"import BinaryHelper from '../Core/BinaryHelper.js';\nimport DataAccessHelper from '../Core/DataAccessHelper.js';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport '../Core/DataAccessHelper/LiteHttpDataAccessHelper.js';\n\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\nfunction parseHeader(headerString) {\n  var headerSubStr = headerString.split(' ');\n  var fieldValues = headerSubStr.filter(function (e) {\n    return e.indexOf('=') > -1;\n  });\n  var header = {};\n  for (var i = 0; i < fieldValues.length; ++i) {\n    var fieldValueStr = fieldValues[i];\n    var fieldValueSubStr = fieldValueStr.split('=');\n    if (fieldValueSubStr.length === 2) {\n      header[fieldValueSubStr[0]] = fieldValueSubStr[1];\n    }\n  }\n  return header;\n}\nfunction addValuesToArray(src, dst) {\n  for (var i = 0; i < src.length; i++) {\n    dst.push(src[i]);\n  }\n} // facet normal ni nj nk\n//     outer loop\n//         vertex v1x v1y v1z\n//         vertex v2x v2y v2z\n//         vertex v3x v3y v3z\n//     endloop\n// endfacet\n\nfunction readTriangle(lines, offset, points, cellArray, cellNormals) {\n  var normalLine = lines[offset];\n  if (normalLine === undefined) {\n    return -1;\n  }\n  if (normalLine.indexOf('endfacet') !== -1) {\n    return offset + 1;\n  }\n  if (normalLine.indexOf('facet') === -1) {\n    return offset + 1; // Move to next line\n  }\n\n  var nbVertex = 0;\n  var nbConsumedLines = 2;\n  var firstVertexIndex = points.length / 3;\n  var normal = normalLine.split(/[ \\t]+/).filter(function (i) {\n    return i;\n  }).slice(-3).map(Number);\n  addValuesToArray(normal, cellNormals);\n  while (lines[offset + nbConsumedLines].indexOf('vertex') !== -1) {\n    var line = lines[offset + nbConsumedLines];\n    var coords = line.split(/[ \\t]+/).filter(function (i) {\n      return i;\n    }).slice(-3).map(Number);\n    addValuesToArray(coords, points);\n    nbVertex++;\n    nbConsumedLines++;\n  }\n  cellArray.push(nbVertex);\n  for (var i = 0; i < nbVertex; i++) {\n    cellArray.push(firstVertexIndex + i);\n  }\n  while (lines[offset + nbConsumedLines] && lines[offset + nbConsumedLines].indexOf('endfacet') !== -1) {\n    nbConsumedLines++;\n  } // +1 (endfacet) +1 (next facet)\n\n  return offset + nbConsumedLines + 2;\n} // ----------------------------------------------------------------------------\n// vtkSTLReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSTLReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSTLReader'); // Create default dataAccessHelper if not available\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  } // Internal method to fetch Array\n\n  function fetchData(url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var compression = option.compression !== undefined ? option.compression : model.compression;\n    var progressCallback = option.progressCallback !== undefined ? option.progressCallback : model.progressCallback;\n    if (option.binary) {\n      return model.dataAccessHelper.fetchBinary(url, {\n        compression: compression,\n        progressCallback: progressCallback\n      });\n    }\n    return model.dataAccessHelper.fetchText(publicAPI, url, {\n      compression: compression,\n      progressCallback: progressCallback\n    });\n  } // Set DataSet url\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      binary: true\n    };\n    model.url = url; // Remove the file in the URL\n\n    var path = url.split('/');\n    path.pop();\n    model.baseURL = path.join('/'); // Fetch metadata\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n  publicAPI.loadData = function () {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var promise = fetchData(model.url, option);\n    promise.then(publicAPI.parse);\n    return promise;\n  };\n  publicAPI.parse = function (content) {\n    if (typeof content === 'string') {\n      publicAPI.parseAsText(content);\n    } else {\n      publicAPI.parseAsArrayBuffer(content);\n    }\n  };\n  publicAPI.parseAsArrayBuffer = function (content) {\n    if (!content) {\n      return;\n    }\n    if (content !== model.parseData) {\n      publicAPI.modified();\n    } else {\n      return;\n    }\n    model.parseData = content; // ascii/binary detection\n\n    var isBinary = false; // 80=STL header, 4=uint32 of num of triangles (le)\n\n    var dview = new DataView(content, 0, 80 + 4);\n    var numTriangles = dview.getUint32(80, true); // 50 bytes per triangle\n\n    isBinary = 84 + numTriangles * 50 === content.byteLength; // Check if ascii format\n\n    if (!isBinary) {\n      publicAPI.parseAsText(BinaryHelper.arrayBufferToString(content));\n      return;\n    } // Binary parsing\n    // Header\n\n    var headerData = content.slice(0, 80);\n    var headerStr = BinaryHelper.arrayBufferToString(headerData);\n    var header = parseHeader(headerStr); // Data\n\n    var dataView = new DataView(content, 84); // global.dataview = dataView;\n\n    var nbFaces = (content.byteLength - 84) / 50;\n    var pointValues = new Float32Array(nbFaces * 9);\n    var normalValues = new Float32Array(nbFaces * 3);\n    var cellValues = new Uint32Array(nbFaces * 4);\n    var cellDataValues = new Uint16Array(nbFaces);\n    var cellOffset = 0;\n    for (var faceIdx = 0; faceIdx < nbFaces; faceIdx++) {\n      var offset = faceIdx * 50;\n      normalValues[faceIdx * 3 + 0] = dataView.getFloat32(offset + 0, true);\n      normalValues[faceIdx * 3 + 1] = dataView.getFloat32(offset + 4, true);\n      normalValues[faceIdx * 3 + 2] = dataView.getFloat32(offset + 8, true);\n      pointValues[faceIdx * 9 + 0] = dataView.getFloat32(offset + 12, true);\n      pointValues[faceIdx * 9 + 1] = dataView.getFloat32(offset + 16, true);\n      pointValues[faceIdx * 9 + 2] = dataView.getFloat32(offset + 20, true);\n      pointValues[faceIdx * 9 + 3] = dataView.getFloat32(offset + 24, true);\n      pointValues[faceIdx * 9 + 4] = dataView.getFloat32(offset + 28, true);\n      pointValues[faceIdx * 9 + 5] = dataView.getFloat32(offset + 32, true);\n      pointValues[faceIdx * 9 + 6] = dataView.getFloat32(offset + 36, true);\n      pointValues[faceIdx * 9 + 7] = dataView.getFloat32(offset + 40, true);\n      pointValues[faceIdx * 9 + 8] = dataView.getFloat32(offset + 44, true);\n      cellValues[cellOffset++] = 3;\n      cellValues[cellOffset++] = faceIdx * 3 + 0;\n      cellValues[cellOffset++] = faceIdx * 3 + 1;\n      cellValues[cellOffset++] = faceIdx * 3 + 2;\n      cellDataValues[faceIdx] = dataView.getUint16(offset + 48, true);\n    } // Rotate points\n\n    var orientationField = 'SPACE';\n    if (orientationField in header && header[orientationField] !== 'LPS') {\n      var XYZ = header[orientationField];\n      var mat4 = new Float32Array(16);\n      mat4[15] = 1;\n      switch (XYZ[0]) {\n        case 'L':\n          mat4[0] = 1;\n          break;\n        case 'R':\n          mat4[0] = -1;\n          break;\n        default:\n          vtkErrorMacro(\"Can not convert STL file from \".concat(XYZ, \" to LPS space: \") + \"permutations not supported. Use itk.js STL reader instead.\");\n          return;\n      }\n      switch (XYZ[1]) {\n        case 'P':\n          mat4[5] = 1;\n          break;\n        case 'A':\n          mat4[5] = -1;\n          break;\n        default:\n          vtkErrorMacro(\"Can not convert STL file from \".concat(XYZ, \" to LPS space: \") + \"permutations not supported. Use itk.js STL reader instead.\");\n          return;\n      }\n      switch (XYZ[2]) {\n        case 'S':\n          mat4[10] = 1;\n          break;\n        case 'I':\n          mat4[10] = -1;\n          break;\n        default:\n          vtkErrorMacro(\"Can not convert STL file from \".concat(XYZ, \" to LPS space: \") + \"permutations not supported. Use itk.js STL reader instead.\");\n          return;\n      }\n      vtkMatrixBuilder.buildFromDegree().setMatrix(mat4).apply(pointValues).apply(normalValues);\n    }\n    var polydata = vtkPolyData.newInstance();\n    polydata.getPoints().setData(pointValues, 3);\n    polydata.getPolys().setData(cellValues);\n    polydata.getCellData().setScalars(vtkDataArray.newInstance({\n      name: 'Attribute',\n      values: cellDataValues\n    }));\n    polydata.getCellData().setNormals(vtkDataArray.newInstance({\n      name: 'Normals',\n      values: normalValues,\n      numberOfComponents: 3\n    })); // Add new output\n\n    model.output[0] = polydata;\n  };\n  publicAPI.parseAsText = function (content) {\n    if (!content) {\n      return;\n    }\n    if (content !== model.parseData) {\n      publicAPI.modified();\n    } else {\n      return;\n    }\n    model.parseData = content;\n    var lines = content.split('\\n');\n    var offset = 1;\n    var points = [];\n    var cellArray = [];\n    var cellNormals = [];\n    while (offset !== -1) {\n      offset = readTriangle(lines, offset, points, cellArray, cellNormals);\n    }\n    var polydata = vtkPolyData.newInstance();\n    polydata.getPoints().setData(Float32Array.from(points), 3);\n    polydata.getPolys().setData(Uint32Array.from(cellArray));\n    polydata.getCellData().setNormals(vtkDataArray.newInstance({\n      name: 'Normals',\n      values: Float32Array.from(cellNormals),\n      numberOfComponents: 3\n    })); // Add new output\n\n    model.output[0] = polydata;\n  };\n  publicAPI.requestData = function (inData, outData) {\n    publicAPI.parse(model.parseData);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {// baseURL: null,\n  // dataAccessHelper: null,\n  // url: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url', 'baseURL']);\n  macro.setGet(publicAPI, model, ['dataAccessHelper']);\n  macro.algo(publicAPI, model, 0, 1); // vtkSTLReader methods\n\n  vtkSTLReader(publicAPI, model); // To support destructuring\n\n  if (!model.compression) {\n    model.compression = null;\n  }\n  if (!model.progressCallback) {\n    model.progressCallback = null;\n  }\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSTLReader'); // ----------------------------------------------------------------------------\n\nvar vtkSTLReader$1 = {\n  extend: extend,\n  newInstance: newInstance\n};\nexport { vtkSTLReader$1 as default, extend, newInstance };","map":{"version":3,"names":["BinaryHelper","DataAccessHelper","macro","vtkDataArray","vtkMatrixBuilder","vtkPolyData","vtkErrorMacro","parseHeader","headerString","headerSubStr","split","fieldValues","filter","e","indexOf","header","i","length","fieldValueStr","fieldValueSubStr","addValuesToArray","src","dst","push","readTriangle","lines","offset","points","cellArray","cellNormals","normalLine","undefined","nbVertex","nbConsumedLines","firstVertexIndex","normal","slice","map","Number","line","coords","vtkSTLReader","publicAPI","model","classHierarchy","dataAccessHelper","get","fetchData","url","option","arguments","compression","progressCallback","binary","fetchBinary","fetchText","setUrl","path","pop","baseURL","join","loadData","promise","then","parse","content","parseAsText","parseAsArrayBuffer","parseData","modified","isBinary","dview","DataView","numTriangles","getUint32","byteLength","arrayBufferToString","headerData","headerStr","dataView","nbFaces","pointValues","Float32Array","normalValues","cellValues","Uint32Array","cellDataValues","Uint16Array","cellOffset","faceIdx","getFloat32","getUint16","orientationField","XYZ","mat4","concat","buildFromDegree","setMatrix","apply","polydata","newInstance","getPoints","setData","getPolys","getCellData","setScalars","name","values","setNormals","numberOfComponents","output","from","requestData","inData","outData","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","setGet","algo","vtkSTLReader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Geometry/STLReader.js"],"sourcesContent":["import BinaryHelper from '../Core/BinaryHelper.js';\nimport DataAccessHelper from '../Core/DataAccessHelper.js';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport '../Core/DataAccessHelper/LiteHttpDataAccessHelper.js';\n\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\n\nfunction parseHeader(headerString) {\n  var headerSubStr = headerString.split(' ');\n  var fieldValues = headerSubStr.filter(function (e) {\n    return e.indexOf('=') > -1;\n  });\n  var header = {};\n\n  for (var i = 0; i < fieldValues.length; ++i) {\n    var fieldValueStr = fieldValues[i];\n    var fieldValueSubStr = fieldValueStr.split('=');\n\n    if (fieldValueSubStr.length === 2) {\n      header[fieldValueSubStr[0]] = fieldValueSubStr[1];\n    }\n  }\n\n  return header;\n}\n\nfunction addValuesToArray(src, dst) {\n  for (var i = 0; i < src.length; i++) {\n    dst.push(src[i]);\n  }\n} // facet normal ni nj nk\n//     outer loop\n//         vertex v1x v1y v1z\n//         vertex v2x v2y v2z\n//         vertex v3x v3y v3z\n//     endloop\n// endfacet\n\n\nfunction readTriangle(lines, offset, points, cellArray, cellNormals) {\n  var normalLine = lines[offset];\n\n  if (normalLine === undefined) {\n    return -1;\n  }\n\n  if (normalLine.indexOf('endfacet') !== -1) {\n    return offset + 1;\n  }\n\n  if (normalLine.indexOf('facet') === -1) {\n    return offset + 1; // Move to next line\n  }\n\n  var nbVertex = 0;\n  var nbConsumedLines = 2;\n  var firstVertexIndex = points.length / 3;\n  var normal = normalLine.split(/[ \\t]+/).filter(function (i) {\n    return i;\n  }).slice(-3).map(Number);\n  addValuesToArray(normal, cellNormals);\n\n  while (lines[offset + nbConsumedLines].indexOf('vertex') !== -1) {\n    var line = lines[offset + nbConsumedLines];\n    var coords = line.split(/[ \\t]+/).filter(function (i) {\n      return i;\n    }).slice(-3).map(Number);\n    addValuesToArray(coords, points);\n    nbVertex++;\n    nbConsumedLines++;\n  }\n\n  cellArray.push(nbVertex);\n\n  for (var i = 0; i < nbVertex; i++) {\n    cellArray.push(firstVertexIndex + i);\n  }\n\n  while (lines[offset + nbConsumedLines] && lines[offset + nbConsumedLines].indexOf('endfacet') !== -1) {\n    nbConsumedLines++;\n  } // +1 (endfacet) +1 (next facet)\n\n\n  return offset + nbConsumedLines + 2;\n} // ----------------------------------------------------------------------------\n// vtkSTLReader methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkSTLReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSTLReader'); // Create default dataAccessHelper if not available\n\n  if (!model.dataAccessHelper) {\n    model.dataAccessHelper = DataAccessHelper.get('http');\n  } // Internal method to fetch Array\n\n\n  function fetchData(url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var compression = option.compression !== undefined ? option.compression : model.compression;\n    var progressCallback = option.progressCallback !== undefined ? option.progressCallback : model.progressCallback;\n\n    if (option.binary) {\n      return model.dataAccessHelper.fetchBinary(url, {\n        compression: compression,\n        progressCallback: progressCallback\n      });\n    }\n\n    return model.dataAccessHelper.fetchText(publicAPI, url, {\n      compression: compression,\n      progressCallback: progressCallback\n    });\n  } // Set DataSet url\n\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      binary: true\n    };\n    model.url = url; // Remove the file in the URL\n\n    var path = url.split('/');\n    path.pop();\n    model.baseURL = path.join('/'); // Fetch metadata\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n\n  publicAPI.loadData = function () {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var promise = fetchData(model.url, option);\n    promise.then(publicAPI.parse);\n    return promise;\n  };\n\n  publicAPI.parse = function (content) {\n    if (typeof content === 'string') {\n      publicAPI.parseAsText(content);\n    } else {\n      publicAPI.parseAsArrayBuffer(content);\n    }\n  };\n\n  publicAPI.parseAsArrayBuffer = function (content) {\n    if (!content) {\n      return;\n    }\n\n    if (content !== model.parseData) {\n      publicAPI.modified();\n    } else {\n      return;\n    }\n\n    model.parseData = content; // ascii/binary detection\n\n    var isBinary = false; // 80=STL header, 4=uint32 of num of triangles (le)\n\n    var dview = new DataView(content, 0, 80 + 4);\n    var numTriangles = dview.getUint32(80, true); // 50 bytes per triangle\n\n    isBinary = 84 + numTriangles * 50 === content.byteLength; // Check if ascii format\n\n    if (!isBinary) {\n      publicAPI.parseAsText(BinaryHelper.arrayBufferToString(content));\n      return;\n    } // Binary parsing\n    // Header\n\n\n    var headerData = content.slice(0, 80);\n    var headerStr = BinaryHelper.arrayBufferToString(headerData);\n    var header = parseHeader(headerStr); // Data\n\n    var dataView = new DataView(content, 84); // global.dataview = dataView;\n\n    var nbFaces = (content.byteLength - 84) / 50;\n    var pointValues = new Float32Array(nbFaces * 9);\n    var normalValues = new Float32Array(nbFaces * 3);\n    var cellValues = new Uint32Array(nbFaces * 4);\n    var cellDataValues = new Uint16Array(nbFaces);\n    var cellOffset = 0;\n\n    for (var faceIdx = 0; faceIdx < nbFaces; faceIdx++) {\n      var offset = faceIdx * 50;\n      normalValues[faceIdx * 3 + 0] = dataView.getFloat32(offset + 0, true);\n      normalValues[faceIdx * 3 + 1] = dataView.getFloat32(offset + 4, true);\n      normalValues[faceIdx * 3 + 2] = dataView.getFloat32(offset + 8, true);\n      pointValues[faceIdx * 9 + 0] = dataView.getFloat32(offset + 12, true);\n      pointValues[faceIdx * 9 + 1] = dataView.getFloat32(offset + 16, true);\n      pointValues[faceIdx * 9 + 2] = dataView.getFloat32(offset + 20, true);\n      pointValues[faceIdx * 9 + 3] = dataView.getFloat32(offset + 24, true);\n      pointValues[faceIdx * 9 + 4] = dataView.getFloat32(offset + 28, true);\n      pointValues[faceIdx * 9 + 5] = dataView.getFloat32(offset + 32, true);\n      pointValues[faceIdx * 9 + 6] = dataView.getFloat32(offset + 36, true);\n      pointValues[faceIdx * 9 + 7] = dataView.getFloat32(offset + 40, true);\n      pointValues[faceIdx * 9 + 8] = dataView.getFloat32(offset + 44, true);\n      cellValues[cellOffset++] = 3;\n      cellValues[cellOffset++] = faceIdx * 3 + 0;\n      cellValues[cellOffset++] = faceIdx * 3 + 1;\n      cellValues[cellOffset++] = faceIdx * 3 + 2;\n      cellDataValues[faceIdx] = dataView.getUint16(offset + 48, true);\n    } // Rotate points\n\n\n    var orientationField = 'SPACE';\n\n    if (orientationField in header && header[orientationField] !== 'LPS') {\n      var XYZ = header[orientationField];\n      var mat4 = new Float32Array(16);\n      mat4[15] = 1;\n\n      switch (XYZ[0]) {\n        case 'L':\n          mat4[0] = 1;\n          break;\n\n        case 'R':\n          mat4[0] = -1;\n          break;\n\n        default:\n          vtkErrorMacro(\"Can not convert STL file from \".concat(XYZ, \" to LPS space: \") + \"permutations not supported. Use itk.js STL reader instead.\");\n          return;\n      }\n\n      switch (XYZ[1]) {\n        case 'P':\n          mat4[5] = 1;\n          break;\n\n        case 'A':\n          mat4[5] = -1;\n          break;\n\n        default:\n          vtkErrorMacro(\"Can not convert STL file from \".concat(XYZ, \" to LPS space: \") + \"permutations not supported. Use itk.js STL reader instead.\");\n          return;\n      }\n\n      switch (XYZ[2]) {\n        case 'S':\n          mat4[10] = 1;\n          break;\n\n        case 'I':\n          mat4[10] = -1;\n          break;\n\n        default:\n          vtkErrorMacro(\"Can not convert STL file from \".concat(XYZ, \" to LPS space: \") + \"permutations not supported. Use itk.js STL reader instead.\");\n          return;\n      }\n\n      vtkMatrixBuilder.buildFromDegree().setMatrix(mat4).apply(pointValues).apply(normalValues);\n    }\n\n    var polydata = vtkPolyData.newInstance();\n    polydata.getPoints().setData(pointValues, 3);\n    polydata.getPolys().setData(cellValues);\n    polydata.getCellData().setScalars(vtkDataArray.newInstance({\n      name: 'Attribute',\n      values: cellDataValues\n    }));\n    polydata.getCellData().setNormals(vtkDataArray.newInstance({\n      name: 'Normals',\n      values: normalValues,\n      numberOfComponents: 3\n    })); // Add new output\n\n    model.output[0] = polydata;\n  };\n\n  publicAPI.parseAsText = function (content) {\n    if (!content) {\n      return;\n    }\n\n    if (content !== model.parseData) {\n      publicAPI.modified();\n    } else {\n      return;\n    }\n\n    model.parseData = content;\n    var lines = content.split('\\n');\n    var offset = 1;\n    var points = [];\n    var cellArray = [];\n    var cellNormals = [];\n\n    while (offset !== -1) {\n      offset = readTriangle(lines, offset, points, cellArray, cellNormals);\n    }\n\n    var polydata = vtkPolyData.newInstance();\n    polydata.getPoints().setData(Float32Array.from(points), 3);\n    polydata.getPolys().setData(Uint32Array.from(cellArray));\n    polydata.getCellData().setNormals(vtkDataArray.newInstance({\n      name: 'Normals',\n      values: Float32Array.from(cellNormals),\n      numberOfComponents: 3\n    })); // Add new output\n\n    model.output[0] = polydata;\n  };\n\n  publicAPI.requestData = function (inData, outData) {\n    publicAPI.parse(model.parseData);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// baseURL: null,\n  // dataAccessHelper: null,\n  // url: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url', 'baseURL']);\n  macro.setGet(publicAPI, model, ['dataAccessHelper']);\n  macro.algo(publicAPI, model, 0, 1); // vtkSTLReader methods\n\n  vtkSTLReader(publicAPI, model); // To support destructuring\n\n  if (!model.compression) {\n    model.compression = null;\n  }\n\n  if (!model.progressCallback) {\n    model.progressCallback = null;\n  }\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSTLReader'); // ----------------------------------------------------------------------------\n\nvar vtkSTLReader$1 = {\n  extend: extend,\n  newInstance: newInstance\n};\n\nexport { vtkSTLReader$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
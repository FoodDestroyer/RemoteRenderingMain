{"ast":null,"code":"import macro from '../../macros.js';\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar PASS_TYPES = ['Build', 'Render']; // ----------------------------------------------------------------------------\n// vtkViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewNode'); // Builds myself.\n\n  publicAPI.build = function (prepass) {}; // Renders myself\n\n  publicAPI.render = function (prepass) {};\n  publicAPI.traverse = function (renderPass) {\n    // we can choose to do special\n    // traversal here based on pass\n    var passTraversal = renderPass.getTraverseOperation();\n    var fn = publicAPI[passTraversal];\n    if (fn) {\n      fn(renderPass);\n      return;\n    } // default traversal\n\n    publicAPI.apply(renderPass, true);\n    for (var index = 0; index < model.children.length; index++) {\n      model.children[index].traverse(renderPass);\n    }\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.apply = function (renderPass, prepass) {\n    var customRenderPass = publicAPI[renderPass.getOperation()];\n    if (customRenderPass) {\n      customRenderPass(prepass, renderPass);\n    }\n  };\n  publicAPI.getViewNodeFor = function (dataObject) {\n    if (model.renderable === dataObject) {\n      return publicAPI;\n    }\n    for (var index = 0; index < model.children.length; ++index) {\n      var child = model.children[index];\n      var vn = child.getViewNodeFor(dataObject);\n      if (vn) {\n        return vn;\n      }\n    }\n    return undefined;\n  };\n  publicAPI.getFirstAncestorOfType = function (type) {\n    if (!model._parent) {\n      return null;\n    }\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n    return model._parent.getFirstAncestorOfType(type);\n  }; // add a missing node/child for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n\n  publicAPI.addMissingNode = function (dobj) {\n    if (!dobj) {\n      return;\n    }\n    var result = model._renderableChildMap.get(dobj); // if found just mark as visited\n\n    if (result !== undefined) {\n      result.setVisited(true);\n    } else {\n      // otherwise create a node\n      var newNode = publicAPI.createViewNode(dobj);\n      if (newNode) {\n        newNode.setParent(publicAPI);\n        newNode.setVisited(true);\n        model._renderableChildMap.set(dobj, newNode);\n        model.children.push(newNode);\n      }\n    }\n  }; // add missing nodes/children for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n\n  publicAPI.addMissingNodes = function (dataObjs) {\n    if (!dataObjs || !dataObjs.length) {\n      return;\n    }\n    for (var index = 0; index < dataObjs.length; ++index) {\n      var dobj = dataObjs[index];\n      var result = model._renderableChildMap.get(dobj); // if found just mark as visited\n\n      if (result !== undefined) {\n        result.setVisited(true);\n      } else {\n        // otherwise create a node\n        var newNode = publicAPI.createViewNode(dobj);\n        if (newNode) {\n          newNode.setParent(publicAPI);\n          newNode.setVisited(true);\n          model._renderableChildMap.set(dobj, newNode);\n          model.children.push(newNode);\n        }\n      }\n    }\n  }; // ability to add children that have no renderable use in the same manner\n  // as addMissingNodes This case is when a normal viewnode wants to\n  // delegate passes to a helper or child that doeasn't map to a clear\n  // renderable or any renderable\n\n  publicAPI.addMissingChildren = function (children) {\n    if (!children || !children.length) {\n      return;\n    }\n    for (var index = 0; index < children.length; ++index) {\n      var child = children[index];\n      var cindex = model.children.indexOf(child);\n      if (cindex === -1) {\n        child.setParent(publicAPI);\n        model.children.push(child);\n      }\n      child.setVisited(true);\n    }\n  };\n  publicAPI.prepareNodes = function () {\n    for (var index = 0; index < model.children.length; ++index) {\n      model.children[index].setVisited(false);\n    }\n  };\n  publicAPI.setVisited = function (val) {\n    model.visited = val;\n  };\n  publicAPI.removeUnusedNodes = function () {\n    var visitedCount = 0;\n    for (var index = 0; index < model.children.length; ++index) {\n      var child = model.children[index];\n      var visited = child.getVisited();\n      if (visited) {\n        model.children[visitedCount++] = child;\n        child.setVisited(false);\n      } else {\n        var renderable = child.getRenderable();\n        if (renderable) {\n          model._renderableChildMap.delete(renderable);\n        }\n        child.delete();\n      }\n    }\n    model.children.length = visitedCount;\n  };\n  publicAPI.createViewNode = function (dataObj) {\n    if (!model.myFactory) {\n      vtkErrorMacro('Cannot create view nodes without my own factory');\n      return null;\n    }\n    var ret = model.myFactory.createNode(dataObj);\n    if (ret) {\n      ret.setRenderable(dataObj);\n    }\n    return ret;\n  };\n  var parentDelete = publicAPI.delete;\n  publicAPI.delete = function () {\n    for (var i = 0; i < model.children.length; i++) {\n      model.children[i].delete();\n    }\n    parentDelete();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  // _parent: null,\n  renderable: null,\n  myFactory: null,\n  children: [],\n  visited: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  model._renderableChildMap = new Map();\n  macro.get(publicAPI, model, ['visited']);\n  macro.setGet(publicAPI, model, ['_parent', 'renderable', 'myFactory']);\n  macro.getArray(publicAPI, model, ['children']);\n  macro.moveToProtected(publicAPI, model, ['parent']); // Object methods\n\n  vtkViewNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkViewNode'); // ----------------------------------------------------------------------------\n\nvar vtkViewNode$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  PASS_TYPES: PASS_TYPES\n};\nexport { vtkViewNode$1 as default };","map":{"version":3,"names":["macro","vtkErrorMacro","PASS_TYPES","vtkViewNode","publicAPI","model","classHierarchy","push","build","prepass","render","traverse","renderPass","passTraversal","getTraverseOperation","fn","apply","index","children","length","customRenderPass","getOperation","getViewNodeFor","dataObject","renderable","child","vn","undefined","getFirstAncestorOfType","type","_parent","isA","addMissingNode","dobj","result","_renderableChildMap","get","setVisited","newNode","createViewNode","setParent","set","addMissingNodes","dataObjs","addMissingChildren","cindex","indexOf","prepareNodes","val","visited","removeUnusedNodes","visitedCount","getVisited","getRenderable","delete","dataObj","myFactory","ret","createNode","setRenderable","parentDelete","i","DEFAULT_VALUES","extend","initialValues","arguments","Object","assign","obj","event","Map","setGet","getArray","moveToProtected","newInstance","vtkViewNode$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js"],"sourcesContent":["import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar PASS_TYPES = ['Build', 'Render']; // ----------------------------------------------------------------------------\n// vtkViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewNode'); // Builds myself.\n\n  publicAPI.build = function (prepass) {}; // Renders myself\n\n\n  publicAPI.render = function (prepass) {};\n\n  publicAPI.traverse = function (renderPass) {\n    // we can choose to do special\n    // traversal here based on pass\n    var passTraversal = renderPass.getTraverseOperation();\n    var fn = publicAPI[passTraversal];\n\n    if (fn) {\n      fn(renderPass);\n      return;\n    } // default traversal\n\n\n    publicAPI.apply(renderPass, true);\n\n    for (var index = 0; index < model.children.length; index++) {\n      model.children[index].traverse(renderPass);\n    }\n\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.apply = function (renderPass, prepass) {\n    var customRenderPass = publicAPI[renderPass.getOperation()];\n\n    if (customRenderPass) {\n      customRenderPass(prepass, renderPass);\n    }\n  };\n\n  publicAPI.getViewNodeFor = function (dataObject) {\n    if (model.renderable === dataObject) {\n      return publicAPI;\n    }\n\n    for (var index = 0; index < model.children.length; ++index) {\n      var child = model.children[index];\n      var vn = child.getViewNodeFor(dataObject);\n\n      if (vn) {\n        return vn;\n      }\n    }\n\n    return undefined;\n  };\n\n  publicAPI.getFirstAncestorOfType = function (type) {\n    if (!model._parent) {\n      return null;\n    }\n\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n\n    return model._parent.getFirstAncestorOfType(type);\n  }; // add a missing node/child for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n\n\n  publicAPI.addMissingNode = function (dobj) {\n    if (!dobj) {\n      return;\n    }\n\n    var result = model._renderableChildMap.get(dobj); // if found just mark as visited\n\n\n    if (result !== undefined) {\n      result.setVisited(true);\n    } else {\n      // otherwise create a node\n      var newNode = publicAPI.createViewNode(dobj);\n\n      if (newNode) {\n        newNode.setParent(publicAPI);\n        newNode.setVisited(true);\n\n        model._renderableChildMap.set(dobj, newNode);\n\n        model.children.push(newNode);\n      }\n    }\n  }; // add missing nodes/children for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n\n\n  publicAPI.addMissingNodes = function (dataObjs) {\n    if (!dataObjs || !dataObjs.length) {\n      return;\n    }\n\n    for (var index = 0; index < dataObjs.length; ++index) {\n      var dobj = dataObjs[index];\n\n      var result = model._renderableChildMap.get(dobj); // if found just mark as visited\n\n\n      if (result !== undefined) {\n        result.setVisited(true);\n      } else {\n        // otherwise create a node\n        var newNode = publicAPI.createViewNode(dobj);\n\n        if (newNode) {\n          newNode.setParent(publicAPI);\n          newNode.setVisited(true);\n\n          model._renderableChildMap.set(dobj, newNode);\n\n          model.children.push(newNode);\n        }\n      }\n    }\n  }; // ability to add children that have no renderable use in the same manner\n  // as addMissingNodes This case is when a normal viewnode wants to\n  // delegate passes to a helper or child that doeasn't map to a clear\n  // renderable or any renderable\n\n\n  publicAPI.addMissingChildren = function (children) {\n    if (!children || !children.length) {\n      return;\n    }\n\n    for (var index = 0; index < children.length; ++index) {\n      var child = children[index];\n      var cindex = model.children.indexOf(child);\n\n      if (cindex === -1) {\n        child.setParent(publicAPI);\n        model.children.push(child);\n      }\n\n      child.setVisited(true);\n    }\n  };\n\n  publicAPI.prepareNodes = function () {\n    for (var index = 0; index < model.children.length; ++index) {\n      model.children[index].setVisited(false);\n    }\n  };\n\n  publicAPI.setVisited = function (val) {\n    model.visited = val;\n  };\n\n  publicAPI.removeUnusedNodes = function () {\n    var visitedCount = 0;\n\n    for (var index = 0; index < model.children.length; ++index) {\n      var child = model.children[index];\n      var visited = child.getVisited();\n\n      if (visited) {\n        model.children[visitedCount++] = child;\n        child.setVisited(false);\n      } else {\n        var renderable = child.getRenderable();\n\n        if (renderable) {\n          model._renderableChildMap.delete(renderable);\n        }\n\n        child.delete();\n      }\n    }\n\n    model.children.length = visitedCount;\n  };\n\n  publicAPI.createViewNode = function (dataObj) {\n    if (!model.myFactory) {\n      vtkErrorMacro('Cannot create view nodes without my own factory');\n      return null;\n    }\n\n    var ret = model.myFactory.createNode(dataObj);\n\n    if (ret) {\n      ret.setRenderable(dataObj);\n    }\n\n    return ret;\n  };\n\n  var parentDelete = publicAPI.delete;\n\n  publicAPI.delete = function () {\n    for (var i = 0; i < model.children.length; i++) {\n      model.children[i].delete();\n    }\n\n    parentDelete();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // _parent: null,\n  renderable: null,\n  myFactory: null,\n  children: [],\n  visited: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  model._renderableChildMap = new Map();\n  macro.get(publicAPI, model, ['visited']);\n  macro.setGet(publicAPI, model, ['_parent', 'renderable', 'myFactory']);\n  macro.getArray(publicAPI, model, ['children']);\n  macro.moveToProtected(publicAPI, model, ['parent']); // Object methods\n\n  vtkViewNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\n\nvar newInstance = macro.newInstance(extend, 'vtkViewNode'); // ----------------------------------------------------------------------------\n\nvar vtkViewNode$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  PASS_TYPES: PASS_TYPES\n};\n\nexport { vtkViewNode$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
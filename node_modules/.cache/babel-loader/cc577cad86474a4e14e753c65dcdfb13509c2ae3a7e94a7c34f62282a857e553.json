{"ast":null,"code":"import { mat4, vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkVolumeProperty from './VolumeProperty.js';\nvar vtkDebugMacro = macro.vtkDebugMacro; // ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n  publicAPI.getVolumes = function () {\n    return publicAPI;\n  };\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n  publicAPI.getProperty = function () {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = function () {\n    if (model.mapper === null) {\n      return model.bounds;\n    } // Check for the special case when the mapper's bounds are unknown\n\n    var bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    } // Check for the special case when the actor is empty.\n\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    } // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n\n    var zip = function zip(rows) {\n      return rows[0].map(function (_, c) {\n        return rows.map(function (row) {\n          return row[c];\n        });\n      });\n    };\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce(function (a, b) {\n      return a && b[0] === b[1];\n    }, true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(function (x) {\n        return x;\n      });\n      var bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      var tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(function (pt) {\n        return vec3.transformMat4(pt, pt, tmp4);\n      });\n      /* eslint-disable no-multi-assign */\n\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map(function (d, i) {\n        return i % 2 === 0 ? bbox.reduce(function (a, b) {\n          return a > b[i / 2] ? b[i / 2] : a;\n        }, d) : bbox.reduce(function (a, b) {\n          return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;\n        }, d);\n      });\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getMTime = function () {\n    var mt = model.mtime;\n    if (model.property !== null) {\n      var time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = function () {\n    var mt = model.mtime;\n    if (model.mapper !== null) {\n      var time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkProp3D.extend(publicAPI, model, initialValues); // vtkTimeStamp\n\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime); // Build VTK API\n\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6); // Object methods\n\n  vtkVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolume'); // ----------------------------------------------------------------------------\n\nvar vtkVolume$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkVolume$1 as default, extend, newInstance };","map":{"version":3,"names":["mat4","vec3","macro","vtkBoundingBox","vtkProp3D","vtkVolumeProperty","vtkDebugMacro","vtkVolume","publicAPI","model","classHierarchy","push","getVolumes","makeProperty","newInstance","getProperty","property","getBounds","mapper","bounds","bds","length","mapperBounds","concat","boundsMTime","modified","zip","rows","map","_","c","row","reduce","a","b","getMTime","x","bbox","getCorners","computeMatrix","tmp4","Float64Array","transpose","matrix","forEach","pt","transformMat4","Number","MAX_VALUE","d","i","mt","mtime","time","getRedrawMTime","getInput","getInputAlgorithm","update","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","set","setGet","getArray","vtkVolume$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/Volume.js"],"sourcesContent":["import { mat4, vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkVolumeProperty from './VolumeProperty.js';\n\nvar vtkDebugMacro = macro.vtkDebugMacro; // ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n\n  publicAPI.getVolumes = function () {\n    return publicAPI;\n  };\n\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n\n  publicAPI.getProperty = function () {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n\n    return model.property;\n  };\n\n  publicAPI.getBounds = function () {\n    if (model.mapper === null) {\n      return model.bounds;\n    } // Check for the special case when the mapper's bounds are unknown\n\n\n    var bds = model.mapper.getBounds();\n\n    if (!bds || bds.length !== 6) {\n      return bds;\n    } // Check for the special case when the actor is empty.\n\n\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    } // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n\n\n    var zip = function zip(rows) {\n      return rows[0].map(function (_, c) {\n        return rows.map(function (row) {\n          return row[c];\n        });\n      });\n    };\n\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce(function (a, b) {\n      return a && b[0] === b[1];\n    }, true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(function (x) {\n        return x;\n      });\n      var bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      var tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(function (pt) {\n        return vec3.transformMat4(pt, pt, tmp4);\n      });\n      /* eslint-disable no-multi-assign */\n\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map(function (d, i) {\n        return i % 2 === 0 ? bbox.reduce(function (a, b) {\n          return a > b[i / 2] ? b[i / 2] : a;\n        }, d) : bbox.reduce(function (a, b) {\n          return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;\n        }, d);\n      });\n      model.boundsMTime.modified();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = function () {\n    var mt = model.mtime;\n\n    if (model.property !== null) {\n      var time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = function () {\n    var mt = model.mtime;\n\n    if (model.mapper !== null) {\n      var time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n\n    return mt;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkProp3D.extend(publicAPI, model, initialValues); // vtkTimeStamp\n\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime); // Build VTK API\n\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6); // Object methods\n\n  vtkVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolume'); // ----------------------------------------------------------------------------\n\nvar vtkVolume$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkVolume$1 as default, extend, newInstance };\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,IAAI,QAAQ,WAAW;AACtC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,cAAc,MAAM,uCAAuC;AAClE,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,IAAIC,aAAa,GAAGJ,KAAK,CAACI,aAAa,CAAC,CAAC;AACzC;AACA;;AAEA,SAASC,SAASA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACnC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,WAAW,CAAC;EAEtCH,SAAS,CAACI,UAAU,GAAG,YAAY;IACjC,OAAOJ,SAAS;EAClB,CAAC;EAEDA,SAAS,CAACK,YAAY,GAAGR,iBAAiB,CAACS,WAAW;EAEtDN,SAAS,CAACO,WAAW,GAAG,YAAY;IAClC,IAAIN,KAAK,CAACO,QAAQ,KAAK,IAAI,EAAE;MAC3BP,KAAK,CAACO,QAAQ,GAAGR,SAAS,CAACK,YAAY,CAAC,CAAC;IAC3C;IAEA,OAAOJ,KAAK,CAACO,QAAQ;EACvB,CAAC;EAEDR,SAAS,CAACS,SAAS,GAAG,YAAY;IAChC,IAAIR,KAAK,CAACS,MAAM,KAAK,IAAI,EAAE;MACzB,OAAOT,KAAK,CAACU,MAAM;IACrB,CAAC,CAAC;;IAGF,IAAIC,GAAG,GAAGX,KAAK,CAACS,MAAM,CAACD,SAAS,CAAC,CAAC;IAElC,IAAI,CAACG,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAK,CAAC,EAAE;MAC5B,OAAOD,GAAG;IACZ,CAAC,CAAC;;IAGF,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,EAAE;MACnBX,KAAK,CAACa,YAAY,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;;MAEnCd,KAAK,CAACU,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACpCV,KAAK,CAACe,WAAW,CAACC,QAAQ,CAAC,CAAC;MAC5B,OAAOL,GAAG;IACZ,CAAC,CAAC;IACF;IACA;IACA;IACA;;IAGA,IAAIM,GAAG,GAAG,SAASA,GAAGA,CAACC,IAAI,EAAE;MAC3B,OAAOA,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;QACjC,OAAOH,IAAI,CAACC,GAAG,CAAC,UAAUG,GAAG,EAAE;UAC7B,OAAOA,GAAG,CAACD,CAAC,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,CAACrB,KAAK,CAACa,YAAY,IAAI,CAACI,GAAG,CAAC,CAACN,GAAG,EAAEX,KAAK,CAACa,YAAY,CAAC,CAAC,CAACU,MAAM,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MAChF,OAAOD,CAAC,IAAIC,CAAC,CAAC,CAAC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC,IAAI1B,SAAS,CAAC2B,QAAQ,CAAC,CAAC,GAAG1B,KAAK,CAACe,WAAW,CAACW,QAAQ,CAAC,CAAC,EAAE;MAC/D7B,aAAa,CAAC,uBAAuB,CAAC;MACtCG,KAAK,CAACa,YAAY,GAAGF,GAAG,CAACQ,GAAG,CAAC,UAAUQ,CAAC,EAAE;QACxC,OAAOA,CAAC;MACV,CAAC,CAAC;MACF,IAAIC,IAAI,GAAG,EAAE;MACblC,cAAc,CAACmC,UAAU,CAAClB,GAAG,EAAEiB,IAAI,CAAC;MACpC7B,SAAS,CAAC+B,aAAa,CAAC,CAAC;MACzB,IAAIC,IAAI,GAAG,IAAIC,YAAY,CAAC,EAAE,CAAC;MAC/BzC,IAAI,CAAC0C,SAAS,CAACF,IAAI,EAAE/B,KAAK,CAACkC,MAAM,CAAC;MAClCN,IAAI,CAACO,OAAO,CAAC,UAAUC,EAAE,EAAE;QACzB,OAAO5C,IAAI,CAAC6C,aAAa,CAACD,EAAE,EAAEA,EAAE,EAAEL,IAAI,CAAC;MACzC,CAAC,CAAC;MACF;;MAEA/B,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,GAAGV,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,GAAGV,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,GAAG4B,MAAM,CAACC,SAAS;MACtEvC,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,GAAGV,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,GAAGV,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC4B,MAAM,CAACC,SAAS;MACvE;;MAEAvC,KAAK,CAACU,MAAM,GAAGV,KAAK,CAACU,MAAM,CAACS,GAAG,CAAC,UAAUqB,CAAC,EAAEC,CAAC,EAAE;QAC9C,OAAOA,CAAC,GAAG,CAAC,KAAK,CAAC,GAAGb,IAAI,CAACL,MAAM,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;UAC/C,OAAOD,CAAC,GAAGC,CAAC,CAACgB,CAAC,GAAG,CAAC,CAAC,GAAGhB,CAAC,CAACgB,CAAC,GAAG,CAAC,CAAC,GAAGjB,CAAC;QACpC,CAAC,EAAEgB,CAAC,CAAC,GAAGZ,IAAI,CAACL,MAAM,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;UAClC,OAAOD,CAAC,GAAGC,CAAC,CAAC,CAACgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAACgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAGjB,CAAC;QAChD,CAAC,EAAEgB,CAAC,CAAC;MACP,CAAC,CAAC;MACFxC,KAAK,CAACe,WAAW,CAACC,QAAQ,CAAC,CAAC;IAC9B;IAEA,OAAOhB,KAAK,CAACU,MAAM;EACrB,CAAC;EAEDX,SAAS,CAAC2B,QAAQ,GAAG,YAAY;IAC/B,IAAIgB,EAAE,GAAG1C,KAAK,CAAC2C,KAAK;IAEpB,IAAI3C,KAAK,CAACO,QAAQ,KAAK,IAAI,EAAE;MAC3B,IAAIqC,IAAI,GAAG5C,KAAK,CAACO,QAAQ,CAACmB,QAAQ,CAAC,CAAC;MACpCgB,EAAE,GAAGE,IAAI,GAAGF,EAAE,GAAGE,IAAI,GAAGF,EAAE;IAC5B;IAEA,OAAOA,EAAE;EACX,CAAC;EAED3C,SAAS,CAAC8C,cAAc,GAAG,YAAY;IACrC,IAAIH,EAAE,GAAG1C,KAAK,CAAC2C,KAAK;IAEpB,IAAI3C,KAAK,CAACS,MAAM,KAAK,IAAI,EAAE;MACzB,IAAImC,IAAI,GAAG5C,KAAK,CAACS,MAAM,CAACiB,QAAQ,CAAC,CAAC;MAClCgB,EAAE,GAAGE,IAAI,GAAGF,EAAE,GAAGE,IAAI,GAAGF,EAAE;MAE1B,IAAI1C,KAAK,CAACS,MAAM,CAACqC,QAAQ,CAAC,CAAC,KAAK,IAAI,EAAE;QACpC;QACA9C,KAAK,CAACS,MAAM,CAACsC,iBAAiB,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;QACzCJ,IAAI,GAAG5C,KAAK,CAACS,MAAM,CAACqC,QAAQ,CAAC,CAAC,CAACpB,QAAQ,CAAC,CAAC;QACzCgB,EAAE,GAAGE,IAAI,GAAGF,EAAE,GAAGE,IAAI,GAAGF,EAAE;MAC5B;IACF;IAEA,OAAOA,EAAE;EACX,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIO,cAAc,GAAG;EACnBxC,MAAM,EAAE,IAAI;EACZF,QAAQ,EAAE,IAAI;EACdG,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;;AAEH,SAASwC,MAAMA,CAACnD,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAImD,aAAa,GAAGC,SAAS,CAACxC,MAAM,GAAG,CAAC,IAAIwC,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FE,MAAM,CAACC,MAAM,CAACvD,KAAK,EAAEiD,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErDxD,SAAS,CAACuD,MAAM,CAACnD,SAAS,EAAEC,KAAK,EAAEmD,aAAa,CAAC,CAAC,CAAC;;EAEnDnD,KAAK,CAACe,WAAW,GAAG,CAAC,CAAC;EACtBtB,KAAK,CAAC+D,GAAG,CAACxD,KAAK,CAACe,WAAW,CAAC,CAAC,CAAC;;EAE9BtB,KAAK,CAACgE,GAAG,CAAC1D,SAAS,EAAEC,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC;EACzCP,KAAK,CAACiE,MAAM,CAAC3D,SAAS,EAAEC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;EAC1CP,KAAK,CAACkE,QAAQ,CAAC5D,SAAS,EAAEC,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEjDF,SAAS,CAACC,SAAS,EAAEC,KAAK,CAAC;AAC7B,CAAC,CAAC;;AAEF,IAAIK,WAAW,GAAGZ,KAAK,CAACY,WAAW,CAAC6C,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;;AAE1D,IAAIU,WAAW,GAAG;EAChBvD,WAAW,EAAEA,WAAW;EACxB6C,MAAM,EAAEA;AACV,CAAC;AAED,SAASU,WAAW,IAAIC,OAAO,EAAEX,MAAM,EAAE7C,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
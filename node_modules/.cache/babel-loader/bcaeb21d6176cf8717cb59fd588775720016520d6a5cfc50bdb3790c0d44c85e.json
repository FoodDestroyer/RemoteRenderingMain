{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../../macros.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// vtkOBBNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOBBNode(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkOBBNode');\n  /**\n   * Copy a vtkOBBNode into an other one\n   * @param {vtkOBBNode} nodeSource\n   * @param {vtkOBBNode} nodeTarget\n   */\n\n  publicAPI.deepCopy = function (nodeSource) {\n    publicAPI.setCorner(nodeSource.getCorner());\n    var axes = nodeSource.getAxes();\n    publicAPI.setAxes([_toConsumableArray(axes[0]), _toConsumableArray(axes[1]), _toConsumableArray(axes[2])]);\n    publicAPI.setCells(_toConsumableArray(nodeSource.getCells()));\n    if (nodeSource.getKids()) {\n      var kids0 = vtkOBBNode.newInstance();\n      kids0.setParent(publicAPI);\n      var kids1 = vtkOBBNode.newInstance();\n      kids1.setParent(publicAPI);\n      kids0.deepCopy(nodeSource.getKids()[0]);\n      kids1.deepCopy(nodeSource.getKids()[1], kids1);\n      publicAPI.setKids(kids0, kids1);\n    }\n  };\n  publicAPI.getAxis = function (axis) {\n    return model.axes[axis];\n  };\n} // ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return _objectSpread({\n    corner: [0, 0, 0],\n    // center point of this node\n    axes: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n    // the axes defining the OBB - ordered from long->short\n    cells: []\n  }, initialValues);\n} // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  model.corner = [0, 0, 0];\n  model.axes = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n  model.parent = null; // parent node; null if root\n\n  model.kids = null; // two children of this node; nullptr if leaf\n\n  model.cells = []; // list of cells in node\n  // Build VTK API\n\n  macro.setGet(publicAPI, model, ['parent', 'cells', 'kids']); // macro.setGetArray(publicAPI, model, ['kids'], 2);\n\n  macro.setGetArray(publicAPI, model, ['corner', 'axes'], 3); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Object specific methods\n\n  vtkOBBNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOBBNode'); // ----------------------------------------------------------------------------\n\nvar vtkOBBNode$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkOBBNode$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","_toConsumableArray","macro","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkOBBNode","publicAPI","model","classHierarchy","deepCopy","nodeSource","setCorner","getCorner","axes","getAxes","setAxes","setCells","getCells","getKids","kids0","newInstance","setParent","kids1","setKids","getAxis","axis","defaultValues","initialValues","corner","cells","extend","undefined","assign","parent","kids","setGet","setGetArray","obj","vtkOBBNode$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/General/OBBTree/OBBNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../../macros.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// vtkOBBNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOBBNode(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkOBBNode');\n  /**\n   * Copy a vtkOBBNode into an other one\n   * @param {vtkOBBNode} nodeSource\n   * @param {vtkOBBNode} nodeTarget\n   */\n\n  publicAPI.deepCopy = function (nodeSource) {\n    publicAPI.setCorner(nodeSource.getCorner());\n    var axes = nodeSource.getAxes();\n    publicAPI.setAxes([_toConsumableArray(axes[0]), _toConsumableArray(axes[1]), _toConsumableArray(axes[2])]);\n    publicAPI.setCells(_toConsumableArray(nodeSource.getCells()));\n\n    if (nodeSource.getKids()) {\n      var kids0 = vtkOBBNode.newInstance();\n      kids0.setParent(publicAPI);\n      var kids1 = vtkOBBNode.newInstance();\n      kids1.setParent(publicAPI);\n      kids0.deepCopy(nodeSource.getKids()[0]);\n      kids1.deepCopy(nodeSource.getKids()[1], kids1);\n      publicAPI.setKids(kids0, kids1);\n    }\n  };\n\n  publicAPI.getAxis = function (axis) {\n    return model.axes[axis];\n  };\n} // ----------------------------------------------------------------------------\n\n\nfunction defaultValues(initialValues) {\n  return _objectSpread({\n    corner: [0, 0, 0],\n    // center point of this node\n    axes: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n    // the axes defining the OBB - ordered from long->short\n    cells: []\n  }, initialValues);\n} // ----------------------------------------------------------------------------\n\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  model.corner = [0, 0, 0];\n  model.axes = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n  model.parent = null; // parent node; null if root\n\n  model.kids = null; // two children of this node; nullptr if leaf\n\n  model.cells = []; // list of cells in node\n  // Build VTK API\n\n  macro.setGet(publicAPI, model, ['parent', 'cells', 'kids']); // macro.setGetArray(publicAPI, model, ['kids'], 2);\n\n  macro.setGetArray(publicAPI, model, ['corner', 'axes'], 3); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Object specific methods\n\n  vtkOBBNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOBBNode'); // ----------------------------------------------------------------------------\n\nvar vtkOBBNode$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkOBBNode$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
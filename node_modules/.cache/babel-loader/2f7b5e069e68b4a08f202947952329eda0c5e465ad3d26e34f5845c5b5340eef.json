{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport { IDENTITY } from '../Core/Math/Constants.js';\nimport { vec3, mat4 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport { f as vtkMath } from '../Core/Math/index.js';\n\n// vtkTransform methods\n// ----------------------------------------------------------------------------\n// eslint-disable-next-line import/no-mutable-exports\n\nvar newInstance;\nfunction vtkTransform(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAbstractTransform', 'vtkHomogeneousTransform', 'vtkTransform');\n  publicAPI.transformPoint = function (point, out) {\n    vec3.transformMat4(out, point, model.matrix);\n    return out;\n  };\n  publicAPI.transformPoints = function (points, out) {\n    var inPoint = new Float64Array(3);\n    var outPoint = new Float64Array(3);\n    for (var i = 0; i < points.length; i += 3) {\n      inPoint[0] = points[i];\n      inPoint[1] = points[i + 1];\n      inPoint[2] = points[i + 2];\n      vec3.transformMat4(outPoint, inPoint, model.matrix);\n      out[i] = outPoint[0];\n      out[i + 1] = outPoint[1];\n      out[i + 2] = outPoint[2];\n    }\n    return out;\n  };\n  /**\n   * Sets the internal state of the transform to PreMultiply.\n   * All subsequent operations will occur before those already represented in the current transformation.\n   * In homogeneous matrix notation, M = M*A where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n\n  publicAPI.preMultiply = function () {\n    publicAPI.setPreMultiplyFlag(true);\n  };\n  /**\n   * Sets the internal state of the transform to PostMultiply.\n   * All subsequent operations will occur after those already represented in the current transformation.\n   * In homogeneous matrix notation, M = A*M where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n\n  publicAPI.postMultiply = function () {\n    publicAPI.setPreMultiplyFlag(false);\n  };\n  publicAPI.transformMatrix = function (matrix, out) {\n    if (model.preMultiplyFlag) {\n      mat4.multiply(out, model.matrix, matrix);\n    } else {\n      mat4.multiply(out, matrix, model.matrix);\n    }\n    return out;\n  }; // Apply the transform to each matrix in the same way as transformMatrix\n  // `matrices` can be a contiguous array of float or an array of array\n\n  publicAPI.transformMatrices = function (matrices, out) {\n    var inMat = new Float64Array(16);\n    var outMat = new Float64Array(16);\n    var transform = model.preMultiplyFlag ? function () {\n      return mat4.multiply(outMat, model.matrix, inMat);\n    } : function () {\n      return mat4.multiply(outMat, inMat, model.matrix);\n    };\n    for (var i = 0; i < matrices.length; i += 16) {\n      for (var j = 0; j < 16; ++j) {\n        inMat[j] = matrices[i + j];\n      }\n      transform();\n      for (var _j = 0; _j < 16; ++_j) {\n        out[i + _j] = outMat[_j];\n      }\n    }\n    return out;\n  };\n  publicAPI.getInverse = function () {\n    return newInstance({\n      matrix: vtkMath.invertMatrix(Array.from(model.matrix), [], 4),\n      preMultiplyFlag: model.preMultiplyFlag\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  preMultiplyFlag: false,\n  matrix: _toConsumableArray(IDENTITY)\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['preMultiplyFlag']);\n  macro.setGetArray(publicAPI, model, ['matrix'], 16);\n  vtkTransform(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nnewInstance = macro.newInstance(extend, 'vtkTransform');\nvar vtkTransform$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkTransform$1 as default, extend, newInstance };","map":{"version":3,"names":["_toConsumableArray","IDENTITY","vec3","mat4","macro","f","vtkMath","newInstance","vtkTransform","publicAPI","model","classHierarchy","push","transformPoint","point","out","transformMat4","matrix","transformPoints","points","inPoint","Float64Array","outPoint","i","length","preMultiply","setPreMultiplyFlag","postMultiply","transformMatrix","preMultiplyFlag","multiply","transformMatrices","matrices","inMat","outMat","transform","j","_j","getInverse","invertMatrix","Array","from","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","setGet","setGetArray","vtkTransform$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/Transform/Transform.js"],"sourcesContent":["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport { IDENTITY } from '../Core/Math/Constants.js';\nimport { vec3, mat4 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport { f as vtkMath } from '../Core/Math/index.js';\n\n// vtkTransform methods\n// ----------------------------------------------------------------------------\n// eslint-disable-next-line import/no-mutable-exports\n\nvar newInstance;\n\nfunction vtkTransform(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAbstractTransform', 'vtkHomogeneousTransform', 'vtkTransform');\n\n  publicAPI.transformPoint = function (point, out) {\n    vec3.transformMat4(out, point, model.matrix);\n    return out;\n  };\n\n  publicAPI.transformPoints = function (points, out) {\n    var inPoint = new Float64Array(3);\n    var outPoint = new Float64Array(3);\n\n    for (var i = 0; i < points.length; i += 3) {\n      inPoint[0] = points[i];\n      inPoint[1] = points[i + 1];\n      inPoint[2] = points[i + 2];\n      vec3.transformMat4(outPoint, inPoint, model.matrix);\n      out[i] = outPoint[0];\n      out[i + 1] = outPoint[1];\n      out[i + 2] = outPoint[2];\n    }\n\n    return out;\n  };\n  /**\n   * Sets the internal state of the transform to PreMultiply.\n   * All subsequent operations will occur before those already represented in the current transformation.\n   * In homogeneous matrix notation, M = M*A where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n\n\n  publicAPI.preMultiply = function () {\n    publicAPI.setPreMultiplyFlag(true);\n  };\n  /**\n   * Sets the internal state of the transform to PostMultiply.\n   * All subsequent operations will occur after those already represented in the current transformation.\n   * In homogeneous matrix notation, M = A*M where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n\n\n  publicAPI.postMultiply = function () {\n    publicAPI.setPreMultiplyFlag(false);\n  };\n\n  publicAPI.transformMatrix = function (matrix, out) {\n    if (model.preMultiplyFlag) {\n      mat4.multiply(out, model.matrix, matrix);\n    } else {\n      mat4.multiply(out, matrix, model.matrix);\n    }\n\n    return out;\n  }; // Apply the transform to each matrix in the same way as transformMatrix\n  // `matrices` can be a contiguous array of float or an array of array\n\n\n  publicAPI.transformMatrices = function (matrices, out) {\n    var inMat = new Float64Array(16);\n    var outMat = new Float64Array(16);\n    var transform = model.preMultiplyFlag ? function () {\n      return mat4.multiply(outMat, model.matrix, inMat);\n    } : function () {\n      return mat4.multiply(outMat, inMat, model.matrix);\n    };\n\n    for (var i = 0; i < matrices.length; i += 16) {\n      for (var j = 0; j < 16; ++j) {\n        inMat[j] = matrices[i + j];\n      }\n\n      transform();\n\n      for (var _j = 0; _j < 16; ++_j) {\n        out[i + _j] = outMat[_j];\n      }\n    }\n\n    return out;\n  };\n\n  publicAPI.getInverse = function () {\n    return newInstance({\n      matrix: vtkMath.invertMatrix(Array.from(model.matrix), [], 4),\n      preMultiplyFlag: model.preMultiplyFlag\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  preMultiplyFlag: false,\n  matrix: _toConsumableArray(IDENTITY)\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['preMultiplyFlag']);\n  macro.setGetArray(publicAPI, model, ['matrix'], 16);\n  vtkTransform(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nnewInstance = macro.newInstance(extend, 'vtkTransform');\n\nvar vtkTransform$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkTransform$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,0CAA0C;AACzE,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,SAASC,IAAI,EAAEC,IAAI,QAAQ,WAAW;AACtC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,CAAC,IAAIC,OAAO,QAAQ,uBAAuB;;AAEpD;AACA;AACA;;AAEA,IAAIC,WAAW;AAEf,SAASC,YAAYA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACtC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,sBAAsB,EAAE,yBAAyB,EAAE,cAAc,CAAC;EAE5FH,SAAS,CAACI,cAAc,GAAG,UAAUC,KAAK,EAAEC,GAAG,EAAE;IAC/Cb,IAAI,CAACc,aAAa,CAACD,GAAG,EAAED,KAAK,EAAEJ,KAAK,CAACO,MAAM,CAAC;IAC5C,OAAOF,GAAG;EACZ,CAAC;EAEDN,SAAS,CAACS,eAAe,GAAG,UAAUC,MAAM,EAAEJ,GAAG,EAAE;IACjD,IAAIK,OAAO,GAAG,IAAIC,YAAY,CAAC,CAAC,CAAC;IACjC,IAAIC,QAAQ,GAAG,IAAID,YAAY,CAAC,CAAC,CAAC;IAElC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACzCH,OAAO,CAAC,CAAC,CAAC,GAAGD,MAAM,CAACI,CAAC,CAAC;MACtBH,OAAO,CAAC,CAAC,CAAC,GAAGD,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC;MAC1BH,OAAO,CAAC,CAAC,CAAC,GAAGD,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC;MAC1BrB,IAAI,CAACc,aAAa,CAACM,QAAQ,EAAEF,OAAO,EAAEV,KAAK,CAACO,MAAM,CAAC;MACnDF,GAAG,CAACQ,CAAC,CAAC,GAAGD,QAAQ,CAAC,CAAC,CAAC;MACpBP,GAAG,CAACQ,CAAC,GAAG,CAAC,CAAC,GAAGD,QAAQ,CAAC,CAAC,CAAC;MACxBP,GAAG,CAACQ,CAAC,GAAG,CAAC,CAAC,GAAGD,QAAQ,CAAC,CAAC,CAAC;IAC1B;IAEA,OAAOP,GAAG;EACZ,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;;EAGEN,SAAS,CAACgB,WAAW,GAAG,YAAY;IAClChB,SAAS,CAACiB,kBAAkB,CAAC,IAAI,CAAC;EACpC,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;;EAGEjB,SAAS,CAACkB,YAAY,GAAG,YAAY;IACnClB,SAAS,CAACiB,kBAAkB,CAAC,KAAK,CAAC;EACrC,CAAC;EAEDjB,SAAS,CAACmB,eAAe,GAAG,UAAUX,MAAM,EAAEF,GAAG,EAAE;IACjD,IAAIL,KAAK,CAACmB,eAAe,EAAE;MACzB1B,IAAI,CAAC2B,QAAQ,CAACf,GAAG,EAAEL,KAAK,CAACO,MAAM,EAAEA,MAAM,CAAC;IAC1C,CAAC,MAAM;MACLd,IAAI,CAAC2B,QAAQ,CAACf,GAAG,EAAEE,MAAM,EAAEP,KAAK,CAACO,MAAM,CAAC;IAC1C;IAEA,OAAOF,GAAG;EACZ,CAAC,CAAC,CAAC;EACH;;EAGAN,SAAS,CAACsB,iBAAiB,GAAG,UAAUC,QAAQ,EAAEjB,GAAG,EAAE;IACrD,IAAIkB,KAAK,GAAG,IAAIZ,YAAY,CAAC,EAAE,CAAC;IAChC,IAAIa,MAAM,GAAG,IAAIb,YAAY,CAAC,EAAE,CAAC;IACjC,IAAIc,SAAS,GAAGzB,KAAK,CAACmB,eAAe,GAAG,YAAY;MAClD,OAAO1B,IAAI,CAAC2B,QAAQ,CAACI,MAAM,EAAExB,KAAK,CAACO,MAAM,EAAEgB,KAAK,CAAC;IACnD,CAAC,GAAG,YAAY;MACd,OAAO9B,IAAI,CAAC2B,QAAQ,CAACI,MAAM,EAAED,KAAK,EAAEvB,KAAK,CAACO,MAAM,CAAC;IACnD,CAAC;IAED,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,QAAQ,CAACR,MAAM,EAAED,CAAC,IAAI,EAAE,EAAE;MAC5C,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;QAC3BH,KAAK,CAACG,CAAC,CAAC,GAAGJ,QAAQ,CAACT,CAAC,GAAGa,CAAC,CAAC;MAC5B;MAEAD,SAAS,CAAC,CAAC;MAEX,KAAK,IAAIE,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,EAAE,EAAE,EAAEA,EAAE,EAAE;QAC9BtB,GAAG,CAACQ,CAAC,GAAGc,EAAE,CAAC,GAAGH,MAAM,CAACG,EAAE,CAAC;MAC1B;IACF;IAEA,OAAOtB,GAAG;EACZ,CAAC;EAEDN,SAAS,CAAC6B,UAAU,GAAG,YAAY;IACjC,OAAO/B,WAAW,CAAC;MACjBU,MAAM,EAAEX,OAAO,CAACiC,YAAY,CAACC,KAAK,CAACC,IAAI,CAAC/B,KAAK,CAACO,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MAC7DY,eAAe,EAAEnB,KAAK,CAACmB;IACzB,CAAC,CAAC;EACJ,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIa,cAAc,GAAG;EACnBb,eAAe,EAAE,KAAK;EACtBZ,MAAM,EAAEjB,kBAAkB,CAACC,QAAQ;AACrC,CAAC,CAAC,CAAC;;AAEH,SAAS0C,MAAMA,CAAClC,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIkC,aAAa,GAAGC,SAAS,CAACrB,MAAM,GAAG,CAAC,IAAIqB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FE,MAAM,CAACC,MAAM,CAACtC,KAAK,EAAEgC,cAAc,EAAEE,aAAa,CAAC;EACnDxC,KAAK,CAAC6C,GAAG,CAACxC,SAAS,EAAEC,KAAK,CAAC;EAC3BN,KAAK,CAAC8C,MAAM,CAACzC,SAAS,EAAEC,KAAK,EAAE,CAAC,iBAAiB,CAAC,CAAC;EACnDN,KAAK,CAAC+C,WAAW,CAAC1C,SAAS,EAAEC,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;EACnDF,YAAY,CAACC,SAAS,EAAEC,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEFH,WAAW,GAAGH,KAAK,CAACG,WAAW,CAACoC,MAAM,EAAE,cAAc,CAAC;AAEvD,IAAIS,cAAc,GAAG;EACnB7C,WAAW,EAAEA,WAAW;EACxBoC,MAAM,EAAEA;AACV,CAAC;AAED,SAASS,cAAc,IAAIC,OAAO,EAAEV,MAAM,EAAEpC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
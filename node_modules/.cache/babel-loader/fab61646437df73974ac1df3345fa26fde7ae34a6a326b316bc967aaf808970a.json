{"ast":null,"code":"import macro from '../../macros.js';\nvar MOLECULE_FIELDS = ['chemical json', 'name', 'inchi', 'formula', 'atoms', 'bonds', 'properties']; // ----------------------------------------------------------------------------\n// vtkMolecule methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMolecule(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMolecule');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  'chemical json': 0,\n  name: '',\n  inchi: '',\n  formula: '',\n  atoms: null,\n  bonds: null,\n  properties: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  if (!model.atoms) {\n    model.atoms = {};\n  }\n  if (!model.bonds) {\n    model.bonds = {};\n  }\n  if (!model.properties) {\n    model.properties = {};\n  }\n  macro.setGet(publicAPI, model, MOLECULE_FIELDS); // Object specific methods\n\n  vtkMolecule(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkMolecule'); // ----------------------------------------------------------------------------\n\nvar vtkMolecule$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkMolecule$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","MOLECULE_FIELDS","vtkMolecule","publicAPI","model","classHierarchy","push","DEFAULT_VALUES","name","inchi","formula","atoms","bonds","properties","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","newInstance","vtkMolecule$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/DataModel/Molecule.js"],"sourcesContent":["import macro from '../../macros.js';\n\nvar MOLECULE_FIELDS = ['chemical json', 'name', 'inchi', 'formula', 'atoms', 'bonds', 'properties']; // ----------------------------------------------------------------------------\n// vtkMolecule methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMolecule(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMolecule');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  'chemical json': 0,\n  name: '',\n  inchi: '',\n  formula: '',\n  atoms: null,\n  bonds: null,\n  properties: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n\n  if (!model.atoms) {\n    model.atoms = {};\n  }\n\n  if (!model.bonds) {\n    model.bonds = {};\n  }\n\n  if (!model.properties) {\n    model.properties = {};\n  }\n\n  macro.setGet(publicAPI, model, MOLECULE_FIELDS); // Object specific methods\n\n  vtkMolecule(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkMolecule'); // ----------------------------------------------------------------------------\n\nvar vtkMolecule$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkMolecule$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,IAAIC,eAAe,GAAG,CAAC,eAAe,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;AACrG;AACA;;AAEA,SAASC,WAAWA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACrC;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,aAAa,CAAC;AAC1C,CAAC,CAAC;AACF;AACA;;AAGA,IAAIC,cAAc,GAAG;EACnB,eAAe,EAAE,CAAC;EAClBC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;;AAEH,SAASC,MAAMA,CAACX,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIW,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAAChB,KAAK,EAAEG,cAAc,EAAEQ,aAAa,CAAC,CAAC,CAAC;;EAErDf,KAAK,CAACqB,GAAG,CAAClB,SAAS,EAAEC,KAAK,CAAC;EAE3B,IAAI,CAACA,KAAK,CAACO,KAAK,EAAE;IAChBP,KAAK,CAACO,KAAK,GAAG,CAAC,CAAC;EAClB;EAEA,IAAI,CAACP,KAAK,CAACQ,KAAK,EAAE;IAChBR,KAAK,CAACQ,KAAK,GAAG,CAAC,CAAC;EAClB;EAEA,IAAI,CAACR,KAAK,CAACS,UAAU,EAAE;IACrBT,KAAK,CAACS,UAAU,GAAG,CAAC,CAAC;EACvB;EAEAb,KAAK,CAACsB,MAAM,CAACnB,SAAS,EAAEC,KAAK,EAAEH,eAAe,CAAC,CAAC,CAAC;;EAEjDC,WAAW,CAACC,SAAS,EAAEC,KAAK,CAAC;AAC/B,CAAC,CAAC;;AAEF,IAAImB,WAAW,GAAGvB,KAAK,CAACuB,WAAW,CAACT,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;;AAE5D,IAAIU,aAAa,GAAG;EAClBD,WAAW,EAAEA,WAAW;EACxBT,MAAM,EAAEA;AACV,CAAC;AAED,SAASU,aAAa,IAAIC,OAAO,EAAEX,MAAM,EAAES,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
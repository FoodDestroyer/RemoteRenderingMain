{"ast":null,"code":"// ----------------------------------------------------------------------------\n// capitalize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Add isA function and register your class name\n// ----------------------------------------------------------------------------\n\nfunction isA(publicAPI, model = {}, name = null) {\n  if (!model.isA) {\n    model.isA = [];\n  }\n  if (name) {\n    model.isA.push(name);\n  }\n  if (!publicAPI.isA) {\n    publicAPI.isA = className => model.isA.indexOf(className) !== -1;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Basic setter\n// ----------------------------------------------------------------------------\n\nfunction set(publicAPI, model = {}, names = []) {\n  names.forEach(name => {\n    publicAPI[`set${capitalize(name)}`] = value => {\n      model[name] = value;\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Basic getter\n// ----------------------------------------------------------------------------\n\nfunction get(publicAPI, model = {}, names = []) {\n  names.forEach(name => {\n    publicAPI[`get${capitalize(name)}`] = () => model[name];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Add destroy function\n// ----------------------------------------------------------------------------\n\nfunction destroy(publicAPI, model = {}) {\n  const previousDestroy = publicAPI.destroy;\n  if (!model.subscriptions) {\n    model.subscriptions = [];\n  }\n  publicAPI.destroy = () => {\n    if (previousDestroy) {\n      previousDestroy();\n    }\n    while (model.subscriptions && model.subscriptions.length) {\n      model.subscriptions.pop().unsubscribe();\n    }\n    Object.keys(model).forEach(field => {\n      delete model[field];\n    });\n\n    // Flag the instance beeing deleted\n    model.deleted = true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), fireXXX(args...)\n// ----------------------------------------------------------------------------\n\nfunction event(publicAPI, model, eventName, asynchrounous = true) {\n  const callbacks = [];\n  const previousDestroy = publicAPI.destroy;\n  function off(index) {\n    callbacks[index] = null;\n  }\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  publicAPI[`fire${capitalize(eventName)}`] = (...args) => {\n    if (model.deleted) {\n      console.log('instance deleted - can not call any method');\n      return;\n    }\n    function processCallbacks() {\n      callbacks.forEach(callback => {\n        if (callback) {\n          try {\n            callback.apply(publicAPI, args);\n          } catch (errObj) {\n            console.log('Error event:', eventName, errObj);\n          }\n        }\n      });\n    }\n    if (asynchrounous) {\n      setTimeout(processCallbacks, 0);\n    } else {\n      processCallbacks();\n    }\n  };\n  publicAPI[`on${capitalize(eventName)}`] = callback => {\n    if (model.deleted) {\n      console.log('instance deleted - can not call any method');\n      return null;\n    }\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n  publicAPI.destroy = () => {\n    previousDestroy();\n    callbacks.forEach((el, index) => off(index));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nfunction chain(...fn) {\n  return (...args) => fn.filter(i => !!i).forEach(i => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nfunction newInstance(extend) {\n  return (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  };\n}\nexport default {\n  chain,\n  destroy,\n  event,\n  get,\n  isA,\n  newInstance,\n  set\n};","map":{"version":3,"names":["capitalize","str","charAt","toUpperCase","slice","isA","publicAPI","model","name","push","className","indexOf","set","names","forEach","value","get","destroy","previousDestroy","subscriptions","length","pop","unsubscribe","Object","keys","field","deleted","event","eventName","asynchrounous","callbacks","off","index","on","freeze","args","console","log","processCallbacks","callback","apply","errObj","setTimeout","el","chain","fn","filter","i","newInstance","extend","initialValues"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/wslink/src/CompositeClosureHelper/index.js"],"sourcesContent":["// ----------------------------------------------------------------------------\n// capitalize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Add isA function and register your class name\n// ----------------------------------------------------------------------------\n\nfunction isA(publicAPI, model = {}, name = null) {\n  if (!model.isA) {\n    model.isA = [];\n  }\n\n  if (name) {\n    model.isA.push(name);\n  }\n\n  if (!publicAPI.isA) {\n    publicAPI.isA = (className) => model.isA.indexOf(className) !== -1;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Basic setter\n// ----------------------------------------------------------------------------\n\nfunction set(publicAPI, model = {}, names = []) {\n  names.forEach((name) => {\n    publicAPI[`set${capitalize(name)}`] = (value) => {\n      model[name] = value;\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Basic getter\n// ----------------------------------------------------------------------------\n\nfunction get(publicAPI, model = {}, names = []) {\n  names.forEach((name) => {\n    publicAPI[`get${capitalize(name)}`] = () => model[name];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Add destroy function\n// ----------------------------------------------------------------------------\n\nfunction destroy(publicAPI, model = {}) {\n  const previousDestroy = publicAPI.destroy;\n\n  if (!model.subscriptions) {\n    model.subscriptions = [];\n  }\n\n  publicAPI.destroy = () => {\n    if (previousDestroy) {\n      previousDestroy();\n    }\n    while (model.subscriptions && model.subscriptions.length) {\n      model.subscriptions.pop().unsubscribe();\n    }\n    Object.keys(model).forEach((field) => {\n      delete model[field];\n    });\n\n    // Flag the instance beeing deleted\n    model.deleted = true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), fireXXX(args...)\n// ----------------------------------------------------------------------------\n\nfunction event(publicAPI, model, eventName, asynchrounous = true) {\n  const callbacks = [];\n  const previousDestroy = publicAPI.destroy;\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({ unsubscribe });\n  }\n\n  publicAPI[`fire${capitalize(eventName)}`] = (...args) => {\n    if (model.deleted) {\n      console.log('instance deleted - can not call any method');\n      return;\n    }\n\n    function processCallbacks() {\n      callbacks.forEach((callback) => {\n        if (callback) {\n          try {\n            callback.apply(publicAPI, args);\n          } catch (errObj) {\n            console.log('Error event:', eventName, errObj);\n          }\n        }\n      });\n    }\n\n    if (asynchrounous) {\n      setTimeout(processCallbacks, 0);\n    } else {\n      processCallbacks();\n    }\n  };\n\n  publicAPI[`on${capitalize(eventName)}`] = (callback) => {\n    if (model.deleted) {\n      console.log('instance deleted - can not call any method');\n      return null;\n    }\n\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.destroy = () => {\n    previousDestroy();\n    callbacks.forEach((el, index) => off(index));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nfunction chain(...fn) {\n  return (...args) => fn.filter((i) => !!i).forEach((i) => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nfunction newInstance(extend) {\n  return (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  };\n}\n\nexport default {\n  chain,\n  destroy,\n  event,\n  get,\n  isA,\n  newInstance,\n  set,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkXMLWriter from './XMLWriter.js';\nimport { POLYDATA_FIELDS } from '../../Common/DataModel/PolyData/Constants.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkXMLPolyDataWriter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkXMLPolyDataWriter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkXMLPolyDataWriter'); // Capture \"parentClass\" api for internal use\n\n  var superClass = _objectSpread({}, publicAPI);\n  function camelize(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter) {\n      return letter.toUpperCase();\n    }).replace(/\\s+/g, '');\n  }\n  publicAPI.create = function (dataObject) {\n    var parent = superClass.create(dataObject);\n    var polyData = parent.ele('PolyData', {});\n    var piece = polyData.ele('Piece', {\n      NumberOfPoints: dataObject.getPoints().getNumberOfPoints(),\n      NumberOfVerts: dataObject.getNumberOfVerts(),\n      NumberOfLines: dataObject.getNumberOfLines(),\n      NumberOfStrips: dataObject.getNumberOfStrips(),\n      NumberOfPolys: dataObject.getNumberOfPolys()\n    });\n    publicAPI.processDataSetAttributes(piece, 'PointData', dataObject.getPointData());\n    publicAPI.processDataSetAttributes(piece, 'CellData', dataObject.getCellData());\n    publicAPI.processDataArray(piece.ele('Points'), dataObject.getPoints());\n    POLYDATA_FIELDS.forEach(function (cellType) {\n      var cellTypeName = camelize(cellType);\n      var cells = dataObject[\"get\".concat(cellTypeName)]();\n      var connectivity = [];\n      var offsets = [];\n      var cellsData = cells.getData();\n      var npts = cellsData[0];\n      var offset = 0;\n      for (var i = 0; i < cellsData.length;) {\n        npts = cellsData[i++];\n        for (var j = 0; j < npts; ++j) {\n          connectivity.push(cellsData[i++]);\n        }\n        offset += npts;\n        offsets.push(offset);\n      }\n      var connectivityDataArray = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        name: 'connectivity',\n        values: Int32Array.from(connectivity)\n      });\n      var offsetsDataArray = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        name: 'offsets',\n        values: Int32Array.from(offsets)\n      });\n      var cellEle = piece.ele(cellTypeName);\n      publicAPI.processDataArray(cellEle, connectivityDataArray);\n      publicAPI.processDataArray(cellEle, offsetsDataArray);\n    });\n    return parent;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  dataType: 'PolyData'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkXMLWriter.extend(publicAPI, model, initialValues);\n  vtkXMLPolyDataWriter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkXMLPolyDataWriter'); // ----------------------------------------------------------------------------\n\nvar vtkXMLPolyDataWriter$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkXMLPolyDataWriter$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","vtkDataArray","vtkXMLWriter","POLYDATA_FIELDS","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkXMLPolyDataWriter","publicAPI","model","classHierarchy","superClass","camelize","str","replace","letter","toUpperCase","create","dataObject","parent","polyData","ele","piece","NumberOfPoints","getPoints","getNumberOfPoints","NumberOfVerts","getNumberOfVerts","NumberOfLines","getNumberOfLines","NumberOfStrips","getNumberOfStrips","NumberOfPolys","getNumberOfPolys","processDataSetAttributes","getPointData","getCellData","processDataArray","cellType","cellTypeName","cells","concat","connectivity","offsets","cellsData","getData","npts","offset","j","connectivityDataArray","newInstance","numberOfComponents","name","values","Int32Array","from","offsetsDataArray","cellEle","DEFAULT_VALUES","dataType","extend","initialValues","undefined","assign","vtkXMLPolyDataWriter$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/XML/XMLPolyDataWriter.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkXMLWriter from './XMLWriter.js';\nimport { POLYDATA_FIELDS } from '../../Common/DataModel/PolyData/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkXMLPolyDataWriter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkXMLPolyDataWriter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkXMLPolyDataWriter'); // Capture \"parentClass\" api for internal use\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  function camelize(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter) {\n      return letter.toUpperCase();\n    }).replace(/\\s+/g, '');\n  }\n\n  publicAPI.create = function (dataObject) {\n    var parent = superClass.create(dataObject);\n    var polyData = parent.ele('PolyData', {});\n    var piece = polyData.ele('Piece', {\n      NumberOfPoints: dataObject.getPoints().getNumberOfPoints(),\n      NumberOfVerts: dataObject.getNumberOfVerts(),\n      NumberOfLines: dataObject.getNumberOfLines(),\n      NumberOfStrips: dataObject.getNumberOfStrips(),\n      NumberOfPolys: dataObject.getNumberOfPolys()\n    });\n    publicAPI.processDataSetAttributes(piece, 'PointData', dataObject.getPointData());\n    publicAPI.processDataSetAttributes(piece, 'CellData', dataObject.getCellData());\n    publicAPI.processDataArray(piece.ele('Points'), dataObject.getPoints());\n    POLYDATA_FIELDS.forEach(function (cellType) {\n      var cellTypeName = camelize(cellType);\n      var cells = dataObject[\"get\".concat(cellTypeName)]();\n      var connectivity = [];\n      var offsets = [];\n      var cellsData = cells.getData();\n      var npts = cellsData[0];\n      var offset = 0;\n\n      for (var i = 0; i < cellsData.length;) {\n        npts = cellsData[i++];\n\n        for (var j = 0; j < npts; ++j) {\n          connectivity.push(cellsData[i++]);\n        }\n\n        offset += npts;\n        offsets.push(offset);\n      }\n\n      var connectivityDataArray = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        name: 'connectivity',\n        values: Int32Array.from(connectivity)\n      });\n      var offsetsDataArray = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        name: 'offsets',\n        values: Int32Array.from(offsets)\n      });\n      var cellEle = piece.ele(cellTypeName);\n      publicAPI.processDataArray(cellEle, connectivityDataArray);\n      publicAPI.processDataArray(cellEle, offsetsDataArray);\n    });\n    return parent;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  dataType: 'PolyData'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkXMLWriter.extend(publicAPI, model, initialValues);\n  vtkXMLPolyDataWriter(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkXMLPolyDataWriter'); // ----------------------------------------------------------------------------\n\nvar vtkXMLPolyDataWriter$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkXMLPolyDataWriter$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
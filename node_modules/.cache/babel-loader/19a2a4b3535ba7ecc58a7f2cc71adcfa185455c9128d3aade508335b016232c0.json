{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport macro from '../../macros.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkHardwareSelector from './HardwareSelector.js';\nimport vtkShaderCache from './ShaderCache.js';\nimport vtkTextureUnitManager from './TextureUnitManager.js';\nimport vtkViewNodeFactory from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\nimport Constants from './RenderWindow/Constants.js';\nimport { createContextProxyHandler, GET_UNDERLYING_CONTEXT } from './RenderWindow/ContextProxy.js';\nvar vtkDebugMacro = macro.vtkDebugMacro,\n  vtkErrorMacro = macro.vtkErrorMacro;\nvar XrSessionTypes = Constants.XrSessionTypes;\nvar SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n};\nvar DEFAULT_RESET_FACTORS = {\n  rescaleFactor: 0.25,\n  // isotropic scale factor reduces apparent size of objects\n  translateZ: -1.5 // default translation initializes object in front of camera\n};\n\nfunction checkRenderTargetSupport(gl, format, type) {\n  // create temporary frame buffer and texture\n  var framebuffer = gl.createFramebuffer();\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); // check frame buffer status\n\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER); // clean up\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return status === gl.FRAMEBUFFER_COMPLETE;\n} // ----------------------------------------------------------------------------\n// Monitor the usage of GL context across vtkOpenGLRenderWindow instances\n// ----------------------------------------------------------------------------\n\nvar GL_CONTEXT_COUNT = 0;\nvar GL_CONTEXT_LISTENERS = [];\nfunction createGLContext() {\n  GL_CONTEXT_COUNT++;\n  GL_CONTEXT_LISTENERS.forEach(function (cb) {\n    return cb(GL_CONTEXT_COUNT);\n  });\n}\nfunction deleteGLContext() {\n  GL_CONTEXT_COUNT--;\n  GL_CONTEXT_LISTENERS.forEach(function (cb) {\n    return cb(GL_CONTEXT_COUNT);\n  });\n}\nfunction pushMonitorGLContextCount(cb) {\n  GL_CONTEXT_LISTENERS.push(cb);\n}\nfunction popMonitorGLContextCount(cb) {\n  return GL_CONTEXT_LISTENERS.pop();\n}\nfunction _preventDefault(e) {\n  e.preventDefault();\n} // ----------------------------------------------------------------------------\n// vtkOpenGLRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderWindow');\n  var cachingContextHandler = createContextProxyHandler();\n  publicAPI.getViewNodeFactory = function () {\n    return model.myFactory;\n  }; // prevent default context lost handler\n\n  model.canvas.addEventListener('webglcontextlost', _preventDefault, false);\n  model.canvas.addEventListener('webglcontextrestored', publicAPI.restoreContext, false); // Auto update style\n\n  var previousSize = [0, 0];\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n      }\n    } // ImageStream size\n\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    } // Offscreen ?\n\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block'; // Cursor type\n\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    } // Invalidate cached DOM container size\n\n    model.containerSize = null;\n  }\n  publicAPI.onModified(updateWindow); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n      model.children.forEach(function (child) {\n        child.setOpenGLRenderWindow(publicAPI);\n      });\n    }\n  };\n  publicAPI.initialize = function () {\n    if (!model.initialized) {\n      model.context = publicAPI.get3DContext();\n      model.textureUnitManager = vtkTextureUnitManager.newInstance();\n      model.textureUnitManager.setContext(model.context);\n      model.shaderCache.setContext(model.context); // initialize blending for transparency\n\n      var gl = model.context;\n      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.depthFunc(gl.LEQUAL);\n      gl.enable(gl.BLEND);\n      model.initialized = true;\n    }\n  };\n  publicAPI.makeCurrent = function () {\n    model.context.makeCurrent();\n  };\n  publicAPI.setContainer = function (el) {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      } // Remove canvas from previous container\n\n      model.el.removeChild(model.canvas); // If the renderer has previously added\n      // a background image, remove it from the DOM.\n\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n    if (model.el !== el) {\n      model.el = el;\n      if (model.el) {\n        model.el.appendChild(model.canvas); // If the renderer is set to use a background\n        // image, attach it to the DOM.\n\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      } // Trigger modified()\n\n      publicAPI.modified();\n    }\n  };\n  publicAPI.getContainer = function () {\n    return model.el;\n  };\n  publicAPI.getContainerSize = function () {\n    if (!model.containerSize && model.el) {\n      var _model$el$getBounding = model.el.getBoundingClientRect(),\n        width = _model$el$getBounding.width,\n        height = _model$el$getBounding.height;\n      model.containerSize = [width, height];\n    }\n    return model.containerSize || model.size;\n  };\n  publicAPI.getFramebufferSize = function () {\n    if (model.activeFramebuffer) {\n      return model.activeFramebuffer.getSize();\n    }\n    return model.size;\n  };\n  publicAPI.getPixelData = function (x1, y1, x2, y2) {\n    var pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);\n    model.context.readPixels(x1, y1, x2 - x1 + 1, y2 - y1 + 1, model.context.RGBA, model.context.UNSIGNED_BYTE, pixels);\n    return pixels;\n  };\n  publicAPI.get3DContext = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      preserveDrawingBuffer: false,\n      depth: true,\n      alpha: true,\n      powerPreference: 'high-performance'\n    };\n    var result = null;\n    var webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';\n    model.webgl2 = false;\n    if (model.defaultToWebgl2 && webgl2Supported) {\n      result = model.canvas.getContext('webgl2', options);\n      if (result) {\n        model.webgl2 = true;\n        vtkDebugMacro('using webgl2');\n      }\n    }\n    if (!result) {\n      vtkDebugMacro('using webgl1');\n      result = model.canvas.getContext('webgl', options) || model.canvas.getContext('experimental-webgl', options);\n    }\n    return new Proxy(result, cachingContextHandler);\n  }; // Request an XR session on the user device with WebXR,\n  // typically in response to a user request such as a button press\n\n  publicAPI.startXR = function (xrSessionType) {\n    if (navigator.xr === undefined) {\n      throw new Error('WebXR is not available');\n    }\n    model.xrSessionType = xrSessionType !== undefined ? xrSessionType : XrSessionTypes.HmdVR;\n    var isXrSessionAR = [XrSessionTypes.HmdAR, XrSessionTypes.MobileAR].includes(model.xrSessionType);\n    var sessionType = isXrSessionAR ? 'immersive-ar' : 'immersive-vr';\n    if (!navigator.xr.isSessionSupported(sessionType)) {\n      if (isXrSessionAR) {\n        throw new Error('Device does not support AR session');\n      } else {\n        throw new Error('VR display is not available');\n      }\n    }\n    if (model.xrSession === null) {\n      navigator.xr.requestSession(sessionType).then(publicAPI.enterXR, function () {\n        throw new Error('Failed to create XR session!');\n      });\n    } else {\n      throw new Error('XR Session already exists!');\n    }\n  }; // When an XR session is available, set up the XRWebGLLayer\n  // and request the first animation frame for the device\n\n  publicAPI.enterXR = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(xrSession) {\n      var gl, glLayer, isXrSessionAR, ren;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              model.xrSession = xrSession;\n              model.oldCanvasSize = model.size.slice();\n              if (!(model.xrSession !== null)) {\n                _context.next = 17;\n                break;\n              }\n              gl = publicAPI.get3DContext();\n              _context.next = 6;\n              return gl.makeXRCompatible();\n            case 6:\n              glLayer = new global.XRWebGLLayer(model.xrSession,\n              // constructor needs unproxied context\n              gl[GET_UNDERLYING_CONTEXT]());\n              publicAPI.setSize(glLayer.framebufferWidth, glLayer.framebufferHeight);\n              model.xrSession.updateRenderState({\n                baseLayer: glLayer\n              });\n              model.xrSession.requestReferenceSpace('local').then(function (refSpace) {\n                model.xrReferenceSpace = refSpace;\n              }); // Initialize transparent background for augmented reality session\n\n              isXrSessionAR = [XrSessionTypes.HmdAR, XrSessionTypes.MobileAR].includes(model.xrSessionType);\n              if (isXrSessionAR) {\n                ren = model.renderable.getRenderers()[0];\n                model.preXrSessionBackground = ren.getBackground();\n                ren.setBackground([0, 0, 0, 0]);\n              }\n              publicAPI.resetXRScene();\n              model.renderable.getInteractor().switchToXRAnimation();\n              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);\n              _context.next = 18;\n              break;\n            case 17:\n              throw new Error('Failed to enter XR with a null xrSession.');\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  publicAPI.resetXRScene = function () {\n    var rescaleFactor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RESET_FACTORS.rescaleFactor;\n    var translateZ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RESET_FACTORS.translateZ;\n    // Adjust world-to-physical parameters for different modalities\n    var ren = model.renderable.getRenderers()[0];\n    ren.resetCamera();\n    var camera = ren.getActiveCamera();\n    var physicalScale = camera.getPhysicalScale();\n    var physicalTranslation = camera.getPhysicalTranslation();\n    var rescaledTranslateZ = translateZ * physicalScale;\n    physicalScale /= rescaleFactor;\n    physicalTranslation[2] += rescaledTranslateZ;\n    camera.setPhysicalScale(physicalScale);\n    camera.setPhysicalTranslation(physicalTranslation); // Clip at 0.1m, 100.0m in physical space by default\n\n    camera.setClippingRange(0.1 * physicalScale, 100.0 * physicalScale);\n  };\n  publicAPI.stopXR = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var gl, ren;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(navigator.xr === undefined)) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 2:\n            if (!(model.xrSession !== null)) {\n              _context2.next = 10;\n              break;\n            }\n            model.xrSession.cancelAnimationFrame(model.xrSceneFrame);\n            model.renderable.getInteractor().returnFromXRAnimation();\n            gl = publicAPI.get3DContext();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            _context2.next = 9;\n            return model.xrSession.end().catch(function (error) {\n              if (!(error instanceof DOMException)) {\n                throw error;\n              }\n            });\n          case 9:\n            model.xrSession = null;\n          case 10:\n            if (model.oldCanvasSize !== undefined) {\n              publicAPI.setSize.apply(publicAPI, _toConsumableArray(model.oldCanvasSize));\n            } // Reset to default canvas\n\n            ren = model.renderable.getRenderers()[0];\n            if (model.preXrSessionBackground != null) {\n              ren.setBackground(model.preXrSessionBackground);\n              model.preXrSessionBackground = null;\n            }\n            ren.getActiveCamera().setProjectionMatrix(null);\n            ren.resetCamera();\n            ren.setViewport(0.0, 0, 1.0, 1.0);\n            publicAPI.traverseAllPasses();\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  publicAPI.xrRender = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(t, frame) {\n      var xrSession, isXrSessionHMD, xrPose, gl, glLayer, ren;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              xrSession = frame.session;\n              isXrSessionHMD = [XrSessionTypes.HmdVR, XrSessionTypes.HmdAR].includes(model.xrSessionType);\n              model.renderable.getInteractor().updateXRGamepads(xrSession, frame, model.xrReferenceSpace);\n              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);\n              xrPose = frame.getViewerPose(model.xrReferenceSpace);\n              if (xrPose) {\n                gl = publicAPI.get3DContext();\n                if (model.xrSessionType === XrSessionTypes.MobileAR && model.oldCanvasSize !== undefined) {\n                  gl.canvas.width = model.oldCanvasSize[0];\n                  gl.canvas.height = model.oldCanvasSize[1];\n                }\n                glLayer = xrSession.renderState.baseLayer;\n                gl.bindFramebuffer(gl.FRAMEBUFFER, glLayer.framebuffer);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n                gl.clear(gl.DEPTH_BUFFER_BIT);\n                publicAPI.setSize(glLayer.framebufferWidth, glLayer.framebufferHeight); // get the first renderer\n\n                ren = model.renderable.getRenderers()[0]; // Do a render pass for each eye\n\n                xrPose.views.forEach(function (view, index) {\n                  var viewport = glLayer.getViewport(view);\n                  if (isXrSessionHMD) {\n                    if (view.eye === 'left') {\n                      ren.setViewport(0, 0, 0.5, 1.0);\n                    } else if (view.eye === 'right') {\n                      ren.setViewport(0.5, 0, 1.0, 1.0);\n                    } else {\n                      // No handling for non-eye viewport\n                      return;\n                    }\n                  } else if (model.xrSessionType === XrSessionTypes.LookingGlassVR) {\n                    var startX = viewport.x / glLayer.framebufferWidth;\n                    var startY = viewport.y / glLayer.framebufferHeight;\n                    var endX = (viewport.x + viewport.width) / glLayer.framebufferWidth;\n                    var endY = (viewport.y + viewport.height) / glLayer.framebufferHeight;\n                    ren.setViewport(startX, startY, endX, endY);\n                  } else {\n                    ren.setViewport(0, 0, 1, 1);\n                  }\n                  ren.getActiveCamera().computeViewParametersFromPhysicalMatrix(view.transform.inverse.matrix);\n                  ren.getActiveCamera().setProjectionMatrix(view.projectionMatrix);\n                  publicAPI.traverseAllPasses();\n                }); // Reset scissorbox before any subsequent rendering to external displays\n                // on frame end, such as rendering to a Looking Glass display.\n\n                gl.scissor(0, 0, glLayer.framebufferWidth, glLayer.framebufferHeight);\n                gl.disable(gl.SCISSOR_TEST);\n              }\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return function (_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  publicAPI.restoreContext = function () {\n    var rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n  };\n  publicAPI.activateTexture = function (texture) {\n    // Only add if it isn't already there\n    var result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      model.context.activeTexture(model.context.TEXTURE0 + result);\n      return;\n    }\n    var activeUnit = publicAPI.getTextureUnitManager().allocate();\n    if (activeUnit < 0) {\n      vtkErrorMacro('Hardware does not support the number of textures defined.');\n      return;\n    }\n    model._textureResourceIds.set(texture, activeUnit);\n    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);\n  };\n  publicAPI.deactivateTexture = function (texture) {\n    // Only deactivate if it isn't already there\n    var result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      publicAPI.getTextureUnitManager().free(result);\n      model._textureResourceIds.delete(texture);\n    }\n  };\n  publicAPI.getTextureUnitForTexture = function (texture) {\n    var result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      return result;\n    }\n    return -1;\n  };\n  publicAPI.getDefaultTextureInternalFormat = function (vtktype, numComps) {\n    var oglNorm16Ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var useHalfFloat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (model.webgl2) {\n      switch (vtktype) {\n        case VtkDataTypes.UNSIGNED_CHAR:\n          switch (numComps) {\n            case 1:\n              return model.context.R8;\n            case 2:\n              return model.context.RG8;\n            case 3:\n              return model.context.RGB8;\n            case 4:\n            default:\n              return model.context.RGBA8;\n          }\n        case oglNorm16Ext && !useHalfFloat && VtkDataTypes.UNSIGNED_SHORT:\n          switch (numComps) {\n            case 1:\n              return oglNorm16Ext.R16_EXT;\n            case 2:\n              return oglNorm16Ext.RG16_EXT;\n            case 3:\n              return oglNorm16Ext.RGB16_EXT;\n            case 4:\n            default:\n              return oglNorm16Ext.RGBA16_EXT;\n          }\n\n        // prioritize norm16 over float\n\n        case oglNorm16Ext && !useHalfFloat && VtkDataTypes.SHORT:\n          switch (numComps) {\n            case 1:\n              return oglNorm16Ext.R16_SNORM_EXT;\n            case 2:\n              return oglNorm16Ext.RG16_SNORM_EXT;\n            case 3:\n              return oglNorm16Ext.RGB16_SNORM_EXT;\n            case 4:\n            default:\n              return oglNorm16Ext.RGBA16_SNORM_EXT;\n          }\n        case VtkDataTypes.FLOAT:\n        default:\n          switch (numComps) {\n            case 1:\n              return model.context.R16F;\n            case 2:\n              return model.context.RG16F;\n            case 3:\n              return model.context.RGB16F;\n            case 4:\n            default:\n              return model.context.RGBA16F;\n          }\n      }\n    } // webgl1 only supports four types\n\n    switch (numComps) {\n      case 1:\n        return model.context.LUMINANCE;\n      case 2:\n        return model.context.LUMINANCE_ALPHA;\n      case 3:\n        return model.context.RGB;\n      case 4:\n      default:\n        return model.context.RGBA;\n    }\n  };\n  publicAPI.setBackgroundImage = function (img) {\n    model.bgImage.src = img.src;\n  };\n  publicAPI.setUseBackgroundImage = function (value) {\n    model.useBackgroundImage = value; // Add or remove the background image from the\n    // DOM as specified.\n\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n  function getCanvasDataURL() {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;\n    // Copy current canvas to not modify the original\n    var temporaryCanvas = document.createElement('canvas');\n    var temporaryContext = temporaryCanvas.getContext('2d');\n    temporaryCanvas.width = model.canvas.width;\n    temporaryCanvas.height = model.canvas.height;\n    temporaryContext.drawImage(model.canvas, 0, 0); // Get current client rect to place canvas\n\n    var mainBoundingClientRect = model.canvas.getBoundingClientRect();\n    var renderWindow = model.renderable;\n    var renderers = renderWindow.getRenderers();\n    renderers.forEach(function (renderer) {\n      var viewProps = renderer.getViewProps();\n      viewProps.forEach(function (viewProp) {\n        // Check if the prop has a container that should have canvas\n        if (viewProp.getContainer) {\n          var container = viewProp.getContainer();\n          var canvasList = container.getElementsByTagName('canvas'); // Go throughout all canvas and copy it into temporary main canvas\n\n          for (var i = 0; i < canvasList.length; i++) {\n            var currentCanvas = canvasList[i];\n            var boundingClientRect = currentCanvas.getBoundingClientRect();\n            var newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n            var newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n          }\n        }\n      });\n    });\n    var screenshot = temporaryCanvas.toDataURL(format);\n    temporaryCanvas.remove();\n    publicAPI.invokeImageReady(screenshot);\n  }\n  publicAPI.captureNextImage = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref4$resetCamera = _ref4.resetCamera,\n      resetCamera = _ref4$resetCamera === void 0 ? false : _ref4$resetCamera,\n      _ref4$size = _ref4.size,\n      size = _ref4$size === void 0 ? null : _ref4$size,\n      _ref4$scale = _ref4.scale,\n      scale = _ref4$scale === void 0 ? 1 : _ref4$scale;\n    if (model.deleted) {\n      return null;\n    }\n    model.imageFormat = format;\n    var previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(function (val) {\n        return val * scale;\n      }) : null\n    };\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onImageReady(function (imageURL) {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize; // process the resize\n\n            publicAPI.modified(); // restore the saved camera parameters, if applicable\n\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(function (_ref5) {\n                var restoreParamsFn = _ref5.restoreParamsFn,\n                  arg = _ref5.arg;\n                return restoreParamsFn(arg);\n              });\n            } // Trigger a render at the original size\n\n            publicAPI.traverseAllPasses(); // Remove and clean up the placeholder, revealing the original\n\n            model.el.removeChild(model._screenshot.placeHolder);\n            model._screenshot.placeHolder.remove();\n            model._screenshot = null;\n          }\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          var tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg); // hide the main canvas\n\n          model.canvas.style.display = 'none'; // remember the main canvas original size, then resize it\n\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model._screenshot.size = null; // process the resize\n\n          publicAPI.modified();\n          if (resetCamera) {\n            var isUserResetCamera = resetCamera !== true; // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n\n            model._screenshot.cameras = model.renderable.getRenderers().map(function (renderer) {\n              var camera = renderer.getActiveCamera();\n              var params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer: renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            }); // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n\n            model._screenshot.cameras.forEach(function (_ref6) {\n              var resetCameraFn = _ref6.resetCameraFn,\n                resetCameraArgs = _ref6.resetCameraArgs;\n              return resetCameraFn(resetCameraArgs);\n            });\n          } // Trigger a render at the custom size\n\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n  var hardwareMaximumLineWidth;\n  publicAPI.getHardwareMaximumLineWidth = function () {\n    // We cache the result of this function because `getParameter` is slow\n    if (hardwareMaximumLineWidth != null) {\n      return hardwareMaximumLineWidth;\n    }\n    var gl = publicAPI.get3DContext();\n    var lineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE);\n    hardwareMaximumLineWidth = lineWidthRange[1];\n    return lineWidthRange[1];\n  };\n  publicAPI.getGLInformations = function () {\n    var gl = publicAPI.get3DContext();\n    var glTextureFloat = gl.getExtension('OES_texture_float');\n    var glTextureHalfFloat = gl.getExtension('OES_texture_half_float');\n    var glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    var glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\n    var glAnisotropic = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n    var params = [['Max Vertex Attributes', 'MAX_VERTEX_ATTRIBS', gl.getParameter(gl.MAX_VERTEX_ATTRIBS)], ['Max Varying Vectors', 'MAX_VARYING_VECTORS', gl.getParameter(gl.MAX_VARYING_VECTORS)], ['Max Vertex Uniform Vectors', 'MAX_VERTEX_UNIFORM_VECTORS', gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)], ['Max Fragment Uniform Vectors', 'MAX_FRAGMENT_UNIFORM_VECTORS', gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)], ['Max Fragment Texture Image Units', 'MAX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)], ['Max Vertex Texture Image Units', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)], ['Max Combined Texture Image Units', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)], ['Max 2D Texture Size', 'MAX_TEXTURE_SIZE', gl.getParameter(gl.MAX_TEXTURE_SIZE)], ['Max Cube Texture Size', 'MAX_CUBE_MAP_TEXTURE_SIZE', gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)], ['Max Texture Anisotropy', 'MAX_TEXTURE_MAX_ANISOTROPY_EXT', glAnisotropic && gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)], ['Point Size Range', 'ALIASED_POINT_SIZE_RANGE', gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - ')], ['Line Width Range', 'ALIASED_LINE_WIDTH_RANGE', gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - ')], ['Max Viewport Dimensions', 'MAX_VIEWPORT_DIMS', gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - ')], ['Max Renderbuffer Size', 'MAX_RENDERBUFFER_SIZE', gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)], ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)], ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)], ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)], ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)], ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)], ['Framebuffer Stencil Bits', 'STENCIL_BITS', gl.getParameter(gl.STENCIL_BITS)], ['Framebuffer Subpixel Bits', 'SUBPIXEL_BITS', gl.getParameter(gl.SUBPIXEL_BITS)], ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)], ['MSAA Sample Buffers', 'SAMPLE_BUFFERS', gl.getParameter(gl.SAMPLE_BUFFERS)], ['Supported Formats for UByte Render Targets     ', 'UNSIGNED_BYTE RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Half Float Render Targets', 'HALF FLOAT RENDER TARGET FORMATS', [glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGBA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGBA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGB, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGB' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'ALPHA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Full Float Render Targets', 'FLOAT RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Max Multiple Render Targets Buffers', 'MAX_DRAW_BUFFERS_WEBGL', glDrawBuffers ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL) : 0], ['High Float Precision in Vertex Shader', 'HIGH_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Vertex Shader', 'MEDIUM_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Vertex Shader', 'LOW_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Float Precision in Fragment Shader', 'HIGH_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Fragment Shader', 'MEDIUM_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Fragment Shader', 'LOW_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Vertex Shader', 'HIGH_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Vertex Shader', 'MEDIUM_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Vertex Shader', 'LOW_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Fragment Shader', 'HIGH_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Fragment Shader', 'MEDIUM_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Fragment Shader', 'LOW_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['Supported Extensions', 'EXTENSIONS', gl.getSupportedExtensions().join('<br/>\\t\\t\\t\\t\\t    ')], ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)], ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)], ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)], ['Shading Language Version', 'SHADING_LANGUAGE_VERSION', gl.getParameter(gl.SHADING_LANGUAGE_VERSION)], ['Unmasked Renderer', 'UNMASKED_RENDERER', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL)], ['Unmasked Vendor', 'UNMASKED_VENDOR', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL)], ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1]];\n    var result = {};\n    while (params.length) {\n      var _params$pop = params.pop(),\n        _params$pop2 = _slicedToArray(_params$pop, 3),\n        label = _params$pop2[0],\n        key = _params$pop2[1],\n        value = _params$pop2[2];\n      if (key) {\n        result[key] = {\n          label: label,\n          value: value\n        };\n      }\n    }\n    return result;\n  };\n  publicAPI.traverseAllPasses = function () {\n    if (model.renderPasses) {\n      for (var index = 0; index < model.renderPasses.length; ++index) {\n        model.renderPasses[index].traverse(publicAPI, null);\n      }\n    }\n    if (model.notifyStartCaptureImage) {\n      getCanvasDataURL();\n    }\n  };\n  publicAPI.disableCullFace = function () {\n    if (model.cullFaceEnabled) {\n      model.context.disable(model.context.CULL_FACE);\n      model.cullFaceEnabled = false;\n    }\n  };\n  publicAPI.enableCullFace = function () {\n    if (!model.cullFaceEnabled) {\n      model.context.enable(model.context.CULL_FACE);\n      model.cullFaceEnabled = true;\n    }\n  };\n  publicAPI.setViewStream = function (stream) {\n    if (model.viewStream === stream) {\n      return false;\n    }\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n    model.viewStream = stream;\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      var mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0; // Enable display of the background image\n\n      publicAPI.setUseBackgroundImage(true); // Bind to remote stream\n\n      model.subscription = model.viewStream.onImageReady(function (e) {\n        return publicAPI.setBackgroundImage(e.image);\n      });\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n    return true;\n  };\n  publicAPI.createSelector = function () {\n    var ret = vtkHardwareSelector.newInstance();\n    ret.setOpenGLRenderWindow(publicAPI);\n    return ret;\n  };\n  function clearEvents() {\n    model.canvas.removeEventListener('webglcontextlost', _preventDefault);\n    model.canvas.removeEventListener('webglcontextrestored', publicAPI.restoreContext);\n  }\n  publicAPI.delete = macro.chain(clearEvents, publicAPI.delete, publicAPI.setViewStream, deleteGLContext); // Do not trigger modified for performance reasons\n\n  publicAPI.setActiveFramebuffer = function (newActiveFramebuffer) {\n    model.activeFramebuffer = newActiveFramebuffer;\n  };\n  var superSetSize = publicAPI.setSize;\n  publicAPI.setSize = function (width, height) {\n    var modified = superSetSize(width, height);\n    if (modified) {\n      publicAPI.invokeWindowResizeEvent({\n        width: width,\n        height: height\n      });\n    }\n    return modified;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  cullFaceEnabled: false,\n  shaderCache: null,\n  initialized: false,\n  context: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  textureUnitManager: null,\n  textureResourceIds: null,\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  webgl2: false,\n  defaultToWebgl2: true,\n  // attempt webgl2 on by default\n  activeFramebuffer: null,\n  xrSession: null,\n  xrReferenceSpace: null,\n  xrSupported: true,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues); // Create internal instances\n\n  model.canvas = document.createElement('canvas');\n  model.canvas.style.width = '100%';\n  createGLContext();\n  if (!model.selector) {\n    model.selector = vtkHardwareSelector.newInstance();\n    model.selector.setOpenGLRenderWindow(publicAPI);\n  } // Create internal bgImage\n\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1';\n  model._textureResourceIds = new Map();\n  model.myFactory = vtkViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n\n  model.shaderCache = vtkShaderCache.newInstance();\n  model.shaderCache.setOpenGLRenderWindow(publicAPI); // setup default forward pass rendering\n\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n  macro.event(publicAPI, model, 'imageReady'); // Build VTK API\n\n  macro.get(publicAPI, model, ['shaderCache', 'textureUnitManager', 'webgl2', 'vrDisplay', 'useBackgroundImage', 'xrSupported', 'activeFramebuffer']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'renderPasses', 'notifyStartCaptureImage', 'defaultToWebgl2', 'cursor', 'useOffScreen']);\n  macro.setGetArray(publicAPI, model, ['size'], 2);\n  macro.event(publicAPI, model, 'windowResizeEvent'); // Object methods\n\n  vtkOpenGLRenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLRenderWindow'); // ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGL', newInstance); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance: newInstance,\n  extend: extend,\n  pushMonitorGLContextCount: pushMonitorGLContextCount,\n  popMonitorGLContextCount: popMonitorGLContextCount\n};\nexport { vtkRenderWindow as default, extend, newInstance, popMonitorGLContextCount, pushMonitorGLContextCount };","map":{"version":3,"names":["_slicedToArray","_toConsumableArray","_asyncToGenerator","_regeneratorRuntime","VtkDataTypes","macro","registerViewConstructor","vtkForwardPass","vtkHardwareSelector","vtkShaderCache","vtkTextureUnitManager","vtkViewNodeFactory","vtkRenderPass","vtkRenderWindowViewNode","Constants","createContextProxyHandler","GET_UNDERLYING_CONTEXT","vtkDebugMacro","vtkErrorMacro","XrSessionTypes","SCREENSHOT_PLACEHOLDER","position","top","left","width","height","DEFAULT_RESET_FACTORS","rescaleFactor","translateZ","checkRenderTargetSupport","gl","format","type","framebuffer","createFramebuffer","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","GL_CONTEXT_COUNT","GL_CONTEXT_LISTENERS","createGLContext","forEach","cb","deleteGLContext","pushMonitorGLContextCount","push","popMonitorGLContextCount","pop","_preventDefault","e","preventDefault","vtkOpenGLRenderWindow","publicAPI","model","classHierarchy","cachingContextHandler","getViewNodeFactory","myFactory","canvas","addEventListener","restoreContext","previousSize","updateWindow","renderable","size","setAttribute","viewStream","setSize","style","display","useOffScreen","el","cursor","cursorVisibility","containerSize","onModified","buildPass","prepass","prepareNodes","addMissingNodes","getRenderersByReference","removeUnusedNodes","initialize","children","child","setOpenGLRenderWindow","initialized","context","get3DContext","textureUnitManager","newInstance","setContext","shaderCache","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","depthFunc","LEQUAL","enable","BLEND","makeCurrent","setContainer","parentNode","removeChild","contains","bgImage","appendChild","useBackgroundImage","modified","getContainer","getContainerSize","_model$el$getBounding","getBoundingClientRect","getFramebufferSize","activeFramebuffer","getSize","getPixelData","x1","y1","x2","y2","pixels","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","options","arguments","length","undefined","preserveDrawingBuffer","depth","alpha","powerPreference","result","webgl2Supported","WebGL2RenderingContext","webgl2","defaultToWebgl2","getContext","Proxy","startXR","xrSessionType","navigator","xr","Error","HmdVR","isXrSessionAR","HmdAR","MobileAR","includes","sessionType","isSessionSupported","xrSession","requestSession","then","enterXR","_ref","mark","_callee","glLayer","ren","wrap","_callee$","_context","prev","next","oldCanvasSize","slice","makeXRCompatible","global","XRWebGLLayer","framebufferWidth","framebufferHeight","updateRenderState","baseLayer","requestReferenceSpace","refSpace","xrReferenceSpace","getRenderers","preXrSessionBackground","getBackground","setBackground","resetXRScene","getInteractor","switchToXRAnimation","xrSceneFrame","requestAnimationFrame","xrRender","stop","_x","apply","resetCamera","camera","getActiveCamera","physicalScale","getPhysicalScale","physicalTranslation","getPhysicalTranslation","rescaledTranslateZ","setPhysicalScale","setPhysicalTranslation","setClippingRange","stopXR","_callee2","_callee2$","_context2","abrupt","cancelAnimationFrame","returnFromXRAnimation","end","catch","error","DOMException","setProjectionMatrix","setViewport","traverseAllPasses","_ref3","_callee3","t","frame","isXrSessionHMD","xrPose","_callee3$","_context3","session","updateXRGamepads","getViewerPose","renderState","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","views","view","index","viewport","getViewport","eye","LookingGlassVR","startX","x","startY","y","endX","endY","computeViewParametersFromPhysicalMatrix","transform","inverse","matrix","projectionMatrix","scissor","disable","SCISSOR_TEST","_x2","_x3","rp","setCurrentOperation","traverse","activateTexture","_textureResourceIds","get","activeTexture","TEXTURE0","activeUnit","getTextureUnitManager","allocate","set","deactivateTexture","free","delete","getTextureUnitForTexture","getDefaultTextureInternalFormat","vtktype","numComps","oglNorm16Ext","useHalfFloat","UNSIGNED_CHAR","R8","RG8","RGB8","RGBA8","UNSIGNED_SHORT","R16_EXT","RG16_EXT","RGB16_EXT","RGBA16_EXT","SHORT","R16_SNORM_EXT","RG16_SNORM_EXT","RGB16_SNORM_EXT","RGBA16_SNORM_EXT","FLOAT","R16F","RG16F","RGB16F","RGBA16F","LUMINANCE","LUMINANCE_ALPHA","RGB","setBackgroundImage","img","src","setUseBackgroundImage","value","getCanvasDataURL","imageFormat","temporaryCanvas","document","createElement","temporaryContext","drawImage","mainBoundingClientRect","renderWindow","renderers","renderer","viewProps","getViewProps","viewProp","container","canvasList","getElementsByTagName","i","currentCanvas","boundingClientRect","newXPosition","newYPosition","screenshot","toDataURL","remove","invokeImageReady","captureNextImage","_ref4","_ref4$resetCamera","_ref4$size","_ref4$scale","scale","deleted","previous","notifyStartCaptureImage","_screenshot","map","val","Promise","resolve","reject","subscription","onImageReady","imageURL","unsubscribe","placeHolder","originalSize","cameras","_ref5","restoreParamsFn","arg","tmpImg","isUserResetCamera","params","resetCameraArgs","resetCameraFn","JSON","parse","stringify","_ref6","hardwareMaximumLineWidth","getHardwareMaximumLineWidth","lineWidthRange","getParameter","ALIASED_LINE_WIDTH_RANGE","getGLInformations","glTextureFloat","getExtension","glTextureHalfFloat","glDebugRendererInfo","glDrawBuffers","glAnisotropic","MAX_VERTEX_ATTRIBS","MAX_VARYING_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_TEXTURE_MAX_ANISOTROPY_EXT","ALIASED_POINT_SIZE_RANGE","join","MAX_VIEWPORT_DIMS","MAX_RENDERBUFFER_SIZE","RED_BITS","GREEN_BITS","BLUE_BITS","ALPHA_BITS","DEPTH_BITS","STENCIL_BITS","SUBPIXEL_BITS","SAMPLES","SAMPLE_BUFFERS","ALPHA","HALF_FLOAT_OES","MAX_DRAW_BUFFERS_WEBGL","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","precision","rangeMin","rangeMax","MEDIUM_FLOAT","LOW_FLOAT","FRAGMENT_SHADER","HIGH_INT","MEDIUM_INT","LOW_INT","getSupportedExtensions","RENDERER","VENDOR","VERSION","SHADING_LANGUAGE_VERSION","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","_params$pop","_params$pop2","label","key","renderPasses","disableCullFace","cullFaceEnabled","CULL_FACE","enableCullFace","setViewStream","stream","mainRenderer","getBackgroundByReference","image","invalidateCache","render","createSelector","ret","clearEvents","removeEventListener","chain","setActiveFramebuffer","newActiveFramebuffer","superSetSize","invokeWindowResizeEvent","DEFAULT_VALUES","textureResourceIds","xrSupported","extend","initialValues","Object","assign","selector","Image","zIndex","Map","registerOverride","event","setGet","setGetArray","vtkRenderWindow","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js"],"sourcesContent":["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport macro from '../../macros.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkHardwareSelector from './HardwareSelector.js';\nimport vtkShaderCache from './ShaderCache.js';\nimport vtkTextureUnitManager from './TextureUnitManager.js';\nimport vtkViewNodeFactory from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\nimport Constants from './RenderWindow/Constants.js';\nimport { createContextProxyHandler, GET_UNDERLYING_CONTEXT } from './RenderWindow/ContextProxy.js';\n\nvar vtkDebugMacro = macro.vtkDebugMacro,\n    vtkErrorMacro = macro.vtkErrorMacro;\nvar XrSessionTypes = Constants.XrSessionTypes;\nvar SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n};\nvar DEFAULT_RESET_FACTORS = {\n  rescaleFactor: 0.25,\n  // isotropic scale factor reduces apparent size of objects\n  translateZ: -1.5 // default translation initializes object in front of camera\n\n};\n\nfunction checkRenderTargetSupport(gl, format, type) {\n  // create temporary frame buffer and texture\n  var framebuffer = gl.createFramebuffer();\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); // check frame buffer status\n\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER); // clean up\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return status === gl.FRAMEBUFFER_COMPLETE;\n} // ----------------------------------------------------------------------------\n// Monitor the usage of GL context across vtkOpenGLRenderWindow instances\n// ----------------------------------------------------------------------------\n\n\nvar GL_CONTEXT_COUNT = 0;\nvar GL_CONTEXT_LISTENERS = [];\n\nfunction createGLContext() {\n  GL_CONTEXT_COUNT++;\n  GL_CONTEXT_LISTENERS.forEach(function (cb) {\n    return cb(GL_CONTEXT_COUNT);\n  });\n}\n\nfunction deleteGLContext() {\n  GL_CONTEXT_COUNT--;\n  GL_CONTEXT_LISTENERS.forEach(function (cb) {\n    return cb(GL_CONTEXT_COUNT);\n  });\n}\n\nfunction pushMonitorGLContextCount(cb) {\n  GL_CONTEXT_LISTENERS.push(cb);\n}\nfunction popMonitorGLContextCount(cb) {\n  return GL_CONTEXT_LISTENERS.pop();\n}\n\nfunction _preventDefault(e) {\n  e.preventDefault();\n} // ----------------------------------------------------------------------------\n// vtkOpenGLRenderWindow methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkOpenGLRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderWindow');\n  var cachingContextHandler = createContextProxyHandler();\n\n  publicAPI.getViewNodeFactory = function () {\n    return model.myFactory;\n  }; // prevent default context lost handler\n\n\n  model.canvas.addEventListener('webglcontextlost', _preventDefault, false);\n  model.canvas.addEventListener('webglcontextrestored', publicAPI.restoreContext, false); // Auto update style\n\n  var previousSize = [0, 0];\n\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n      }\n    } // ImageStream size\n\n\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    } // Offscreen ?\n\n\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block'; // Cursor type\n\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    } // Invalidate cached DOM container size\n\n\n    model.containerSize = null;\n  }\n\n  publicAPI.onModified(updateWindow); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n      model.children.forEach(function (child) {\n        child.setOpenGLRenderWindow(publicAPI);\n      });\n    }\n  };\n\n  publicAPI.initialize = function () {\n    if (!model.initialized) {\n      model.context = publicAPI.get3DContext();\n      model.textureUnitManager = vtkTextureUnitManager.newInstance();\n      model.textureUnitManager.setContext(model.context);\n      model.shaderCache.setContext(model.context); // initialize blending for transparency\n\n      var gl = model.context;\n      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.depthFunc(gl.LEQUAL);\n      gl.enable(gl.BLEND);\n      model.initialized = true;\n    }\n  };\n\n  publicAPI.makeCurrent = function () {\n    model.context.makeCurrent();\n  };\n\n  publicAPI.setContainer = function (el) {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      } // Remove canvas from previous container\n\n\n      model.el.removeChild(model.canvas); // If the renderer has previously added\n      // a background image, remove it from the DOM.\n\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n\n    if (model.el !== el) {\n      model.el = el;\n\n      if (model.el) {\n        model.el.appendChild(model.canvas); // If the renderer is set to use a background\n        // image, attach it to the DOM.\n\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      } // Trigger modified()\n\n\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getContainer = function () {\n    return model.el;\n  };\n\n  publicAPI.getContainerSize = function () {\n    if (!model.containerSize && model.el) {\n      var _model$el$getBounding = model.el.getBoundingClientRect(),\n          width = _model$el$getBounding.width,\n          height = _model$el$getBounding.height;\n\n      model.containerSize = [width, height];\n    }\n\n    return model.containerSize || model.size;\n  };\n\n  publicAPI.getFramebufferSize = function () {\n    if (model.activeFramebuffer) {\n      return model.activeFramebuffer.getSize();\n    }\n\n    return model.size;\n  };\n\n  publicAPI.getPixelData = function (x1, y1, x2, y2) {\n    var pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);\n    model.context.readPixels(x1, y1, x2 - x1 + 1, y2 - y1 + 1, model.context.RGBA, model.context.UNSIGNED_BYTE, pixels);\n    return pixels;\n  };\n\n  publicAPI.get3DContext = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      preserveDrawingBuffer: false,\n      depth: true,\n      alpha: true,\n      powerPreference: 'high-performance'\n    };\n    var result = null;\n    var webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';\n    model.webgl2 = false;\n\n    if (model.defaultToWebgl2 && webgl2Supported) {\n      result = model.canvas.getContext('webgl2', options);\n\n      if (result) {\n        model.webgl2 = true;\n        vtkDebugMacro('using webgl2');\n      }\n    }\n\n    if (!result) {\n      vtkDebugMacro('using webgl1');\n      result = model.canvas.getContext('webgl', options) || model.canvas.getContext('experimental-webgl', options);\n    }\n\n    return new Proxy(result, cachingContextHandler);\n  }; // Request an XR session on the user device with WebXR,\n  // typically in response to a user request such as a button press\n\n\n  publicAPI.startXR = function (xrSessionType) {\n    if (navigator.xr === undefined) {\n      throw new Error('WebXR is not available');\n    }\n\n    model.xrSessionType = xrSessionType !== undefined ? xrSessionType : XrSessionTypes.HmdVR;\n    var isXrSessionAR = [XrSessionTypes.HmdAR, XrSessionTypes.MobileAR].includes(model.xrSessionType);\n    var sessionType = isXrSessionAR ? 'immersive-ar' : 'immersive-vr';\n\n    if (!navigator.xr.isSessionSupported(sessionType)) {\n      if (isXrSessionAR) {\n        throw new Error('Device does not support AR session');\n      } else {\n        throw new Error('VR display is not available');\n      }\n    }\n\n    if (model.xrSession === null) {\n      navigator.xr.requestSession(sessionType).then(publicAPI.enterXR, function () {\n        throw new Error('Failed to create XR session!');\n      });\n    } else {\n      throw new Error('XR Session already exists!');\n    }\n  }; // When an XR session is available, set up the XRWebGLLayer\n  // and request the first animation frame for the device\n\n\n  publicAPI.enterXR = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(xrSession) {\n      var gl, glLayer, isXrSessionAR, ren;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              model.xrSession = xrSession;\n              model.oldCanvasSize = model.size.slice();\n\n              if (!(model.xrSession !== null)) {\n                _context.next = 17;\n                break;\n              }\n\n              gl = publicAPI.get3DContext();\n              _context.next = 6;\n              return gl.makeXRCompatible();\n\n            case 6:\n              glLayer = new global.XRWebGLLayer(model.xrSession, // constructor needs unproxied context\n              gl[GET_UNDERLYING_CONTEXT]());\n              publicAPI.setSize(glLayer.framebufferWidth, glLayer.framebufferHeight);\n              model.xrSession.updateRenderState({\n                baseLayer: glLayer\n              });\n              model.xrSession.requestReferenceSpace('local').then(function (refSpace) {\n                model.xrReferenceSpace = refSpace;\n              }); // Initialize transparent background for augmented reality session\n\n              isXrSessionAR = [XrSessionTypes.HmdAR, XrSessionTypes.MobileAR].includes(model.xrSessionType);\n\n              if (isXrSessionAR) {\n                ren = model.renderable.getRenderers()[0];\n                model.preXrSessionBackground = ren.getBackground();\n                ren.setBackground([0, 0, 0, 0]);\n              }\n\n              publicAPI.resetXRScene();\n              model.renderable.getInteractor().switchToXRAnimation();\n              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);\n              _context.next = 18;\n              break;\n\n            case 17:\n              throw new Error('Failed to enter XR with a null xrSession.');\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.resetXRScene = function () {\n    var rescaleFactor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RESET_FACTORS.rescaleFactor;\n    var translateZ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RESET_FACTORS.translateZ;\n    // Adjust world-to-physical parameters for different modalities\n    var ren = model.renderable.getRenderers()[0];\n    ren.resetCamera();\n    var camera = ren.getActiveCamera();\n    var physicalScale = camera.getPhysicalScale();\n    var physicalTranslation = camera.getPhysicalTranslation();\n    var rescaledTranslateZ = translateZ * physicalScale;\n    physicalScale /= rescaleFactor;\n    physicalTranslation[2] += rescaledTranslateZ;\n    camera.setPhysicalScale(physicalScale);\n    camera.setPhysicalTranslation(physicalTranslation); // Clip at 0.1m, 100.0m in physical space by default\n\n    camera.setClippingRange(0.1 * physicalScale, 100.0 * physicalScale);\n  };\n\n  publicAPI.stopXR = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var gl, ren;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(navigator.xr === undefined)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            if (!(model.xrSession !== null)) {\n              _context2.next = 10;\n              break;\n            }\n\n            model.xrSession.cancelAnimationFrame(model.xrSceneFrame);\n            model.renderable.getInteractor().returnFromXRAnimation();\n            gl = publicAPI.get3DContext();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            _context2.next = 9;\n            return model.xrSession.end().catch(function (error) {\n              if (!(error instanceof DOMException)) {\n                throw error;\n              }\n            });\n\n          case 9:\n            model.xrSession = null;\n\n          case 10:\n            if (model.oldCanvasSize !== undefined) {\n              publicAPI.setSize.apply(publicAPI, _toConsumableArray(model.oldCanvasSize));\n            } // Reset to default canvas\n\n\n            ren = model.renderable.getRenderers()[0];\n\n            if (model.preXrSessionBackground != null) {\n              ren.setBackground(model.preXrSessionBackground);\n              model.preXrSessionBackground = null;\n            }\n\n            ren.getActiveCamera().setProjectionMatrix(null);\n            ren.resetCamera();\n            ren.setViewport(0.0, 0, 1.0, 1.0);\n            publicAPI.traverseAllPasses();\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  publicAPI.xrRender = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(t, frame) {\n      var xrSession, isXrSessionHMD, xrPose, gl, glLayer, ren;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              xrSession = frame.session;\n              isXrSessionHMD = [XrSessionTypes.HmdVR, XrSessionTypes.HmdAR].includes(model.xrSessionType);\n              model.renderable.getInteractor().updateXRGamepads(xrSession, frame, model.xrReferenceSpace);\n              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);\n              xrPose = frame.getViewerPose(model.xrReferenceSpace);\n\n              if (xrPose) {\n                gl = publicAPI.get3DContext();\n\n                if (model.xrSessionType === XrSessionTypes.MobileAR && model.oldCanvasSize !== undefined) {\n                  gl.canvas.width = model.oldCanvasSize[0];\n                  gl.canvas.height = model.oldCanvasSize[1];\n                }\n\n                glLayer = xrSession.renderState.baseLayer;\n                gl.bindFramebuffer(gl.FRAMEBUFFER, glLayer.framebuffer);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n                gl.clear(gl.DEPTH_BUFFER_BIT);\n                publicAPI.setSize(glLayer.framebufferWidth, glLayer.framebufferHeight); // get the first renderer\n\n                ren = model.renderable.getRenderers()[0]; // Do a render pass for each eye\n\n                xrPose.views.forEach(function (view, index) {\n                  var viewport = glLayer.getViewport(view);\n\n                  if (isXrSessionHMD) {\n                    if (view.eye === 'left') {\n                      ren.setViewport(0, 0, 0.5, 1.0);\n                    } else if (view.eye === 'right') {\n                      ren.setViewport(0.5, 0, 1.0, 1.0);\n                    } else {\n                      // No handling for non-eye viewport\n                      return;\n                    }\n                  } else if (model.xrSessionType === XrSessionTypes.LookingGlassVR) {\n                    var startX = viewport.x / glLayer.framebufferWidth;\n                    var startY = viewport.y / glLayer.framebufferHeight;\n                    var endX = (viewport.x + viewport.width) / glLayer.framebufferWidth;\n                    var endY = (viewport.y + viewport.height) / glLayer.framebufferHeight;\n                    ren.setViewport(startX, startY, endX, endY);\n                  } else {\n                    ren.setViewport(0, 0, 1, 1);\n                  }\n\n                  ren.getActiveCamera().computeViewParametersFromPhysicalMatrix(view.transform.inverse.matrix);\n                  ren.getActiveCamera().setProjectionMatrix(view.projectionMatrix);\n                  publicAPI.traverseAllPasses();\n                }); // Reset scissorbox before any subsequent rendering to external displays\n                // on frame end, such as rendering to a Looking Glass display.\n\n                gl.scissor(0, 0, glLayer.framebufferWidth, glLayer.framebufferHeight);\n                gl.disable(gl.SCISSOR_TEST);\n              }\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.restoreContext = function () {\n    var rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n  };\n\n  publicAPI.activateTexture = function (texture) {\n    // Only add if it isn't already there\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      model.context.activeTexture(model.context.TEXTURE0 + result);\n      return;\n    }\n\n    var activeUnit = publicAPI.getTextureUnitManager().allocate();\n\n    if (activeUnit < 0) {\n      vtkErrorMacro('Hardware does not support the number of textures defined.');\n      return;\n    }\n\n    model._textureResourceIds.set(texture, activeUnit);\n\n    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);\n  };\n\n  publicAPI.deactivateTexture = function (texture) {\n    // Only deactivate if it isn't already there\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      publicAPI.getTextureUnitManager().free(result);\n\n      model._textureResourceIds.delete(texture);\n    }\n  };\n\n  publicAPI.getTextureUnitForTexture = function (texture) {\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    return -1;\n  };\n\n  publicAPI.getDefaultTextureInternalFormat = function (vtktype, numComps) {\n    var oglNorm16Ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var useHalfFloat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    if (model.webgl2) {\n      switch (vtktype) {\n        case VtkDataTypes.UNSIGNED_CHAR:\n          switch (numComps) {\n            case 1:\n              return model.context.R8;\n\n            case 2:\n              return model.context.RG8;\n\n            case 3:\n              return model.context.RGB8;\n\n            case 4:\n            default:\n              return model.context.RGBA8;\n          }\n\n        case oglNorm16Ext && !useHalfFloat && VtkDataTypes.UNSIGNED_SHORT:\n          switch (numComps) {\n            case 1:\n              return oglNorm16Ext.R16_EXT;\n\n            case 2:\n              return oglNorm16Ext.RG16_EXT;\n\n            case 3:\n              return oglNorm16Ext.RGB16_EXT;\n\n            case 4:\n            default:\n              return oglNorm16Ext.RGBA16_EXT;\n          }\n\n        // prioritize norm16 over float\n\n        case oglNorm16Ext && !useHalfFloat && VtkDataTypes.SHORT:\n          switch (numComps) {\n            case 1:\n              return oglNorm16Ext.R16_SNORM_EXT;\n\n            case 2:\n              return oglNorm16Ext.RG16_SNORM_EXT;\n\n            case 3:\n              return oglNorm16Ext.RGB16_SNORM_EXT;\n\n            case 4:\n            default:\n              return oglNorm16Ext.RGBA16_SNORM_EXT;\n          }\n\n        case VtkDataTypes.FLOAT:\n        default:\n          switch (numComps) {\n            case 1:\n              return model.context.R16F;\n\n            case 2:\n              return model.context.RG16F;\n\n            case 3:\n              return model.context.RGB16F;\n\n            case 4:\n            default:\n              return model.context.RGBA16F;\n          }\n\n      }\n    } // webgl1 only supports four types\n\n\n    switch (numComps) {\n      case 1:\n        return model.context.LUMINANCE;\n\n      case 2:\n        return model.context.LUMINANCE_ALPHA;\n\n      case 3:\n        return model.context.RGB;\n\n      case 4:\n      default:\n        return model.context.RGBA;\n    }\n  };\n\n  publicAPI.setBackgroundImage = function (img) {\n    model.bgImage.src = img.src;\n  };\n\n  publicAPI.setUseBackgroundImage = function (value) {\n    model.useBackgroundImage = value; // Add or remove the background image from the\n    // DOM as specified.\n\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n\n  function getCanvasDataURL() {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;\n    // Copy current canvas to not modify the original\n    var temporaryCanvas = document.createElement('canvas');\n    var temporaryContext = temporaryCanvas.getContext('2d');\n    temporaryCanvas.width = model.canvas.width;\n    temporaryCanvas.height = model.canvas.height;\n    temporaryContext.drawImage(model.canvas, 0, 0); // Get current client rect to place canvas\n\n    var mainBoundingClientRect = model.canvas.getBoundingClientRect();\n    var renderWindow = model.renderable;\n    var renderers = renderWindow.getRenderers();\n    renderers.forEach(function (renderer) {\n      var viewProps = renderer.getViewProps();\n      viewProps.forEach(function (viewProp) {\n        // Check if the prop has a container that should have canvas\n        if (viewProp.getContainer) {\n          var container = viewProp.getContainer();\n          var canvasList = container.getElementsByTagName('canvas'); // Go throughout all canvas and copy it into temporary main canvas\n\n          for (var i = 0; i < canvasList.length; i++) {\n            var currentCanvas = canvasList[i];\n            var boundingClientRect = currentCanvas.getBoundingClientRect();\n            var newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n            var newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n          }\n        }\n      });\n    });\n    var screenshot = temporaryCanvas.toDataURL(format);\n    temporaryCanvas.remove();\n    publicAPI.invokeImageReady(screenshot);\n  }\n\n  publicAPI.captureNextImage = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n\n    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref4$resetCamera = _ref4.resetCamera,\n        resetCamera = _ref4$resetCamera === void 0 ? false : _ref4$resetCamera,\n        _ref4$size = _ref4.size,\n        size = _ref4$size === void 0 ? null : _ref4$size,\n        _ref4$scale = _ref4.scale,\n        scale = _ref4$scale === void 0 ? 1 : _ref4$scale;\n\n    if (model.deleted) {\n      return null;\n    }\n\n    model.imageFormat = format;\n    var previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(function (val) {\n        return val * scale;\n      }) : null\n    };\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onImageReady(function (imageURL) {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize; // process the resize\n\n            publicAPI.modified(); // restore the saved camera parameters, if applicable\n\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(function (_ref5) {\n                var restoreParamsFn = _ref5.restoreParamsFn,\n                    arg = _ref5.arg;\n                return restoreParamsFn(arg);\n              });\n            } // Trigger a render at the original size\n\n\n            publicAPI.traverseAllPasses(); // Remove and clean up the placeholder, revealing the original\n\n            model.el.removeChild(model._screenshot.placeHolder);\n\n            model._screenshot.placeHolder.remove();\n\n            model._screenshot = null;\n          }\n\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          var tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg); // hide the main canvas\n\n          model.canvas.style.display = 'none'; // remember the main canvas original size, then resize it\n\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model._screenshot.size = null; // process the resize\n\n          publicAPI.modified();\n\n          if (resetCamera) {\n            var isUserResetCamera = resetCamera !== true; // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n\n            model._screenshot.cameras = model.renderable.getRenderers().map(function (renderer) {\n              var camera = renderer.getActiveCamera();\n              var params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer: renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            }); // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n\n            model._screenshot.cameras.forEach(function (_ref6) {\n              var resetCameraFn = _ref6.resetCameraFn,\n                  resetCameraArgs = _ref6.resetCameraArgs;\n              return resetCameraFn(resetCameraArgs);\n            });\n          } // Trigger a render at the custom size\n\n\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n\n  var hardwareMaximumLineWidth;\n\n  publicAPI.getHardwareMaximumLineWidth = function () {\n    // We cache the result of this function because `getParameter` is slow\n    if (hardwareMaximumLineWidth != null) {\n      return hardwareMaximumLineWidth;\n    }\n\n    var gl = publicAPI.get3DContext();\n    var lineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE);\n    hardwareMaximumLineWidth = lineWidthRange[1];\n    return lineWidthRange[1];\n  };\n\n  publicAPI.getGLInformations = function () {\n    var gl = publicAPI.get3DContext();\n    var glTextureFloat = gl.getExtension('OES_texture_float');\n    var glTextureHalfFloat = gl.getExtension('OES_texture_half_float');\n    var glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    var glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\n    var glAnisotropic = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n    var params = [['Max Vertex Attributes', 'MAX_VERTEX_ATTRIBS', gl.getParameter(gl.MAX_VERTEX_ATTRIBS)], ['Max Varying Vectors', 'MAX_VARYING_VECTORS', gl.getParameter(gl.MAX_VARYING_VECTORS)], ['Max Vertex Uniform Vectors', 'MAX_VERTEX_UNIFORM_VECTORS', gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)], ['Max Fragment Uniform Vectors', 'MAX_FRAGMENT_UNIFORM_VECTORS', gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)], ['Max Fragment Texture Image Units', 'MAX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)], ['Max Vertex Texture Image Units', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)], ['Max Combined Texture Image Units', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)], ['Max 2D Texture Size', 'MAX_TEXTURE_SIZE', gl.getParameter(gl.MAX_TEXTURE_SIZE)], ['Max Cube Texture Size', 'MAX_CUBE_MAP_TEXTURE_SIZE', gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)], ['Max Texture Anisotropy', 'MAX_TEXTURE_MAX_ANISOTROPY_EXT', glAnisotropic && gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)], ['Point Size Range', 'ALIASED_POINT_SIZE_RANGE', gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - ')], ['Line Width Range', 'ALIASED_LINE_WIDTH_RANGE', gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - ')], ['Max Viewport Dimensions', 'MAX_VIEWPORT_DIMS', gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - ')], ['Max Renderbuffer Size', 'MAX_RENDERBUFFER_SIZE', gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)], ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)], ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)], ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)], ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)], ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)], ['Framebuffer Stencil Bits', 'STENCIL_BITS', gl.getParameter(gl.STENCIL_BITS)], ['Framebuffer Subpixel Bits', 'SUBPIXEL_BITS', gl.getParameter(gl.SUBPIXEL_BITS)], ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)], ['MSAA Sample Buffers', 'SAMPLE_BUFFERS', gl.getParameter(gl.SAMPLE_BUFFERS)], ['Supported Formats for UByte Render Targets     ', 'UNSIGNED_BYTE RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Half Float Render Targets', 'HALF FLOAT RENDER TARGET FORMATS', [glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGBA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGBA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGB, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGB' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'ALPHA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Full Float Render Targets', 'FLOAT RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Max Multiple Render Targets Buffers', 'MAX_DRAW_BUFFERS_WEBGL', glDrawBuffers ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL) : 0], ['High Float Precision in Vertex Shader', 'HIGH_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Vertex Shader', 'MEDIUM_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Vertex Shader', 'LOW_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Float Precision in Fragment Shader', 'HIGH_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Fragment Shader', 'MEDIUM_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Fragment Shader', 'LOW_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Vertex Shader', 'HIGH_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Vertex Shader', 'MEDIUM_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Vertex Shader', 'LOW_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Fragment Shader', 'HIGH_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Fragment Shader', 'MEDIUM_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Fragment Shader', 'LOW_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['Supported Extensions', 'EXTENSIONS', gl.getSupportedExtensions().join('<br/>\\t\\t\\t\\t\\t    ')], ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)], ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)], ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)], ['Shading Language Version', 'SHADING_LANGUAGE_VERSION', gl.getParameter(gl.SHADING_LANGUAGE_VERSION)], ['Unmasked Renderer', 'UNMASKED_RENDERER', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL)], ['Unmasked Vendor', 'UNMASKED_VENDOR', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL)], ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1]];\n    var result = {};\n\n    while (params.length) {\n      var _params$pop = params.pop(),\n          _params$pop2 = _slicedToArray(_params$pop, 3),\n          label = _params$pop2[0],\n          key = _params$pop2[1],\n          value = _params$pop2[2];\n\n      if (key) {\n        result[key] = {\n          label: label,\n          value: value\n        };\n      }\n    }\n\n    return result;\n  };\n\n  publicAPI.traverseAllPasses = function () {\n    if (model.renderPasses) {\n      for (var index = 0; index < model.renderPasses.length; ++index) {\n        model.renderPasses[index].traverse(publicAPI, null);\n      }\n    }\n\n    if (model.notifyStartCaptureImage) {\n      getCanvasDataURL();\n    }\n  };\n\n  publicAPI.disableCullFace = function () {\n    if (model.cullFaceEnabled) {\n      model.context.disable(model.context.CULL_FACE);\n      model.cullFaceEnabled = false;\n    }\n  };\n\n  publicAPI.enableCullFace = function () {\n    if (!model.cullFaceEnabled) {\n      model.context.enable(model.context.CULL_FACE);\n      model.cullFaceEnabled = true;\n    }\n  };\n\n  publicAPI.setViewStream = function (stream) {\n    if (model.viewStream === stream) {\n      return false;\n    }\n\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n\n    model.viewStream = stream;\n\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      var mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0; // Enable display of the background image\n\n      publicAPI.setUseBackgroundImage(true); // Bind to remote stream\n\n      model.subscription = model.viewStream.onImageReady(function (e) {\n        return publicAPI.setBackgroundImage(e.image);\n      });\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n\n    return true;\n  };\n\n  publicAPI.createSelector = function () {\n    var ret = vtkHardwareSelector.newInstance();\n    ret.setOpenGLRenderWindow(publicAPI);\n    return ret;\n  };\n\n  function clearEvents() {\n    model.canvas.removeEventListener('webglcontextlost', _preventDefault);\n    model.canvas.removeEventListener('webglcontextrestored', publicAPI.restoreContext);\n  }\n\n  publicAPI.delete = macro.chain(clearEvents, publicAPI.delete, publicAPI.setViewStream, deleteGLContext); // Do not trigger modified for performance reasons\n\n  publicAPI.setActiveFramebuffer = function (newActiveFramebuffer) {\n    model.activeFramebuffer = newActiveFramebuffer;\n  };\n\n  var superSetSize = publicAPI.setSize;\n\n  publicAPI.setSize = function (width, height) {\n    var modified = superSetSize(width, height);\n\n    if (modified) {\n      publicAPI.invokeWindowResizeEvent({\n        width: width,\n        height: height\n      });\n    }\n\n    return modified;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  cullFaceEnabled: false,\n  shaderCache: null,\n  initialized: false,\n  context: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  textureUnitManager: null,\n  textureResourceIds: null,\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  webgl2: false,\n  defaultToWebgl2: true,\n  // attempt webgl2 on by default\n  activeFramebuffer: null,\n  xrSession: null,\n  xrReferenceSpace: null,\n  xrSupported: true,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues); // Create internal instances\n\n  model.canvas = document.createElement('canvas');\n  model.canvas.style.width = '100%';\n  createGLContext();\n\n  if (!model.selector) {\n    model.selector = vtkHardwareSelector.newInstance();\n    model.selector.setOpenGLRenderWindow(publicAPI);\n  } // Create internal bgImage\n\n\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1';\n  model._textureResourceIds = new Map();\n  model.myFactory = vtkViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n\n  model.shaderCache = vtkShaderCache.newInstance();\n  model.shaderCache.setOpenGLRenderWindow(publicAPI); // setup default forward pass rendering\n\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n  macro.event(publicAPI, model, 'imageReady'); // Build VTK API\n\n  macro.get(publicAPI, model, ['shaderCache', 'textureUnitManager', 'webgl2', 'vrDisplay', 'useBackgroundImage', 'xrSupported', 'activeFramebuffer']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'renderPasses', 'notifyStartCaptureImage', 'defaultToWebgl2', 'cursor', 'useOffScreen']);\n  macro.setGetArray(publicAPI, model, ['size'], 2);\n  macro.event(publicAPI, model, 'windowResizeEvent'); // Object methods\n\n  vtkOpenGLRenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLRenderWindow'); // ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGL', newInstance); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance: newInstance,\n  extend: extend,\n  pushMonitorGLContextCount: pushMonitorGLContextCount,\n  popMonitorGLContextCount: popMonitorGLContextCount\n};\n\nexport { vtkRenderWindow as default, extend, newInstance, popMonitorGLContextCount, pushMonitorGLContextCount };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,OAAOC,kBAAkB,MAAM,0CAA0C;AACzE,OAAOC,iBAAiB,MAAM,yCAAyC;AACvE,OAAOC,mBAAmB,MAAM,4BAA4B;AAC5D,SAASC,YAAY,QAAQ,0CAA0C;AACvE,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,uBAAuB,QAAQ,yBAAyB;AACjE,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,uBAAuB,MAAM,uCAAuC;AAC3E,OAAOC,SAAS,MAAM,6BAA6B;AACnD,SAASC,yBAAyB,EAAEC,sBAAsB,QAAQ,gCAAgC;AAElG,IAAIC,aAAa,GAAGZ,KAAK,CAACY,aAAa;EACnCC,aAAa,GAAGb,KAAK,CAACa,aAAa;AACvC,IAAIC,cAAc,GAAGL,SAAS,CAACK,cAAc;AAC7C,IAAIC,sBAAsB,GAAG;EAC3BC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AACD,IAAIC,qBAAqB,GAAG;EAC1BC,aAAa,EAAE,IAAI;EACnB;EACAC,UAAU,EAAE,CAAC,GAAG,CAAC;AAEnB,CAAC;;AAED,SAASC,wBAAwBA,CAACC,EAAE,EAAEC,MAAM,EAAEC,IAAI,EAAE;EAClD;EACA,IAAIC,WAAW,GAAGH,EAAE,CAACI,iBAAiB,CAAC,CAAC;EACxC,IAAIC,OAAO,GAAGL,EAAE,CAACM,aAAa,CAAC,CAAC;EAChCN,EAAE,CAACO,WAAW,CAACP,EAAE,CAACQ,UAAU,EAAEH,OAAO,CAAC;EACtCL,EAAE,CAACS,UAAU,CAACT,EAAE,CAACQ,UAAU,EAAE,CAAC,EAAEP,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,MAAM,EAAEC,IAAI,EAAE,IAAI,CAAC;EACpEF,EAAE,CAACU,eAAe,CAACV,EAAE,CAACW,WAAW,EAAER,WAAW,CAAC;EAC/CH,EAAE,CAACY,oBAAoB,CAACZ,EAAE,CAACW,WAAW,EAAEX,EAAE,CAACa,iBAAiB,EAAEb,EAAE,CAACQ,UAAU,EAAEH,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE1F,IAAIS,MAAM,GAAGd,EAAE,CAACe,sBAAsB,CAACf,EAAE,CAACW,WAAW,CAAC,CAAC,CAAC;;EAExDX,EAAE,CAACU,eAAe,CAACV,EAAE,CAACW,WAAW,EAAE,IAAI,CAAC;EACxCX,EAAE,CAACO,WAAW,CAACP,EAAE,CAACQ,UAAU,EAAE,IAAI,CAAC;EACnC,OAAOM,MAAM,KAAKd,EAAE,CAACgB,oBAAoB;AAC3C,CAAC,CAAC;AACF;AACA;;AAGA,IAAIC,gBAAgB,GAAG,CAAC;AACxB,IAAIC,oBAAoB,GAAG,EAAE;AAE7B,SAASC,eAAeA,CAAA,EAAG;EACzBF,gBAAgB,EAAE;EAClBC,oBAAoB,CAACE,OAAO,CAAC,UAAUC,EAAE,EAAE;IACzC,OAAOA,EAAE,CAACJ,gBAAgB,CAAC;EAC7B,CAAC,CAAC;AACJ;AAEA,SAASK,eAAeA,CAAA,EAAG;EACzBL,gBAAgB,EAAE;EAClBC,oBAAoB,CAACE,OAAO,CAAC,UAAUC,EAAE,EAAE;IACzC,OAAOA,EAAE,CAACJ,gBAAgB,CAAC;EAC7B,CAAC,CAAC;AACJ;AAEA,SAASM,yBAAyBA,CAACF,EAAE,EAAE;EACrCH,oBAAoB,CAACM,IAAI,CAACH,EAAE,CAAC;AAC/B;AACA,SAASI,wBAAwBA,CAACJ,EAAE,EAAE;EACpC,OAAOH,oBAAoB,CAACQ,GAAG,CAAC,CAAC;AACnC;AAEA,SAASC,eAAeA,CAACC,CAAC,EAAE;EAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;AACpB,CAAC,CAAC;AACF;AACA;;AAGA,SAASC,qBAAqBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC/C;EACAA,KAAK,CAACC,cAAc,CAACT,IAAI,CAAC,uBAAuB,CAAC;EAClD,IAAIU,qBAAqB,GAAGjD,yBAAyB,CAAC,CAAC;EAEvD8C,SAAS,CAACI,kBAAkB,GAAG,YAAY;IACzC,OAAOH,KAAK,CAACI,SAAS;EACxB,CAAC,CAAC,CAAC;;EAGHJ,KAAK,CAACK,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAEX,eAAe,EAAE,KAAK,CAAC;EACzEK,KAAK,CAACK,MAAM,CAACC,gBAAgB,CAAC,sBAAsB,EAAEP,SAAS,CAACQ,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;;EAExF,IAAIC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAEzB,SAASC,YAAYA,CAAA,EAAG;IACtB;IACA,IAAIT,KAAK,CAACU,UAAU,EAAE;MACpB,IAAIV,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,KAAKH,YAAY,CAAC,CAAC,CAAC,IAAIR,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,KAAKH,YAAY,CAAC,CAAC,CAAC,EAAE;QAC1EA,YAAY,CAAC,CAAC,CAAC,GAAGR,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC;QAC/BH,YAAY,CAAC,CAAC,CAAC,GAAGR,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC;QAC/BX,KAAK,CAACK,MAAM,CAACO,YAAY,CAAC,OAAO,EAAEZ,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;QACjDX,KAAK,CAACK,MAAM,CAACO,YAAY,CAAC,QAAQ,EAAEZ,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;MACpD;IACF,CAAC,CAAC;;IAGF,IAAIX,KAAK,CAACa,UAAU,EAAE;MACpB;MACAb,KAAK,CAACa,UAAU,CAACC,OAAO,CAACd,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,EAAEX,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC;;IAGFX,KAAK,CAACK,MAAM,CAACU,KAAK,CAACC,OAAO,GAAGhB,KAAK,CAACiB,YAAY,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;;IAEpE,IAAIjB,KAAK,CAACkB,EAAE,EAAE;MACZlB,KAAK,CAACkB,EAAE,CAACH,KAAK,CAACI,MAAM,GAAGnB,KAAK,CAACoB,gBAAgB,GAAGpB,KAAK,CAACmB,MAAM,GAAG,MAAM;IACxE,CAAC,CAAC;;IAGFnB,KAAK,CAACqB,aAAa,GAAG,IAAI;EAC5B;EAEAtB,SAAS,CAACuB,UAAU,CAACb,YAAY,CAAC,CAAC,CAAC;;EAEpCV,SAAS,CAACwB,SAAS,GAAG,UAAUC,OAAO,EAAE;IACvC,IAAIA,OAAO,EAAE;MACX,IAAI,CAACxB,KAAK,CAACU,UAAU,EAAE;QACrB;MACF;MAEAX,SAAS,CAAC0B,YAAY,CAAC,CAAC;MACxB1B,SAAS,CAAC2B,eAAe,CAAC1B,KAAK,CAACU,UAAU,CAACiB,uBAAuB,CAAC,CAAC,CAAC;MACrE5B,SAAS,CAAC6B,iBAAiB,CAAC,CAAC;MAC7B7B,SAAS,CAAC8B,UAAU,CAAC,CAAC;MACtB7B,KAAK,CAAC8B,QAAQ,CAAC1C,OAAO,CAAC,UAAU2C,KAAK,EAAE;QACtCA,KAAK,CAACC,qBAAqB,CAACjC,SAAS,CAAC;MACxC,CAAC,CAAC;IACJ;EACF,CAAC;EAEDA,SAAS,CAAC8B,UAAU,GAAG,YAAY;IACjC,IAAI,CAAC7B,KAAK,CAACiC,WAAW,EAAE;MACtBjC,KAAK,CAACkC,OAAO,GAAGnC,SAAS,CAACoC,YAAY,CAAC,CAAC;MACxCnC,KAAK,CAACoC,kBAAkB,GAAGxF,qBAAqB,CAACyF,WAAW,CAAC,CAAC;MAC9DrC,KAAK,CAACoC,kBAAkB,CAACE,UAAU,CAACtC,KAAK,CAACkC,OAAO,CAAC;MAClDlC,KAAK,CAACuC,WAAW,CAACD,UAAU,CAACtC,KAAK,CAACkC,OAAO,CAAC,CAAC,CAAC;;MAE7C,IAAIlE,EAAE,GAAGgC,KAAK,CAACkC,OAAO;MACtBlE,EAAE,CAACwE,iBAAiB,CAACxE,EAAE,CAACyE,SAAS,EAAEzE,EAAE,CAAC0E,mBAAmB,EAAE1E,EAAE,CAAC2E,GAAG,EAAE3E,EAAE,CAAC0E,mBAAmB,CAAC;MAC1F1E,EAAE,CAAC4E,SAAS,CAAC5E,EAAE,CAAC6E,MAAM,CAAC;MACvB7E,EAAE,CAAC8E,MAAM,CAAC9E,EAAE,CAAC+E,KAAK,CAAC;MACnB/C,KAAK,CAACiC,WAAW,GAAG,IAAI;IAC1B;EACF,CAAC;EAEDlC,SAAS,CAACiD,WAAW,GAAG,YAAY;IAClChD,KAAK,CAACkC,OAAO,CAACc,WAAW,CAAC,CAAC;EAC7B,CAAC;EAEDjD,SAAS,CAACkD,YAAY,GAAG,UAAU/B,EAAE,EAAE;IACrC,IAAIlB,KAAK,CAACkB,EAAE,IAAIlB,KAAK,CAACkB,EAAE,KAAKA,EAAE,EAAE;MAC/B,IAAIlB,KAAK,CAACK,MAAM,CAAC6C,UAAU,KAAKlD,KAAK,CAACkB,EAAE,EAAE;QACxC9D,aAAa,CAAC,oDAAoD,CAAC;MACrE,CAAC,CAAC;;MAGF4C,KAAK,CAACkB,EAAE,CAACiC,WAAW,CAACnD,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC;MACpC;;MAEA,IAAIL,KAAK,CAACkB,EAAE,CAACkC,QAAQ,CAACpD,KAAK,CAACqD,OAAO,CAAC,EAAE;QACpCrD,KAAK,CAACkB,EAAE,CAACiC,WAAW,CAACnD,KAAK,CAACqD,OAAO,CAAC;MACrC;IACF;IAEA,IAAIrD,KAAK,CAACkB,EAAE,KAAKA,EAAE,EAAE;MACnBlB,KAAK,CAACkB,EAAE,GAAGA,EAAE;MAEb,IAAIlB,KAAK,CAACkB,EAAE,EAAE;QACZlB,KAAK,CAACkB,EAAE,CAACoC,WAAW,CAACtD,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC;QACpC;;QAEA,IAAIL,KAAK,CAACuD,kBAAkB,EAAE;UAC5BvD,KAAK,CAACkB,EAAE,CAACoC,WAAW,CAACtD,KAAK,CAACqD,OAAO,CAAC;QACrC;MACF,CAAC,CAAC;;MAGFtD,SAAS,CAACyD,QAAQ,CAAC,CAAC;IACtB;EACF,CAAC;EAEDzD,SAAS,CAAC0D,YAAY,GAAG,YAAY;IACnC,OAAOzD,KAAK,CAACkB,EAAE;EACjB,CAAC;EAEDnB,SAAS,CAAC2D,gBAAgB,GAAG,YAAY;IACvC,IAAI,CAAC1D,KAAK,CAACqB,aAAa,IAAIrB,KAAK,CAACkB,EAAE,EAAE;MACpC,IAAIyC,qBAAqB,GAAG3D,KAAK,CAACkB,EAAE,CAAC0C,qBAAqB,CAAC,CAAC;QACxDlG,KAAK,GAAGiG,qBAAqB,CAACjG,KAAK;QACnCC,MAAM,GAAGgG,qBAAqB,CAAChG,MAAM;MAEzCqC,KAAK,CAACqB,aAAa,GAAG,CAAC3D,KAAK,EAAEC,MAAM,CAAC;IACvC;IAEA,OAAOqC,KAAK,CAACqB,aAAa,IAAIrB,KAAK,CAACW,IAAI;EAC1C,CAAC;EAEDZ,SAAS,CAAC8D,kBAAkB,GAAG,YAAY;IACzC,IAAI7D,KAAK,CAAC8D,iBAAiB,EAAE;MAC3B,OAAO9D,KAAK,CAAC8D,iBAAiB,CAACC,OAAO,CAAC,CAAC;IAC1C;IAEA,OAAO/D,KAAK,CAACW,IAAI;EACnB,CAAC;EAEDZ,SAAS,CAACiE,YAAY,GAAG,UAAUC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACjD,IAAIC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAACH,EAAE,GAAGF,EAAE,GAAG,CAAC,KAAKG,EAAE,GAAGF,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9DlE,KAAK,CAACkC,OAAO,CAACqC,UAAU,CAACN,EAAE,EAAEC,EAAE,EAAEC,EAAE,GAAGF,EAAE,GAAG,CAAC,EAAEG,EAAE,GAAGF,EAAE,GAAG,CAAC,EAAElE,KAAK,CAACkC,OAAO,CAACsC,IAAI,EAAExE,KAAK,CAACkC,OAAO,CAACuC,aAAa,EAAEJ,MAAM,CAAC;IACnH,OAAOA,MAAM;EACf,CAAC;EAEDtE,SAAS,CAACoC,YAAY,GAAG,YAAY;IACnC,IAAIuC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG;MAChFG,qBAAqB,EAAE,KAAK;MAC5BC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,IAAI;MACXC,eAAe,EAAE;IACnB,CAAC;IACD,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIC,eAAe,GAAG,OAAOC,sBAAsB,KAAK,WAAW;IACnEpF,KAAK,CAACqF,MAAM,GAAG,KAAK;IAEpB,IAAIrF,KAAK,CAACsF,eAAe,IAAIH,eAAe,EAAE;MAC5CD,MAAM,GAAGlF,KAAK,CAACK,MAAM,CAACkF,UAAU,CAAC,QAAQ,EAAEb,OAAO,CAAC;MAEnD,IAAIQ,MAAM,EAAE;QACVlF,KAAK,CAACqF,MAAM,GAAG,IAAI;QACnBlI,aAAa,CAAC,cAAc,CAAC;MAC/B;IACF;IAEA,IAAI,CAAC+H,MAAM,EAAE;MACX/H,aAAa,CAAC,cAAc,CAAC;MAC7B+H,MAAM,GAAGlF,KAAK,CAACK,MAAM,CAACkF,UAAU,CAAC,OAAO,EAAEb,OAAO,CAAC,IAAI1E,KAAK,CAACK,MAAM,CAACkF,UAAU,CAAC,oBAAoB,EAAEb,OAAO,CAAC;IAC9G;IAEA,OAAO,IAAIc,KAAK,CAACN,MAAM,EAAEhF,qBAAqB,CAAC;EACjD,CAAC,CAAC,CAAC;EACH;;EAGAH,SAAS,CAAC0F,OAAO,GAAG,UAAUC,aAAa,EAAE;IAC3C,IAAIC,SAAS,CAACC,EAAE,KAAKf,SAAS,EAAE;MAC9B,MAAM,IAAIgB,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA7F,KAAK,CAAC0F,aAAa,GAAGA,aAAa,KAAKb,SAAS,GAAGa,aAAa,GAAGrI,cAAc,CAACyI,KAAK;IACxF,IAAIC,aAAa,GAAG,CAAC1I,cAAc,CAAC2I,KAAK,EAAE3I,cAAc,CAAC4I,QAAQ,CAAC,CAACC,QAAQ,CAAClG,KAAK,CAAC0F,aAAa,CAAC;IACjG,IAAIS,WAAW,GAAGJ,aAAa,GAAG,cAAc,GAAG,cAAc;IAEjE,IAAI,CAACJ,SAAS,CAACC,EAAE,CAACQ,kBAAkB,CAACD,WAAW,CAAC,EAAE;MACjD,IAAIJ,aAAa,EAAE;QACjB,MAAM,IAAIF,KAAK,CAAC,oCAAoC,CAAC;MACvD,CAAC,MAAM;QACL,MAAM,IAAIA,KAAK,CAAC,6BAA6B,CAAC;MAChD;IACF;IAEA,IAAI7F,KAAK,CAACqG,SAAS,KAAK,IAAI,EAAE;MAC5BV,SAAS,CAACC,EAAE,CAACU,cAAc,CAACH,WAAW,CAAC,CAACI,IAAI,CAACxG,SAAS,CAACyG,OAAO,EAAE,YAAY;QAC3E,MAAM,IAAIX,KAAK,CAAC,8BAA8B,CAAC;MACjD,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAAC,4BAA4B,CAAC;IAC/C;EACF,CAAC,CAAC,CAAC;EACH;;EAGA9F,SAAS,CAACyG,OAAO,GAAG,aAAa,YAAY;IAC3C,IAAIC,IAAI,GAAGrK,iBAAiB,EAAE,aAAaC,mBAAmB,CAACqK,IAAI,CAAC,SAASC,OAAOA,CAACN,SAAS,EAAE;MAC9F,IAAIrI,EAAE,EAAE4I,OAAO,EAAEb,aAAa,EAAEc,GAAG;MACnC,OAAOxK,mBAAmB,CAACyK,IAAI,CAAC,SAASC,QAAQA,CAACC,QAAQ,EAAE;QAC1D,OAAO,CAAC,EAAE;UACR,QAAQA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAACE,IAAI;YACnC,KAAK,CAAC;cACJlH,KAAK,CAACqG,SAAS,GAAGA,SAAS;cAC3BrG,KAAK,CAACmH,aAAa,GAAGnH,KAAK,CAACW,IAAI,CAACyG,KAAK,CAAC,CAAC;cAExC,IAAI,EAAEpH,KAAK,CAACqG,SAAS,KAAK,IAAI,CAAC,EAAE;gBAC/BW,QAAQ,CAACE,IAAI,GAAG,EAAE;gBAClB;cACF;cAEAlJ,EAAE,GAAG+B,SAAS,CAACoC,YAAY,CAAC,CAAC;cAC7B6E,QAAQ,CAACE,IAAI,GAAG,CAAC;cACjB,OAAOlJ,EAAE,CAACqJ,gBAAgB,CAAC,CAAC;YAE9B,KAAK,CAAC;cACJT,OAAO,GAAG,IAAIU,MAAM,CAACC,YAAY,CAACvH,KAAK,CAACqG,SAAS;cAAE;cACnDrI,EAAE,CAACd,sBAAsB,CAAC,CAAC,CAAC,CAAC;cAC7B6C,SAAS,CAACe,OAAO,CAAC8F,OAAO,CAACY,gBAAgB,EAAEZ,OAAO,CAACa,iBAAiB,CAAC;cACtEzH,KAAK,CAACqG,SAAS,CAACqB,iBAAiB,CAAC;gBAChCC,SAAS,EAAEf;cACb,CAAC,CAAC;cACF5G,KAAK,CAACqG,SAAS,CAACuB,qBAAqB,CAAC,OAAO,CAAC,CAACrB,IAAI,CAAC,UAAUsB,QAAQ,EAAE;gBACtE7H,KAAK,CAAC8H,gBAAgB,GAAGD,QAAQ;cACnC,CAAC,CAAC,CAAC,CAAC;;cAEJ9B,aAAa,GAAG,CAAC1I,cAAc,CAAC2I,KAAK,EAAE3I,cAAc,CAAC4I,QAAQ,CAAC,CAACC,QAAQ,CAAClG,KAAK,CAAC0F,aAAa,CAAC;cAE7F,IAAIK,aAAa,EAAE;gBACjBc,GAAG,GAAG7G,KAAK,CAACU,UAAU,CAACqH,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC/H,KAAK,CAACgI,sBAAsB,GAAGnB,GAAG,CAACoB,aAAa,CAAC,CAAC;gBAClDpB,GAAG,CAACqB,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACjC;cAEAnI,SAAS,CAACoI,YAAY,CAAC,CAAC;cACxBnI,KAAK,CAACU,UAAU,CAAC0H,aAAa,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAAC;cACtDrI,KAAK,CAACsI,YAAY,GAAGtI,KAAK,CAACqG,SAAS,CAACkC,qBAAqB,CAACxI,SAAS,CAACyI,QAAQ,CAAC;cAC9ExB,QAAQ,CAACE,IAAI,GAAG,EAAE;cAClB;YAEF,KAAK,EAAE;cACL,MAAM,IAAIrB,KAAK,CAAC,2CAA2C,CAAC;YAE9D,KAAK,EAAE;YACP,KAAK,KAAK;cACR,OAAOmB,QAAQ,CAACyB,IAAI,CAAC,CAAC;UAC1B;QACF;MACF,CAAC,EAAE9B,OAAO,CAAC;IACb,CAAC,CAAC,CAAC;IAEH,OAAO,UAAU+B,EAAE,EAAE;MACnB,OAAOjC,IAAI,CAACkC,KAAK,CAAC,IAAI,EAAEhE,SAAS,CAAC;IACpC,CAAC;EACH,CAAC,CAAC,CAAC;EAEH5E,SAAS,CAACoI,YAAY,GAAG,YAAY;IACnC,IAAItK,aAAa,GAAG8G,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG/G,qBAAqB,CAACC,aAAa;IAC3H,IAAIC,UAAU,GAAG6G,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG/G,qBAAqB,CAACE,UAAU;IACrH;IACA,IAAI+I,GAAG,GAAG7G,KAAK,CAACU,UAAU,CAACqH,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5ClB,GAAG,CAAC+B,WAAW,CAAC,CAAC;IACjB,IAAIC,MAAM,GAAGhC,GAAG,CAACiC,eAAe,CAAC,CAAC;IAClC,IAAIC,aAAa,GAAGF,MAAM,CAACG,gBAAgB,CAAC,CAAC;IAC7C,IAAIC,mBAAmB,GAAGJ,MAAM,CAACK,sBAAsB,CAAC,CAAC;IACzD,IAAIC,kBAAkB,GAAGrL,UAAU,GAAGiL,aAAa;IACnDA,aAAa,IAAIlL,aAAa;IAC9BoL,mBAAmB,CAAC,CAAC,CAAC,IAAIE,kBAAkB;IAC5CN,MAAM,CAACO,gBAAgB,CAACL,aAAa,CAAC;IACtCF,MAAM,CAACQ,sBAAsB,CAACJ,mBAAmB,CAAC,CAAC,CAAC;;IAEpDJ,MAAM,CAACS,gBAAgB,CAAC,GAAG,GAAGP,aAAa,EAAE,KAAK,GAAGA,aAAa,CAAC;EACrE,CAAC;EAEDhJ,SAAS,CAACwJ,MAAM,GAAG,aAAanN,iBAAiB,EAAE,aAAaC,mBAAmB,CAACqK,IAAI,CAAC,SAAS8C,QAAQA,CAAA,EAAG;IAC3G,IAAIxL,EAAE,EAAE6I,GAAG;IACX,OAAOxK,mBAAmB,CAACyK,IAAI,CAAC,SAAS2C,SAASA,CAACC,SAAS,EAAE;MAC5D,OAAO,CAAC,EAAE;QACR,QAAQA,SAAS,CAACzC,IAAI,GAAGyC,SAAS,CAACxC,IAAI;UACrC,KAAK,CAAC;YACJ,IAAI,EAAEvB,SAAS,CAACC,EAAE,KAAKf,SAAS,CAAC,EAAE;cACjC6E,SAAS,CAACxC,IAAI,GAAG,CAAC;cAClB;YACF;YAEA,OAAOwC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;UAEnC,KAAK,CAAC;YACJ,IAAI,EAAE3J,KAAK,CAACqG,SAAS,KAAK,IAAI,CAAC,EAAE;cAC/BqD,SAAS,CAACxC,IAAI,GAAG,EAAE;cACnB;YACF;YAEAlH,KAAK,CAACqG,SAAS,CAACuD,oBAAoB,CAAC5J,KAAK,CAACsI,YAAY,CAAC;YACxDtI,KAAK,CAACU,UAAU,CAAC0H,aAAa,CAAC,CAAC,CAACyB,qBAAqB,CAAC,CAAC;YACxD7L,EAAE,GAAG+B,SAAS,CAACoC,YAAY,CAAC,CAAC;YAC7BnE,EAAE,CAACU,eAAe,CAACV,EAAE,CAACW,WAAW,EAAE,IAAI,CAAC;YACxC+K,SAAS,CAACxC,IAAI,GAAG,CAAC;YAClB,OAAOlH,KAAK,CAACqG,SAAS,CAACyD,GAAG,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAE;cAClD,IAAI,EAAEA,KAAK,YAAYC,YAAY,CAAC,EAAE;gBACpC,MAAMD,KAAK;cACb;YACF,CAAC,CAAC;UAEJ,KAAK,CAAC;YACJhK,KAAK,CAACqG,SAAS,GAAG,IAAI;UAExB,KAAK,EAAE;YACL,IAAIrG,KAAK,CAACmH,aAAa,KAAKtC,SAAS,EAAE;cACrC9E,SAAS,CAACe,OAAO,CAAC6H,KAAK,CAAC5I,SAAS,EAAE5D,kBAAkB,CAAC6D,KAAK,CAACmH,aAAa,CAAC,CAAC;YAC7E,CAAC,CAAC;;YAGFN,GAAG,GAAG7G,KAAK,CAACU,UAAU,CAACqH,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAExC,IAAI/H,KAAK,CAACgI,sBAAsB,IAAI,IAAI,EAAE;cACxCnB,GAAG,CAACqB,aAAa,CAAClI,KAAK,CAACgI,sBAAsB,CAAC;cAC/ChI,KAAK,CAACgI,sBAAsB,GAAG,IAAI;YACrC;YAEAnB,GAAG,CAACiC,eAAe,CAAC,CAAC,CAACoB,mBAAmB,CAAC,IAAI,CAAC;YAC/CrD,GAAG,CAAC+B,WAAW,CAAC,CAAC;YACjB/B,GAAG,CAACsD,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;YACjCpK,SAAS,CAACqK,iBAAiB,CAAC,CAAC;UAE/B,KAAK,EAAE;UACP,KAAK,KAAK;YACR,OAAOV,SAAS,CAACjB,IAAI,CAAC,CAAC;QAC3B;MACF;IACF,CAAC,EAAEe,QAAQ,CAAC;EACd,CAAC,CAAC,CAAC;EAEHzJ,SAAS,CAACyI,QAAQ,GAAG,aAAa,YAAY;IAC5C,IAAI6B,KAAK,GAAGjO,iBAAiB,EAAE,aAAaC,mBAAmB,CAACqK,IAAI,CAAC,SAAS4D,QAAQA,CAACC,CAAC,EAAEC,KAAK,EAAE;MAC/F,IAAInE,SAAS,EAAEoE,cAAc,EAAEC,MAAM,EAAE1M,EAAE,EAAE4I,OAAO,EAAEC,GAAG;MACvD,OAAOxK,mBAAmB,CAACyK,IAAI,CAAC,SAAS6D,SAASA,CAACC,SAAS,EAAE;QAC5D,OAAO,CAAC,EAAE;UACR,QAAQA,SAAS,CAAC3D,IAAI,GAAG2D,SAAS,CAAC1D,IAAI;YACrC,KAAK,CAAC;cACJb,SAAS,GAAGmE,KAAK,CAACK,OAAO;cACzBJ,cAAc,GAAG,CAACpN,cAAc,CAACyI,KAAK,EAAEzI,cAAc,CAAC2I,KAAK,CAAC,CAACE,QAAQ,CAAClG,KAAK,CAAC0F,aAAa,CAAC;cAC3F1F,KAAK,CAACU,UAAU,CAAC0H,aAAa,CAAC,CAAC,CAAC0C,gBAAgB,CAACzE,SAAS,EAAEmE,KAAK,EAAExK,KAAK,CAAC8H,gBAAgB,CAAC;cAC3F9H,KAAK,CAACsI,YAAY,GAAGtI,KAAK,CAACqG,SAAS,CAACkC,qBAAqB,CAACxI,SAAS,CAACyI,QAAQ,CAAC;cAC9EkC,MAAM,GAAGF,KAAK,CAACO,aAAa,CAAC/K,KAAK,CAAC8H,gBAAgB,CAAC;cAEpD,IAAI4C,MAAM,EAAE;gBACV1M,EAAE,GAAG+B,SAAS,CAACoC,YAAY,CAAC,CAAC;gBAE7B,IAAInC,KAAK,CAAC0F,aAAa,KAAKrI,cAAc,CAAC4I,QAAQ,IAAIjG,KAAK,CAACmH,aAAa,KAAKtC,SAAS,EAAE;kBACxF7G,EAAE,CAACqC,MAAM,CAAC3C,KAAK,GAAGsC,KAAK,CAACmH,aAAa,CAAC,CAAC,CAAC;kBACxCnJ,EAAE,CAACqC,MAAM,CAAC1C,MAAM,GAAGqC,KAAK,CAACmH,aAAa,CAAC,CAAC,CAAC;gBAC3C;gBAEAP,OAAO,GAAGP,SAAS,CAAC2E,WAAW,CAACrD,SAAS;gBACzC3J,EAAE,CAACU,eAAe,CAACV,EAAE,CAACW,WAAW,EAAEiI,OAAO,CAACzI,WAAW,CAAC;gBACvDH,EAAE,CAACiN,KAAK,CAACjN,EAAE,CAACkN,gBAAgB,CAAC;gBAC7BlN,EAAE,CAACiN,KAAK,CAACjN,EAAE,CAACmN,gBAAgB,CAAC;gBAC7BpL,SAAS,CAACe,OAAO,CAAC8F,OAAO,CAACY,gBAAgB,EAAEZ,OAAO,CAACa,iBAAiB,CAAC,CAAC,CAAC;;gBAExEZ,GAAG,GAAG7G,KAAK,CAACU,UAAU,CAACqH,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAE1C2C,MAAM,CAACU,KAAK,CAAChM,OAAO,CAAC,UAAUiM,IAAI,EAAEC,KAAK,EAAE;kBAC1C,IAAIC,QAAQ,GAAG3E,OAAO,CAAC4E,WAAW,CAACH,IAAI,CAAC;kBAExC,IAAIZ,cAAc,EAAE;oBAClB,IAAIY,IAAI,CAACI,GAAG,KAAK,MAAM,EAAE;sBACvB5E,GAAG,CAACsD,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;oBACjC,CAAC,MAAM,IAAIkB,IAAI,CAACI,GAAG,KAAK,OAAO,EAAE;sBAC/B5E,GAAG,CAACsD,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;oBACnC,CAAC,MAAM;sBACL;sBACA;oBACF;kBACF,CAAC,MAAM,IAAInK,KAAK,CAAC0F,aAAa,KAAKrI,cAAc,CAACqO,cAAc,EAAE;oBAChE,IAAIC,MAAM,GAAGJ,QAAQ,CAACK,CAAC,GAAGhF,OAAO,CAACY,gBAAgB;oBAClD,IAAIqE,MAAM,GAAGN,QAAQ,CAACO,CAAC,GAAGlF,OAAO,CAACa,iBAAiB;oBACnD,IAAIsE,IAAI,GAAG,CAACR,QAAQ,CAACK,CAAC,GAAGL,QAAQ,CAAC7N,KAAK,IAAIkJ,OAAO,CAACY,gBAAgB;oBACnE,IAAIwE,IAAI,GAAG,CAACT,QAAQ,CAACO,CAAC,GAAGP,QAAQ,CAAC5N,MAAM,IAAIiJ,OAAO,CAACa,iBAAiB;oBACrEZ,GAAG,CAACsD,WAAW,CAACwB,MAAM,EAAEE,MAAM,EAAEE,IAAI,EAAEC,IAAI,CAAC;kBAC7C,CAAC,MAAM;oBACLnF,GAAG,CAACsD,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;kBAC7B;kBAEAtD,GAAG,CAACiC,eAAe,CAAC,CAAC,CAACmD,uCAAuC,CAACZ,IAAI,CAACa,SAAS,CAACC,OAAO,CAACC,MAAM,CAAC;kBAC5FvF,GAAG,CAACiC,eAAe,CAAC,CAAC,CAACoB,mBAAmB,CAACmB,IAAI,CAACgB,gBAAgB,CAAC;kBAChEtM,SAAS,CAACqK,iBAAiB,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC,CAAC;gBACJ;;gBAEApM,EAAE,CAACsO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE1F,OAAO,CAACY,gBAAgB,EAAEZ,OAAO,CAACa,iBAAiB,CAAC;gBACrEzJ,EAAE,CAACuO,OAAO,CAACvO,EAAE,CAACwO,YAAY,CAAC;cAC7B;YAEF,KAAK,CAAC;YACN,KAAK,KAAK;cACR,OAAO5B,SAAS,CAACnC,IAAI,CAAC,CAAC;UAC3B;QACF;MACF,CAAC,EAAE6B,QAAQ,CAAC;IACd,CAAC,CAAC,CAAC;IAEH,OAAO,UAAUmC,GAAG,EAAEC,GAAG,EAAE;MACzB,OAAOrC,KAAK,CAAC1B,KAAK,CAAC,IAAI,EAAEhE,SAAS,CAAC;IACrC,CAAC;EACH,CAAC,CAAC,CAAC;EAEH5E,SAAS,CAACQ,cAAc,GAAG,YAAY;IACrC,IAAIoM,EAAE,GAAG7P,aAAa,CAACuF,WAAW,CAAC,CAAC;IACpCsK,EAAE,CAACC,mBAAmB,CAAC,SAAS,CAAC;IACjCD,EAAE,CAACE,QAAQ,CAAC9M,SAAS,EAAE,IAAI,CAAC;EAC9B,CAAC;EAEDA,SAAS,CAAC+M,eAAe,GAAG,UAAUzO,OAAO,EAAE;IAC7C;IACA,IAAI6G,MAAM,GAAGlF,KAAK,CAAC+M,mBAAmB,CAACC,GAAG,CAAC3O,OAAO,CAAC;IAEnD,IAAI6G,MAAM,KAAKL,SAAS,EAAE;MACxB7E,KAAK,CAACkC,OAAO,CAAC+K,aAAa,CAACjN,KAAK,CAACkC,OAAO,CAACgL,QAAQ,GAAGhI,MAAM,CAAC;MAC5D;IACF;IAEA,IAAIiI,UAAU,GAAGpN,SAAS,CAACqN,qBAAqB,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAE7D,IAAIF,UAAU,GAAG,CAAC,EAAE;MAClB/P,aAAa,CAAC,2DAA2D,CAAC;MAC1E;IACF;IAEA4C,KAAK,CAAC+M,mBAAmB,CAACO,GAAG,CAACjP,OAAO,EAAE8O,UAAU,CAAC;IAElDnN,KAAK,CAACkC,OAAO,CAAC+K,aAAa,CAACjN,KAAK,CAACkC,OAAO,CAACgL,QAAQ,GAAGC,UAAU,CAAC;EAClE,CAAC;EAEDpN,SAAS,CAACwN,iBAAiB,GAAG,UAAUlP,OAAO,EAAE;IAC/C;IACA,IAAI6G,MAAM,GAAGlF,KAAK,CAAC+M,mBAAmB,CAACC,GAAG,CAAC3O,OAAO,CAAC;IAEnD,IAAI6G,MAAM,KAAKL,SAAS,EAAE;MACxB9E,SAAS,CAACqN,qBAAqB,CAAC,CAAC,CAACI,IAAI,CAACtI,MAAM,CAAC;MAE9ClF,KAAK,CAAC+M,mBAAmB,CAACU,MAAM,CAACpP,OAAO,CAAC;IAC3C;EACF,CAAC;EAED0B,SAAS,CAAC2N,wBAAwB,GAAG,UAAUrP,OAAO,EAAE;IACtD,IAAI6G,MAAM,GAAGlF,KAAK,CAAC+M,mBAAmB,CAACC,GAAG,CAAC3O,OAAO,CAAC;IAEnD,IAAI6G,MAAM,KAAKL,SAAS,EAAE;MACxB,OAAOK,MAAM;IACf;IAEA,OAAO,CAAC,CAAC;EACX,CAAC;EAEDnF,SAAS,CAAC4N,+BAA+B,GAAG,UAAUC,OAAO,EAAEC,QAAQ,EAAE;IACvE,IAAIC,YAAY,GAAGnJ,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;IAC3F,IAAIoJ,YAAY,GAAGpJ,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;IAE5F,IAAI3E,KAAK,CAACqF,MAAM,EAAE;MAChB,QAAQuI,OAAO;QACb,KAAKtR,YAAY,CAAC0R,aAAa;UAC7B,QAAQH,QAAQ;YACd,KAAK,CAAC;cACJ,OAAO7N,KAAK,CAACkC,OAAO,CAAC+L,EAAE;YAEzB,KAAK,CAAC;cACJ,OAAOjO,KAAK,CAACkC,OAAO,CAACgM,GAAG;YAE1B,KAAK,CAAC;cACJ,OAAOlO,KAAK,CAACkC,OAAO,CAACiM,IAAI;YAE3B,KAAK,CAAC;YACN;cACE,OAAOnO,KAAK,CAACkC,OAAO,CAACkM,KAAK;UAC9B;QAEF,KAAKN,YAAY,IAAI,CAACC,YAAY,IAAIzR,YAAY,CAAC+R,cAAc;UAC/D,QAAQR,QAAQ;YACd,KAAK,CAAC;cACJ,OAAOC,YAAY,CAACQ,OAAO;YAE7B,KAAK,CAAC;cACJ,OAAOR,YAAY,CAACS,QAAQ;YAE9B,KAAK,CAAC;cACJ,OAAOT,YAAY,CAACU,SAAS;YAE/B,KAAK,CAAC;YACN;cACE,OAAOV,YAAY,CAACW,UAAU;UAClC;;QAEF;;QAEA,KAAKX,YAAY,IAAI,CAACC,YAAY,IAAIzR,YAAY,CAACoS,KAAK;UACtD,QAAQb,QAAQ;YACd,KAAK,CAAC;cACJ,OAAOC,YAAY,CAACa,aAAa;YAEnC,KAAK,CAAC;cACJ,OAAOb,YAAY,CAACc,cAAc;YAEpC,KAAK,CAAC;cACJ,OAAOd,YAAY,CAACe,eAAe;YAErC,KAAK,CAAC;YACN;cACE,OAAOf,YAAY,CAACgB,gBAAgB;UACxC;QAEF,KAAKxS,YAAY,CAACyS,KAAK;QACvB;UACE,QAAQlB,QAAQ;YACd,KAAK,CAAC;cACJ,OAAO7N,KAAK,CAACkC,OAAO,CAAC8M,IAAI;YAE3B,KAAK,CAAC;cACJ,OAAOhP,KAAK,CAACkC,OAAO,CAAC+M,KAAK;YAE5B,KAAK,CAAC;cACJ,OAAOjP,KAAK,CAACkC,OAAO,CAACgN,MAAM;YAE7B,KAAK,CAAC;YACN;cACE,OAAOlP,KAAK,CAACkC,OAAO,CAACiN,OAAO;UAChC;MAEJ;IACF,CAAC,CAAC;;IAGF,QAAQtB,QAAQ;MACd,KAAK,CAAC;QACJ,OAAO7N,KAAK,CAACkC,OAAO,CAACkN,SAAS;MAEhC,KAAK,CAAC;QACJ,OAAOpP,KAAK,CAACkC,OAAO,CAACmN,eAAe;MAEtC,KAAK,CAAC;QACJ,OAAOrP,KAAK,CAACkC,OAAO,CAACoN,GAAG;MAE1B,KAAK,CAAC;MACN;QACE,OAAOtP,KAAK,CAACkC,OAAO,CAACsC,IAAI;IAC7B;EACF,CAAC;EAEDzE,SAAS,CAACwP,kBAAkB,GAAG,UAAUC,GAAG,EAAE;IAC5CxP,KAAK,CAACqD,OAAO,CAACoM,GAAG,GAAGD,GAAG,CAACC,GAAG;EAC7B,CAAC;EAED1P,SAAS,CAAC2P,qBAAqB,GAAG,UAAUC,KAAK,EAAE;IACjD3P,KAAK,CAACuD,kBAAkB,GAAGoM,KAAK,CAAC,CAAC;IAClC;;IAEA,IAAI3P,KAAK,CAACuD,kBAAkB,IAAI,CAACvD,KAAK,CAACkB,EAAE,CAACkC,QAAQ,CAACpD,KAAK,CAACqD,OAAO,CAAC,EAAE;MACjErD,KAAK,CAACkB,EAAE,CAACoC,WAAW,CAACtD,KAAK,CAACqD,OAAO,CAAC;IACrC,CAAC,MAAM,IAAI,CAACrD,KAAK,CAACuD,kBAAkB,IAAIvD,KAAK,CAACkB,EAAE,CAACkC,QAAQ,CAACpD,KAAK,CAACqD,OAAO,CAAC,EAAE;MACxErD,KAAK,CAACkB,EAAE,CAACiC,WAAW,CAACnD,KAAK,CAACqD,OAAO,CAAC;IACrC;EACF,CAAC;EAED,SAASuM,gBAAgBA,CAAA,EAAG;IAC1B,IAAI3R,MAAM,GAAG0G,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG3E,KAAK,CAAC6P,WAAW;IAClG;IACA,IAAIC,eAAe,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACtD,IAAIC,gBAAgB,GAAGH,eAAe,CAACvK,UAAU,CAAC,IAAI,CAAC;IACvDuK,eAAe,CAACpS,KAAK,GAAGsC,KAAK,CAACK,MAAM,CAAC3C,KAAK;IAC1CoS,eAAe,CAACnS,MAAM,GAAGqC,KAAK,CAACK,MAAM,CAAC1C,MAAM;IAC5CsS,gBAAgB,CAACC,SAAS,CAAClQ,KAAK,CAACK,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEhD,IAAI8P,sBAAsB,GAAGnQ,KAAK,CAACK,MAAM,CAACuD,qBAAqB,CAAC,CAAC;IACjE,IAAIwM,YAAY,GAAGpQ,KAAK,CAACU,UAAU;IACnC,IAAI2P,SAAS,GAAGD,YAAY,CAACrI,YAAY,CAAC,CAAC;IAC3CsI,SAAS,CAACjR,OAAO,CAAC,UAAUkR,QAAQ,EAAE;MACpC,IAAIC,SAAS,GAAGD,QAAQ,CAACE,YAAY,CAAC,CAAC;MACvCD,SAAS,CAACnR,OAAO,CAAC,UAAUqR,QAAQ,EAAE;QACpC;QACA,IAAIA,QAAQ,CAAChN,YAAY,EAAE;UACzB,IAAIiN,SAAS,GAAGD,QAAQ,CAAChN,YAAY,CAAC,CAAC;UACvC,IAAIkN,UAAU,GAAGD,SAAS,CAACE,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;;UAE3D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAAC/L,MAAM,EAAEiM,CAAC,EAAE,EAAE;YAC1C,IAAIC,aAAa,GAAGH,UAAU,CAACE,CAAC,CAAC;YACjC,IAAIE,kBAAkB,GAAGD,aAAa,CAAClN,qBAAqB,CAAC,CAAC;YAC9D,IAAIoN,YAAY,GAAGD,kBAAkB,CAACnF,CAAC,GAAGuE,sBAAsB,CAACvE,CAAC;YAClE,IAAIqF,YAAY,GAAGF,kBAAkB,CAACjF,CAAC,GAAGqE,sBAAsB,CAACrE,CAAC;YAClEmE,gBAAgB,CAACC,SAAS,CAACY,aAAa,EAAEE,YAAY,EAAEC,YAAY,CAAC;UACvE;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAIC,UAAU,GAAGpB,eAAe,CAACqB,SAAS,CAAClT,MAAM,CAAC;IAClD6R,eAAe,CAACsB,MAAM,CAAC,CAAC;IACxBrR,SAAS,CAACsR,gBAAgB,CAACH,UAAU,CAAC;EACxC;EAEAnR,SAAS,CAACuR,gBAAgB,GAAG,YAAY;IACvC,IAAIrT,MAAM,GAAG0G,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW;IAE5F,IAAI4M,KAAK,GAAG5M,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9E6M,iBAAiB,GAAGD,KAAK,CAAC3I,WAAW;MACrCA,WAAW,GAAG4I,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,iBAAiB;MACtEC,UAAU,GAAGF,KAAK,CAAC5Q,IAAI;MACvBA,IAAI,GAAG8Q,UAAU,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,UAAU;MAChDC,WAAW,GAAGH,KAAK,CAACI,KAAK;MACzBA,KAAK,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,WAAW;IAEpD,IAAI1R,KAAK,CAAC4R,OAAO,EAAE;MACjB,OAAO,IAAI;IACb;IAEA5R,KAAK,CAAC6P,WAAW,GAAG5R,MAAM;IAC1B,IAAI4T,QAAQ,GAAG7R,KAAK,CAAC8R,uBAAuB;IAC5C9R,KAAK,CAAC8R,uBAAuB,GAAG,IAAI;IACpC9R,KAAK,CAAC+R,WAAW,GAAG;MAClBpR,IAAI,EAAE,CAAC,CAACA,IAAI,IAAIgR,KAAK,KAAK,CAAC,GAAGhR,IAAI,IAAIX,KAAK,CAACW,IAAI,CAACqR,GAAG,CAAC,UAAUC,GAAG,EAAE;QAClE,OAAOA,GAAG,GAAGN,KAAK;MACpB,CAAC,CAAC,GAAG;IACP,CAAC;IACD,OAAO,IAAIO,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;MAC5C,IAAIC,YAAY,GAAGtS,SAAS,CAACuS,YAAY,CAAC,UAAUC,QAAQ,EAAE;QAC5D,IAAIvS,KAAK,CAAC+R,WAAW,CAACpR,IAAI,KAAK,IAAI,EAAE;UACnCX,KAAK,CAAC8R,uBAAuB,GAAGD,QAAQ;UACxCQ,YAAY,CAACG,WAAW,CAAC,CAAC;UAE1B,IAAIxS,KAAK,CAAC+R,WAAW,CAACU,WAAW,EAAE;YACjC;YACAzS,KAAK,CAACW,IAAI,GAAGX,KAAK,CAAC+R,WAAW,CAACW,YAAY,CAAC,CAAC;;YAE7C3S,SAAS,CAACyD,QAAQ,CAAC,CAAC,CAAC,CAAC;;YAEtB,IAAIxD,KAAK,CAAC+R,WAAW,CAACY,OAAO,EAAE;cAC7B3S,KAAK,CAAC+R,WAAW,CAACY,OAAO,CAACvT,OAAO,CAAC,UAAUwT,KAAK,EAAE;gBACjD,IAAIC,eAAe,GAAGD,KAAK,CAACC,eAAe;kBACvCC,GAAG,GAAGF,KAAK,CAACE,GAAG;gBACnB,OAAOD,eAAe,CAACC,GAAG,CAAC;cAC7B,CAAC,CAAC;YACJ,CAAC,CAAC;;YAGF/S,SAAS,CAACqK,iBAAiB,CAAC,CAAC,CAAC,CAAC;;YAE/BpK,KAAK,CAACkB,EAAE,CAACiC,WAAW,CAACnD,KAAK,CAAC+R,WAAW,CAACU,WAAW,CAAC;YAEnDzS,KAAK,CAAC+R,WAAW,CAACU,WAAW,CAACrB,MAAM,CAAC,CAAC;YAEtCpR,KAAK,CAAC+R,WAAW,GAAG,IAAI;UAC1B;UAEAI,OAAO,CAACI,QAAQ,CAAC;QACnB,CAAC,MAAM;UACL;UACA,IAAIQ,MAAM,GAAGhD,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC1C+C,MAAM,CAAChS,KAAK,GAAGzD,sBAAsB;UACrCyV,MAAM,CAACtD,GAAG,GAAG8C,QAAQ;UACrBvS,KAAK,CAAC+R,WAAW,CAACU,WAAW,GAAGzS,KAAK,CAACkB,EAAE,CAACoC,WAAW,CAACyP,MAAM,CAAC,CAAC,CAAC;;UAE9D/S,KAAK,CAACK,MAAM,CAACU,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;;UAErChB,KAAK,CAAC+R,WAAW,CAACW,YAAY,GAAG1S,KAAK,CAACW,IAAI;UAC3CX,KAAK,CAACW,IAAI,GAAGX,KAAK,CAAC+R,WAAW,CAACpR,IAAI;UACnCX,KAAK,CAAC+R,WAAW,CAACpR,IAAI,GAAG,IAAI,CAAC,CAAC;;UAE/BZ,SAAS,CAACyD,QAAQ,CAAC,CAAC;UAEpB,IAAIoF,WAAW,EAAE;YACf,IAAIoK,iBAAiB,GAAGpK,WAAW,KAAK,IAAI,CAAC,CAAC;YAC9C;;YAEA5I,KAAK,CAAC+R,WAAW,CAACY,OAAO,GAAG3S,KAAK,CAACU,UAAU,CAACqH,YAAY,CAAC,CAAC,CAACiK,GAAG,CAAC,UAAU1B,QAAQ,EAAE;cAClF,IAAIzH,MAAM,GAAGyH,QAAQ,CAACxH,eAAe,CAAC,CAAC;cACvC,IAAImK,MAAM,GAAGpK,MAAM,CAACmE,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,eAAe,CAAC;cAClE,OAAO;gBACLkG,eAAe,EAAEF,iBAAiB,GAAG;kBACnC1C,QAAQ,EAAEA;gBACZ,CAAC,GAAGzL,SAAS;gBACbsO,aAAa,EAAEH,iBAAiB,GAAGpK,WAAW,GAAG0H,QAAQ,CAAC1H,WAAW;gBACrEiK,eAAe,EAAEhK,MAAM,CAACyE,GAAG;gBAC3B;gBACAwF,GAAG,EAAEM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,MAAM,CAAC;cACxC,CAAC;YACH,CAAC,CAAC,CAAC,CAAC;YACJ;YACA;;YAEAjT,KAAK,CAAC+R,WAAW,CAACY,OAAO,CAACvT,OAAO,CAAC,UAAUmU,KAAK,EAAE;cACjD,IAAIJ,aAAa,GAAGI,KAAK,CAACJ,aAAa;gBACnCD,eAAe,GAAGK,KAAK,CAACL,eAAe;cAC3C,OAAOC,aAAa,CAACD,eAAe,CAAC;YACvC,CAAC,CAAC;UACJ,CAAC,CAAC;;UAGFnT,SAAS,CAACqK,iBAAiB,CAAC,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,IAAIoJ,wBAAwB;EAE5BzT,SAAS,CAAC0T,2BAA2B,GAAG,YAAY;IAClD;IACA,IAAID,wBAAwB,IAAI,IAAI,EAAE;MACpC,OAAOA,wBAAwB;IACjC;IAEA,IAAIxV,EAAE,GAAG+B,SAAS,CAACoC,YAAY,CAAC,CAAC;IACjC,IAAIuR,cAAc,GAAG1V,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC4V,wBAAwB,CAAC;IACjEJ,wBAAwB,GAAGE,cAAc,CAAC,CAAC,CAAC;IAC5C,OAAOA,cAAc,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED3T,SAAS,CAAC8T,iBAAiB,GAAG,YAAY;IACxC,IAAI7V,EAAE,GAAG+B,SAAS,CAACoC,YAAY,CAAC,CAAC;IACjC,IAAI2R,cAAc,GAAG9V,EAAE,CAAC+V,YAAY,CAAC,mBAAmB,CAAC;IACzD,IAAIC,kBAAkB,GAAGhW,EAAE,CAAC+V,YAAY,CAAC,wBAAwB,CAAC;IAClE,IAAIE,mBAAmB,GAAGjW,EAAE,CAAC+V,YAAY,CAAC,2BAA2B,CAAC;IACtE,IAAIG,aAAa,GAAGlW,EAAE,CAAC+V,YAAY,CAAC,oBAAoB,CAAC;IACzD,IAAII,aAAa,GAAGnW,EAAE,CAAC+V,YAAY,CAAC,gCAAgC,CAAC,IAAI/V,EAAE,CAAC+V,YAAY,CAAC,uCAAuC,CAAC;IACjI,IAAId,MAAM,GAAG,CAAC,CAAC,uBAAuB,EAAE,oBAAoB,EAAEjV,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACoW,kBAAkB,CAAC,CAAC,EAAE,CAAC,qBAAqB,EAAE,qBAAqB,EAAEpW,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACqW,mBAAmB,CAAC,CAAC,EAAE,CAAC,4BAA4B,EAAE,4BAA4B,EAAErW,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACsW,0BAA0B,CAAC,CAAC,EAAE,CAAC,8BAA8B,EAAE,8BAA8B,EAAEtW,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACuW,4BAA4B,CAAC,CAAC,EAAE,CAAC,kCAAkC,EAAE,yBAAyB,EAAEvW,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACwW,uBAAuB,CAAC,CAAC,EAAE,CAAC,gCAAgC,EAAE,gCAAgC,EAAExW,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACyW,8BAA8B,CAAC,CAAC,EAAE,CAAC,kCAAkC,EAAE,kCAAkC,EAAEzW,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC0W,gCAAgC,CAAC,CAAC,EAAE,CAAC,qBAAqB,EAAE,kBAAkB,EAAE1W,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC2W,gBAAgB,CAAC,CAAC,EAAE,CAAC,uBAAuB,EAAE,2BAA2B,EAAE3W,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC4W,yBAAyB,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,gCAAgC,EAAET,aAAa,IAAInW,EAAE,CAAC2V,YAAY,CAACQ,aAAa,CAACU,8BAA8B,CAAC,CAAC,EAAE,CAAC,kBAAkB,EAAE,0BAA0B,EAAE7W,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC8W,wBAAwB,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,kBAAkB,EAAE,0BAA0B,EAAE/W,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC4V,wBAAwB,CAAC,CAACmB,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,yBAAyB,EAAE,mBAAmB,EAAE/W,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACgX,iBAAiB,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,uBAAuB,EAAE,uBAAuB,EAAE/W,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACiX,qBAAqB,CAAC,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAU,EAAEjX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACkX,QAAQ,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,YAAY,EAAElX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACmX,UAAU,CAAC,CAAC,EAAE,CAAC,uBAAuB,EAAE,WAAW,EAAEnX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACoX,SAAS,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,YAAY,EAAEpX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACqX,UAAU,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,YAAY,EAAErX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACsX,UAAU,CAAC,CAAC,EAAE,CAAC,0BAA0B,EAAE,cAAc,EAAEtX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACuX,YAAY,CAAC,CAAC,EAAE,CAAC,2BAA2B,EAAE,eAAe,EAAEvX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACwX,aAAa,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE,SAAS,EAAExX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAACyX,OAAO,CAAC,CAAC,EAAE,CAAC,qBAAqB,EAAE,gBAAgB,EAAEzX,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC0X,cAAc,CAAC,CAAC,EAAE,CAAC,iDAAiD,EAAE,qCAAqC,EAAE,CAAC5B,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACwG,IAAI,EAAExG,EAAE,CAACyG,aAAa,CAAC,GAAG,MAAM,GAAG,EAAE,EAAEqP,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACsR,GAAG,EAAEtR,EAAE,CAACyG,aAAa,CAAC,GAAG,KAAK,GAAG,EAAE,EAAEqP,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACoR,SAAS,EAAEpR,EAAE,CAACyG,aAAa,CAAC,GAAG,WAAW,GAAG,EAAE,EAAEqP,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAAC2X,KAAK,EAAE3X,EAAE,CAACyG,aAAa,CAAC,GAAG,OAAO,GAAG,EAAE,EAAEqP,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACqR,eAAe,EAAErR,EAAE,CAACyG,aAAa,CAAC,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAACsQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,iDAAiD,EAAE,kCAAkC,EAAE,CAACf,kBAAkB,IAAIjW,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACwG,IAAI,EAAEwP,kBAAkB,CAAC4B,cAAc,CAAC,GAAG,MAAM,GAAG,EAAE,EAAE5B,kBAAkB,IAAIjW,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACsR,GAAG,EAAE0E,kBAAkB,CAAC4B,cAAc,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE5B,kBAAkB,IAAIjW,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACoR,SAAS,EAAE4E,kBAAkB,CAAC4B,cAAc,CAAC,GAAG,WAAW,GAAG,EAAE,EAAE5B,kBAAkB,IAAIjW,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAAC2X,KAAK,EAAE3B,kBAAkB,CAAC4B,cAAc,CAAC,GAAG,OAAO,GAAG,EAAE,EAAE5B,kBAAkB,IAAIjW,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACqR,eAAe,EAAE2E,kBAAkB,CAAC4B,cAAc,CAAC,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAACb,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,iDAAiD,EAAE,6BAA6B,EAAE,CAACjB,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACwG,IAAI,EAAExG,EAAE,CAAC+Q,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,EAAE+E,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACsR,GAAG,EAAEtR,EAAE,CAAC+Q,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE+E,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACoR,SAAS,EAAEpR,EAAE,CAAC+Q,KAAK,CAAC,GAAG,WAAW,GAAG,EAAE,EAAE+E,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAAC2X,KAAK,EAAE3X,EAAE,CAAC+Q,KAAK,CAAC,GAAG,OAAO,GAAG,EAAE,EAAE+E,cAAc,IAAI/V,wBAAwB,CAACC,EAAE,EAAEA,EAAE,CAACqR,eAAe,EAAErR,EAAE,CAAC+Q,KAAK,CAAC,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAACgG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,qCAAqC,EAAE,wBAAwB,EAAEb,aAAa,GAAGlW,EAAE,CAAC2V,YAAY,CAACO,aAAa,CAAC2B,sBAAsB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,uCAAuC,EAAE,0BAA0B,EAAE,CAAC7X,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACgY,UAAU,CAAC,CAACC,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACgY,UAAU,CAAC,CAACE,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACgY,UAAU,CAAC,CAACG,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,yCAAyC,EAAE,4BAA4B,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACoY,YAAY,CAAC,CAACH,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACoY,YAAY,CAAC,CAACF,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACoY,YAAY,CAAC,CAACD,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,sCAAsC,EAAE,yBAAyB,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACqY,SAAS,CAAC,CAACJ,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACqY,SAAS,CAAC,CAACH,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACqY,SAAS,CAAC,CAACF,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,yCAAyC,EAAE,4BAA4B,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACgY,UAAU,CAAC,CAACC,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACgY,UAAU,CAAC,CAACE,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACgY,UAAU,CAAC,CAACG,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,2CAA2C,EAAE,8BAA8B,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACoY,YAAY,CAAC,CAACH,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACoY,YAAY,CAAC,CAACF,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACoY,YAAY,CAAC,CAACD,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,wCAAwC,EAAE,2BAA2B,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACqY,SAAS,CAAC,CAACJ,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACqY,SAAS,CAAC,CAACH,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACqY,SAAS,CAAC,CAACF,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,qCAAqC,EAAE,wBAAwB,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACuY,QAAQ,CAAC,CAACN,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACuY,QAAQ,CAAC,CAACL,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACuY,QAAQ,CAAC,CAACJ,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,uCAAuC,EAAE,0BAA0B,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACwY,UAAU,CAAC,CAACP,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACwY,UAAU,CAAC,CAACN,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACwY,UAAU,CAAC,CAACL,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,oCAAoC,EAAE,uBAAuB,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACyY,OAAO,CAAC,CAACR,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACyY,OAAO,CAAC,CAACP,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAAC+X,aAAa,EAAE/X,EAAE,CAACyY,OAAO,CAAC,CAACN,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,uCAAuC,EAAE,0BAA0B,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACuY,QAAQ,CAAC,CAACN,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACuY,QAAQ,CAAC,CAACL,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACuY,QAAQ,CAAC,CAACJ,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,yCAAyC,EAAE,4BAA4B,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACwY,UAAU,CAAC,CAACP,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACwY,UAAU,CAAC,CAACN,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACwY,UAAU,CAAC,CAACL,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,sCAAsC,EAAE,yBAAyB,EAAE,CAAC/W,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACyY,OAAO,CAAC,CAACR,SAAS,EAAE,WAAW,EAAEjY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACyY,OAAO,CAAC,CAACP,QAAQ,EAAE,iBAAiB,EAAElY,EAAE,CAAC8X,wBAAwB,CAAC9X,EAAE,CAACsY,eAAe,EAAEtY,EAAE,CAACyY,OAAO,CAAC,CAACN,QAAQ,EAAE,SAAS,CAAC,CAACpB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,sBAAsB,EAAE,YAAY,EAAE/W,EAAE,CAAC0Y,sBAAsB,CAAC,CAAC,CAAC3B,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE/W,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC2Y,QAAQ,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE,QAAQ,EAAE3Y,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC4Y,MAAM,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,SAAS,EAAE5Y,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC6Y,OAAO,CAAC,CAAC,EAAE,CAAC,0BAA0B,EAAE,0BAA0B,EAAE7Y,EAAE,CAAC2V,YAAY,CAAC3V,EAAE,CAAC8Y,wBAAwB,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,mBAAmB,EAAE7C,mBAAmB,IAAIjW,EAAE,CAAC2V,YAAY,CAACM,mBAAmB,CAAC8C,uBAAuB,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,EAAE9C,mBAAmB,IAAIjW,EAAE,CAAC2V,YAAY,CAACM,mBAAmB,CAAC+C,qBAAqB,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,eAAe,EAAEhX,KAAK,CAACqF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7rR,IAAIH,MAAM,GAAG,CAAC,CAAC;IAEf,OAAO+N,MAAM,CAACrO,MAAM,EAAE;MACpB,IAAIqS,WAAW,GAAGhE,MAAM,CAACvT,GAAG,CAAC,CAAC;QAC1BwX,YAAY,GAAGhb,cAAc,CAAC+a,WAAW,EAAE,CAAC,CAAC;QAC7CE,KAAK,GAAGD,YAAY,CAAC,CAAC,CAAC;QACvBE,GAAG,GAAGF,YAAY,CAAC,CAAC,CAAC;QACrBvH,KAAK,GAAGuH,YAAY,CAAC,CAAC,CAAC;MAE3B,IAAIE,GAAG,EAAE;QACPlS,MAAM,CAACkS,GAAG,CAAC,GAAG;UACZD,KAAK,EAAEA,KAAK;UACZxH,KAAK,EAAEA;QACT,CAAC;MACH;IACF;IAEA,OAAOzK,MAAM;EACf,CAAC;EAEDnF,SAAS,CAACqK,iBAAiB,GAAG,YAAY;IACxC,IAAIpK,KAAK,CAACqX,YAAY,EAAE;MACtB,KAAK,IAAI/L,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGtL,KAAK,CAACqX,YAAY,CAACzS,MAAM,EAAE,EAAE0G,KAAK,EAAE;QAC9DtL,KAAK,CAACqX,YAAY,CAAC/L,KAAK,CAAC,CAACuB,QAAQ,CAAC9M,SAAS,EAAE,IAAI,CAAC;MACrD;IACF;IAEA,IAAIC,KAAK,CAAC8R,uBAAuB,EAAE;MACjClC,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC;EAED7P,SAAS,CAACuX,eAAe,GAAG,YAAY;IACtC,IAAItX,KAAK,CAACuX,eAAe,EAAE;MACzBvX,KAAK,CAACkC,OAAO,CAACqK,OAAO,CAACvM,KAAK,CAACkC,OAAO,CAACsV,SAAS,CAAC;MAC9CxX,KAAK,CAACuX,eAAe,GAAG,KAAK;IAC/B;EACF,CAAC;EAEDxX,SAAS,CAAC0X,cAAc,GAAG,YAAY;IACrC,IAAI,CAACzX,KAAK,CAACuX,eAAe,EAAE;MAC1BvX,KAAK,CAACkC,OAAO,CAACY,MAAM,CAAC9C,KAAK,CAACkC,OAAO,CAACsV,SAAS,CAAC;MAC7CxX,KAAK,CAACuX,eAAe,GAAG,IAAI;IAC9B;EACF,CAAC;EAEDxX,SAAS,CAAC2X,aAAa,GAAG,UAAUC,MAAM,EAAE;IAC1C,IAAI3X,KAAK,CAACa,UAAU,KAAK8W,MAAM,EAAE;MAC/B,OAAO,KAAK;IACd;IAEA,IAAI3X,KAAK,CAACqS,YAAY,EAAE;MACtBrS,KAAK,CAACqS,YAAY,CAACG,WAAW,CAAC,CAAC;MAChCxS,KAAK,CAACqS,YAAY,GAAG,IAAI;IAC3B;IAEArS,KAAK,CAACa,UAAU,GAAG8W,MAAM;IAEzB,IAAI3X,KAAK,CAACa,UAAU,EAAE;MACpB;MACA,IAAI+W,YAAY,GAAG5X,KAAK,CAACU,UAAU,CAACqH,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD6P,YAAY,CAACC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;MAEhD9X,SAAS,CAAC2P,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEvC1P,KAAK,CAACqS,YAAY,GAAGrS,KAAK,CAACa,UAAU,CAACyR,YAAY,CAAC,UAAU1S,CAAC,EAAE;QAC9D,OAAOG,SAAS,CAACwP,kBAAkB,CAAC3P,CAAC,CAACkY,KAAK,CAAC;MAC9C,CAAC,CAAC;MACF9X,KAAK,CAACa,UAAU,CAACC,OAAO,CAACd,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,EAAEX,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;MACtDX,KAAK,CAACa,UAAU,CAACkX,eAAe,CAAC,CAAC;MAClC/X,KAAK,CAACa,UAAU,CAACmX,MAAM,CAAC,CAAC;MACzBjY,SAAS,CAACyD,QAAQ,CAAC,CAAC;IACtB;IAEA,OAAO,IAAI;EACb,CAAC;EAEDzD,SAAS,CAACkY,cAAc,GAAG,YAAY;IACrC,IAAIC,GAAG,GAAGxb,mBAAmB,CAAC2F,WAAW,CAAC,CAAC;IAC3C6V,GAAG,CAAClW,qBAAqB,CAACjC,SAAS,CAAC;IACpC,OAAOmY,GAAG;EACZ,CAAC;EAED,SAASC,WAAWA,CAAA,EAAG;IACrBnY,KAAK,CAACK,MAAM,CAAC+X,mBAAmB,CAAC,kBAAkB,EAAEzY,eAAe,CAAC;IACrEK,KAAK,CAACK,MAAM,CAAC+X,mBAAmB,CAAC,sBAAsB,EAAErY,SAAS,CAACQ,cAAc,CAAC;EACpF;EAEAR,SAAS,CAAC0N,MAAM,GAAGlR,KAAK,CAAC8b,KAAK,CAACF,WAAW,EAAEpY,SAAS,CAAC0N,MAAM,EAAE1N,SAAS,CAAC2X,aAAa,EAAEpY,eAAe,CAAC,CAAC,CAAC;;EAEzGS,SAAS,CAACuY,oBAAoB,GAAG,UAAUC,oBAAoB,EAAE;IAC/DvY,KAAK,CAAC8D,iBAAiB,GAAGyU,oBAAoB;EAChD,CAAC;EAED,IAAIC,YAAY,GAAGzY,SAAS,CAACe,OAAO;EAEpCf,SAAS,CAACe,OAAO,GAAG,UAAUpD,KAAK,EAAEC,MAAM,EAAE;IAC3C,IAAI6F,QAAQ,GAAGgV,YAAY,CAAC9a,KAAK,EAAEC,MAAM,CAAC;IAE1C,IAAI6F,QAAQ,EAAE;MACZzD,SAAS,CAAC0Y,uBAAuB,CAAC;QAChC/a,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC,CAAC;IACJ;IAEA,OAAO6F,QAAQ;EACjB,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,IAAIkV,cAAc,GAAG;EACnBnB,eAAe,EAAE,KAAK;EACtBhV,WAAW,EAAE,IAAI;EACjBN,WAAW,EAAE,KAAK;EAClBC,OAAO,EAAE,IAAI;EACb7B,MAAM,EAAE,IAAI;EACZe,gBAAgB,EAAE,IAAI;EACtBD,MAAM,EAAE,SAAS;EACjBiB,kBAAkB,EAAE,IAAI;EACxBuW,kBAAkB,EAAE,IAAI;EACxBtX,aAAa,EAAE,IAAI;EACnBgW,YAAY,EAAE,EAAE;EAChBvF,uBAAuB,EAAE,KAAK;EAC9BzM,MAAM,EAAE,KAAK;EACbC,eAAe,EAAE,IAAI;EACrB;EACAxB,iBAAiB,EAAE,IAAI;EACvBuC,SAAS,EAAE,IAAI;EACfyB,gBAAgB,EAAE,IAAI;EACtB8Q,WAAW,EAAE,IAAI;EACjB/I,WAAW,EAAE,WAAW;EACxB5O,YAAY,EAAE,KAAK;EACnBsC,kBAAkB,EAAE;AACtB,CAAC,CAAC,CAAC;;AAEH,SAASsV,MAAMA,CAAC9Y,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAI8Y,aAAa,GAAGnU,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FoU,MAAM,CAACC,MAAM,CAAChZ,KAAK,EAAE0Y,cAAc,EAAEI,aAAa,CAAC,CAAC,CAAC;;EAErD/b,uBAAuB,CAAC8b,MAAM,CAAC9Y,SAAS,EAAEC,KAAK,EAAE8Y,aAAa,CAAC,CAAC,CAAC;;EAEjE9Y,KAAK,CAACK,MAAM,GAAG0P,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/ChQ,KAAK,CAACK,MAAM,CAACU,KAAK,CAACrD,KAAK,GAAG,MAAM;EACjCyB,eAAe,CAAC,CAAC;EAEjB,IAAI,CAACa,KAAK,CAACiZ,QAAQ,EAAE;IACnBjZ,KAAK,CAACiZ,QAAQ,GAAGvc,mBAAmB,CAAC2F,WAAW,CAAC,CAAC;IAClDrC,KAAK,CAACiZ,QAAQ,CAACjX,qBAAqB,CAACjC,SAAS,CAAC;EACjD,CAAC,CAAC;;EAGFC,KAAK,CAACqD,OAAO,GAAG,IAAI6V,KAAK,CAAC,CAAC;EAC3BlZ,KAAK,CAACqD,OAAO,CAACtC,KAAK,CAACxD,QAAQ,GAAG,UAAU;EACzCyC,KAAK,CAACqD,OAAO,CAACtC,KAAK,CAACtD,IAAI,GAAG,GAAG;EAC9BuC,KAAK,CAACqD,OAAO,CAACtC,KAAK,CAACvD,GAAG,GAAG,GAAG;EAC7BwC,KAAK,CAACqD,OAAO,CAACtC,KAAK,CAACrD,KAAK,GAAG,MAAM;EAClCsC,KAAK,CAACqD,OAAO,CAACtC,KAAK,CAACpD,MAAM,GAAG,MAAM;EACnCqC,KAAK,CAACqD,OAAO,CAACtC,KAAK,CAACoY,MAAM,GAAG,IAAI;EACjCnZ,KAAK,CAAC+M,mBAAmB,GAAG,IAAIqM,GAAG,CAAC,CAAC;EACrCpZ,KAAK,CAACI,SAAS,GAAGvD,kBAAkB,CAACwF,WAAW,CAAC,CAAC;EAClD;;EAEArC,KAAK,CAACI,SAAS,CAACiZ,gBAAgB,CAAC,iBAAiB,EAAEhX,WAAW,CAAC;EAChE;;EAEArC,KAAK,CAACuC,WAAW,GAAG5F,cAAc,CAAC0F,WAAW,CAAC,CAAC;EAChDrC,KAAK,CAACuC,WAAW,CAACP,qBAAqB,CAACjC,SAAS,CAAC,CAAC,CAAC;;EAEpDC,KAAK,CAACqX,YAAY,CAAC,CAAC,CAAC,GAAG5a,cAAc,CAAC4F,WAAW,CAAC,CAAC;EACpD9F,KAAK,CAAC+c,KAAK,CAACvZ,SAAS,EAAEC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC;;EAE7CzD,KAAK,CAACyQ,GAAG,CAACjN,SAAS,EAAEC,KAAK,EAAE,CAAC,aAAa,EAAE,oBAAoB,EAAE,QAAQ,EAAE,WAAW,EAAE,oBAAoB,EAAE,aAAa,EAAE,mBAAmB,CAAC,CAAC;EACnJzD,KAAK,CAACgd,MAAM,CAACxZ,SAAS,EAAEC,KAAK,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,cAAc,EAAE,yBAAyB,EAAE,iBAAiB,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;EAC5JzD,KAAK,CAACid,WAAW,CAACzZ,SAAS,EAAEC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;EAChDzD,KAAK,CAAC+c,KAAK,CAACvZ,SAAS,EAAEC,KAAK,EAAE,mBAAmB,CAAC,CAAC,CAAC;;EAEpDF,qBAAqB,CAACC,SAAS,EAAEC,KAAK,CAAC;AACzC,CAAC,CAAC;;AAEF,IAAIqC,WAAW,GAAG9F,KAAK,CAAC8F,WAAW,CAACwW,MAAM,EAAE,uBAAuB,CAAC,CAAC,CAAC;AACtE;AACA;;AAEArc,uBAAuB,CAAC,OAAO,EAAE6F,WAAW,CAAC,CAAC,CAAC;;AAE/C,IAAIoX,eAAe,GAAG;EACpBpX,WAAW,EAAEA,WAAW;EACxBwW,MAAM,EAAEA,MAAM;EACdtZ,yBAAyB,EAAEA,yBAAyB;EACpDE,wBAAwB,EAAEA;AAC5B,CAAC;AAED,SAASga,eAAe,IAAIC,OAAO,EAAEb,MAAM,EAAExW,WAAW,EAAE5C,wBAAwB,EAAEF,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
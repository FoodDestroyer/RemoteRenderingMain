{"ast":null,"code":"import vtkStateBuilder from '../../Core/StateBuilder.js';\n\n// See https://kitware.github.io/vtk-js/docs/concepts_widgets.html.\n\nfunction stateGenerator() {\n  return vtkStateBuilder.createBuilder() // The handle used only for during initial placement.\n  .addStateFromMixin({\n    labels: ['moveHandle'],\n    mixins: ['origin', 'color', 'scale1', 'visible', 'manipulator'],\n    name: 'moveHandle',\n    initialValues: {\n      scale1: 20,\n      visible: true\n    }\n  }) // The handle for the center of the sphere.\n  .addStateFromMixin({\n    labels: ['centerHandle'],\n    mixins: ['origin', 'color', 'scale1', 'visible', 'manipulator'],\n    name: 'centerHandle',\n    initialValues: {\n      scale1: 20,\n      visible: true\n    }\n  }) // The handle for a border point of the sphere.\n  .addStateFromMixin({\n    labels: ['borderHandle'],\n    mixins: ['origin', 'color', 'scale1', 'visible', 'manipulator'],\n    name: 'borderHandle',\n    initialValues: {\n      scale1: 20,\n      visible: true\n    }\n  }) // For displaying the sphere.\n  .addStateFromMixin({\n    labels: ['sphereHandle'],\n    mixins: ['origin', 'color', 'scale1', 'visible', 'orientation'],\n    name: 'sphereHandle',\n    initialValues: {\n      visible: true,\n      radius: 1\n    }\n  }).build();\n}\nexport { stateGenerator as default };","map":{"version":3,"names":["vtkStateBuilder","stateGenerator","createBuilder","addStateFromMixin","labels","mixins","name","initialValues","scale1","visible","radius","build","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Widgets/Widgets3D/SphereWidget/state.js"],"sourcesContent":["import vtkStateBuilder from '../../Core/StateBuilder.js';\n\n// See https://kitware.github.io/vtk-js/docs/concepts_widgets.html.\n\nfunction stateGenerator() {\n  return vtkStateBuilder.createBuilder() // The handle used only for during initial placement.\n  .addStateFromMixin({\n    labels: ['moveHandle'],\n    mixins: ['origin', 'color', 'scale1', 'visible', 'manipulator'],\n    name: 'moveHandle',\n    initialValues: {\n      scale1: 20,\n      visible: true\n    }\n  }) // The handle for the center of the sphere.\n  .addStateFromMixin({\n    labels: ['centerHandle'],\n    mixins: ['origin', 'color', 'scale1', 'visible', 'manipulator'],\n    name: 'centerHandle',\n    initialValues: {\n      scale1: 20,\n      visible: true\n    }\n  }) // The handle for a border point of the sphere.\n  .addStateFromMixin({\n    labels: ['borderHandle'],\n    mixins: ['origin', 'color', 'scale1', 'visible', 'manipulator'],\n    name: 'borderHandle',\n    initialValues: {\n      scale1: 20,\n      visible: true\n    }\n  }) // For displaying the sphere.\n  .addStateFromMixin({\n    labels: ['sphereHandle'],\n    mixins: ['origin', 'color', 'scale1', 'visible', 'orientation'],\n    name: 'sphereHandle',\n    initialValues: {\n      visible: true,\n      radius: 1\n    }\n  }).build();\n}\n\nexport { stateGenerator as default };\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,4BAA4B;;AAExD;;AAEA,SAASC,cAAcA,CAAA,EAAG;EACxB,OAAOD,eAAe,CAACE,aAAa,CAAC,CAAC,CAAC;EAAA,CACtCC,iBAAiB,CAAC;IACjBC,MAAM,EAAE,CAAC,YAAY,CAAC;IACtBC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC;IAC/DC,IAAI,EAAE,YAAY;IAClBC,aAAa,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX;EACF,CAAC,CAAC,CAAC;EAAA,CACFN,iBAAiB,CAAC;IACjBC,MAAM,EAAE,CAAC,cAAc,CAAC;IACxBC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC;IAC/DC,IAAI,EAAE,cAAc;IACpBC,aAAa,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX;EACF,CAAC,CAAC,CAAC;EAAA,CACFN,iBAAiB,CAAC;IACjBC,MAAM,EAAE,CAAC,cAAc,CAAC;IACxBC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC;IAC/DC,IAAI,EAAE,cAAc;IACpBC,aAAa,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX;EACF,CAAC,CAAC,CAAC;EAAA,CACFN,iBAAiB,CAAC;IACjBC,MAAM,EAAE,CAAC,cAAc,CAAC;IACxBC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC;IAC/DC,IAAI,EAAE,cAAc;IACpBC,aAAa,EAAE;MACbE,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV;EACF,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;AACZ;AAEA,SAASV,cAAc,IAAIW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
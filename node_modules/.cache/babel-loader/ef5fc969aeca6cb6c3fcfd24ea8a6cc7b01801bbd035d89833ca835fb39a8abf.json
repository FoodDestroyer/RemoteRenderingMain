{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { f as vtkMath } from '../../Common/Core/Math/index.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkTriangle from '../../Common/DataModel/Triangle.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n// vtkPolyDataNormals methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPolyDataNormals(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPolyDataNormals');\n  publicAPI.vtkPolyDataNormalsExecute = function (pointsData, polysData) {\n    if (!pointsData) {\n      return null;\n    }\n    var normalsData = new Float32Array(pointsData.length);\n    var numberOfPoints = 0;\n    var polysDataLength = polysData.length;\n    var cellPointIds = [0, 0, 0];\n    for (var c = 0; c < polysDataLength; c += numberOfPoints + 1) {\n      numberOfPoints = polysData[c];\n      if (numberOfPoints < 3) {\n        continue; // eslint-disable-line\n      }\n\n      for (var i = 1; i <= 3; ++i) {\n        cellPointIds[i - 1] = 3 * polysData[c + i];\n      }\n      var cellNormal = [];\n      vtkTriangle.computeNormal(pointsData.slice(cellPointIds[0], cellPointIds[0] + 3), pointsData.slice(cellPointIds[1], cellPointIds[1] + 3), pointsData.slice(cellPointIds[2], cellPointIds[2] + 3), cellNormal);\n      for (var _i = 1; _i <= numberOfPoints; ++_i) {\n        var pointId = 3 * polysData[c + _i];\n        normalsData[pointId] += cellNormal[0];\n        normalsData[++pointId] += cellNormal[1];\n        normalsData[++pointId] += cellNormal[2];\n      }\n    }\n    /* Normalize normals */\n\n    for (var _i2 = 0; _i2 < pointsData.length;) {\n      var pointNormal = normalsData.slice(_i2, _i2 + 3);\n      vtkMath.normalize(pointNormal);\n      normalsData[_i2++] = pointNormal[0];\n      normalsData[_i2++] = pointNormal[1];\n      normalsData[_i2++] = pointNormal[2];\n    }\n    return normalsData;\n  };\n  publicAPI.requestData = function (inData, outData) {\n    var numberOfInputs = publicAPI.getNumberOfInputPorts();\n    if (!numberOfInputs) {\n      return;\n    }\n    var input = inData[0];\n    if (!input) {\n      return;\n    }\n    var outputNormalsData = publicAPI.vtkPolyDataNormalsExecute(input.getPoints().getData(), input.getPolys().getData());\n    var output = vtkPolyData.newInstance();\n    var outputNormals = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: outputNormalsData\n    });\n    output.setPoints(input.getPoints());\n    output.setVerts(input.getVerts());\n    output.setLines(input.getLines());\n    output.setPolys(input.getPolys());\n    output.setStrips(input.getStrips());\n    output.getPointData().passData(input.getPointData());\n    output.getCellData().passData(input.getCellData());\n    output.getFieldData().passData(input.getFieldData());\n    output.getPointData().setNormals(outputNormals);\n    outData[0] = output;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return _objectSpread({}, initialValues);\n} // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  /* Make this a VTK object */\n\n  macro.obj(publicAPI, model);\n  /* Also make it an algorithm with one input and one output */\n\n  macro.algo(publicAPI, model, 1, 1);\n  /* Object specific methods */\n\n  vtkPolyDataNormals(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPolyDataNormals'); // ----------------------------------------------------------------------------\n\nvar vtkPolyDataNormals$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkPolyDataNormals$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","vtkDataArray","f","vtkMath","vtkPolyData","vtkTriangle","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","vtkPolyDataNormals","publicAPI","model","classHierarchy","vtkPolyDataNormalsExecute","pointsData","polysData","normalsData","Float32Array","numberOfPoints","polysDataLength","cellPointIds","c","cellNormal","computeNormal","slice","_i","pointId","_i2","pointNormal","normalize","requestData","inData","outData","numberOfInputs","getNumberOfInputPorts","input","outputNormalsData","getPoints","getData","getPolys","output","newInstance","outputNormals","numberOfComponents","values","setPoints","setVerts","getVerts","setLines","getLines","setPolys","setStrips","getStrips","getPointData","passData","getCellData","getFieldData","setNormals","defaultValues","initialValues","extend","undefined","assign","obj","algo","vtkPolyDataNormals$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Filters/Core/PolyDataNormals.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { f as vtkMath } from '../../Common/Core/Math/index.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkTriangle from '../../Common/DataModel/Triangle.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// vtkPolyDataNormals methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPolyDataNormals(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPolyDataNormals');\n\n  publicAPI.vtkPolyDataNormalsExecute = function (pointsData, polysData) {\n    if (!pointsData) {\n      return null;\n    }\n\n    var normalsData = new Float32Array(pointsData.length);\n    var numberOfPoints = 0;\n    var polysDataLength = polysData.length;\n    var cellPointIds = [0, 0, 0];\n\n    for (var c = 0; c < polysDataLength; c += numberOfPoints + 1) {\n      numberOfPoints = polysData[c];\n\n      if (numberOfPoints < 3) {\n        continue; // eslint-disable-line\n      }\n\n      for (var i = 1; i <= 3; ++i) {\n        cellPointIds[i - 1] = 3 * polysData[c + i];\n      }\n\n      var cellNormal = [];\n      vtkTriangle.computeNormal(pointsData.slice(cellPointIds[0], cellPointIds[0] + 3), pointsData.slice(cellPointIds[1], cellPointIds[1] + 3), pointsData.slice(cellPointIds[2], cellPointIds[2] + 3), cellNormal);\n\n      for (var _i = 1; _i <= numberOfPoints; ++_i) {\n        var pointId = 3 * polysData[c + _i];\n        normalsData[pointId] += cellNormal[0];\n        normalsData[++pointId] += cellNormal[1];\n        normalsData[++pointId] += cellNormal[2];\n      }\n    }\n    /* Normalize normals */\n\n\n    for (var _i2 = 0; _i2 < pointsData.length;) {\n      var pointNormal = normalsData.slice(_i2, _i2 + 3);\n      vtkMath.normalize(pointNormal);\n      normalsData[_i2++] = pointNormal[0];\n      normalsData[_i2++] = pointNormal[1];\n      normalsData[_i2++] = pointNormal[2];\n    }\n\n    return normalsData;\n  };\n\n  publicAPI.requestData = function (inData, outData) {\n    var numberOfInputs = publicAPI.getNumberOfInputPorts();\n\n    if (!numberOfInputs) {\n      return;\n    }\n\n    var input = inData[0];\n\n    if (!input) {\n      return;\n    }\n\n    var outputNormalsData = publicAPI.vtkPolyDataNormalsExecute(input.getPoints().getData(), input.getPolys().getData());\n    var output = vtkPolyData.newInstance();\n    var outputNormals = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: outputNormalsData\n    });\n    output.setPoints(input.getPoints());\n    output.setVerts(input.getVerts());\n    output.setLines(input.getLines());\n    output.setPolys(input.getPolys());\n    output.setStrips(input.getStrips());\n    output.getPointData().passData(input.getPointData());\n    output.getCellData().passData(input.getCellData());\n    output.getFieldData().passData(input.getFieldData());\n    output.getPointData().setNormals(outputNormals);\n    outData[0] = output;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nfunction defaultValues(initialValues) {\n  return _objectSpread({}, initialValues);\n} // ----------------------------------------------------------------------------\n\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  /* Make this a VTK object */\n\n  macro.obj(publicAPI, model);\n  /* Also make it an algorithm with one input and one output */\n\n  macro.algo(publicAPI, model, 1, 1);\n  /* Object specific methods */\n\n  vtkPolyDataNormals(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPolyDataNormals'); // ----------------------------------------------------------------------------\n\nvar vtkPolyDataNormals$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPolyDataNormals$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
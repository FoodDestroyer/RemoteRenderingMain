{"ast":null,"code":"import macro from '../../macros.js';\n\n// vtkJSONReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkJSONReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkJSONReader'); // Internal method to fetch Array\n\n  function fetchData(url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return model.dataAccessHelper.fetchText(publicAPI, url, option);\n  } // Set DataSet url\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.url = url; // Fetch metadata\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n  publicAPI.loadData = function () {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return fetchData(model.url, option).then(publicAPI.parseAsText);\n  };\n  publicAPI.parseAsText = function (content) {\n    if (!content) {\n      return false;\n    }\n    model.data = JSON.parse(content);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.requestData = function (inData, outData) {\n    outData[0] = model.data;\n  }; // return Busy state\n\n  publicAPI.isBusy = function () {\n    return false;\n  };\n  publicAPI.getNumberOfOutputPorts = function () {\n    return model.numberOfOutputs;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {// url: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url']);\n  macro.algo(publicAPI, model, 0, 1);\n  macro.event(publicAPI, model, 'busy'); // Object methods\n\n  vtkJSONReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkJSONReader'); // ----------------------------------------------------------------------------\n\nvar vtkJSONReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkJSONReader$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkJSONReader","publicAPI","model","classHierarchy","push","fetchData","url","option","arguments","length","undefined","dataAccessHelper","fetchText","setUrl","loadData","then","parseAsText","content","data","JSON","parse","modified","requestData","inData","outData","isBusy","getNumberOfOutputPorts","numberOfOutputs","DEFAULT_VALUES","extend","initialValues","Object","assign","obj","get","algo","event","newInstance","vtkJSONReader$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Misc/JSONReader.js"],"sourcesContent":["import macro from '../../macros.js';\n\n// vtkJSONReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkJSONReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkJSONReader'); // Internal method to fetch Array\n\n  function fetchData(url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return model.dataAccessHelper.fetchText(publicAPI, url, option);\n  } // Set DataSet url\n\n\n  publicAPI.setUrl = function (url) {\n    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.url = url; // Fetch metadata\n\n    return publicAPI.loadData(option);\n  }; // Fetch the actual data arrays\n\n\n  publicAPI.loadData = function () {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return fetchData(model.url, option).then(publicAPI.parseAsText);\n  };\n\n  publicAPI.parseAsText = function (content) {\n    if (!content) {\n      return false;\n    }\n\n    model.data = JSON.parse(content);\n    publicAPI.modified();\n    return true;\n  };\n\n  publicAPI.requestData = function (inData, outData) {\n    outData[0] = model.data;\n  }; // return Busy state\n\n\n  publicAPI.isBusy = function () {\n    return false;\n  };\n\n  publicAPI.getNumberOfOutputPorts = function () {\n    return model.numberOfOutputs;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// url: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['url']);\n  macro.algo(publicAPI, model, 0, 1);\n  macro.event(publicAPI, model, 'busy'); // Object methods\n\n  vtkJSONReader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkJSONReader'); // ----------------------------------------------------------------------------\n\nvar vtkJSONReader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkJSONReader$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
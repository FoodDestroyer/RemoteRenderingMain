{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { decompressSync, strFromU8 } from 'fflate';\nimport macro from '../../../macros.js';\nimport Endian from '../../../Common/Core/Endian.js';\nimport { DataTypeByteSize } from '../../../Common/Core/DataArray/Constants.js';\nimport { registerType } from '../DataAccessHelper.js';\nvar vtkErrorMacro = macro.vtkErrorMacro,\n  vtkDebugMacro = macro.vtkDebugMacro;\n/* eslint-disable prefer-promise-reject-errors */\n\nvar requestCount = 0;\nfunction openAsyncXHR(method, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n  if (options.headers) {\n    Object.entries(options.headers).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      return xhr.setRequestHeader(key, value);\n    });\n  }\n  if (options.progressCallback) {\n    xhr.addEventListener('progress', options.progressCallback);\n  }\n  return xhr;\n}\nfunction fetchBinary(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (options && options.compression && options.compression !== 'gz') {\n    vtkErrorMacro('Supported algorithms are: [gz]');\n    vtkErrorMacro(\"Unkown compression algorithm: \".concat(options.compression));\n  }\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(decompressSync(new Uint8Array(xhr.response)).buffer);\n          } else {\n            resolve(xhr.response);\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n    xhr.responseType = 'arraybuffer';\n    xhr.send();\n  });\n}\nfunction fetchArray(instance, baseURL, array) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  if (array.ref && !array.ref.pending) {\n    return new Promise(function (resolve, reject) {\n      var url = null;\n      if (array.ref.url) {\n        url = array.ref.url;\n      } else {\n        url = [baseURL, array.ref.basepath, options.compression ? \"\".concat(array.ref.id, \".gz\") : array.ref.id].join('/');\n      }\n      var xhr = openAsyncXHR('GET', url, options);\n      xhr.onreadystatechange = function (e) {\n        if (xhr.readyState === 1) {\n          array.ref.pending = true;\n          if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n            instance.invokeBusy(true);\n          }\n        }\n        if (xhr.readyState === 4) {\n          array.ref.pending = false;\n          if (xhr.status === 200 || xhr.status === 0) {\n            array.buffer = xhr.response;\n            if (options.compression) {\n              if (array.dataType === 'string' || array.dataType === 'JSON') {\n                array.buffer = strFromU8(decompressSync(new Uint8Array(array.buffer)));\n              } else {\n                array.buffer = decompressSync(new Uint8Array(array.buffer)).buffer;\n              }\n            }\n            if (array.ref.encode === 'JSON') {\n              array.values = JSON.parse(array.buffer);\n            } else {\n              if (Endian.ENDIANNESS !== array.ref.encode && Endian.ENDIANNESS) {\n                // Need to swap bytes\n                vtkDebugMacro(\"Swap bytes of \".concat(array.name));\n                Endian.swapBytes(array.buffer, DataTypeByteSize[array.dataType]);\n              }\n              array.values = macro.newTypedArray(array.dataType, array.buffer);\n            }\n            if (array.values.length !== array.size) {\n              vtkErrorMacro(\"Error in FetchArray: \".concat(array.name, \", does not have the proper array size. Got \").concat(array.values.length, \", instead of \").concat(array.size));\n            } // Done with the ref and work\n\n            delete array.ref;\n            if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n              instance.invokeBusy(false);\n            }\n            if (instance !== null && instance !== void 0 && instance.modified) {\n              instance.modified();\n            }\n            resolve(array);\n          } else {\n            reject({\n              xhr: xhr,\n              e: e\n            });\n          }\n        }\n      }; // Make request\n\n      xhr.responseType = options.compression || array.dataType !== 'string' ? 'arraybuffer' : 'text';\n      xhr.send();\n    });\n  }\n  return Promise.resolve(array);\n} // ----------------------------------------------------------------------------\n\nfunction fetchJSON(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(JSON.parse(strFromU8(decompressSync(new Uint8Array(xhr.response)))));\n          } else {\n            resolve(JSON.parse(xhr.responseText));\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n    xhr.responseType = options.compression ? 'arraybuffer' : 'text';\n    xhr.send();\n  });\n} // ----------------------------------------------------------------------------\n\nfunction fetchText(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (options && options.compression && options.compression !== 'gz') {\n    vtkErrorMacro('Supported algorithms are: [gz]');\n    vtkErrorMacro(\"Unkown compression algorithm: \".concat(options.compression));\n  }\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(strFromU8(decompressSync(new Uint8Array(xhr.response))));\n          } else {\n            resolve(xhr.responseText);\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n    xhr.responseType = options.compression ? 'arraybuffer' : 'text';\n    xhr.send();\n  });\n} // ----------------------------------------------------------------------------\n\nfunction fetchImage(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n    if (options.crossOrigin) {\n      img.crossOrigin = options.crossOrigin;\n    }\n    img.onload = function () {\n      return resolve(img);\n    };\n    img.onerror = reject;\n    img.src = url;\n  });\n}\n/* eslint-enable prefer-promise-reject-errors */\n// ----------------------------------------------------------------------------\n\nvar HttpDataAccessHelper = {\n  fetchArray: fetchArray,\n  fetchJSON: fetchJSON,\n  fetchText: fetchText,\n  fetchBinary: fetchBinary,\n  // Only for HTTP\n  fetchImage: fetchImage\n};\nregisterType('http', function (options) {\n  return HttpDataAccessHelper;\n});\nexport { HttpDataAccessHelper as default };","map":{"version":3,"names":["_slicedToArray","decompressSync","strFromU8","macro","Endian","DataTypeByteSize","registerType","vtkErrorMacro","vtkDebugMacro","requestCount","openAsyncXHR","method","url","options","arguments","length","undefined","xhr","XMLHttpRequest","open","headers","Object","entries","forEach","_ref","_ref2","key","value","setRequestHeader","progressCallback","addEventListener","fetchBinary","compression","concat","Promise","resolve","reject","onreadystatechange","e","readyState","status","Uint8Array","response","buffer","responseType","send","fetchArray","instance","baseURL","array","ref","pending","basepath","id","join","invokeBusy","dataType","encode","values","JSON","parse","ENDIANNESS","name","swapBytes","newTypedArray","size","modified","fetchJSON","responseText","fetchText","fetchImage","img","Image","crossOrigin","onload","onerror","src","HttpDataAccessHelper","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper.js"],"sourcesContent":["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { decompressSync, strFromU8 } from 'fflate';\nimport macro from '../../../macros.js';\nimport Endian from '../../../Common/Core/Endian.js';\nimport { DataTypeByteSize } from '../../../Common/Core/DataArray/Constants.js';\nimport { registerType } from '../DataAccessHelper.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro,\n    vtkDebugMacro = macro.vtkDebugMacro;\n/* eslint-disable prefer-promise-reject-errors */\n\nvar requestCount = 0;\n\nfunction openAsyncXHR(method, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n\n  if (options.headers) {\n    Object.entries(options.headers).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return xhr.setRequestHeader(key, value);\n    });\n  }\n\n  if (options.progressCallback) {\n    xhr.addEventListener('progress', options.progressCallback);\n  }\n\n  return xhr;\n}\n\nfunction fetchBinary(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options && options.compression && options.compression !== 'gz') {\n    vtkErrorMacro('Supported algorithms are: [gz]');\n    vtkErrorMacro(\"Unkown compression algorithm: \".concat(options.compression));\n  }\n\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(decompressSync(new Uint8Array(xhr.response)).buffer);\n          } else {\n            resolve(xhr.response);\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = 'arraybuffer';\n    xhr.send();\n  });\n}\n\nfunction fetchArray(instance, baseURL, array) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (array.ref && !array.ref.pending) {\n    return new Promise(function (resolve, reject) {\n      var url = null;\n\n      if (array.ref.url) {\n        url = array.ref.url;\n      } else {\n        url = [baseURL, array.ref.basepath, options.compression ? \"\".concat(array.ref.id, \".gz\") : array.ref.id].join('/');\n      }\n\n      var xhr = openAsyncXHR('GET', url, options);\n\n      xhr.onreadystatechange = function (e) {\n        if (xhr.readyState === 1) {\n          array.ref.pending = true;\n\n          if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n            instance.invokeBusy(true);\n          }\n        }\n\n        if (xhr.readyState === 4) {\n          array.ref.pending = false;\n\n          if (xhr.status === 200 || xhr.status === 0) {\n            array.buffer = xhr.response;\n\n            if (options.compression) {\n              if (array.dataType === 'string' || array.dataType === 'JSON') {\n                array.buffer = strFromU8(decompressSync(new Uint8Array(array.buffer)));\n              } else {\n                array.buffer = decompressSync(new Uint8Array(array.buffer)).buffer;\n              }\n            }\n\n            if (array.ref.encode === 'JSON') {\n              array.values = JSON.parse(array.buffer);\n            } else {\n              if (Endian.ENDIANNESS !== array.ref.encode && Endian.ENDIANNESS) {\n                // Need to swap bytes\n                vtkDebugMacro(\"Swap bytes of \".concat(array.name));\n                Endian.swapBytes(array.buffer, DataTypeByteSize[array.dataType]);\n              }\n\n              array.values = macro.newTypedArray(array.dataType, array.buffer);\n            }\n\n            if (array.values.length !== array.size) {\n              vtkErrorMacro(\"Error in FetchArray: \".concat(array.name, \", does not have the proper array size. Got \").concat(array.values.length, \", instead of \").concat(array.size));\n            } // Done with the ref and work\n\n\n            delete array.ref;\n\n            if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n              instance.invokeBusy(false);\n            }\n\n            if (instance !== null && instance !== void 0 && instance.modified) {\n              instance.modified();\n            }\n\n            resolve(array);\n          } else {\n            reject({\n              xhr: xhr,\n              e: e\n            });\n          }\n        }\n      }; // Make request\n\n\n      xhr.responseType = options.compression || array.dataType !== 'string' ? 'arraybuffer' : 'text';\n      xhr.send();\n    });\n  }\n\n  return Promise.resolve(array);\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchJSON(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(JSON.parse(strFromU8(decompressSync(new Uint8Array(xhr.response)))));\n          } else {\n            resolve(JSON.parse(xhr.responseText));\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = options.compression ? 'arraybuffer' : 'text';\n    xhr.send();\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchText(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (options && options.compression && options.compression !== 'gz') {\n    vtkErrorMacro('Supported algorithms are: [gz]');\n    vtkErrorMacro(\"Unkown compression algorithm: \".concat(options.compression));\n  }\n\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(strFromU8(decompressSync(new Uint8Array(xhr.response))));\n          } else {\n            resolve(xhr.responseText);\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = options.compression ? 'arraybuffer' : 'text';\n    xhr.send();\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchImage(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n\n    if (options.crossOrigin) {\n      img.crossOrigin = options.crossOrigin;\n    }\n\n    img.onload = function () {\n      return resolve(img);\n    };\n\n    img.onerror = reject;\n    img.src = url;\n  });\n}\n/* eslint-enable prefer-promise-reject-errors */\n// ----------------------------------------------------------------------------\n\n\nvar HttpDataAccessHelper = {\n  fetchArray: fetchArray,\n  fetchJSON: fetchJSON,\n  fetchText: fetchText,\n  fetchBinary: fetchBinary,\n  // Only for HTTP\n  fetchImage: fetchImage\n};\nregisterType('http', function (options) {\n  return HttpDataAccessHelper;\n});\n\nexport { HttpDataAccessHelper as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
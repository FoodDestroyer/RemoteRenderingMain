{"ast":null,"code":"import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\nvar FieldAssociations = vtkDataSet.FieldAssociations; // ----------------------------------------------------------------------------\n// vtkHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkHardwareSelector(publicAPI, model) {\n  model.classHierarchy.push('vtkHardwareSelector'); // get the source data that is used for generating a selection. This\n  // must be called at least once before calling generateSelection. In\n  // raster based backends this method will capture the buffers. You can\n  // call this once and then make multiple calls to generateSelection.\n\n  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(renderer, fx1, fy1, fx2, fy2) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  publicAPI.selectAsync = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(renderer, fx1, fy1, fx2, fy2) {\n      var srcData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return publicAPI.getSourceDataAsync(renderer, fx1, fy1, fx2, fy2);\n            case 2:\n              srcData = _context2.sent;\n              if (!srcData) {\n                _context2.next = 5;\n                break;\n              }\n              return _context2.abrupt(\"return\", srcData.generateSelection(fx1, fy1, fx2, fy2));\n            case 5:\n              return _context2.abrupt(\"return\", []);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function (_x6, _x7, _x8, _x9, _x10) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,\n  captureZValues: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['fieldAssociation', 'captureZValues']); // Object methods\n\n  vtkHardwareSelector(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkHardwareSelector'); // ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkHardwareSelector$1 as default, extend, newInstance };","map":{"version":3,"names":["_asyncToGenerator","_regeneratorRuntime","macro","vtkDataSet","FieldAssociations","vtkHardwareSelector","publicAPI","model","classHierarchy","push","getSourceDataAsync","_ref","mark","_callee","renderer","fx1","fy1","fx2","fy2","wrap","_callee$","_context","prev","next","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","selectAsync","_ref2","_callee2","srcData","_callee2$","_context2","sent","abrupt","generateSelection","_x6","_x7","_x8","_x9","_x10","DEFAULT_VALUES","fieldAssociation","FIELD_ASSOCIATION_CELLS","captureZValues","extend","initialValues","length","undefined","Object","assign","obj","setGet","newInstance","vtkHardwareSelector$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js"],"sourcesContent":["import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nvar FieldAssociations = vtkDataSet.FieldAssociations; // ----------------------------------------------------------------------------\n// vtkHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkHardwareSelector(publicAPI, model) {\n  model.classHierarchy.push('vtkHardwareSelector'); // get the source data that is used for generating a selection. This\n  // must be called at least once before calling generateSelection. In\n  // raster based backends this method will capture the buffers. You can\n  // call this once and then make multiple calls to generateSelection.\n\n  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(renderer, fx1, fy1, fx2, fy2) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.selectAsync = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(renderer, fx1, fy1, fx2, fy2) {\n      var srcData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return publicAPI.getSourceDataAsync(renderer, fx1, fy1, fx2, fy2);\n\n            case 2:\n              srcData = _context2.sent;\n\n              if (!srcData) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", srcData.generateSelection(fx1, fy1, fx2, fy2));\n\n            case 5:\n              return _context2.abrupt(\"return\", []);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x6, _x7, _x8, _x9, _x10) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,\n  captureZValues: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['fieldAssociation', 'captureZValues']); // Object methods\n\n  vtkHardwareSelector(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkHardwareSelector'); // ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkHardwareSelector$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
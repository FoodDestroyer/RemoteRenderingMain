{"ast":null,"code":"import macro from '../../macros.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkContextRepresentation from './ContextRepresentation.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { allocateArray } from './WidgetRepresentation.js';\nimport { Behavior } from './WidgetRepresentation/Constants.js';\nimport { RenderingTypes } from '../Core/WidgetManager/Constants.js';\n\n// vtkPlaneHandleRepresentation methods\n// ----------------------------------------------------------------------------\n\nfunction vtkConvexFaceContextRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkConvexFaceContextRepresentation'); // --------------------------------------------------------------------------\n  // Internal polydata dataset\n  // --------------------------------------------------------------------------\n\n  model.internalPolyData = vtkPolyData.newInstance({\n    mtime: 0\n  });\n  model.points = new Float32Array(3 * 4);\n  model.cells = new Uint8Array([4, 0, 1, 2, 3]);\n  model.internalPolyData.getPoints().setData(model.points, 3);\n  model.internalPolyData.getPolys().setData(model.cells);\n  function allocateSize(polyData, size) {\n    var points = allocateArray(polyData, 'points', size).getData();\n    var oldCellsSize = polyData.getPolys().getNumberOfValues();\n    var cells = allocateArray(polyData, 'polys', size + 1).getData();\n    if (oldCellsSize !== cells.length) {\n      cells[0] = size;\n      for (var i = 0; i < size; i++) {\n        cells[i + 1] = i;\n      }\n    }\n    return points;\n  } // --------------------------------------------------------------------------\n  // Generic rendering pipeline\n  // --------------------------------------------------------------------------\n\n  model.mapper = vtkMapper.newInstance({\n    scalarVisibility: false\n  });\n  model.actor = vtkActor.newInstance({\n    parentProp: publicAPI\n  });\n  model.actor.getProperty().setOpacity(model.opacity);\n  model.mapper.setInputConnection(publicAPI.getOutputPort());\n  model.actor.setMapper(model.mapper);\n  publicAPI.addActor(model.actor); // --------------------------------------------------------------------------\n\n  publicAPI.requestData = function (inData, outData) {\n    var list = publicAPI.getRepresentationStates(inData[0]);\n    var validState = list.filter(function (state) {\n      return state.getOrigin();\n    });\n    var points = allocateSize(model.internalPolyData, validState.length);\n    for (var i = 0; i < validState.length; i++) {\n      var coords = validState[i].getOrigin();\n      points[i * 3] = coords[0];\n      points[i * 3 + 1] = coords[1];\n      points[i * 3 + 2] = coords[2];\n    }\n    model.internalPolyData.modified();\n    outData[0] = model.internalPolyData;\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.getSelectedState = function (prop, compositeID) {\n    var state = model.inputData[0];\n    var list = publicAPI.getRepresentationStates(state); // Update state orientation based on face\n\n    if (state.updateFromOriginRightUp) {\n      state.updateFromOriginRightUp(list[0].getOrigin(), list[list.length - 1].getOrigin(), list[1].getOrigin());\n    }\n    return state;\n  }; // --------------------------------------------------------------------------\n\n  var superUpdateActorVisibility = publicAPI.updateActorVisibility;\n  publicAPI.updateActorVisibility = function () {\n    var renderingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : RenderingTypes.FRONT_BUFFER;\n    var ctxVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var handleVisible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    switch (model.behavior) {\n      case Behavior.HANDLE:\n        if (renderingType === RenderingTypes.PICKING_BUFFER) {\n          model.actor.getProperty().setOpacity(1);\n        } else {\n          model.actor.getProperty().setOpacity(model.opacity);\n        }\n        break;\n      case Behavior.CONTEXT:\n      default:\n        model.actor.getProperty().setOpacity(model.opacity);\n        break;\n    }\n    superUpdateActorVisibility(renderingType, ctxVisible, handleVisible);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  defaultColor: [1, 0, 0.5],\n  opacity: 0.2\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkContextRepresentation.extend(publicAPI, model, initialValues);\n  macro.setGetArray(publicAPI, model, ['defaultColor'], 3);\n  macro.get(publicAPI, model, ['mapper', 'actor']);\n  macro.setGet(publicAPI, model, ['opacity']); // Object specific methods\n\n  vtkConvexFaceContextRepresentation(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkConvexFaceContextRepresentation'); // ----------------------------------------------------------------------------\n\nvar vtkConvexFaceContextRepresentation$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkConvexFaceContextRepresentation$1 as default, extend, newInstance };","map":{"version":3,"names":["macro","vtkActor","vtkContextRepresentation","vtkMapper","vtkPolyData","allocateArray","Behavior","RenderingTypes","vtkConvexFaceContextRepresentation","publicAPI","model","classHierarchy","push","internalPolyData","newInstance","mtime","points","Float32Array","cells","Uint8Array","getPoints","setData","getPolys","allocateSize","polyData","size","getData","oldCellsSize","getNumberOfValues","length","i","mapper","scalarVisibility","actor","parentProp","getProperty","setOpacity","opacity","setInputConnection","getOutputPort","setMapper","addActor","requestData","inData","outData","list","getRepresentationStates","validState","filter","state","getOrigin","coords","modified","getSelectedState","prop","compositeID","inputData","updateFromOriginRightUp","superUpdateActorVisibility","updateActorVisibility","renderingType","arguments","undefined","FRONT_BUFFER","ctxVisible","handleVisible","behavior","HANDLE","PICKING_BUFFER","CONTEXT","DEFAULT_VALUES","defaultColor","extend","initialValues","Object","assign","setGetArray","get","setGet","vtkConvexFaceContextRepresentation$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Widgets/Representations/ConvexFaceContextRepresentation.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkActor from '../../Rendering/Core/Actor.js';\nimport vtkContextRepresentation from './ContextRepresentation.js';\nimport vtkMapper from '../../Rendering/Core/Mapper.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { allocateArray } from './WidgetRepresentation.js';\nimport { Behavior } from './WidgetRepresentation/Constants.js';\nimport { RenderingTypes } from '../Core/WidgetManager/Constants.js';\n\n// vtkPlaneHandleRepresentation methods\n// ----------------------------------------------------------------------------\n\nfunction vtkConvexFaceContextRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkConvexFaceContextRepresentation'); // --------------------------------------------------------------------------\n  // Internal polydata dataset\n  // --------------------------------------------------------------------------\n\n  model.internalPolyData = vtkPolyData.newInstance({\n    mtime: 0\n  });\n  model.points = new Float32Array(3 * 4);\n  model.cells = new Uint8Array([4, 0, 1, 2, 3]);\n  model.internalPolyData.getPoints().setData(model.points, 3);\n  model.internalPolyData.getPolys().setData(model.cells);\n\n  function allocateSize(polyData, size) {\n    var points = allocateArray(polyData, 'points', size).getData();\n    var oldCellsSize = polyData.getPolys().getNumberOfValues();\n    var cells = allocateArray(polyData, 'polys', size + 1).getData();\n\n    if (oldCellsSize !== cells.length) {\n      cells[0] = size;\n\n      for (var i = 0; i < size; i++) {\n        cells[i + 1] = i;\n      }\n    }\n\n    return points;\n  } // --------------------------------------------------------------------------\n  // Generic rendering pipeline\n  // --------------------------------------------------------------------------\n\n\n  model.mapper = vtkMapper.newInstance({\n    scalarVisibility: false\n  });\n  model.actor = vtkActor.newInstance({\n    parentProp: publicAPI\n  });\n  model.actor.getProperty().setOpacity(model.opacity);\n  model.mapper.setInputConnection(publicAPI.getOutputPort());\n  model.actor.setMapper(model.mapper);\n  publicAPI.addActor(model.actor); // --------------------------------------------------------------------------\n\n  publicAPI.requestData = function (inData, outData) {\n    var list = publicAPI.getRepresentationStates(inData[0]);\n    var validState = list.filter(function (state) {\n      return state.getOrigin();\n    });\n    var points = allocateSize(model.internalPolyData, validState.length);\n\n    for (var i = 0; i < validState.length; i++) {\n      var coords = validState[i].getOrigin();\n      points[i * 3] = coords[0];\n      points[i * 3 + 1] = coords[1];\n      points[i * 3 + 2] = coords[2];\n    }\n\n    model.internalPolyData.modified();\n    outData[0] = model.internalPolyData;\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.getSelectedState = function (prop, compositeID) {\n    var state = model.inputData[0];\n    var list = publicAPI.getRepresentationStates(state); // Update state orientation based on face\n\n    if (state.updateFromOriginRightUp) {\n      state.updateFromOriginRightUp(list[0].getOrigin(), list[list.length - 1].getOrigin(), list[1].getOrigin());\n    }\n\n    return state;\n  }; // --------------------------------------------------------------------------\n\n\n  var superUpdateActorVisibility = publicAPI.updateActorVisibility;\n\n  publicAPI.updateActorVisibility = function () {\n    var renderingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : RenderingTypes.FRONT_BUFFER;\n    var ctxVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var handleVisible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    switch (model.behavior) {\n      case Behavior.HANDLE:\n        if (renderingType === RenderingTypes.PICKING_BUFFER) {\n          model.actor.getProperty().setOpacity(1);\n        } else {\n          model.actor.getProperty().setOpacity(model.opacity);\n        }\n\n        break;\n\n      case Behavior.CONTEXT:\n      default:\n        model.actor.getProperty().setOpacity(model.opacity);\n        break;\n    }\n\n    superUpdateActorVisibility(renderingType, ctxVisible, handleVisible);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  defaultColor: [1, 0, 0.5],\n  opacity: 0.2\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkContextRepresentation.extend(publicAPI, model, initialValues);\n  macro.setGetArray(publicAPI, model, ['defaultColor'], 3);\n  macro.get(publicAPI, model, ['mapper', 'actor']);\n  macro.setGet(publicAPI, model, ['opacity']); // Object specific methods\n\n  vtkConvexFaceContextRepresentation(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkConvexFaceContextRepresentation'); // ----------------------------------------------------------------------------\n\nvar vtkConvexFaceContextRepresentation$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkConvexFaceContextRepresentation$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
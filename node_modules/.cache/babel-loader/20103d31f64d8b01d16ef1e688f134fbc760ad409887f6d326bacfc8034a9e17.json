{"ast":null,"code":"import macro from '../../../macros.js';\nfunction widgetBehavior(publicAPI, model) {\n  model.classHierarchy.push('vtkPolyLineWidgetProp');\n  model._isDragging = false; // --------------------------------------------------------------------------\n  // Display 2D\n  // --------------------------------------------------------------------------\n\n  publicAPI.setDisplayCallback = function (callback) {\n    return model.representations[0].setDisplayCallback(callback);\n  }; // --------------------------------------------------------------------------\n  // Interactor events\n  // --------------------------------------------------------------------------\n\n  function ignoreKey(e) {\n    return e.altKey || e.controlKey || e.shiftKey;\n  }\n  function updateMoveHandle(callData) {\n    var _model$activeState$ge, _model$activeState, _model$activeState$ge2;\n    var manipulator = (_model$activeState$ge = (_model$activeState = model.activeState) === null || _model$activeState === void 0 ? void 0 : (_model$activeState$ge2 = _model$activeState.getManipulator) === null || _model$activeState$ge2 === void 0 ? void 0 : _model$activeState$ge2.call(_model$activeState)) !== null && _model$activeState$ge !== void 0 ? _model$activeState$ge : model.manipulator;\n    if (!manipulator) {\n      return macro.VOID;\n    }\n    var _manipulator$handleEv = manipulator.handleEvent(callData, model._apiSpecificRenderWindow),\n      worldCoords = _manipulator$handleEv.worldCoords;\n    if (worldCoords.length && (model.activeState === model.widgetState.getMoveHandle() || model._isDragging) && model.activeState.setOrigin // e.g. the line is pickable but not draggable\n    ) {\n      model.activeState.setOrigin(worldCoords);\n      publicAPI.invokeInteractionEvent();\n      return macro.EVENT_ABORT;\n    }\n    return macro.VOID;\n  } // --------------------------------------------------------------------------\n  // Right click: Delete handle\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleRightButtonPress = function (e) {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable || ignoreKey(e)) {\n      return macro.VOID;\n    }\n    if (model.activeState !== model.widgetState.getMoveHandle()) {\n      model._interactor.requestAnimation(publicAPI);\n      model.activeState.deactivate();\n      model.widgetState.removeHandle(model.activeState);\n      model.activeState = null;\n      model._interactor.cancelAnimation(publicAPI);\n    }\n    publicAPI.invokeStartInteractionEvent();\n    publicAPI.invokeInteractionEvent();\n    publicAPI.invokeEndInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Left press: Select handle to drag\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleLeftButtonPress = function (e) {\n    var _model$activeState$ge3, _model$activeState2, _model$activeState2$g;\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable || ignoreKey(e)) {\n      return macro.VOID;\n    }\n    var manipulator = (_model$activeState$ge3 = (_model$activeState2 = model.activeState) === null || _model$activeState2 === void 0 ? void 0 : (_model$activeState2$g = _model$activeState2.getManipulator) === null || _model$activeState2$g === void 0 ? void 0 : _model$activeState2$g.call(_model$activeState2)) !== null && _model$activeState$ge3 !== void 0 ? _model$activeState$ge3 : model.manipulator;\n    if (model.activeState === model.widgetState.getMoveHandle() && manipulator) {\n      updateMoveHandle(e);\n      var moveHandle = model.widgetState.getMoveHandle();\n      var newHandle = model.widgetState.addHandle();\n      newHandle.setOrigin(moveHandle.getOrigin());\n      newHandle.setColor(moveHandle.getColor());\n      newHandle.setScale1(moveHandle.getScale1());\n      newHandle.setManipulator(manipulator);\n    } else if (model.dragable) {\n      model._isDragging = true;\n      model._apiSpecificRenderWindow.setCursor('grabbing');\n      model._interactor.requestAnimation(publicAPI);\n    }\n    publicAPI.invokeStartInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Mouse move: Drag selected handle / Handle follow the mouse\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleMouseMove = function (callData) {\n    if (model.pickable && model.dragable && model.activeState && model.activeState.getActive() && !ignoreKey(callData)) {\n      if (updateMoveHandle(callData) === macro.EVENT_ABORT) {\n        return macro.EVENT_ABORT;\n      }\n    }\n    if (model.hasFocus) {\n      model._widgetManager.disablePicking();\n    }\n    return macro.VOID;\n  }; // --------------------------------------------------------------------------\n  // Left release: Finish drag / Create new handle\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleLeftButtonRelease = function () {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n    if (model._isDragging) {\n      model._apiSpecificRenderWindow.setCursor('pointer');\n      model.widgetState.deactivate();\n      model._interactor.cancelAnimation(publicAPI);\n      model._isDragging = false;\n    } else if (model.activeState !== model.widgetState.getMoveHandle()) {\n      model.widgetState.deactivate();\n    }\n    if (model.hasFocus && !model.activeState || model.activeState && !model.activeState.getActive()) {\n      model._widgetManager.enablePicking();\n      model._interactor.render();\n    }\n    publicAPI.invokeEndInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Escape key: Release focus to switch to drag mode\n  // --------------------------------------------------------------------------\n\n  publicAPI.handleKeyDown = function (_ref) {\n    var key = _ref.key;\n    if (key === 'Escape') {\n      publicAPI.loseFocus();\n    }\n  }; // --------------------------------------------------------------------------\n  // Focus API - modeHandle follow mouse when widget has focus\n  // --------------------------------------------------------------------------\n\n  publicAPI.grabFocus = function () {\n    if (!model.hasFocus) {\n      model.activeState = model.widgetState.getMoveHandle();\n      model.activeState.activate();\n      model.activeState.setVisible(true);\n      model._interactor.requestAnimation(publicAPI);\n      publicAPI.invokeStartInteractionEvent();\n    }\n    model.hasFocus = true;\n  }; // --------------------------------------------------------------------------\n\n  publicAPI.loseFocus = function () {\n    if (model.hasFocus) {\n      model._interactor.cancelAnimation(publicAPI);\n      publicAPI.invokeEndInteractionEvent();\n    }\n    model.widgetState.deactivate();\n    model.widgetState.getMoveHandle().deactivate();\n    model.widgetState.getMoveHandle().setVisible(false);\n    model.widgetState.getMoveHandle().setOrigin(null);\n    model.activeState = null;\n    model.hasFocus = false;\n    model._widgetManager.enablePicking();\n    model._interactor.render();\n  };\n}\nexport { widgetBehavior as default };","map":{"version":3,"names":["macro","widgetBehavior","publicAPI","model","classHierarchy","push","_isDragging","setDisplayCallback","callback","representations","ignoreKey","e","altKey","controlKey","shiftKey","updateMoveHandle","callData","_model$activeState$ge","_model$activeState","_model$activeState$ge2","manipulator","activeState","getManipulator","call","VOID","_manipulator$handleEv","handleEvent","_apiSpecificRenderWindow","worldCoords","length","widgetState","getMoveHandle","setOrigin","invokeInteractionEvent","EVENT_ABORT","handleRightButtonPress","getActive","pickable","_interactor","requestAnimation","deactivate","removeHandle","cancelAnimation","invokeStartInteractionEvent","invokeEndInteractionEvent","handleLeftButtonPress","_model$activeState$ge3","_model$activeState2","_model$activeState2$g","moveHandle","newHandle","addHandle","getOrigin","setColor","getColor","setScale1","getScale1","setManipulator","dragable","setCursor","handleMouseMove","hasFocus","_widgetManager","disablePicking","handleLeftButtonRelease","enablePicking","render","handleKeyDown","_ref","key","loseFocus","grabFocus","activate","setVisible","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Widgets/Widgets3D/PolyLineWidget/behavior.js"],"sourcesContent":["import macro from '../../../macros.js';\n\nfunction widgetBehavior(publicAPI, model) {\n  model.classHierarchy.push('vtkPolyLineWidgetProp');\n  model._isDragging = false; // --------------------------------------------------------------------------\n  // Display 2D\n  // --------------------------------------------------------------------------\n\n  publicAPI.setDisplayCallback = function (callback) {\n    return model.representations[0].setDisplayCallback(callback);\n  }; // --------------------------------------------------------------------------\n  // Interactor events\n  // --------------------------------------------------------------------------\n\n\n  function ignoreKey(e) {\n    return e.altKey || e.controlKey || e.shiftKey;\n  }\n\n  function updateMoveHandle(callData) {\n    var _model$activeState$ge, _model$activeState, _model$activeState$ge2;\n\n    var manipulator = (_model$activeState$ge = (_model$activeState = model.activeState) === null || _model$activeState === void 0 ? void 0 : (_model$activeState$ge2 = _model$activeState.getManipulator) === null || _model$activeState$ge2 === void 0 ? void 0 : _model$activeState$ge2.call(_model$activeState)) !== null && _model$activeState$ge !== void 0 ? _model$activeState$ge : model.manipulator;\n\n    if (!manipulator) {\n      return macro.VOID;\n    }\n\n    var _manipulator$handleEv = manipulator.handleEvent(callData, model._apiSpecificRenderWindow),\n        worldCoords = _manipulator$handleEv.worldCoords;\n\n    if (worldCoords.length && (model.activeState === model.widgetState.getMoveHandle() || model._isDragging) && model.activeState.setOrigin // e.g. the line is pickable but not draggable\n    ) {\n      model.activeState.setOrigin(worldCoords);\n      publicAPI.invokeInteractionEvent();\n      return macro.EVENT_ABORT;\n    }\n\n    return macro.VOID;\n  } // --------------------------------------------------------------------------\n  // Right click: Delete handle\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleRightButtonPress = function (e) {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable || ignoreKey(e)) {\n      return macro.VOID;\n    }\n\n    if (model.activeState !== model.widgetState.getMoveHandle()) {\n      model._interactor.requestAnimation(publicAPI);\n\n      model.activeState.deactivate();\n      model.widgetState.removeHandle(model.activeState);\n      model.activeState = null;\n\n      model._interactor.cancelAnimation(publicAPI);\n    }\n\n    publicAPI.invokeStartInteractionEvent();\n    publicAPI.invokeInteractionEvent();\n    publicAPI.invokeEndInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Left press: Select handle to drag\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleLeftButtonPress = function (e) {\n    var _model$activeState$ge3, _model$activeState2, _model$activeState2$g;\n\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable || ignoreKey(e)) {\n      return macro.VOID;\n    }\n\n    var manipulator = (_model$activeState$ge3 = (_model$activeState2 = model.activeState) === null || _model$activeState2 === void 0 ? void 0 : (_model$activeState2$g = _model$activeState2.getManipulator) === null || _model$activeState2$g === void 0 ? void 0 : _model$activeState2$g.call(_model$activeState2)) !== null && _model$activeState$ge3 !== void 0 ? _model$activeState$ge3 : model.manipulator;\n\n    if (model.activeState === model.widgetState.getMoveHandle() && manipulator) {\n      updateMoveHandle(e);\n      var moveHandle = model.widgetState.getMoveHandle();\n      var newHandle = model.widgetState.addHandle();\n      newHandle.setOrigin(moveHandle.getOrigin());\n      newHandle.setColor(moveHandle.getColor());\n      newHandle.setScale1(moveHandle.getScale1());\n      newHandle.setManipulator(manipulator);\n    } else if (model.dragable) {\n      model._isDragging = true;\n\n      model._apiSpecificRenderWindow.setCursor('grabbing');\n\n      model._interactor.requestAnimation(publicAPI);\n    }\n\n    publicAPI.invokeStartInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Mouse move: Drag selected handle / Handle follow the mouse\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleMouseMove = function (callData) {\n    if (model.pickable && model.dragable && model.activeState && model.activeState.getActive() && !ignoreKey(callData)) {\n      if (updateMoveHandle(callData) === macro.EVENT_ABORT) {\n        return macro.EVENT_ABORT;\n      }\n    }\n\n    if (model.hasFocus) {\n      model._widgetManager.disablePicking();\n    }\n\n    return macro.VOID;\n  }; // --------------------------------------------------------------------------\n  // Left release: Finish drag / Create new handle\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleLeftButtonRelease = function () {\n    if (!model.activeState || !model.activeState.getActive() || !model.pickable) {\n      return macro.VOID;\n    }\n\n    if (model._isDragging) {\n      model._apiSpecificRenderWindow.setCursor('pointer');\n\n      model.widgetState.deactivate();\n\n      model._interactor.cancelAnimation(publicAPI);\n\n      model._isDragging = false;\n    } else if (model.activeState !== model.widgetState.getMoveHandle()) {\n      model.widgetState.deactivate();\n    }\n\n    if (model.hasFocus && !model.activeState || model.activeState && !model.activeState.getActive()) {\n      model._widgetManager.enablePicking();\n\n      model._interactor.render();\n    }\n\n    publicAPI.invokeEndInteractionEvent();\n    return macro.EVENT_ABORT;\n  }; // --------------------------------------------------------------------------\n  // Escape key: Release focus to switch to drag mode\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.handleKeyDown = function (_ref) {\n    var key = _ref.key;\n\n    if (key === 'Escape') {\n      publicAPI.loseFocus();\n    }\n  }; // --------------------------------------------------------------------------\n  // Focus API - modeHandle follow mouse when widget has focus\n  // --------------------------------------------------------------------------\n\n\n  publicAPI.grabFocus = function () {\n    if (!model.hasFocus) {\n      model.activeState = model.widgetState.getMoveHandle();\n      model.activeState.activate();\n      model.activeState.setVisible(true);\n\n      model._interactor.requestAnimation(publicAPI);\n\n      publicAPI.invokeStartInteractionEvent();\n    }\n\n    model.hasFocus = true;\n  }; // --------------------------------------------------------------------------\n\n\n  publicAPI.loseFocus = function () {\n    if (model.hasFocus) {\n      model._interactor.cancelAnimation(publicAPI);\n\n      publicAPI.invokeEndInteractionEvent();\n    }\n\n    model.widgetState.deactivate();\n    model.widgetState.getMoveHandle().deactivate();\n    model.widgetState.getMoveHandle().setVisible(false);\n    model.widgetState.getMoveHandle().setOrigin(null);\n    model.activeState = null;\n    model.hasFocus = false;\n\n    model._widgetManager.enablePicking();\n\n    model._interactor.render();\n  };\n}\n\nexport { widgetBehavior as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
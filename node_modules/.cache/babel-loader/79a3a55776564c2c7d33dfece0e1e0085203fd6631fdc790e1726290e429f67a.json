{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\n\n// vtkStringArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkStringArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkStringArray'); // Description:\n  // Return the data component at the location specified by tupleIdx and\n  // compIdx.\n\n  publicAPI.getComponent = function (tupleIdx) {\n    var compIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return model.values[tupleIdx * model.numberOfComponents + compIdx];\n  }; // Description:\n  // Set the data component at the location specified by tupleIdx and compIdx\n  // to value.\n  // Note that i is less than NumberOfTuples and j is less than\n  //  NumberOfComponents. Make sure enough memory has been allocated\n  // (use SetNumberOfTuples() and SetNumberOfComponents()).\n\n  publicAPI.setComponent = function (tupleIdx, compIdx, value) {\n    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {\n      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.getData = function () {\n    return model.values;\n  };\n  publicAPI.getTuple = function (idx) {\n    var tupleToFill = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var numberOfComponents = model.numberOfComponents || 1;\n    if (tupleToFill.length) {\n      tupleToFill.length = numberOfComponents;\n    }\n    var offset = idx * numberOfComponents;\n    for (var i = 0; i < numberOfComponents; i++) {\n      tupleToFill[i] = model.values[offset + i];\n    }\n    return tupleToFill;\n  };\n  publicAPI.getTupleLocation = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return idx * model.numberOfComponents;\n  };\n  publicAPI.getNumberOfComponents = function () {\n    return model.numberOfComponents;\n  };\n  publicAPI.getNumberOfValues = function () {\n    return model.values.length;\n  };\n  publicAPI.getNumberOfTuples = function () {\n    return model.values.length / model.numberOfComponents;\n  };\n  publicAPI.getDataType = function () {\n    return model.dataType;\n  };\n  /* eslint-disable no-use-before-define */\n\n  publicAPI.newClone = function () {\n    return newInstance({\n      name: model.name,\n      numberOfComponents: model.numberOfComponents\n    });\n  };\n  /* eslint-enable no-use-before-define */\n\n  publicAPI.getName = function () {\n    if (!model.name) {\n      publicAPI.setName(\"vtkStringArray\".concat(publicAPI.getMTime()));\n    }\n    return model.name;\n  };\n  publicAPI.setData = function (array, numberOfComponents) {\n    model.values = array;\n    model.size = array.length;\n    if (numberOfComponents) {\n      model.numberOfComponents = numberOfComponents;\n    }\n    if (model.size % model.numberOfComponents !== 0) {\n      model.numberOfComponents = 1;\n    }\n    publicAPI.modified();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  name: '',\n  numberOfComponents: 1,\n  size: 0,\n  // values: null,\n  dataType: 'string'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  if (!model.empty && !model.values && !model.size) {\n    throw new TypeError('Cannot create vtkStringArray object without: size > 0, values');\n  }\n  if (!model.values) {\n    model.values = [];\n  } else if (Array.isArray(model.values)) {\n    model.values = _toConsumableArray(model.values);\n  }\n  if (model.values) {\n    model.size = model.values.length;\n  } // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.set(publicAPI, model, ['name']); // Object specific methods\n\n  vtkStringArray(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkStringArray'); // ----------------------------------------------------------------------------\n\nvar vtkStringArray$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkStringArray$1 as default, extend, newInstance };","map":{"version":3,"names":["_toConsumableArray","macro","vtkStringArray","publicAPI","model","classHierarchy","push","getComponent","tupleIdx","compIdx","arguments","length","undefined","values","numberOfComponents","setComponent","value","modified","getData","getTuple","idx","tupleToFill","offset","i","getTupleLocation","getNumberOfComponents","getNumberOfValues","getNumberOfTuples","getDataType","dataType","newClone","newInstance","name","getName","setName","concat","getMTime","setData","array","size","DEFAULT_VALUES","extend","initialValues","Object","assign","empty","TypeError","Array","isArray","obj","set","vtkStringArray$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Common/Core/StringArray.js"],"sourcesContent":["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\n\n// vtkStringArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkStringArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkStringArray'); // Description:\n  // Return the data component at the location specified by tupleIdx and\n  // compIdx.\n\n  publicAPI.getComponent = function (tupleIdx) {\n    var compIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return model.values[tupleIdx * model.numberOfComponents + compIdx];\n  }; // Description:\n  // Set the data component at the location specified by tupleIdx and compIdx\n  // to value.\n  // Note that i is less than NumberOfTuples and j is less than\n  //  NumberOfComponents. Make sure enough memory has been allocated\n  // (use SetNumberOfTuples() and SetNumberOfComponents()).\n\n\n  publicAPI.setComponent = function (tupleIdx, compIdx, value) {\n    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {\n      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getData = function () {\n    return model.values;\n  };\n\n  publicAPI.getTuple = function (idx) {\n    var tupleToFill = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var numberOfComponents = model.numberOfComponents || 1;\n\n    if (tupleToFill.length) {\n      tupleToFill.length = numberOfComponents;\n    }\n\n    var offset = idx * numberOfComponents;\n\n    for (var i = 0; i < numberOfComponents; i++) {\n      tupleToFill[i] = model.values[offset + i];\n    }\n\n    return tupleToFill;\n  };\n\n  publicAPI.getTupleLocation = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return idx * model.numberOfComponents;\n  };\n\n  publicAPI.getNumberOfComponents = function () {\n    return model.numberOfComponents;\n  };\n\n  publicAPI.getNumberOfValues = function () {\n    return model.values.length;\n  };\n\n  publicAPI.getNumberOfTuples = function () {\n    return model.values.length / model.numberOfComponents;\n  };\n\n  publicAPI.getDataType = function () {\n    return model.dataType;\n  };\n  /* eslint-disable no-use-before-define */\n\n\n  publicAPI.newClone = function () {\n    return newInstance({\n      name: model.name,\n      numberOfComponents: model.numberOfComponents\n    });\n  };\n  /* eslint-enable no-use-before-define */\n\n\n  publicAPI.getName = function () {\n    if (!model.name) {\n      publicAPI.setName(\"vtkStringArray\".concat(publicAPI.getMTime()));\n    }\n\n    return model.name;\n  };\n\n  publicAPI.setData = function (array, numberOfComponents) {\n    model.values = array;\n    model.size = array.length;\n\n    if (numberOfComponents) {\n      model.numberOfComponents = numberOfComponents;\n    }\n\n    if (model.size % model.numberOfComponents !== 0) {\n      model.numberOfComponents = 1;\n    }\n\n    publicAPI.modified();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  name: '',\n  numberOfComponents: 1,\n  size: 0,\n  // values: null,\n  dataType: 'string'\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  if (!model.empty && !model.values && !model.size) {\n    throw new TypeError('Cannot create vtkStringArray object without: size > 0, values');\n  }\n\n  if (!model.values) {\n    model.values = [];\n  } else if (Array.isArray(model.values)) {\n    model.values = _toConsumableArray(model.values);\n  }\n\n  if (model.values) {\n    model.size = model.values.length;\n  } // Object methods\n\n\n  macro.obj(publicAPI, model);\n  macro.set(publicAPI, model, ['name']); // Object specific methods\n\n  vtkStringArray(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkStringArray'); // ----------------------------------------------------------------------------\n\nvar vtkStringArray$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkStringArray$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
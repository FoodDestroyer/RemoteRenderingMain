{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkImageSlice from '../../Rendering/Core/ImageSlice.js';\nimport vtkImageMapper from '../../Rendering/Core/ImageMapper.js';\nimport vtkAbstractRepresentationProxy from '../Core/AbstractRepresentationProxy.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction sum(a, b) {\n  return a + b;\n} // ----------------------------------------------------------------------------\n\nfunction mean() {\n  for (var _len = arguments.length, array = new Array(_len), _key = 0; _key < _len; _key++) {\n    array[_key] = arguments[_key];\n  }\n  return array.reduce(sum, 0) / array.length;\n} // ----------------------------------------------------------------------------\n\nfunction updateDomains(dataset, dataArray, model, updateProp) {\n  var dataRange = dataArray.getRange();\n  var spacing = dataset.getSpacing();\n  var bounds = dataset.getBounds();\n  var extent = dataset.getExtent();\n  var sliceMin;\n  var sliceMax;\n  var stepVal;\n  var axisIndex;\n  var sliceMode = model.mapper.getSlicingMode();\n  var sliceModeLabel = 'IJKXYZ'[sliceMode];\n  switch (sliceMode) {\n    case vtkImageMapper.SlicingMode.I:\n    case vtkImageMapper.SlicingMode.J:\n    case vtkImageMapper.SlicingMode.K:\n      axisIndex = 'IJK'.indexOf(sliceModeLabel);\n      sliceMin = extent[axisIndex * 2];\n      sliceMax = extent[axisIndex * 2 + 1];\n      stepVal = 1;\n      break;\n    case vtkImageMapper.SlicingMode.X:\n    case vtkImageMapper.SlicingMode.Y:\n    case vtkImageMapper.SlicingMode.Z:\n      {\n        axisIndex = 'XYZ'.indexOf(sliceModeLabel);\n        sliceMin = bounds[axisIndex * 2];\n        sliceMax = bounds[axisIndex * 2 + 1];\n        var _model$mapper$getClos = model.mapper.getClosestIJKAxis(),\n          ijkMode = _model$mapper$getClos.ijkMode;\n        stepVal = spacing[ijkMode];\n      }\n      break;\n  }\n  var propToUpdate = {\n    slice: {\n      domain: {\n        min: sliceMin,\n        max: sliceMax,\n        step: stepVal\n      }\n    },\n    windowWidth: {\n      domain: {\n        min: 0,\n        max: dataRange[1] - dataRange[0],\n        step: 'any'\n      }\n    },\n    windowLevel: {\n      domain: {\n        min: dataRange[0],\n        max: dataRange[1],\n        step: 'any'\n      }\n    }\n  };\n  updateProp('slice', propToUpdate.slice);\n  updateProp('windowWidth', propToUpdate.windowWidth);\n  updateProp('windowLevel', propToUpdate.windowLevel);\n  return {\n    slice: mean(propToUpdate.slice.domain.min, propToUpdate.slice.domain.max),\n    windowWidth: propToUpdate.windowWidth.domain.max,\n    windowLevel: Math.floor(mean(propToUpdate.windowLevel.domain.min, propToUpdate.windowLevel.domain.max))\n  };\n} // ----------------------------------------------------------------------------\n// vtkSliceRepresentationProxy methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSliceRepresentationProxy(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSliceRepresentationProxy');\n  model.mapper = vtkImageMapper.newInstance();\n  model.actor = vtkImageSlice.newInstance();\n  model.property = model.actor.getProperty(); // connect rendering pipeline\n\n  model.actor.setMapper(model.mapper);\n  model.actors.push(model.actor);\n  function setInputData(inputDataset) {\n    var state = updateDomains(inputDataset, publicAPI.getDataArray(), model, publicAPI.updateProxyProperty);\n    publicAPI.set(state); // Init slice location\n\n    var bounds = inputDataset.getBounds();\n    var extent = inputDataset.getExtent();\n    switch (model.mapper.getSlicingMode()) {\n      case vtkImageMapper.SlicingMode.I:\n        publicAPI.setSlice(Math.floor(mean(extent[0], extent[1])));\n        break;\n      case vtkImageMapper.SlicingMode.J:\n        publicAPI.setSlice(Math.floor(mean(extent[2], extent[3])));\n        break;\n      case vtkImageMapper.SlicingMode.K:\n        publicAPI.setSlice(Math.floor(mean(extent[4], extent[5])));\n        break;\n      case vtkImageMapper.SlicingMode.X:\n        publicAPI.setSlice(mean(bounds[0], bounds[1]));\n        break;\n      case vtkImageMapper.SlicingMode.Y:\n        publicAPI.setSlice(mean(bounds[2], bounds[3]));\n        break;\n      case vtkImageMapper.SlicingMode.Z:\n        publicAPI.setSlice(mean(bounds[4], bounds[5]));\n        break;\n    }\n  } // Keep things updated\n\n  model.sourceDependencies.push(model.mapper);\n  model.sourceDependencies.push({\n    setInputData: setInputData\n  }); // keeps the slicing mode and domain info updated\n\n  function updateSlicingMode(mode) {\n    model.mapper.setSlicingMode(vtkImageMapper.SlicingMode[mode]); // Update to previously set position\n\n    var modelKey = \"\".concat(mode.toLowerCase(), \"Slice\");\n    if (modelKey in model && model[modelKey] !== undefined) {\n      model.mapper.setSlice(model[modelKey]);\n    }\n    if (model.input) {\n      // Update domains for UI...\n      var state = updateDomains(publicAPI.getInputDataSet(), publicAPI.getDataArray(), model, publicAPI.updateProxyProperty);\n      publicAPI.set(state);\n    }\n    publicAPI.modified();\n  } // API ----------------------------------------------------------------------\n\n  publicAPI.setSlicingMode = function (mode) {\n    if (!mode) {\n      return false;\n    }\n    if (model.slicingMode !== mode) {\n      // Update Mode\n      model.slicingMode = mode;\n      updateSlicingMode(mode);\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getSliceIndex = function () {\n    if ('XYZ'.indexOf(model.slicingMode) !== -1) {\n      return model.mapper.getSliceAtPosition(model.mapper.getSlice());\n    }\n    return model.mapper.getSlice();\n  };\n  publicAPI.getAnnotations = function () {\n    var dynamicAddOn = {};\n    var sliceIndex = publicAPI.getSliceIndex();\n    var sliceBounds = model.mapper.getBoundsForSlice();\n    var sliceNormal = model.mapper.getSlicingModeNormal();\n    var _model$mapper$getClos2 = model.mapper.getClosestIJKAxis(),\n      ijkMode = _model$mapper$getClos2.ijkMode;\n    var sliceOrigin = [(sliceBounds[0] + sliceBounds[1]) * 0.5, (sliceBounds[2] + sliceBounds[3]) * 0.5, (sliceBounds[4] + sliceBounds[5]) * 0.5];\n    var slicePosition = 0;\n    if (sliceBounds[1] - sliceBounds[0] < Number.EPSILON) {\n      slicePosition = sliceBounds[0];\n    }\n    if (sliceBounds[3] - sliceBounds[2] < Number.EPSILON) {\n      slicePosition = sliceBounds[2];\n    }\n    if (sliceBounds[5] - sliceBounds[4] < Number.EPSILON) {\n      slicePosition = sliceBounds[4];\n    }\n    var imageData = model.mapper.getInputData();\n    if (imageData) {\n      dynamicAddOn.sliceSpacing = imageData.getSpacing()[ijkMode];\n      dynamicAddOn.dimensions = imageData.getDimensions();\n      dynamicAddOn.sliceCount = imageData.getDimensions()[ijkMode];\n      var ijkOrientation = [];\n      for (var i = 0; i < 3; i++) {\n        var extent = [0, 0, 0, 0, 0, 0];\n        extent[i * 2 + 1] = 1;\n        var tmpBounds = imageData.extentToBounds(extent);\n        if (tmpBounds[1] - tmpBounds[0] > Number.EPSILON) {\n          ijkOrientation[0] = 'IJK'[i];\n        }\n        if (tmpBounds[3] - tmpBounds[2] > Number.EPSILON) {\n          ijkOrientation[1] = 'IJK'[i];\n        }\n        if (tmpBounds[5] - tmpBounds[4] > Number.EPSILON) {\n          ijkOrientation[2] = 'IJK'[i];\n        }\n      }\n      dynamicAddOn.ijkOrientation = ijkOrientation.join('');\n    }\n    return _objectSpread({\n      ijkMode: ijkMode,\n      sliceBounds: sliceBounds,\n      sliceIndex: sliceIndex,\n      sliceNormal: sliceNormal,\n      sliceOrigin: sliceOrigin,\n      slicePosition: slicePosition\n    }, dynamicAddOn);\n  };\n  var parentSetColorBy = publicAPI.setColorBy;\n  publicAPI.setColorBy = function (arrayName, arrayLocation) {\n    var componentIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    if (arrayName === null) {\n      model.property.setRGBTransferFunction(null);\n      model.property.setPiecewiseFunction(null);\n    } else {\n      parentSetColorBy(arrayName, arrayLocation, componentIndex);\n      var lutProxy = publicAPI.getLookupTableProxy(arrayName);\n      var pwfProxy = publicAPI.getPiecewiseFunctionProxy(arrayName);\n      model.property.setRGBTransferFunction(lutProxy.getLookupTable());\n      model.property.setPiecewiseFunction(pwfProxy.getPiecewiseFunction());\n    }\n  }; // Initialize slicing mode\n\n  updateSlicingMode(model.slicingMode || 'X');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkAbstractRepresentationProxy.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['slicingMode']); // Object specific methods\n\n  vtkSliceRepresentationProxy(publicAPI, model); // Proxyfy\n\n  macro.proxyPropertyMapping(publicAPI, model, {\n    visibility: {\n      modelKey: 'actor',\n      property: 'visibility'\n    },\n    windowWidth: {\n      modelKey: 'property',\n      property: 'colorWindow'\n    },\n    windowLevel: {\n      modelKey: 'property',\n      property: 'colorLevel'\n    },\n    interpolationType: {\n      modelKey: 'property',\n      property: 'interpolationType'\n    },\n    slice: {\n      modelKey: 'mapper',\n      property: 'slice'\n    }\n  });\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSliceRepresentationProxy'); // ----------------------------------------------------------------------------\n\nvar vtkSliceRepresentationProxy$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\nexport { vtkSliceRepresentationProxy$1 as default, extend, newInstance };","map":{"version":3,"names":["_defineProperty","macro","vtkImageSlice","vtkImageMapper","vtkAbstractRepresentationProxy","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","sum","a","b","mean","_len","array","Array","_key","reduce","updateDomains","dataset","dataArray","model","updateProp","dataRange","getRange","spacing","getSpacing","bounds","getBounds","extent","getExtent","sliceMin","sliceMax","stepVal","axisIndex","sliceMode","mapper","getSlicingMode","sliceModeLabel","SlicingMode","I","J","K","indexOf","X","Y","Z","_model$mapper$getClos","getClosestIJKAxis","ijkMode","propToUpdate","slice","domain","min","max","step","windowWidth","windowLevel","Math","floor","vtkSliceRepresentationProxy","publicAPI","classHierarchy","newInstance","actor","property","getProperty","setMapper","actors","setInputData","inputDataset","state","getDataArray","updateProxyProperty","set","setSlice","sourceDependencies","updateSlicingMode","mode","setSlicingMode","modelKey","concat","toLowerCase","undefined","input","getInputDataSet","modified","slicingMode","getSliceIndex","getSliceAtPosition","getSlice","getAnnotations","dynamicAddOn","sliceIndex","sliceBounds","getBoundsForSlice","sliceNormal","getSlicingModeNormal","_model$mapper$getClos2","sliceOrigin","slicePosition","Number","EPSILON","imageData","getInputData","sliceSpacing","dimensions","getDimensions","sliceCount","ijkOrientation","tmpBounds","extentToBounds","join","parentSetColorBy","setColorBy","arrayName","arrayLocation","componentIndex","setRGBTransferFunction","setPiecewiseFunction","lutProxy","getLookupTableProxy","pwfProxy","getPiecewiseFunctionProxy","getLookupTable","getPiecewiseFunction","DEFAULT_VALUES","extend","initialValues","assign","get","proxyPropertyMapping","visibility","interpolationType","vtkSliceRepresentationProxy$1","default"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/node_modules/@kitware/vtk.js/Proxy/Representations/SliceRepresentationProxy.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkImageSlice from '../../Rendering/Core/ImageSlice.js';\nimport vtkImageMapper from '../../Rendering/Core/ImageMapper.js';\nimport vtkAbstractRepresentationProxy from '../Core/AbstractRepresentationProxy.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction sum(a, b) {\n  return a + b;\n} // ----------------------------------------------------------------------------\n\n\nfunction mean() {\n  for (var _len = arguments.length, array = new Array(_len), _key = 0; _key < _len; _key++) {\n    array[_key] = arguments[_key];\n  }\n\n  return array.reduce(sum, 0) / array.length;\n} // ----------------------------------------------------------------------------\n\n\nfunction updateDomains(dataset, dataArray, model, updateProp) {\n  var dataRange = dataArray.getRange();\n  var spacing = dataset.getSpacing();\n  var bounds = dataset.getBounds();\n  var extent = dataset.getExtent();\n  var sliceMin;\n  var sliceMax;\n  var stepVal;\n  var axisIndex;\n  var sliceMode = model.mapper.getSlicingMode();\n  var sliceModeLabel = 'IJKXYZ'[sliceMode];\n\n  switch (sliceMode) {\n    case vtkImageMapper.SlicingMode.I:\n    case vtkImageMapper.SlicingMode.J:\n    case vtkImageMapper.SlicingMode.K:\n      axisIndex = 'IJK'.indexOf(sliceModeLabel);\n      sliceMin = extent[axisIndex * 2];\n      sliceMax = extent[axisIndex * 2 + 1];\n      stepVal = 1;\n      break;\n\n    case vtkImageMapper.SlicingMode.X:\n    case vtkImageMapper.SlicingMode.Y:\n    case vtkImageMapper.SlicingMode.Z:\n      {\n        axisIndex = 'XYZ'.indexOf(sliceModeLabel);\n        sliceMin = bounds[axisIndex * 2];\n        sliceMax = bounds[axisIndex * 2 + 1];\n\n        var _model$mapper$getClos = model.mapper.getClosestIJKAxis(),\n            ijkMode = _model$mapper$getClos.ijkMode;\n\n        stepVal = spacing[ijkMode];\n      }\n      break;\n  }\n\n  var propToUpdate = {\n    slice: {\n      domain: {\n        min: sliceMin,\n        max: sliceMax,\n        step: stepVal\n      }\n    },\n    windowWidth: {\n      domain: {\n        min: 0,\n        max: dataRange[1] - dataRange[0],\n        step: 'any'\n      }\n    },\n    windowLevel: {\n      domain: {\n        min: dataRange[0],\n        max: dataRange[1],\n        step: 'any'\n      }\n    }\n  };\n  updateProp('slice', propToUpdate.slice);\n  updateProp('windowWidth', propToUpdate.windowWidth);\n  updateProp('windowLevel', propToUpdate.windowLevel);\n  return {\n    slice: mean(propToUpdate.slice.domain.min, propToUpdate.slice.domain.max),\n    windowWidth: propToUpdate.windowWidth.domain.max,\n    windowLevel: Math.floor(mean(propToUpdate.windowLevel.domain.min, propToUpdate.windowLevel.domain.max))\n  };\n} // ----------------------------------------------------------------------------\n// vtkSliceRepresentationProxy methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkSliceRepresentationProxy(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSliceRepresentationProxy');\n  model.mapper = vtkImageMapper.newInstance();\n  model.actor = vtkImageSlice.newInstance();\n  model.property = model.actor.getProperty(); // connect rendering pipeline\n\n  model.actor.setMapper(model.mapper);\n  model.actors.push(model.actor);\n\n  function setInputData(inputDataset) {\n    var state = updateDomains(inputDataset, publicAPI.getDataArray(), model, publicAPI.updateProxyProperty);\n    publicAPI.set(state); // Init slice location\n\n    var bounds = inputDataset.getBounds();\n    var extent = inputDataset.getExtent();\n\n    switch (model.mapper.getSlicingMode()) {\n      case vtkImageMapper.SlicingMode.I:\n        publicAPI.setSlice(Math.floor(mean(extent[0], extent[1])));\n        break;\n\n      case vtkImageMapper.SlicingMode.J:\n        publicAPI.setSlice(Math.floor(mean(extent[2], extent[3])));\n        break;\n\n      case vtkImageMapper.SlicingMode.K:\n        publicAPI.setSlice(Math.floor(mean(extent[4], extent[5])));\n        break;\n\n      case vtkImageMapper.SlicingMode.X:\n        publicAPI.setSlice(mean(bounds[0], bounds[1]));\n        break;\n\n      case vtkImageMapper.SlicingMode.Y:\n        publicAPI.setSlice(mean(bounds[2], bounds[3]));\n        break;\n\n      case vtkImageMapper.SlicingMode.Z:\n        publicAPI.setSlice(mean(bounds[4], bounds[5]));\n        break;\n    }\n  } // Keep things updated\n\n\n  model.sourceDependencies.push(model.mapper);\n  model.sourceDependencies.push({\n    setInputData: setInputData\n  }); // keeps the slicing mode and domain info updated\n\n  function updateSlicingMode(mode) {\n    model.mapper.setSlicingMode(vtkImageMapper.SlicingMode[mode]); // Update to previously set position\n\n    var modelKey = \"\".concat(mode.toLowerCase(), \"Slice\");\n\n    if (modelKey in model && model[modelKey] !== undefined) {\n      model.mapper.setSlice(model[modelKey]);\n    }\n\n    if (model.input) {\n      // Update domains for UI...\n      var state = updateDomains(publicAPI.getInputDataSet(), publicAPI.getDataArray(), model, publicAPI.updateProxyProperty);\n      publicAPI.set(state);\n    }\n\n    publicAPI.modified();\n  } // API ----------------------------------------------------------------------\n\n\n  publicAPI.setSlicingMode = function (mode) {\n    if (!mode) {\n      return false;\n    }\n\n    if (model.slicingMode !== mode) {\n      // Update Mode\n      model.slicingMode = mode;\n      updateSlicingMode(mode);\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getSliceIndex = function () {\n    if ('XYZ'.indexOf(model.slicingMode) !== -1) {\n      return model.mapper.getSliceAtPosition(model.mapper.getSlice());\n    }\n\n    return model.mapper.getSlice();\n  };\n\n  publicAPI.getAnnotations = function () {\n    var dynamicAddOn = {};\n    var sliceIndex = publicAPI.getSliceIndex();\n    var sliceBounds = model.mapper.getBoundsForSlice();\n    var sliceNormal = model.mapper.getSlicingModeNormal();\n\n    var _model$mapper$getClos2 = model.mapper.getClosestIJKAxis(),\n        ijkMode = _model$mapper$getClos2.ijkMode;\n\n    var sliceOrigin = [(sliceBounds[0] + sliceBounds[1]) * 0.5, (sliceBounds[2] + sliceBounds[3]) * 0.5, (sliceBounds[4] + sliceBounds[5]) * 0.5];\n    var slicePosition = 0;\n\n    if (sliceBounds[1] - sliceBounds[0] < Number.EPSILON) {\n      slicePosition = sliceBounds[0];\n    }\n\n    if (sliceBounds[3] - sliceBounds[2] < Number.EPSILON) {\n      slicePosition = sliceBounds[2];\n    }\n\n    if (sliceBounds[5] - sliceBounds[4] < Number.EPSILON) {\n      slicePosition = sliceBounds[4];\n    }\n\n    var imageData = model.mapper.getInputData();\n\n    if (imageData) {\n      dynamicAddOn.sliceSpacing = imageData.getSpacing()[ijkMode];\n      dynamicAddOn.dimensions = imageData.getDimensions();\n      dynamicAddOn.sliceCount = imageData.getDimensions()[ijkMode];\n      var ijkOrientation = [];\n\n      for (var i = 0; i < 3; i++) {\n        var extent = [0, 0, 0, 0, 0, 0];\n        extent[i * 2 + 1] = 1;\n        var tmpBounds = imageData.extentToBounds(extent);\n\n        if (tmpBounds[1] - tmpBounds[0] > Number.EPSILON) {\n          ijkOrientation[0] = 'IJK'[i];\n        }\n\n        if (tmpBounds[3] - tmpBounds[2] > Number.EPSILON) {\n          ijkOrientation[1] = 'IJK'[i];\n        }\n\n        if (tmpBounds[5] - tmpBounds[4] > Number.EPSILON) {\n          ijkOrientation[2] = 'IJK'[i];\n        }\n      }\n\n      dynamicAddOn.ijkOrientation = ijkOrientation.join('');\n    }\n\n    return _objectSpread({\n      ijkMode: ijkMode,\n      sliceBounds: sliceBounds,\n      sliceIndex: sliceIndex,\n      sliceNormal: sliceNormal,\n      sliceOrigin: sliceOrigin,\n      slicePosition: slicePosition\n    }, dynamicAddOn);\n  };\n\n  var parentSetColorBy = publicAPI.setColorBy;\n\n  publicAPI.setColorBy = function (arrayName, arrayLocation) {\n    var componentIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n    if (arrayName === null) {\n      model.property.setRGBTransferFunction(null);\n      model.property.setPiecewiseFunction(null);\n    } else {\n      parentSetColorBy(arrayName, arrayLocation, componentIndex);\n      var lutProxy = publicAPI.getLookupTableProxy(arrayName);\n      var pwfProxy = publicAPI.getPiecewiseFunctionProxy(arrayName);\n      model.property.setRGBTransferFunction(lutProxy.getLookupTable());\n      model.property.setPiecewiseFunction(pwfProxy.getPiecewiseFunction());\n    }\n  }; // Initialize slicing mode\n\n\n  updateSlicingMode(model.slicingMode || 'X');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkAbstractRepresentationProxy.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['slicingMode']); // Object specific methods\n\n  vtkSliceRepresentationProxy(publicAPI, model); // Proxyfy\n\n  macro.proxyPropertyMapping(publicAPI, model, {\n    visibility: {\n      modelKey: 'actor',\n      property: 'visibility'\n    },\n    windowWidth: {\n      modelKey: 'property',\n      property: 'colorWindow'\n    },\n    windowLevel: {\n      modelKey: 'property',\n      property: 'colorLevel'\n    },\n    interpolationType: {\n      modelKey: 'property',\n      property: 'interpolationType'\n    },\n    slice: {\n      modelKey: 'mapper',\n      property: 'slice'\n    }\n  });\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSliceRepresentationProxy'); // ----------------------------------------------------------------------------\n\nvar vtkSliceRepresentationProxy$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkSliceRepresentationProxy$1 as default, extend, newInstance };\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,uCAAuC;AACnE,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,cAAc,MAAM,qCAAqC;AAChE,OAAOC,8BAA8B,MAAM,wCAAwC;AAEnF,SAASC,OAAOA,CAACC,MAAM,EAAEC,cAAc,EAAE;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACF,MAAM,CAAC;EAAE,IAAIG,MAAM,CAACC,qBAAqB,EAAE;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAqB,CAACJ,MAAM,CAAC;IAAEC,cAAc,KAAKI,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOJ,MAAM,CAACK,wBAAwB,CAACR,MAAM,EAAEO,GAAG,CAAC,CAACE,UAAU;IAAE,CAAC,CAAC,CAAC,EAAEP,IAAI,CAACQ,IAAI,CAACC,KAAK,CAACT,IAAI,EAAEG,OAAO,CAAC;EAAE;EAAE,OAAOH,IAAI;AAAE;AAEpV,SAASU,aAAaA,CAACC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAG,IAAI,IAAIF,SAAS,CAACD,CAAC,CAAC,GAAGC,SAAS,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;IAAEA,CAAC,GAAG,CAAC,GAAGf,OAAO,CAACI,MAAM,CAACc,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEzB,eAAe,CAACmB,MAAM,EAAEM,GAAG,EAAEF,MAAM,CAACE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC,GAAGhB,MAAM,CAACiB,yBAAyB,GAAGjB,MAAM,CAACkB,gBAAgB,CAACR,MAAM,EAAEV,MAAM,CAACiB,yBAAyB,CAACH,MAAM,CAAC,CAAC,GAAGlB,OAAO,CAACI,MAAM,CAACc,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEhB,MAAM,CAACmB,cAAc,CAACT,MAAM,EAAEM,GAAG,EAAEhB,MAAM,CAACK,wBAAwB,CAACS,MAAM,EAAEE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAON,MAAM;AAAE;AAEzf,SAASU,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACjB,OAAOD,CAAC,GAAGC,CAAC;AACd,CAAC,CAAC;;AAGF,SAASC,IAAIA,CAAA,EAAG;EACd,KAAK,IAAIC,IAAI,GAAGZ,SAAS,CAACC,MAAM,EAAEY,KAAK,GAAG,IAAIC,KAAK,CAACF,IAAI,CAAC,EAAEG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,IAAI,EAAEG,IAAI,EAAE,EAAE;IACxFF,KAAK,CAACE,IAAI,CAAC,GAAGf,SAAS,CAACe,IAAI,CAAC;EAC/B;EAEA,OAAOF,KAAK,CAACG,MAAM,CAACR,GAAG,EAAE,CAAC,CAAC,GAAGK,KAAK,CAACZ,MAAM;AAC5C,CAAC,CAAC;;AAGF,SAASgB,aAAaA,CAACC,OAAO,EAAEC,SAAS,EAAEC,KAAK,EAAEC,UAAU,EAAE;EAC5D,IAAIC,SAAS,GAAGH,SAAS,CAACI,QAAQ,CAAC,CAAC;EACpC,IAAIC,OAAO,GAAGN,OAAO,CAACO,UAAU,CAAC,CAAC;EAClC,IAAIC,MAAM,GAAGR,OAAO,CAACS,SAAS,CAAC,CAAC;EAChC,IAAIC,MAAM,GAAGV,OAAO,CAACW,SAAS,CAAC,CAAC;EAChC,IAAIC,QAAQ;EACZ,IAAIC,QAAQ;EACZ,IAAIC,OAAO;EACX,IAAIC,SAAS;EACb,IAAIC,SAAS,GAAGd,KAAK,CAACe,MAAM,CAACC,cAAc,CAAC,CAAC;EAC7C,IAAIC,cAAc,GAAG,QAAQ,CAACH,SAAS,CAAC;EAExC,QAAQA,SAAS;IACf,KAAKpD,cAAc,CAACwD,WAAW,CAACC,CAAC;IACjC,KAAKzD,cAAc,CAACwD,WAAW,CAACE,CAAC;IACjC,KAAK1D,cAAc,CAACwD,WAAW,CAACG,CAAC;MAC/BR,SAAS,GAAG,KAAK,CAACS,OAAO,CAACL,cAAc,CAAC;MACzCP,QAAQ,GAAGF,MAAM,CAACK,SAAS,GAAG,CAAC,CAAC;MAChCF,QAAQ,GAAGH,MAAM,CAACK,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;MACpCD,OAAO,GAAG,CAAC;MACX;IAEF,KAAKlD,cAAc,CAACwD,WAAW,CAACK,CAAC;IACjC,KAAK7D,cAAc,CAACwD,WAAW,CAACM,CAAC;IACjC,KAAK9D,cAAc,CAACwD,WAAW,CAACO,CAAC;MAC/B;QACEZ,SAAS,GAAG,KAAK,CAACS,OAAO,CAACL,cAAc,CAAC;QACzCP,QAAQ,GAAGJ,MAAM,CAACO,SAAS,GAAG,CAAC,CAAC;QAChCF,QAAQ,GAAGL,MAAM,CAACO,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;QAEpC,IAAIa,qBAAqB,GAAG1B,KAAK,CAACe,MAAM,CAACY,iBAAiB,CAAC,CAAC;UACxDC,OAAO,GAAGF,qBAAqB,CAACE,OAAO;QAE3ChB,OAAO,GAAGR,OAAO,CAACwB,OAAO,CAAC;MAC5B;MACA;EACJ;EAEA,IAAIC,YAAY,GAAG;IACjBC,KAAK,EAAE;MACLC,MAAM,EAAE;QACNC,GAAG,EAAEtB,QAAQ;QACbuB,GAAG,EAAEtB,QAAQ;QACbuB,IAAI,EAAEtB;MACR;IACF,CAAC;IACDuB,WAAW,EAAE;MACXJ,MAAM,EAAE;QACNC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE/B,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC;QAChCgC,IAAI,EAAE;MACR;IACF,CAAC;IACDE,WAAW,EAAE;MACXL,MAAM,EAAE;QACNC,GAAG,EAAE9B,SAAS,CAAC,CAAC,CAAC;QACjB+B,GAAG,EAAE/B,SAAS,CAAC,CAAC,CAAC;QACjBgC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACDjC,UAAU,CAAC,OAAO,EAAE4B,YAAY,CAACC,KAAK,CAAC;EACvC7B,UAAU,CAAC,aAAa,EAAE4B,YAAY,CAACM,WAAW,CAAC;EACnDlC,UAAU,CAAC,aAAa,EAAE4B,YAAY,CAACO,WAAW,CAAC;EACnD,OAAO;IACLN,KAAK,EAAEvC,IAAI,CAACsC,YAAY,CAACC,KAAK,CAACC,MAAM,CAACC,GAAG,EAAEH,YAAY,CAACC,KAAK,CAACC,MAAM,CAACE,GAAG,CAAC;IACzEE,WAAW,EAAEN,YAAY,CAACM,WAAW,CAACJ,MAAM,CAACE,GAAG;IAChDG,WAAW,EAAEC,IAAI,CAACC,KAAK,CAAC/C,IAAI,CAACsC,YAAY,CAACO,WAAW,CAACL,MAAM,CAACC,GAAG,EAAEH,YAAY,CAACO,WAAW,CAACL,MAAM,CAACE,GAAG,CAAC;EACxG,CAAC;AACH,CAAC,CAAC;AACF;AACA;;AAGA,SAASM,2BAA2BA,CAACC,SAAS,EAAExC,KAAK,EAAE;EACrD;EACAA,KAAK,CAACyC,cAAc,CAAClE,IAAI,CAAC,6BAA6B,CAAC;EACxDyB,KAAK,CAACe,MAAM,GAAGrD,cAAc,CAACgF,WAAW,CAAC,CAAC;EAC3C1C,KAAK,CAAC2C,KAAK,GAAGlF,aAAa,CAACiF,WAAW,CAAC,CAAC;EACzC1C,KAAK,CAAC4C,QAAQ,GAAG5C,KAAK,CAAC2C,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;;EAE5C7C,KAAK,CAAC2C,KAAK,CAACG,SAAS,CAAC9C,KAAK,CAACe,MAAM,CAAC;EACnCf,KAAK,CAAC+C,MAAM,CAACxE,IAAI,CAACyB,KAAK,CAAC2C,KAAK,CAAC;EAE9B,SAASK,YAAYA,CAACC,YAAY,EAAE;IAClC,IAAIC,KAAK,GAAGrD,aAAa,CAACoD,YAAY,EAAET,SAAS,CAACW,YAAY,CAAC,CAAC,EAAEnD,KAAK,EAAEwC,SAAS,CAACY,mBAAmB,CAAC;IACvGZ,SAAS,CAACa,GAAG,CAACH,KAAK,CAAC,CAAC,CAAC;;IAEtB,IAAI5C,MAAM,GAAG2C,YAAY,CAAC1C,SAAS,CAAC,CAAC;IACrC,IAAIC,MAAM,GAAGyC,YAAY,CAACxC,SAAS,CAAC,CAAC;IAErC,QAAQT,KAAK,CAACe,MAAM,CAACC,cAAc,CAAC,CAAC;MACnC,KAAKtD,cAAc,CAACwD,WAAW,CAACC,CAAC;QAC/BqB,SAAS,CAACc,QAAQ,CAACjB,IAAI,CAACC,KAAK,CAAC/C,IAAI,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D;MAEF,KAAK9C,cAAc,CAACwD,WAAW,CAACE,CAAC;QAC/BoB,SAAS,CAACc,QAAQ,CAACjB,IAAI,CAACC,KAAK,CAAC/C,IAAI,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D;MAEF,KAAK9C,cAAc,CAACwD,WAAW,CAACG,CAAC;QAC/BmB,SAAS,CAACc,QAAQ,CAACjB,IAAI,CAACC,KAAK,CAAC/C,IAAI,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D;MAEF,KAAK9C,cAAc,CAACwD,WAAW,CAACK,CAAC;QAC/BiB,SAAS,CAACc,QAAQ,CAAC/D,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C;MAEF,KAAK5C,cAAc,CAACwD,WAAW,CAACM,CAAC;QAC/BgB,SAAS,CAACc,QAAQ,CAAC/D,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C;MAEF,KAAK5C,cAAc,CAACwD,WAAW,CAACO,CAAC;QAC/Be,SAAS,CAACc,QAAQ,CAAC/D,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C;IACJ;EACF,CAAC,CAAC;;EAGFN,KAAK,CAACuD,kBAAkB,CAAChF,IAAI,CAACyB,KAAK,CAACe,MAAM,CAAC;EAC3Cf,KAAK,CAACuD,kBAAkB,CAAChF,IAAI,CAAC;IAC5ByE,YAAY,EAAEA;EAChB,CAAC,CAAC,CAAC,CAAC;;EAEJ,SAASQ,iBAAiBA,CAACC,IAAI,EAAE;IAC/BzD,KAAK,CAACe,MAAM,CAAC2C,cAAc,CAAChG,cAAc,CAACwD,WAAW,CAACuC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/D,IAAIE,QAAQ,GAAG,EAAE,CAACC,MAAM,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC;IAErD,IAAIF,QAAQ,IAAI3D,KAAK,IAAIA,KAAK,CAAC2D,QAAQ,CAAC,KAAKG,SAAS,EAAE;MACtD9D,KAAK,CAACe,MAAM,CAACuC,QAAQ,CAACtD,KAAK,CAAC2D,QAAQ,CAAC,CAAC;IACxC;IAEA,IAAI3D,KAAK,CAAC+D,KAAK,EAAE;MACf;MACA,IAAIb,KAAK,GAAGrD,aAAa,CAAC2C,SAAS,CAACwB,eAAe,CAAC,CAAC,EAAExB,SAAS,CAACW,YAAY,CAAC,CAAC,EAAEnD,KAAK,EAAEwC,SAAS,CAACY,mBAAmB,CAAC;MACtHZ,SAAS,CAACa,GAAG,CAACH,KAAK,CAAC;IACtB;IAEAV,SAAS,CAACyB,QAAQ,CAAC,CAAC;EACtB,CAAC,CAAC;;EAGFzB,SAAS,CAACkB,cAAc,GAAG,UAAUD,IAAI,EAAE;IACzC,IAAI,CAACA,IAAI,EAAE;MACT,OAAO,KAAK;IACd;IAEA,IAAIzD,KAAK,CAACkE,WAAW,KAAKT,IAAI,EAAE;MAC9B;MACAzD,KAAK,CAACkE,WAAW,GAAGT,IAAI;MACxBD,iBAAiB,CAACC,IAAI,CAAC;MACvB,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAEDjB,SAAS,CAAC2B,aAAa,GAAG,YAAY;IACpC,IAAI,KAAK,CAAC7C,OAAO,CAACtB,KAAK,CAACkE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3C,OAAOlE,KAAK,CAACe,MAAM,CAACqD,kBAAkB,CAACpE,KAAK,CAACe,MAAM,CAACsD,QAAQ,CAAC,CAAC,CAAC;IACjE;IAEA,OAAOrE,KAAK,CAACe,MAAM,CAACsD,QAAQ,CAAC,CAAC;EAChC,CAAC;EAED7B,SAAS,CAAC8B,cAAc,GAAG,YAAY;IACrC,IAAIC,YAAY,GAAG,CAAC,CAAC;IACrB,IAAIC,UAAU,GAAGhC,SAAS,CAAC2B,aAAa,CAAC,CAAC;IAC1C,IAAIM,WAAW,GAAGzE,KAAK,CAACe,MAAM,CAAC2D,iBAAiB,CAAC,CAAC;IAClD,IAAIC,WAAW,GAAG3E,KAAK,CAACe,MAAM,CAAC6D,oBAAoB,CAAC,CAAC;IAErD,IAAIC,sBAAsB,GAAG7E,KAAK,CAACe,MAAM,CAACY,iBAAiB,CAAC,CAAC;MACzDC,OAAO,GAAGiD,sBAAsB,CAACjD,OAAO;IAE5C,IAAIkD,WAAW,GAAG,CAAC,CAACL,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAACA,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAACA,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAC7I,IAAIM,aAAa,GAAG,CAAC;IAErB,IAAIN,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAGO,MAAM,CAACC,OAAO,EAAE;MACpDF,aAAa,GAAGN,WAAW,CAAC,CAAC,CAAC;IAChC;IAEA,IAAIA,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAGO,MAAM,CAACC,OAAO,EAAE;MACpDF,aAAa,GAAGN,WAAW,CAAC,CAAC,CAAC;IAChC;IAEA,IAAIA,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAGO,MAAM,CAACC,OAAO,EAAE;MACpDF,aAAa,GAAGN,WAAW,CAAC,CAAC,CAAC;IAChC;IAEA,IAAIS,SAAS,GAAGlF,KAAK,CAACe,MAAM,CAACoE,YAAY,CAAC,CAAC;IAE3C,IAAID,SAAS,EAAE;MACbX,YAAY,CAACa,YAAY,GAAGF,SAAS,CAAC7E,UAAU,CAAC,CAAC,CAACuB,OAAO,CAAC;MAC3D2C,YAAY,CAACc,UAAU,GAAGH,SAAS,CAACI,aAAa,CAAC,CAAC;MACnDf,YAAY,CAACgB,UAAU,GAAGL,SAAS,CAACI,aAAa,CAAC,CAAC,CAAC1D,OAAO,CAAC;MAC5D,IAAI4D,cAAc,GAAG,EAAE;MAEvB,KAAK,IAAI7G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAI6B,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/BA,MAAM,CAAC7B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACrB,IAAI8G,SAAS,GAAGP,SAAS,CAACQ,cAAc,CAAClF,MAAM,CAAC;QAEhD,IAAIiF,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAGT,MAAM,CAACC,OAAO,EAAE;UAChDO,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC7G,CAAC,CAAC;QAC9B;QAEA,IAAI8G,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAGT,MAAM,CAACC,OAAO,EAAE;UAChDO,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC7G,CAAC,CAAC;QAC9B;QAEA,IAAI8G,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAGT,MAAM,CAACC,OAAO,EAAE;UAChDO,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC7G,CAAC,CAAC;QAC9B;MACF;MAEA4F,YAAY,CAACiB,cAAc,GAAGA,cAAc,CAACG,IAAI,CAAC,EAAE,CAAC;IACvD;IAEA,OAAOlH,aAAa,CAAC;MACnBmD,OAAO,EAAEA,OAAO;MAChB6C,WAAW,EAAEA,WAAW;MACxBD,UAAU,EAAEA,UAAU;MACtBG,WAAW,EAAEA,WAAW;MACxBG,WAAW,EAAEA,WAAW;MACxBC,aAAa,EAAEA;IACjB,CAAC,EAAER,YAAY,CAAC;EAClB,CAAC;EAED,IAAIqB,gBAAgB,GAAGpD,SAAS,CAACqD,UAAU;EAE3CrD,SAAS,CAACqD,UAAU,GAAG,UAAUC,SAAS,EAAEC,aAAa,EAAE;IACzD,IAAIC,cAAc,GAAGpH,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKkF,SAAS,GAAGlF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAE3F,IAAIkH,SAAS,KAAK,IAAI,EAAE;MACtB9F,KAAK,CAAC4C,QAAQ,CAACqD,sBAAsB,CAAC,IAAI,CAAC;MAC3CjG,KAAK,CAAC4C,QAAQ,CAACsD,oBAAoB,CAAC,IAAI,CAAC;IAC3C,CAAC,MAAM;MACLN,gBAAgB,CAACE,SAAS,EAAEC,aAAa,EAAEC,cAAc,CAAC;MAC1D,IAAIG,QAAQ,GAAG3D,SAAS,CAAC4D,mBAAmB,CAACN,SAAS,CAAC;MACvD,IAAIO,QAAQ,GAAG7D,SAAS,CAAC8D,yBAAyB,CAACR,SAAS,CAAC;MAC7D9F,KAAK,CAAC4C,QAAQ,CAACqD,sBAAsB,CAACE,QAAQ,CAACI,cAAc,CAAC,CAAC,CAAC;MAChEvG,KAAK,CAAC4C,QAAQ,CAACsD,oBAAoB,CAACG,QAAQ,CAACG,oBAAoB,CAAC,CAAC,CAAC;IACtE;EACF,CAAC,CAAC,CAAC;;EAGHhD,iBAAiB,CAACxD,KAAK,CAACkE,WAAW,IAAI,GAAG,CAAC;AAC7C,CAAC,CAAC;AACF;AACA;;AAGA,IAAIuC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;;AAEzB,SAASC,MAAMA,CAAClE,SAAS,EAAExC,KAAK,EAAE;EAChC,IAAI2G,aAAa,GAAG/H,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKkF,SAAS,GAAGlF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FZ,MAAM,CAAC4I,MAAM,CAAC5G,KAAK,EAAEyG,cAAc,EAAEE,aAAa,CAAC,CAAC,CAAC;;EAErDhJ,8BAA8B,CAAC+I,MAAM,CAAClE,SAAS,EAAExC,KAAK,EAAE2G,aAAa,CAAC;EACtEnJ,KAAK,CAACqJ,GAAG,CAACrE,SAAS,EAAExC,KAAK,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;EAE9CuC,2BAA2B,CAACC,SAAS,EAAExC,KAAK,CAAC,CAAC,CAAC;;EAE/CxC,KAAK,CAACsJ,oBAAoB,CAACtE,SAAS,EAAExC,KAAK,EAAE;IAC3C+G,UAAU,EAAE;MACVpD,QAAQ,EAAE,OAAO;MACjBf,QAAQ,EAAE;IACZ,CAAC;IACDT,WAAW,EAAE;MACXwB,QAAQ,EAAE,UAAU;MACpBf,QAAQ,EAAE;IACZ,CAAC;IACDR,WAAW,EAAE;MACXuB,QAAQ,EAAE,UAAU;MACpBf,QAAQ,EAAE;IACZ,CAAC;IACDoE,iBAAiB,EAAE;MACjBrD,QAAQ,EAAE,UAAU;MACpBf,QAAQ,EAAE;IACZ,CAAC;IACDd,KAAK,EAAE;MACL6B,QAAQ,EAAE,QAAQ;MAClBf,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,IAAIF,WAAW,GAAGlF,KAAK,CAACkF,WAAW,CAACgE,MAAM,EAAE,6BAA6B,CAAC,CAAC,CAAC;;AAE5E,IAAIO,6BAA6B,GAAG;EAClCvE,WAAW,EAAEA,WAAW;EACxBgE,MAAM,EAAEA;AACV,CAAC;AAED,SAASO,6BAA6B,IAAIC,OAAO,EAAER,MAAM,EAAEhE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
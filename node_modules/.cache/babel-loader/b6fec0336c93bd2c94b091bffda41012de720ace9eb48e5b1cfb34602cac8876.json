{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\nimport SmartConnect from 'wslink/src/SmartConnect';\nimport vtkRemoteView from '@kitware/vtk.js/Rendering/Misc/RemoteView';\nvtkWSLinkClient.setSmartConnectClass(SmartConnect);\nconst VTKComponent = () => {\n  _s();\n  useEffect(() => {\n    document.body.style.padding = '0';\n    document.body.style.margin = '0';\n    const divRenderer = document.createElement('div');\n    document.body.appendChild(divRenderer);\n    divRenderer.style.position = 'relative';\n    divRenderer.style.width = '100vw';\n    divRenderer.style.height = '100vh';\n    divRenderer.style.overflow = 'hidden';\n    const clientToConnect = vtkWSLinkClient.newInstance();\n\n    // Error\n    clientToConnect.onConnectionError(httpReq => {\n      const message = httpReq && httpReq.response && httpReq.response.error || `Connection error`;\n      console.error(message);\n      console.log(httpReq);\n    });\n\n    // Close\n    clientToConnect.onConnectionClose(httpReq => {\n      const message = httpReq && httpReq.response && httpReq.response.error || `Connection close`;\n      console.error(message);\n      console.log(httpReq);\n    });\n\n    // hint: if you use the launcher.py and ws-proxy just leave out sessionURL\n    // (it will be provided by the launcher)\n    const config = {\n      application: 'cone',\n      sessionURL: 'ws://localhost:7500/ws'\n    };\n\n    // Connect\n    clientToConnect.connect(config).then(validClient => {\n      const viewStream = clientToConnect.getImageStream().createViewStream('-1');\n      const view = vtkRemoteView.newInstance({\n        rpcWheelEvent: 'viewport.mouse.zoom.wheel',\n        viewStream\n      });\n      const session = validClient.getConnection().getSession();\n      view.setSession(session);\n      view.setContainer(divRenderer);\n      view.setInteractiveRatio(0.7); // the scaled image compared to the clients view resolution\n      view.setInteractiveQuality(50); // jpeg quality\n\n      window.addEventListener('resize', view.resize);\n    }).catch(error => {\n      console.error(error);\n    });\n    return () => {\n      // Clean up code if needed when the component unmounts\n      // For example, you might want to remove the resize event listener and disconnect the client.\n    };\n  }, []); // Run the effect only once when the component mounts\n\n  return null; // Since this component doesn't render anything, we return null\n};\n_s(VTKComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VTKComponent;\nexport default VTKComponent;\nvar _c;\n$RefreshReg$(_c, \"VTKComponent\");","map":{"version":3,"names":["React","useEffect","vtkWSLinkClient","SmartConnect","vtkRemoteView","setSmartConnectClass","VTKComponent","_s","document","body","style","padding","margin","divRenderer","createElement","appendChild","position","width","height","overflow","clientToConnect","newInstance","onConnectionError","httpReq","message","response","error","console","log","onConnectionClose","config","application","sessionURL","connect","then","validClient","viewStream","getImageStream","createViewStream","view","rpcWheelEvent","session","getConnection","getSession","setSession","setContainer","setInteractiveRatio","setInteractiveQuality","window","addEventListener","resize","catch","_c","$RefreshReg$"],"sources":["/home/rakshith/Documents/RemoteRendering/vtk-js-react-app/src/VTKClient.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport vtkWSLinkClient from '@kitware/vtk.js/IO/Core/WSLinkClient';\nimport SmartConnect from 'wslink/src/SmartConnect';\nimport vtkRemoteView from '@kitware/vtk.js/Rendering/Misc/RemoteView';\n\nvtkWSLinkClient.setSmartConnectClass(SmartConnect);\n\nconst VTKComponent = () => {\n  useEffect(() => {\n    document.body.style.padding = '0';\n    document.body.style.margin = '0';\n\n    const divRenderer = document.createElement('div');\n    document.body.appendChild(divRenderer);\n\n    divRenderer.style.position = 'relative';\n    divRenderer.style.width = '100vw';\n    divRenderer.style.height = '100vh';\n    divRenderer.style.overflow = 'hidden';\n\n    const clientToConnect = vtkWSLinkClient.newInstance();\n\n    // Error\n    clientToConnect.onConnectionError((httpReq) => {\n      const message =\n        (httpReq && httpReq.response && httpReq.response.error) ||\n        `Connection error`;\n      console.error(message);\n      console.log(httpReq);\n    });\n\n    // Close\n    clientToConnect.onConnectionClose((httpReq) => {\n      const message =\n        (httpReq && httpReq.response && httpReq.response.error) ||\n        `Connection close`;\n      console.error(message);\n      console.log(httpReq);\n    });\n\n    // hint: if you use the launcher.py and ws-proxy just leave out sessionURL\n    // (it will be provided by the launcher)\n    const config = {\n      application: 'cone',\n      sessionURL: 'ws://localhost:7500/ws',\n    };\n\n    // Connect\n    clientToConnect\n      .connect(config)\n      .then((validClient) => {\n        const viewStream = clientToConnect.getImageStream().createViewStream('-1');\n\n        const view = vtkRemoteView.newInstance({\n          rpcWheelEvent: 'viewport.mouse.zoom.wheel',\n          viewStream,\n        });\n        const session = validClient.getConnection().getSession();\n        view.setSession(session);\n        view.setContainer(divRenderer);\n        view.setInteractiveRatio(0.7); // the scaled image compared to the clients view resolution\n        view.setInteractiveQuality(50); // jpeg quality\n\n        window.addEventListener('resize', view.resize);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    return () => {\n      // Clean up code if needed when the component unmounts\n      // For example, you might want to remove the resize event listener and disconnect the client.\n    };\n  }, []); // Run the effect only once when the component mounts\n\n  return null; // Since this component doesn't render anything, we return null\n};\n\nexport default VTKComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}